; ModuleID = '<stdin>'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%ident_t = type { i32, i32, i32, i32, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.timeval = type { i64, i64 }
%struct.timezone = type { i32, i32 }

@.gomp_critical_user_.reduction.var = common global [8 x i32] zeroinitializer
@q = internal global [10 x double] zeroinitializer, align 16
@qq = internal thread_local unnamed_addr global [10 x double] zeroinitializer, align 16
@x = internal thread_local global [131072 x double] zeroinitializer, align 16
@0 = private unnamed_addr constant %ident_t { i32 0, i32 2, i32 0, i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i32 0, i32 0) }, align 8
@main.dum = private unnamed_addr constant [3 x double] [double 1.000000e+00, double 1.000000e+00, double 1.000000e+00], align 16
@.str = private unnamed_addr constant [11 x i8] c"timer.flag\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"%15.0lf\00", align 1
@str = private unnamed_addr constant [57 x i8] c"\0A\0A NAS Parallel Benchmarks (NPB3.3-OMP-C) - EP Benchmark\00"
@.str.4 = private unnamed_addr constant [44 x i8] c"\0A Number of random numbers generated: %15s\0A\00", align 1
@.str.5 = private unnamed_addr constant [46 x i8] c"\0A Number of available threads:          %13d\0A\00", align 1
@1 = private unnamed_addr constant [20 x i8] c";ep.c;main;130;11;;\00"
@2 = private unnamed_addr constant [20 x i8] c";ep.c;main;138;11;;\00"
@3 = private unnamed_addr constant [20 x i8] c";ep.c;main;177;11;;\00"
@str.26 = private unnamed_addr constant [24 x i8] c"\0AEP Benchmark Results:\0A\00"
@.str.10 = private unnamed_addr constant [19 x i8] c"CPU Time =%10.4lf\0A\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"N = 2^%5d\0A\00", align 1
@.str.12 = private unnamed_addr constant [30 x i8] c"No. Gaussian Pairs = %15.0lf\0A\00", align 1
@.str.13 = private unnamed_addr constant [26 x i8] c"Sums = %25.15lE %25.15lE\0A\00", align 1
@str.27 = private unnamed_addr constant [9 x i8] c"Counts: \00"
@.str.15 = private unnamed_addr constant [12 x i8] c"%3d%15.0lf\0A\00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c"EP\00", align 1
@.str.17 = private unnamed_addr constant [25 x i8] c"Random numbers generated\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"3.3.1\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c"25 Apr 2017\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"(none)\00", align 1
@.str.21 = private unnamed_addr constant [47 x i8] c"-I ../common -I /home/amiryousefi/buildfori...\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"randdp\00", align 1
@.str.23 = private unnamed_addr constant [34 x i8] c"\0ATotal time:     %9.3lf (%6.2lf)\0A\00", align 1
@.str.24 = private unnamed_addr constant [33 x i8] c"Gaussian pairs: %9.3lf (%6.2lf)\0A\00", align 1
@.str.25 = private unnamed_addr constant [33 x i8] c"Random numbers: %9.3lf (%6.2lf)\0A\00", align 1
@4 = private unnamed_addr constant [20 x i8] c";ep.c;main;183;13;;\00"
@5 = private unnamed_addr constant [20 x i8] c";ep.c;main;183;64;;\00"
@.str.6 = private unnamed_addr constant [23 x i8] c";unknown;unknown;0;0;;\00", align 1
@6 = private unnamed_addr constant %ident_t { i32 0, i32 2, i32 0, i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27, i32 0, i32 0) }, align 8
@7 = private unnamed_addr constant [38 x i8] c";print_results.c;print_results;25;9;;\00"
@.str.1.4 = private unnamed_addr constant [28 x i8] c"\0A\0A %s Benchmark Completed.\0A\00", align 1
@.str.2.5 = private unnamed_addr constant [37 x i8] c" Class           =             %12c\0A\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"%15.0lf\00", align 1
@.str.4.6 = private unnamed_addr constant [34 x i8] c" Size            =          %15s\0A\00", align 1
@.str.5.7 = private unnamed_addr constant [37 x i8] c" Size            =             %12d\0A\00", align 1
@.str.6.8 = private unnamed_addr constant [42 x i8] c" Size            =           %4dx%4dx%4d\0A\00", align 1
@.str.7 = private unnamed_addr constant [37 x i8] c" Iterations      =             %12d\0A\00", align 1
@.str.8 = private unnamed_addr constant [40 x i8] c" Time in seconds =             %12.2lf\0A\00", align 1
@.str.9 = private unnamed_addr constant [37 x i8] c" Total threads   =             %12d\0A\00", align 1
@.str.10.9 = private unnamed_addr constant [37 x i8] c" Avail threads   =             %12d\0A\00", align 1
@str.28 = private unnamed_addr constant [53 x i8] c" Warning: Threads used differ from threads available\00"
@.str.12.10 = private unnamed_addr constant [37 x i8] c" Mop/s total     =          %15.2lf\0A\00", align 1
@.str.13.11 = private unnamed_addr constant [37 x i8] c" Mop/s/thread    =          %15.2lf\0A\00", align 1
@.str.14 = private unnamed_addr constant [25 x i8] c" Operation type  = %24s\0A\00", align 1
@.str.15.12 = private unnamed_addr constant [37 x i8] c" Verification    =             %12s\0A\00", align 1
@.str.16.13 = private unnamed_addr constant [11 x i8] c"SUCCESSFUL\00", align 1
@.str.17.14 = private unnamed_addr constant [13 x i8] c"UNSUCCESSFUL\00", align 1
@.str.18.15 = private unnamed_addr constant [37 x i8] c" Version         =             %12s\0A\00", align 1
@.str.19.16 = private unnamed_addr constant [37 x i8] c" Compile date    =             %12s\0A\00", align 1
@.str.20.17 = private unnamed_addr constant [42 x i8] c"\0A Compile options:\0A    CC           = %s\0A\00", align 1
@.str.21.18 = private unnamed_addr constant [23 x i8] c"    CLINK        = %s\0A\00", align 1
@.str.22.19 = private unnamed_addr constant [23 x i8] c"    C_LIB        = %s\0A\00", align 1
@.str.23.20 = private unnamed_addr constant [23 x i8] c"    C_INC        = %s\0A\00", align 1
@.str.24.21 = private unnamed_addr constant [23 x i8] c"    CFLAGS       = %s\0A\00", align 1
@.str.25.22 = private unnamed_addr constant [23 x i8] c"    CLINKFLAGS   = %s\0A\00", align 1
@.str.26 = private unnamed_addr constant [23 x i8] c"    RAND         = %s\0A\00", align 1
@str.23 = private unnamed_addr constant [194 x i8] c"\0A--------------------------------------\0A Please send all errors/feedbacks to:\0A Center for Manycore Programming\0A cmp@aces.snu.ac.kr\0A http://aces.snu.ac.kr\0A--------------------------------------\0A\00"
@8 = private unnamed_addr constant [39 x i8] c";print_results.c;print_results;27;13;;\00"
@.str.27 = private unnamed_addr constant [23 x i8] c";unknown;unknown;0;0;;\00", align 1
@count = internal thread_local unnamed_addr global [64 x i32] zeroinitializer, align 16
@elapsed = internal thread_local unnamed_addr global [64 x double] zeroinitializer, align 16
@start = internal thread_local unnamed_addr global [64 x double] zeroinitializer, align 16
@wtime_.sec = internal unnamed_addr global i32 -1, align 4
@.str.28 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.29 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.30 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.31 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.32 = private unnamed_addr constant [17 x i8] c"No name attached\00"
@.str.33 = private unnamed_addr constant [92 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::__kmpc_fork_call line: 0:130\00"
@.str.34 = private unnamed_addr constant [17 x i8] c"No name attached\00"
@.str.35 = private unnamed_addr constant [92 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::__kmpc_fork_call line: 0:138\00"
@.str.36 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.37 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.38 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.39 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.40 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.41 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.42 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.43 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.44 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.45 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.46 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.47 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.48 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.49 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.50 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.51 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.52 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.53 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.54 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.55 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.56 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.57 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.58 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.59 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.60 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.61 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.62 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.63 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.64 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.65 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.66 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.67 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.68 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.69 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.70 = private unnamed_addr constant [17 x i8] c"No name attached\00"
@.str.71 = private unnamed_addr constant [92 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::__kmpc_fork_call line: 0:177\00"
@.str.72 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.73 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.74 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.75 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.76 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.77 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.78 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.79 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.80 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.81 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.82 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.83 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.84 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.85 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.86 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.87 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.88 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.89 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.90 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.91 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.92 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.93 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.94 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.95 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.96 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.97 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.98 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.99 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.100 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.101 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.102 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.103 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.104 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.105 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.106 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.107 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.108 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.109 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.110 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.111 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.112 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.113 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.114 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.115 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.116 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.117 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.118 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.119 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.120 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.121 = private unnamed_addr constant [77 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::main line: 74\00"
@.str.122 = private unnamed_addr constant [17 x i8] c".omp_outlined..7\00"
@.str.123 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..7 line: 140\00"
@.str.124 = private unnamed_addr constant [17 x i8] c".omp_outlined..7\00"
@.str.125 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..7 line: 140\00"
@.str.126 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.127 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.128 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.129 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.130 = private unnamed_addr constant [17 x i8] c"No name attached\00"
@.str.131 = private unnamed_addr constant [98 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::__kmpc_dispatch_init_4 line: 0:183\00"
@.str.132 = private unnamed_addr constant [17 x i8] c"No name attached\00"
@.str.133 = private unnamed_addr constant [98 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::__kmpc_dispatch_next_4 line: 0:183\00"
@.str.134 = private unnamed_addr constant [17 x i8] c"No name attached\00"
@.str.135 = private unnamed_addr constant [98 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::__kmpc_dispatch_next_4 line: 0:183\00"
@.str.136 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.137 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.138 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.139 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.140 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.141 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.142 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.143 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.144 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.145 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.146 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.147 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.148 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.149 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.150 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.151 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.152 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.153 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.154 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.155 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.156 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.157 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.158 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.159 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.160 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.161 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.162 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.163 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.164 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.165 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.166 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.167 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.168 = private unnamed_addr constant [17 x i8] c"No name attached\00"
@.str.169 = private unnamed_addr constant [96 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::__kmpc_reduce_nowait line: 0:183\00"
@.str.170 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.171 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.172 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.173 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.174 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.175 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.176 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.177 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.178 = private unnamed_addr constant [17 x i8] c"No name attached\00"
@.str.179 = private unnamed_addr constant [100 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::__kmpc_end_reduce_nowait line: 0:183\00"
@.str.180 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.181 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.182 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.183 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.184 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.185 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.186 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.187 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.188 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.189 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.190 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.191 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.192 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.193 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.194 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.195 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.196 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.197 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.198 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.199 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.200 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.201 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.202 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.203 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.204 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.205 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.206 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.207 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.208 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.209 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.210 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.211 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.212 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.213 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.214 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.215 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.216 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.217 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.218 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.219 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.220 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.221 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.222 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.223 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.224 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.225 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.226 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.227 = private unnamed_addr constant [90 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp_outlined..8 line: 178\00"
@.str.228 = private unnamed_addr constant [30 x i8] c".omp.reduction.reduction_func\00"
@.str.229 = private unnamed_addr constant [30 x i8] c".omp.reduction.reduction_func\00"
@.str.230 = private unnamed_addr constant [30 x i8] c".omp.reduction.reduction_func\00"
@.str.231 = private unnamed_addr constant [30 x i8] c".omp.reduction.reduction_func\00"
@.str.232 = private unnamed_addr constant [30 x i8] c".omp.reduction.reduction_func\00"
@.str.233 = private unnamed_addr constant [103 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp.reduction.reduction_func line: 183\00"
@.str.234 = private unnamed_addr constant [30 x i8] c".omp.reduction.reduction_func\00"
@.str.235 = private unnamed_addr constant [103 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp.reduction.reduction_func line: 183\00"
@.str.236 = private unnamed_addr constant [30 x i8] c".omp.reduction.reduction_func\00"
@.str.237 = private unnamed_addr constant [103 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp.reduction.reduction_func line: 183\00"
@.str.238 = private unnamed_addr constant [30 x i8] c".omp.reduction.reduction_func\00"
@.str.239 = private unnamed_addr constant [103 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP/ep.c::.omp.reduction.reduction_func line: 183\00"
@.str.240 = private unnamed_addr constant [17 x i8] c"No name attached\00"
@.str.241 = private unnamed_addr constant [106 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common/print_results.c::__kmpc_fork_call line: 0:25\00"
@.str.242 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.243 = private unnamed_addr constant [80 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common/print_results.c::\10\00"
@.str.244 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.245 = private unnamed_addr constant [101 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common/print_results.c::print_results line: 10\00"
@.str.246 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.247 = private unnamed_addr constant [101 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common/print_results.c::print_results line: 10\00"
@.str.248 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.249 = private unnamed_addr constant [101 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common/print_results.c::print_results line: 10\00"
@.str.250 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.251 = private unnamed_addr constant [101 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common/print_results.c::print_results line: 10\00"
@.str.252 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.253 = private unnamed_addr constant [101 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common/print_results.c::print_results line: 10\00"
@.str.254 = private unnamed_addr constant [17 x i8] c".omp_outlined..3\00"
@.str.255 = private unnamed_addr constant [104 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common/print_results.c::.omp_outlined..3 line: 27\00"
@.str.256 = private unnamed_addr constant [17 x i8] c"No name attached\00"
@.str.257 = private unnamed_addr constant [103 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common/print_results.c::__kmpc_master line: 0:27\00"
@.str.258 = private unnamed_addr constant [17 x i8] c"No name attached\00"
@.str.259 = private unnamed_addr constant [107 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common/print_results.c::__kmpc_end_master line: 0:28\00"
@.str.260 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.261 = private unnamed_addr constant [86 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common/randdp.c::randlc line: 4\00"
@.str.262 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.263 = private unnamed_addr constant [87 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common/randdp.c::vranlc line: 71\00"
@.str.264 = private unnamed_addr constant [11 x i8] c"timer_stop\00"
@.str.265 = private unnamed_addr constant [93 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common/c_timers.c::timer_stop line: 56\00"
@.str.266 = private unnamed_addr constant [11 x i8] c"timer_stop\00"
@.str.267 = private unnamed_addr constant [93 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common/c_timers.c::timer_stop line: 56\00"
@.str.268 = private unnamed_addr constant [11 x i8] c"timer_stop\00"
@.str.269 = private unnamed_addr constant [93 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common/c_timers.c::timer_stop line: 56\00"
@.str.270 = private unnamed_addr constant [11 x i8] c"timer_read\00"
@.str.271 = private unnamed_addr constant [93 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common/c_timers.c::timer_read line: 71\00"
@.str.272 = private unnamed_addr constant [12 x i8] c"timer_count\00"
@.str.273 = private unnamed_addr constant [94 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common/c_timers.c::timer_count line: 76\00"
@.str.274 = private unnamed_addr constant [7 x i8] c"wtime_\00"
@.str.275 = private unnamed_addr constant [95 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common/../common/wtime.c::wtime_ line: 7\00"
@.str.276 = private unnamed_addr constant [7 x i8] c"wtime_\00"
@.str.277 = private unnamed_addr constant [95 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common/../common/wtime.c::wtime_ line: 7\00"
@.str.278 = private unnamed_addr constant [7 x i8] c"wtime_\00"
@.str.279 = private unnamed_addr constant [95 x i8] c"/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common/../common/wtime.c::wtime_ line: 7\00"

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** nocapture readnone %argv) local_unnamed_addr #0 !dbg !67 {
entry:
  %t1 = alloca double, align 8
  %sx = alloca double, align 8
  %sy = alloca double, align 8
  %an = alloca double, align 8
  %np = alloca i32, align 4
  %k_offset = alloca i32, align 4
  %timers_enabled = alloca i32, align 4
  %dum = alloca [3 x double], align 16
  %size = alloca [16 x i8], align 16
  %.kmpc_loc.addr = alloca %ident_t, align 8
  %0 = bitcast %ident_t* %.kmpc_loc.addr to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast (%ident_t* @0 to i8*), i64 24, i32 8, i1 false)
  call void @__DiscoPoPOpenMPInitialize()
  tail call void @llvm.dbg.value(metadata i32 %argc, i64 0, metadata !74, metadata !172), !dbg !173
  tail call void @llvm.dbg.value(metadata i8** %argv, i64 0, metadata !75, metadata !172), !dbg !174
  %1 = bitcast double* %t1 to i8*, !dbg !175
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !176
  %2 = bitcast double* %sx to i8*, !dbg !178
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !178
  %3 = bitcast double* %sy to i8*, !dbg !178
  call void @llvm.lifetime.start(i64 8, i8* %3) #4, !dbg !179
  %4 = bitcast double* %an to i8*, !dbg !178
  call void @llvm.lifetime.start(i64 8, i8* %4) #4, !dbg !180
  %5 = bitcast i32* %np to i8*, !dbg !182
  call void @llvm.lifetime.start(i64 4, i8* %5) #4, !dbg !182
  %6 = bitcast i32* %k_offset to i8*, !dbg !183
  call void @llvm.lifetime.start(i64 4, i8* %6) #4, !dbg !183
  %7 = bitcast i32* %timers_enabled to i8*, !dbg !184
  call void @llvm.lifetime.start(i64 4, i8* %7) #4, !dbg !185
  %8 = bitcast [3 x double]* %dum to i8*, !dbg !186
  call void @llvm.lifetime.start(i64 24, i8* %8) #4, !dbg !186
  tail call void @llvm.dbg.declare(metadata [3 x double]* %dum, metadata !105, metadata !172), !dbg !187
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* bitcast ([3 x double]* @main.dum to i8*), i64 24, i32 16, i1 false), !dbg !188
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %size, i64 0, i64 0, !dbg !189
  call void @llvm.lifetime.start(i64 16, i8* %9) #4, !dbg !189
  tail call void @llvm.dbg.declare(metadata [16 x i8]* %size, metadata !109, metadata !172), !dbg !190
  %call = tail call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !191
  tail call void @llvm.dbg.value(metadata %struct._IO_FILE* %call, i64 0, metadata !113, metadata !172), !dbg !193
  %cmp = icmp eq %struct._IO_FILE* %call, null, !dbg !194
  br i1 %cmp, label %if.then, label %if.else, !dbg !195

if.then:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !104, metadata !172), !dbg !196
  %10 = ptrtoint i32* %timers_enabled to i64
  call void @__DiscoPoPOpenMPWrite(i64 %10)
  store i32 0, i32* %timers_enabled, align 4, !dbg !197, !tbaa !199
  br label %if.end, !dbg !202

if.else:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !104, metadata !172), !dbg !196
  %11 = ptrtoint i32* %timers_enabled to i64
  call void @__DiscoPoPOpenMPWrite(i64 %11)
  store i32 1, i32* %timers_enabled, align 4, !dbg !203, !tbaa !199
  %call1 = tail call i32 @fclose(%struct._IO_FILE* nonnull %call), !dbg !205
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call2 = tail call double @pow(double 2.000000e+00, double 2.500000e+01) #4, !dbg !206
  %call3 = call i32 (i8*, i8*, ...) @sprintf(i8* %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), double 0x4180000000000000) #4, !dbg !207
  tail call void @llvm.dbg.value(metadata i32 14, i64 0, metadata !101, metadata !172), !dbg !208
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %size, i64 0, i64 14, !dbg !209
  %12 = ptrtoint i8* %arrayidx to i64
  call void @__DiscoPoPOpenMPRead(i64 %12, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.29, i32 0, i32 0), i32 2, i32 0, i32 0)
  %13 = load i8, i8* %arrayidx, align 2, !dbg !209, !tbaa !199
  %cmp4 = icmp eq i8 %13, 46, !dbg !211
  tail call void @llvm.dbg.value(metadata i32 13, i64 0, metadata !101, metadata !172), !dbg !208
  %. = select i1 %cmp4, i64 14, i64 15, !dbg !212
  %arrayidx9 = getelementptr inbounds [16 x i8], [16 x i8]* %size, i64 0, i64 %., !dbg !213
  %14 = ptrtoint i8* %arrayidx9 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %14)
  store i8 0, i8* %arrayidx9, align 1, !dbg !214, !tbaa !199
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @str, i64 0, i64 0)), !dbg !215
  %call12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %9), !dbg !216
  %call13 = call i32 @omp_get_max_threads() #4, !dbg !217
  %call14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.5, i64 0, i64 0), i32 %call13), !dbg !218
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !102, metadata !172), !dbg !219
  call void @llvm.dbg.value(metadata i32 256, i64 0, metadata !93, metadata !172), !dbg !220
  %15 = ptrtoint i32* %np to i64
  call void @__DiscoPoPOpenMPWrite(i64 %15)
  store i32 256, i32* %np, align 4, !dbg !221, !tbaa !222
  %arrayidx15 = getelementptr inbounds [3 x double], [3 x double]* %dum, i64 0, i64 0, !dbg !224
  %arrayidx16 = getelementptr inbounds [3 x double], [3 x double]* %dum, i64 0, i64 1, !dbg !225
  %arrayidx17 = getelementptr inbounds [3 x double], [3 x double]* %dum, i64 0, i64 2, !dbg !226
  call void @vranlc(i32 0, double* %arrayidx15, double 1.000000e+00, double* %arrayidx17) #4, !dbg !227
  %16 = ptrtoint double* %arrayidx17 to i64
  call void @__DiscoPoPOpenMPRead(i64 %16, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.31, i32 0, i32 0), i32 16, i32 0, i32 0)
  %17 = load double, double* %arrayidx17, align 16, !dbg !228, !tbaa !229
  %call20 = call double @randlc(double* %arrayidx16, double %17) #4, !dbg !231
  %18 = ptrtoint double* %arrayidx15 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %18)
  store double %call20, double* %arrayidx15, align 16, !dbg !232, !tbaa !229
  %19 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i64 0, i32 4, !dbg !233
  %20 = ptrtoint i8** %19 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %20)
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @1, i64 0, i64 0), i8** %19, align 8, !dbg !233
  call void @__DiscoPoPOpenMPBeforeCall(i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.33, i32 0, i32 0))
  call void (%ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%ident_t* nonnull %.kmpc_loc.addr, i32 0, void (i32*, i32*, ...)* bitcast (void (i32*, i32*)* @.omp_outlined. to void (i32*, i32*, ...)*)) #4, !dbg !233
  call void @__DiscoPoPOpenMPAfterCall()
  %call23 = call double @sqrt(double 1.000000e+00) #4, !dbg !234
  %call24 = call double @log(double 1.000000e+00) #4, !dbg !235
  call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !76, metadata !172), !dbg !237
  %21 = ptrtoint i8** %19 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %21)
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @2, i64 0, i64 0), i8** %19, align 8, !dbg !238
  call void @llvm.dbg.value(metadata i32* %timers_enabled, i64 0, metadata !104, metadata !239), !dbg !196
  call void @__DiscoPoPOpenMPBeforeCall(i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.35, i32 0, i32 0))
  call void (%ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%ident_t* nonnull %.kmpc_loc.addr, i32 1, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i32*)* @.omp_outlined..7 to void (i32*, i32*, ...)*), i32* nonnull %timers_enabled) #4, !dbg !238
  call void @__DiscoPoPOpenMPAfterCall()
  call void @timer_start(i32 0) #4, !dbg !240
  call void @llvm.dbg.value(metadata double 0x41D2309CE5400000, i64 0, metadata !77, metadata !172), !dbg !241
  %22 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %22)
  store double 0x41D2309CE5400000, double* %t1, align 8, !dbg !242, !tbaa !229
  call void @llvm.dbg.value(metadata double* %t1, i64 0, metadata !77, metadata !239), !dbg !241
  call void @vranlc(i32 0, double* nonnull %t1, double 0x41D2309CE5400000, double* getelementptr inbounds ([131072 x double], [131072 x double]* @x, i64 0, i64 0)) #4, !dbg !243
  call void @llvm.dbg.value(metadata double 0x41D2309CE5400000, i64 0, metadata !77, metadata !172), !dbg !241
  %23 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %23)
  store double 0x41D2309CE5400000, double* %t1, align 8, !dbg !244, !tbaa !229
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !94, metadata !172), !dbg !245
  call void @llvm.dbg.value(metadata double 0x41D2309CE5400000, i64 0, metadata !77, metadata !172), !dbg !241
  call void @llvm.dbg.value(metadata double* %t1, i64 0, metadata !77, metadata !239), !dbg !241
  %call28 = call double @randlc(double* nonnull %t1, double 0x41D2309CE5400000) #4, !dbg !246
  call void @llvm.dbg.value(metadata double %call28, i64 0, metadata !78, metadata !172), !dbg !250
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !94, metadata !172), !dbg !245
  %24 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %24, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.37, i32 0, i32 0), i32 8, i32 0, i32 0)
  %25 = load double, double* %t1, align 8, !dbg !251, !tbaa !229
  call void @llvm.dbg.value(metadata double %25, i64 0, metadata !77, metadata !172), !dbg !241
  call void @llvm.dbg.value(metadata double* %t1, i64 0, metadata !77, metadata !239), !dbg !241
  %call28.1 = call double @randlc(double* nonnull %t1, double %25) #4, !dbg !246
  call void @llvm.dbg.value(metadata double %call28, i64 0, metadata !78, metadata !172), !dbg !250
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !94, metadata !172), !dbg !245
  %26 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %26, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.39, i32 0, i32 0), i32 8, i32 0, i32 0)
  %27 = load double, double* %t1, align 8, !dbg !251, !tbaa !229
  call void @llvm.dbg.value(metadata double %25, i64 0, metadata !77, metadata !172), !dbg !241
  call void @llvm.dbg.value(metadata double* %t1, i64 0, metadata !77, metadata !239), !dbg !241
  %call28.2 = call double @randlc(double* nonnull %t1, double %27) #4, !dbg !246
  call void @llvm.dbg.value(metadata double %call28, i64 0, metadata !78, metadata !172), !dbg !250
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !94, metadata !172), !dbg !245
  %28 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %28, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.41, i32 0, i32 0), i32 8, i32 0, i32 0)
  %29 = load double, double* %t1, align 8, !dbg !251, !tbaa !229
  call void @llvm.dbg.value(metadata double %25, i64 0, metadata !77, metadata !172), !dbg !241
  call void @llvm.dbg.value(metadata double* %t1, i64 0, metadata !77, metadata !239), !dbg !241
  %call28.3 = call double @randlc(double* nonnull %t1, double %29) #4, !dbg !246
  call void @llvm.dbg.value(metadata double %call28, i64 0, metadata !78, metadata !172), !dbg !250
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !94, metadata !172), !dbg !245
  %30 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %30, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.43, i32 0, i32 0), i32 8, i32 0, i32 0)
  %31 = load double, double* %t1, align 8, !dbg !251, !tbaa !229
  call void @llvm.dbg.value(metadata double %25, i64 0, metadata !77, metadata !172), !dbg !241
  call void @llvm.dbg.value(metadata double* %t1, i64 0, metadata !77, metadata !239), !dbg !241
  %call28.4 = call double @randlc(double* nonnull %t1, double %31) #4, !dbg !246
  call void @llvm.dbg.value(metadata double %call28, i64 0, metadata !78, metadata !172), !dbg !250
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !94, metadata !172), !dbg !245
  %32 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %32, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.45, i32 0, i32 0), i32 8, i32 0, i32 0)
  %33 = load double, double* %t1, align 8, !dbg !251, !tbaa !229
  call void @llvm.dbg.value(metadata double %25, i64 0, metadata !77, metadata !172), !dbg !241
  call void @llvm.dbg.value(metadata double* %t1, i64 0, metadata !77, metadata !239), !dbg !241
  %call28.5 = call double @randlc(double* nonnull %t1, double %33) #4, !dbg !246
  call void @llvm.dbg.value(metadata double %call28, i64 0, metadata !78, metadata !172), !dbg !250
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !94, metadata !172), !dbg !245
  %34 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %34, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.47, i32 0, i32 0), i32 8, i32 0, i32 0)
  %35 = load double, double* %t1, align 8, !dbg !251, !tbaa !229
  call void @llvm.dbg.value(metadata double %25, i64 0, metadata !77, metadata !172), !dbg !241
  call void @llvm.dbg.value(metadata double* %t1, i64 0, metadata !77, metadata !239), !dbg !241
  %call28.6 = call double @randlc(double* nonnull %t1, double %35) #4, !dbg !246
  call void @llvm.dbg.value(metadata double %call28, i64 0, metadata !78, metadata !172), !dbg !250
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !94, metadata !172), !dbg !245
  %36 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %36, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.49, i32 0, i32 0), i32 8, i32 0, i32 0)
  %37 = load double, double* %t1, align 8, !dbg !251, !tbaa !229
  call void @llvm.dbg.value(metadata double %25, i64 0, metadata !77, metadata !172), !dbg !241
  call void @llvm.dbg.value(metadata double* %t1, i64 0, metadata !77, metadata !239), !dbg !241
  %call28.7 = call double @randlc(double* nonnull %t1, double %37) #4, !dbg !246
  call void @llvm.dbg.value(metadata double %call28, i64 0, metadata !78, metadata !172), !dbg !250
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !94, metadata !172), !dbg !245
  %38 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %38, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.51, i32 0, i32 0), i32 8, i32 0, i32 0)
  %39 = load double, double* %t1, align 8, !dbg !251, !tbaa !229
  call void @llvm.dbg.value(metadata double %25, i64 0, metadata !77, metadata !172), !dbg !241
  call void @llvm.dbg.value(metadata double* %t1, i64 0, metadata !77, metadata !239), !dbg !241
  %call28.8 = call double @randlc(double* nonnull %t1, double %39) #4, !dbg !246
  call void @llvm.dbg.value(metadata double %call28, i64 0, metadata !78, metadata !172), !dbg !250
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !94, metadata !172), !dbg !245
  %40 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %40, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.53, i32 0, i32 0), i32 8, i32 0, i32 0)
  %41 = load double, double* %t1, align 8, !dbg !251, !tbaa !229
  call void @llvm.dbg.value(metadata double %25, i64 0, metadata !77, metadata !172), !dbg !241
  call void @llvm.dbg.value(metadata double* %t1, i64 0, metadata !77, metadata !239), !dbg !241
  %call28.9 = call double @randlc(double* nonnull %t1, double %41) #4, !dbg !246
  call void @llvm.dbg.value(metadata double %call28, i64 0, metadata !78, metadata !172), !dbg !250
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !94, metadata !172), !dbg !245
  %42 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %42, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.55, i32 0, i32 0), i32 8, i32 0, i32 0)
  %43 = load double, double* %t1, align 8, !dbg !251, !tbaa !229
  call void @llvm.dbg.value(metadata double %25, i64 0, metadata !77, metadata !172), !dbg !241
  call void @llvm.dbg.value(metadata double* %t1, i64 0, metadata !77, metadata !239), !dbg !241
  %call28.10 = call double @randlc(double* nonnull %t1, double %43) #4, !dbg !246
  call void @llvm.dbg.value(metadata double %call28, i64 0, metadata !78, metadata !172), !dbg !250
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !94, metadata !172), !dbg !245
  %44 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %44, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.57, i32 0, i32 0), i32 8, i32 0, i32 0)
  %45 = load double, double* %t1, align 8, !dbg !251, !tbaa !229
  call void @llvm.dbg.value(metadata double %25, i64 0, metadata !77, metadata !172), !dbg !241
  call void @llvm.dbg.value(metadata double* %t1, i64 0, metadata !77, metadata !239), !dbg !241
  %call28.11 = call double @randlc(double* nonnull %t1, double %45) #4, !dbg !246
  call void @llvm.dbg.value(metadata double %call28, i64 0, metadata !78, metadata !172), !dbg !250
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !94, metadata !172), !dbg !245
  %46 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %46, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.59, i32 0, i32 0), i32 8, i32 0, i32 0)
  %47 = load double, double* %t1, align 8, !dbg !251, !tbaa !229
  call void @llvm.dbg.value(metadata double %25, i64 0, metadata !77, metadata !172), !dbg !241
  call void @llvm.dbg.value(metadata double* %t1, i64 0, metadata !77, metadata !239), !dbg !241
  %call28.12 = call double @randlc(double* nonnull %t1, double %47) #4, !dbg !246
  call void @llvm.dbg.value(metadata double %call28, i64 0, metadata !78, metadata !172), !dbg !250
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !94, metadata !172), !dbg !245
  %48 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %48, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.61, i32 0, i32 0), i32 8, i32 0, i32 0)
  %49 = load double, double* %t1, align 8, !dbg !251, !tbaa !229
  call void @llvm.dbg.value(metadata double %25, i64 0, metadata !77, metadata !172), !dbg !241
  call void @llvm.dbg.value(metadata double* %t1, i64 0, metadata !77, metadata !239), !dbg !241
  %call28.13 = call double @randlc(double* nonnull %t1, double %49) #4, !dbg !246
  call void @llvm.dbg.value(metadata double %call28, i64 0, metadata !78, metadata !172), !dbg !250
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !94, metadata !172), !dbg !245
  %50 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %50, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.63, i32 0, i32 0), i32 8, i32 0, i32 0)
  %51 = load double, double* %t1, align 8, !dbg !251, !tbaa !229
  call void @llvm.dbg.value(metadata double %25, i64 0, metadata !77, metadata !172), !dbg !241
  call void @llvm.dbg.value(metadata double* %t1, i64 0, metadata !77, metadata !239), !dbg !241
  %call28.14 = call double @randlc(double* nonnull %t1, double %51) #4, !dbg !246
  call void @llvm.dbg.value(metadata double %call28, i64 0, metadata !78, metadata !172), !dbg !250
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !94, metadata !172), !dbg !245
  %52 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %52, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.65, i32 0, i32 0), i32 8, i32 0, i32 0)
  %53 = load double, double* %t1, align 8, !dbg !251, !tbaa !229
  call void @llvm.dbg.value(metadata double %25, i64 0, metadata !77, metadata !172), !dbg !241
  call void @llvm.dbg.value(metadata double* %t1, i64 0, metadata !77, metadata !239), !dbg !241
  %call28.15 = call double @randlc(double* nonnull %t1, double %53) #4, !dbg !246
  call void @llvm.dbg.value(metadata double %call28, i64 0, metadata !78, metadata !172), !dbg !250
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !94, metadata !172), !dbg !245
  %54 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %54, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.67, i32 0, i32 0), i32 8, i32 0, i32 0)
  %55 = load double, double* %t1, align 8, !dbg !251, !tbaa !229
  call void @llvm.dbg.value(metadata double %25, i64 0, metadata !77, metadata !172), !dbg !241
  call void @llvm.dbg.value(metadata double* %t1, i64 0, metadata !77, metadata !239), !dbg !241
  %call28.16 = call double @randlc(double* nonnull %t1, double %55) #4, !dbg !246
  call void @llvm.dbg.value(metadata double %call28, i64 0, metadata !78, metadata !172), !dbg !250
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !94, metadata !172), !dbg !245
  %56 = bitcast double* %t1 to i64*, !dbg !251
  %57 = ptrtoint i64* %56 to i64
  call void @__DiscoPoPOpenMPRead(i64 %57, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.69, i32 0, i32 0), i32 8, i32 0, i32 0)
  %58 = load i64, i64* %56, align 8, !dbg !251, !tbaa !229
  call void @llvm.dbg.value(metadata double %25, i64 0, metadata !77, metadata !172), !dbg !241
  call void @llvm.dbg.value(metadata double undef, i64 0, metadata !86, metadata !172), !dbg !252
  %59 = bitcast double* %an to i64*, !dbg !253
  %60 = ptrtoint i64* %59 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %60)
  store i64 %58, i64* %59, align 8, !dbg !253, !tbaa !229
  call void @llvm.dbg.value(metadata double 0x41B033C4D7000000, i64 0, metadata !87, metadata !172), !dbg !254
  call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !88, metadata !172), !dbg !255
  call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !83, metadata !172), !dbg !256
  %61 = ptrtoint double* %sx to i64
  call void @__DiscoPoPOpenMPWrite(i64 %61)
  store double 0.000000e+00, double* %sx, align 8, !dbg !257, !tbaa !229
  call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !84, metadata !172), !dbg !258
  %62 = ptrtoint double* %sy to i64
  call void @__DiscoPoPOpenMPWrite(i64 %62)
  store double 0.000000e+00, double* %sy, align 8, !dbg !259, !tbaa !229
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !94, metadata !172), !dbg !245
  call void @llvm.memset.p0i8.i64(i8* bitcast ([10 x double]* @q to i8*), i8 0, i64 80, i32 16, i1 false), !dbg !260
  call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !100, metadata !172), !dbg !264
  %63 = ptrtoint i32* %k_offset to i64
  call void @__DiscoPoPOpenMPWrite(i64 %63)
  store i32 -1, i32* %k_offset, align 4, !dbg !265, !tbaa !222
  %64 = ptrtoint i8** %19 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %64)
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @3, i64 0, i64 0), i8** %19, align 8, !dbg !266
  call void @llvm.dbg.value(metadata double* %sx, i64 0, metadata !83, metadata !239), !dbg !256
  call void @llvm.dbg.value(metadata double* %sy, i64 0, metadata !84, metadata !239), !dbg !258
  call void @llvm.dbg.value(metadata double* %an, i64 0, metadata !86, metadata !239), !dbg !252
  call void @llvm.dbg.value(metadata i32* %np, i64 0, metadata !93, metadata !239), !dbg !220
  call void @llvm.dbg.value(metadata i32* %k_offset, i64 0, metadata !100, metadata !239), !dbg !264
  call void @llvm.dbg.value(metadata i32* %timers_enabled, i64 0, metadata !104, metadata !239), !dbg !196
  call void @__DiscoPoPOpenMPBeforeCall(i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.71, i32 0, i32 0))
  call void (%ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%ident_t* nonnull %.kmpc_loc.addr, i32 6, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, double*, double*, i32*, i32*, double*, i32*)* @.omp_outlined..8 to void (i32*, i32*, ...)*), double* nonnull %sx, double* nonnull %sy, i32* nonnull %np, i32* nonnull %k_offset, double* nonnull %an, i32* nonnull %timers_enabled) #4, !dbg !266
  call void @__DiscoPoPOpenMPAfterCall()
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !94, metadata !172), !dbg !245
  %65 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 0) to i64
  call void @__DiscoPoPOpenMPRead(i64 %65, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.73, i32 0, i32 0), i32 16, i32 0, i32 0)
  %66 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 0), align 16, !dbg !267, !tbaa !229
  %add44 = fadd double %66, 0.000000e+00, !dbg !271
  call void @llvm.dbg.value(metadata double %add44, i64 0, metadata !88, metadata !172), !dbg !255
  %67 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 1) to i64
  call void @__DiscoPoPOpenMPRead(i64 %67, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.75, i32 0, i32 0), i32 8, i32 0, i32 0)
  %68 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 1), align 8, !dbg !267, !tbaa !229
  %add44.1 = fadd double %add44, %68, !dbg !271
  call void @llvm.dbg.value(metadata double %add44, i64 0, metadata !88, metadata !172), !dbg !255
  %69 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 2) to i64
  call void @__DiscoPoPOpenMPRead(i64 %69, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.77, i32 0, i32 0), i32 16, i32 0, i32 0)
  %70 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 2), align 16, !dbg !267, !tbaa !229
  %add44.2 = fadd double %add44.1, %70, !dbg !271
  call void @llvm.dbg.value(metadata double %add44, i64 0, metadata !88, metadata !172), !dbg !255
  %71 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 3) to i64
  call void @__DiscoPoPOpenMPRead(i64 %71, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.79, i32 0, i32 0), i32 8, i32 0, i32 0)
  %72 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 3), align 8, !dbg !267, !tbaa !229
  %add44.3 = fadd double %add44.2, %72, !dbg !271
  call void @llvm.dbg.value(metadata double %add44, i64 0, metadata !88, metadata !172), !dbg !255
  %73 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 4) to i64
  call void @__DiscoPoPOpenMPRead(i64 %73, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.81, i32 0, i32 0), i32 16, i32 0, i32 0)
  %74 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 4), align 16, !dbg !267, !tbaa !229
  %add44.4 = fadd double %add44.3, %74, !dbg !271
  call void @llvm.dbg.value(metadata double %add44, i64 0, metadata !88, metadata !172), !dbg !255
  %75 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 5) to i64
  call void @__DiscoPoPOpenMPRead(i64 %75, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.83, i32 0, i32 0), i32 8, i32 0, i32 0)
  %76 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 5), align 8, !dbg !267, !tbaa !229
  %add44.5 = fadd double %add44.4, %76, !dbg !271
  call void @llvm.dbg.value(metadata double %add44, i64 0, metadata !88, metadata !172), !dbg !255
  %77 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 6) to i64
  call void @__DiscoPoPOpenMPRead(i64 %77, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.85, i32 0, i32 0), i32 16, i32 0, i32 0)
  %78 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 6), align 16, !dbg !267, !tbaa !229
  %add44.6 = fadd double %add44.5, %78, !dbg !271
  call void @llvm.dbg.value(metadata double %add44, i64 0, metadata !88, metadata !172), !dbg !255
  %79 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 7) to i64
  call void @__DiscoPoPOpenMPRead(i64 %79, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.87, i32 0, i32 0), i32 8, i32 0, i32 0)
  %80 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 7), align 8, !dbg !267, !tbaa !229
  %add44.7 = fadd double %add44.6, %80, !dbg !271
  call void @llvm.dbg.value(metadata double %add44, i64 0, metadata !88, metadata !172), !dbg !255
  %81 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 8) to i64
  call void @__DiscoPoPOpenMPRead(i64 %81, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.89, i32 0, i32 0), i32 16, i32 0, i32 0)
  %82 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 8), align 16, !dbg !267, !tbaa !229
  %add44.8 = fadd double %add44.7, %82, !dbg !271
  call void @llvm.dbg.value(metadata double %add44, i64 0, metadata !88, metadata !172), !dbg !255
  %83 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 9) to i64
  call void @__DiscoPoPOpenMPRead(i64 %83, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.91, i32 0, i32 0), i32 8, i32 0, i32 0)
  %84 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 9), align 8, !dbg !267, !tbaa !229
  %add44.9 = fadd double %add44.8, %84, !dbg !271
  call void @llvm.dbg.value(metadata double %add44, i64 0, metadata !88, metadata !172), !dbg !255
  call void @timer_stop(i32 0) #4, !dbg !272
  %call48 = call double @timer_read(i32 0) #4, !dbg !273
  call void @llvm.dbg.value(metadata double %call48, i64 0, metadata !85, metadata !172), !dbg !274
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !99, metadata !172), !dbg !275
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !102, metadata !172), !dbg !219
  call void @llvm.dbg.value(metadata double 0xC0A95FAB5782F17F, i64 0, metadata !89, metadata !172), !dbg !276
  call void @llvm.dbg.value(metadata double 0xC0BB2E683649F2E0, i64 0, metadata !90, metadata !172), !dbg !277
  %85 = ptrtoint double* %sx to i64
  call void @__DiscoPoPOpenMPRead(i64 %85, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.93, i32 0, i32 0), i32 8, i32 0, i32 0)
  %86 = load double, double* %sx, align 8, !dbg !278, !tbaa !229
  call void @llvm.dbg.value(metadata double %86, i64 0, metadata !83, metadata !172), !dbg !256
  %sub = fadd double %86, 0x40A95FAB5782F17F, !dbg !281
  %div = fdiv double %sub, 0xC0A95FAB5782F17F, !dbg !282
  %call50 = call double @fabs(double %div) #2, !dbg !283
  call void @llvm.dbg.value(metadata double %call50, i64 0, metadata !91, metadata !172), !dbg !284
  %87 = ptrtoint double* %sy to i64
  call void @__DiscoPoPOpenMPRead(i64 %87, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.95, i32 0, i32 0), i32 8, i32 0, i32 0)
  %88 = load double, double* %sy, align 8, !dbg !285, !tbaa !229
  call void @llvm.dbg.value(metadata double %88, i64 0, metadata !84, metadata !172), !dbg !258
  %sub51 = fadd double %88, 0x40BB2E683649F2E0, !dbg !286
  %div52 = fdiv double %sub51, 0xC0BB2E683649F2E0, !dbg !287
  %call53 = call double @fabs(double %div52) #2, !dbg !288
  call void @llvm.dbg.value(metadata double %call53, i64 0, metadata !92, metadata !172), !dbg !289
  %cmp54 = fcmp ole double %call50, 1.000000e-08, !dbg !290
  %cmp56 = fcmp ole double %call53, 1.000000e-08, !dbg !291
  %89 = and i1 %cmp54, %cmp56, !dbg !293
  call void @llvm.dbg.value(metadata i32 %land.ext, i64 0, metadata !102, metadata !172), !dbg !219
  %call59 = call double @pow(double 2.000000e+00, double 2.500000e+01) #4, !dbg !294
  %div60 = fdiv double 0x4180000000000000, %call48, !dbg !295
  call void @llvm.dbg.value(metadata double %div61, i64 0, metadata !76, metadata !172), !dbg !237
  %puts146 = call i32 @puts(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.26, i64 0, i64 0)), !dbg !296
  %call63 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), double %call48), !dbg !297
  %call64 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i32 24), !dbg !298
  %call65 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i64 0, i64 0), double %add44.9), !dbg !299
  %90 = ptrtoint double* %sx to i64
  call void @__DiscoPoPOpenMPRead(i64 %90, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.97, i32 0, i32 0), i32 8, i32 0, i32 0)
  %91 = load double, double* %sx, align 8, !dbg !300, !tbaa !229
  call void @llvm.dbg.value(metadata double %91, i64 0, metadata !83, metadata !172), !dbg !256
  %92 = ptrtoint double* %sy to i64
  call void @__DiscoPoPOpenMPRead(i64 %92, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.99, i32 0, i32 0), i32 8, i32 0, i32 0)
  %93 = load double, double* %sy, align 8, !dbg !301, !tbaa !229
  call void @llvm.dbg.value(metadata double %93, i64 0, metadata !84, metadata !172), !dbg !258
  %call66 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0), double %91, double %93), !dbg !302
  %puts147 = call i32 @puts(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.27, i64 0, i64 0)), !dbg !303
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !94, metadata !172), !dbg !245
  %94 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 0) to i64
  call void @__DiscoPoPOpenMPRead(i64 %94, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.101, i32 0, i32 0), i32 16, i32 0, i32 0)
  %95 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 0), align 16, !dbg !304, !tbaa !229
  %call74 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i32 0, double %95), !dbg !308
  %96 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 1) to i64
  call void @__DiscoPoPOpenMPRead(i64 %96, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.103, i32 0, i32 0), i32 8, i32 0, i32 0)
  %97 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 1), align 8, !dbg !304, !tbaa !229
  %call74.1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i32 1, double %97), !dbg !308
  %98 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 2) to i64
  call void @__DiscoPoPOpenMPRead(i64 %98, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.105, i32 0, i32 0), i32 16, i32 0, i32 0)
  %99 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 2), align 16, !dbg !304, !tbaa !229
  %call74.2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i32 2, double %99), !dbg !308
  %100 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 3) to i64
  call void @__DiscoPoPOpenMPRead(i64 %100, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.107, i32 0, i32 0), i32 8, i32 0, i32 0)
  %101 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 3), align 8, !dbg !304, !tbaa !229
  %call74.3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i32 3, double %101), !dbg !308
  %102 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 4) to i64
  call void @__DiscoPoPOpenMPRead(i64 %102, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.109, i32 0, i32 0), i32 16, i32 0, i32 0)
  %103 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 4), align 16, !dbg !304, !tbaa !229
  %call74.4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i32 4, double %103), !dbg !308
  %104 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 5) to i64
  call void @__DiscoPoPOpenMPRead(i64 %104, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.111, i32 0, i32 0), i32 8, i32 0, i32 0)
  %105 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 5), align 8, !dbg !304, !tbaa !229
  %call74.5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i32 5, double %105), !dbg !308
  %106 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 6) to i64
  call void @__DiscoPoPOpenMPRead(i64 %106, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.113, i32 0, i32 0), i32 16, i32 0, i32 0)
  %107 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 6), align 16, !dbg !304, !tbaa !229
  %call74.6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i32 6, double %107), !dbg !308
  %108 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 7) to i64
  call void @__DiscoPoPOpenMPRead(i64 %108, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.115, i32 0, i32 0), i32 8, i32 0, i32 0)
  %109 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 7), align 8, !dbg !304, !tbaa !229
  %call74.7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i32 7, double %109), !dbg !308
  %110 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 8) to i64
  call void @__DiscoPoPOpenMPRead(i64 %110, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.117, i32 0, i32 0), i32 16, i32 0, i32 0)
  %111 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 8), align 16, !dbg !304, !tbaa !229
  %call74.8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i32 8, double %111), !dbg !308
  %112 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 9) to i64
  call void @__DiscoPoPOpenMPRead(i64 %112, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.119, i32 0, i32 0), i32 8, i32 0, i32 0)
  %113 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 9), align 8, !dbg !304, !tbaa !229
  %call74.9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i32 9, double %113), !dbg !308
  %land.ext = zext i1 %89 to i32, !dbg !309
  %div61 = fdiv double %div60, 1.000000e+06, !dbg !311
  call void @print_results(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0), i8 signext 83, i32 25, i32 0, i32 0, i32 0, double %call48, double %div61, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.17, i64 0, i64 0), i32 %land.ext, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #4, !dbg !312
  %114 = ptrtoint i32* %timers_enabled to i64
  call void @__DiscoPoPOpenMPRead(i64 %114, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.121, i32 0, i32 0), i32 4, i32 0, i32 0)
  %115 = load i32, i32* %timers_enabled, align 4, !dbg !313, !tbaa !199
  call void @llvm.dbg.value(metadata i32 %115, i64 0, metadata !104, metadata !172), !dbg !196
  %tobool78 = icmp eq i32 %115, 0, !dbg !313
  br i1 %tobool78, label %if.end95, label %if.then79, !dbg !315

if.then79:                                        ; preds = %if.end
  %cmp80 = fcmp ugt double %call48, 0.000000e+00, !dbg !316
  call void @llvm.dbg.value(metadata double 1.000000e+00, i64 0, metadata !85, metadata !172), !dbg !274
  %tm.0 = select i1 %cmp80, double %call48, double 1.000000e+00, !dbg !319
  %call84 = call double @timer_read(i32 0) #4, !dbg !320
  call void @llvm.dbg.value(metadata double %call84, i64 0, metadata !87, metadata !172), !dbg !254
  %mul = fmul double %call84, 1.000000e+02, !dbg !321
  %div85 = fdiv double %mul, %tm.0, !dbg !322
  %call86 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.23, i64 0, i64 0), double %call84, double %div85), !dbg !323
  %call87 = call double @timer_read(i32 1) #4, !dbg !324
  call void @llvm.dbg.value(metadata double %call87, i64 0, metadata !87, metadata !172), !dbg !254
  %mul88 = fmul double %call87, 1.000000e+02, !dbg !325
  %div89 = fdiv double %mul88, %tm.0, !dbg !326
  %call90 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.24, i64 0, i64 0), double %call87, double %div89), !dbg !327
  %call91 = call double @timer_read(i32 2) #4, !dbg !328
  call void @llvm.dbg.value(metadata double %call91, i64 0, metadata !87, metadata !172), !dbg !254
  %mul92 = fmul double %call91, 1.000000e+02, !dbg !329
  %div93 = fdiv double %mul92, %tm.0, !dbg !330
  %call94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.25, i64 0, i64 0), double %call91, double %div93), !dbg !331
  br label %if.end95, !dbg !332

if.end95:                                         ; preds = %if.end, %if.then79
  call void @llvm.lifetime.end(i64 16, i8* nonnull %9) #4, !dbg !333
  call void @llvm.lifetime.end(i64 24, i8* nonnull %8) #4, !dbg !334
  call void @llvm.lifetime.end(i64 4, i8* nonnull %7) #4, !dbg !335
  call void @llvm.lifetime.end(i64 4, i8* nonnull %6) #4, !dbg !336
  call void @llvm.lifetime.end(i64 4, i8* nonnull %5) #4, !dbg !338
  call void @llvm.lifetime.end(i64 8, i8* nonnull %4) #4, !dbg !340
  call void @llvm.lifetime.end(i64 8, i8* nonnull %3) #4, !dbg !342
  call void @llvm.lifetime.end(i64 8, i8* nonnull %2) #4, !dbg !344
  call void @llvm.lifetime.end(i64 8, i8* nonnull %1) #4, !dbg !346
  call void @__DiscoPoPOpenMPFinalize()
  ret i32 0, !dbg !348
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nounwind
declare noalias %struct._IO_FILE* @fopen(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind
declare double @pow(double, double) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @puts(i8* nocapture readonly) #4

; Function Attrs: nounwind
declare i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #3

declare i32 @omp_get_max_threads() local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define internal void @.omp_outlined.(i32* noalias nocapture readnone %.global_tid., i32* noalias nocapture readnone %.bound_tid.) #0 !dbg !349 {
entry:
  tail call void @llvm.dbg.value(metadata i32* %.global_tid., i64 0, metadata !356, metadata !172), !dbg !359
  tail call void @llvm.dbg.value(metadata i32* %.bound_tid., i64 0, metadata !357, metadata !172), !dbg !359
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !358, metadata !172), !dbg !359
  br label %vector.body, !dbg !360

vector.body:                                      ; preds = %vector.body, %entry
  %index = phi i64 [ 0, %entry ], [ %index.next.7, %vector.body ], !dbg !360
  %0 = getelementptr inbounds [131072 x double], [131072 x double]* @x, i64 0, i64 %index, !dbg !365
  %1 = bitcast double* %0 to <2 x double>*, !dbg !367
  %2 = ptrtoint <2 x double>* %1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store <2 x double> <double -1.000000e+99, double -1.000000e+99>, <2 x double>* %1, align 16, !dbg !367, !tbaa !229
  %3 = getelementptr double, double* %0, i64 2, !dbg !367
  %4 = bitcast double* %3 to <2 x double>*, !dbg !367
  %5 = ptrtoint <2 x double>* %4 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store <2 x double> <double -1.000000e+99, double -1.000000e+99>, <2 x double>* %4, align 16, !dbg !367, !tbaa !229
  %index.next = or i64 %index, 4, !dbg !360
  %6 = getelementptr inbounds [131072 x double], [131072 x double]* @x, i64 0, i64 %index.next, !dbg !365
  %7 = bitcast double* %6 to <2 x double>*, !dbg !367
  %8 = ptrtoint <2 x double>* %7 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %8)
  store <2 x double> <double -1.000000e+99, double -1.000000e+99>, <2 x double>* %7, align 16, !dbg !367, !tbaa !229
  %9 = getelementptr double, double* %6, i64 2, !dbg !367
  %10 = bitcast double* %9 to <2 x double>*, !dbg !367
  %11 = ptrtoint <2 x double>* %10 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %11)
  store <2 x double> <double -1.000000e+99, double -1.000000e+99>, <2 x double>* %10, align 16, !dbg !367, !tbaa !229
  %index.next.1 = or i64 %index, 8, !dbg !360
  %12 = getelementptr inbounds [131072 x double], [131072 x double]* @x, i64 0, i64 %index.next.1, !dbg !365
  %13 = bitcast double* %12 to <2 x double>*, !dbg !367
  %14 = ptrtoint <2 x double>* %13 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %14)
  store <2 x double> <double -1.000000e+99, double -1.000000e+99>, <2 x double>* %13, align 16, !dbg !367, !tbaa !229
  %15 = getelementptr double, double* %12, i64 2, !dbg !367
  %16 = bitcast double* %15 to <2 x double>*, !dbg !367
  %17 = ptrtoint <2 x double>* %16 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %17)
  store <2 x double> <double -1.000000e+99, double -1.000000e+99>, <2 x double>* %16, align 16, !dbg !367, !tbaa !229
  %index.next.2 = or i64 %index, 12, !dbg !360
  %18 = getelementptr inbounds [131072 x double], [131072 x double]* @x, i64 0, i64 %index.next.2, !dbg !365
  %19 = bitcast double* %18 to <2 x double>*, !dbg !367
  %20 = ptrtoint <2 x double>* %19 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %20)
  store <2 x double> <double -1.000000e+99, double -1.000000e+99>, <2 x double>* %19, align 16, !dbg !367, !tbaa !229
  %21 = getelementptr double, double* %18, i64 2, !dbg !367
  %22 = bitcast double* %21 to <2 x double>*, !dbg !367
  %23 = ptrtoint <2 x double>* %22 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %23)
  store <2 x double> <double -1.000000e+99, double -1.000000e+99>, <2 x double>* %22, align 16, !dbg !367, !tbaa !229
  %index.next.3 = or i64 %index, 16, !dbg !360
  %24 = getelementptr inbounds [131072 x double], [131072 x double]* @x, i64 0, i64 %index.next.3, !dbg !365
  %25 = bitcast double* %24 to <2 x double>*, !dbg !367
  %26 = ptrtoint <2 x double>* %25 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %26)
  store <2 x double> <double -1.000000e+99, double -1.000000e+99>, <2 x double>* %25, align 16, !dbg !367, !tbaa !229
  %27 = getelementptr double, double* %24, i64 2, !dbg !367
  %28 = bitcast double* %27 to <2 x double>*, !dbg !367
  %29 = ptrtoint <2 x double>* %28 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %29)
  store <2 x double> <double -1.000000e+99, double -1.000000e+99>, <2 x double>* %28, align 16, !dbg !367, !tbaa !229
  %index.next.4 = or i64 %index, 20, !dbg !360
  %30 = getelementptr inbounds [131072 x double], [131072 x double]* @x, i64 0, i64 %index.next.4, !dbg !365
  %31 = bitcast double* %30 to <2 x double>*, !dbg !367
  %32 = ptrtoint <2 x double>* %31 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %32)
  store <2 x double> <double -1.000000e+99, double -1.000000e+99>, <2 x double>* %31, align 16, !dbg !367, !tbaa !229
  %33 = getelementptr double, double* %30, i64 2, !dbg !367
  %34 = bitcast double* %33 to <2 x double>*, !dbg !367
  %35 = ptrtoint <2 x double>* %34 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %35)
  store <2 x double> <double -1.000000e+99, double -1.000000e+99>, <2 x double>* %34, align 16, !dbg !367, !tbaa !229
  %index.next.5 = or i64 %index, 24, !dbg !360
  %36 = getelementptr inbounds [131072 x double], [131072 x double]* @x, i64 0, i64 %index.next.5, !dbg !365
  %37 = bitcast double* %36 to <2 x double>*, !dbg !367
  %38 = ptrtoint <2 x double>* %37 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %38)
  store <2 x double> <double -1.000000e+99, double -1.000000e+99>, <2 x double>* %37, align 16, !dbg !367, !tbaa !229
  %39 = getelementptr double, double* %36, i64 2, !dbg !367
  %40 = bitcast double* %39 to <2 x double>*, !dbg !367
  %41 = ptrtoint <2 x double>* %40 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %41)
  store <2 x double> <double -1.000000e+99, double -1.000000e+99>, <2 x double>* %40, align 16, !dbg !367, !tbaa !229
  %index.next.6 = or i64 %index, 28, !dbg !360
  %42 = getelementptr inbounds [131072 x double], [131072 x double]* @x, i64 0, i64 %index.next.6, !dbg !365
  %43 = bitcast double* %42 to <2 x double>*, !dbg !367
  %44 = ptrtoint <2 x double>* %43 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %44)
  store <2 x double> <double -1.000000e+99, double -1.000000e+99>, <2 x double>* %43, align 16, !dbg !367, !tbaa !229
  %45 = getelementptr double, double* %42, i64 2, !dbg !367
  %46 = bitcast double* %45 to <2 x double>*, !dbg !367
  %47 = ptrtoint <2 x double>* %46 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %47)
  store <2 x double> <double -1.000000e+99, double -1.000000e+99>, <2 x double>* %46, align 16, !dbg !367, !tbaa !229
  %index.next.7 = add nsw i64 %index, 32, !dbg !360
  %48 = icmp eq i64 %index.next.7, 131072, !dbg !360
  br i1 %48, label %for.end, label %vector.body, !dbg !360, !llvm.loop !368

for.end:                                          ; preds = %vector.body
  ret void, !dbg !372
}

declare void @__kmpc_fork_call(%ident_t*, i32, void (i32*, i32*, ...)*, ...) local_unnamed_addr

; Function Attrs: nounwind
declare double @sqrt(double) local_unnamed_addr #3

; Function Attrs: nounwind
declare double @log(double) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal void @.omp_outlined..7(i32* noalias nocapture readnone %.global_tid., i32* noalias nocapture readnone %.bound_tid., i32* nocapture readonly dereferenceable(4) %timers_enabled) #0 !dbg !373 {
entry:
  tail call void @llvm.dbg.value(metadata i32* %.global_tid., i64 0, metadata !378, metadata !172), !dbg !381
  tail call void @llvm.dbg.value(metadata i32* %.bound_tid., i64 0, metadata !379, metadata !172), !dbg !381
  tail call void @llvm.dbg.value(metadata i32* %timers_enabled, i64 0, metadata !380, metadata !172), !dbg !381
  tail call void @timer_clear(i32 0) #4, !dbg !382
  %0 = ptrtoint i32* %timers_enabled to i64
  call void @__DiscoPoPOpenMPRead(i64 %0, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.123, i32 0, i32 0), i32 4, i32 0, i32 0)
  %1 = load i32, i32* %timers_enabled, align 4, !dbg !384, !tbaa !199
  %tobool = icmp eq i32 %1, 0, !dbg !384
  br i1 %tobool, label %if.end3, label %if.end, !dbg !386

if.end:                                           ; preds = %entry
  tail call void @timer_clear(i32 1) #4, !dbg !387
  %2 = ptrtoint i32* %timers_enabled to i64
  call void @__DiscoPoPOpenMPRead(i64 %2, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.125, i32 0, i32 0), i32 4, i32 0, i32 0)
  %.pr = load i32, i32* %timers_enabled, align 4, !dbg !389, !tbaa !199
  %tobool1 = icmp eq i32 %.pr, 0, !dbg !389
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !391

if.then2:                                         ; preds = %if.end
  tail call void @timer_clear(i32 2) #4, !dbg !392
  br label %if.end3, !dbg !392

if.end3:                                          ; preds = %entry, %if.end, %if.then2
  ret void, !dbg !394
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #1

; Function Attrs: nounwind uwtable
define internal void @.omp_outlined..8(i32* noalias nocapture readonly %.global_tid., i32* noalias nocapture readnone %.bound_tid., double* nocapture dereferenceable(8) %sx, double* nocapture dereferenceable(8) %sy, i32* nocapture readonly dereferenceable(4) %np, i32* nocapture readonly dereferenceable(4) %k_offset, double* nocapture readonly dereferenceable(8) %an, i32* nocapture readonly dereferenceable(4) %timers_enabled) #0 !dbg !395 {
entry:
  %t1 = alloca double, align 8
  %t2 = alloca double, align 8
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %sx5 = alloca double, align 8
  %sy6 = alloca double, align 8
  %.kmpc_loc.addr = alloca %ident_t, align 8
  %0 = bitcast %ident_t* %.kmpc_loc.addr to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast (%ident_t* @0 to i8*), i64 24, i32 8, i1 false)
  %.omp.reduction.red_list = alloca [2 x i8*], align 8
  tail call void @llvm.dbg.value(metadata i32* %.global_tid., i64 0, metadata !401, metadata !172), !dbg !431
  tail call void @llvm.dbg.value(metadata i32* %.bound_tid., i64 0, metadata !402, metadata !172), !dbg !431
  tail call void @llvm.dbg.value(metadata double* %sx, i64 0, metadata !403, metadata !172), !dbg !431
  tail call void @llvm.dbg.value(metadata double* %sy, i64 0, metadata !404, metadata !172), !dbg !431
  tail call void @llvm.dbg.value(metadata i32* %np, i64 0, metadata !405, metadata !172), !dbg !431
  tail call void @llvm.dbg.value(metadata i32* %k_offset, i64 0, metadata !406, metadata !172), !dbg !431
  tail call void @llvm.dbg.value(metadata double* %an, i64 0, metadata !407, metadata !172), !dbg !431
  tail call void @llvm.dbg.value(metadata i32* %timers_enabled, i64 0, metadata !408, metadata !172), !dbg !431
  %1 = bitcast double* %t1 to i8*, !dbg !432
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !433
  %2 = bitcast double* %t2 to i8*, !dbg !432
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !435
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !415, metadata !172), !dbg !431
  call void @llvm.memset.p0i8.i64(i8* bitcast ([10 x double]* @qq to i8*), i8 0, i64 80, i32 16, i1 false), !dbg !437
  %3 = ptrtoint i32* %np to i64
  call void @__DiscoPoPOpenMPRead(i64 %3, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.127, i32 0, i32 0), i32 4, i32 0, i32 0)
  %4 = load i32, i32* %np, align 4, !dbg !441, !tbaa !222
  tail call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !423, metadata !172), !dbg !442
  %sub = add nsw i32 %4, -1, !dbg !443
  tail call void @llvm.dbg.value(metadata i32 %sub, i64 0, metadata !423, metadata !172), !dbg !442
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !424, metadata !172), !dbg !442
  %cmp4 = icmp sgt i32 %4, 0, !dbg !443
  br i1 %cmp4, label %omp.precond.then, label %entry.omp.precond.end_crit_edge, !dbg !444

entry.omp.precond.end_crit_edge:                  ; preds = %entry
  %.pre159 = bitcast i32* %.omp.is_last to i8*, !dbg !445
  %.pre160 = bitcast i32* %.omp.stride to i8*, !dbg !445
  %.pre162 = bitcast i32* %.omp.ub to i8*, !dbg !445
  %.pre164 = bitcast i32* %.omp.lb to i8*, !dbg !445
  br label %omp.precond.end, !dbg !444

omp.precond.then:                                 ; preds = %entry
  %5 = bitcast i32* %.omp.lb to i8*, !dbg !447
  call void @llvm.lifetime.start(i64 4, i8* %5) #4, !dbg !447
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !425, metadata !172), !dbg !442
  %6 = ptrtoint i32* %.omp.lb to i64
  call void @__DiscoPoPOpenMPWrite(i64 %6)
  store i32 0, i32* %.omp.lb, align 4, !dbg !449, !tbaa !222
  %7 = bitcast i32* %.omp.ub to i8*, !dbg !447
  call void @llvm.lifetime.start(i64 4, i8* %7) #4, !dbg !451
  tail call void @llvm.dbg.value(metadata i32 %sub, i64 0, metadata !426, metadata !172), !dbg !442
  %8 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPWrite(i64 %8)
  store i32 %sub, i32* %.omp.ub, align 4, !dbg !449, !tbaa !222
  %9 = bitcast i32* %.omp.stride to i8*, !dbg !447
  call void @llvm.lifetime.start(i64 4, i8* %9) #4, !dbg !453
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !427, metadata !172), !dbg !442
  %10 = ptrtoint i32* %.omp.stride to i64
  call void @__DiscoPoPOpenMPWrite(i64 %10)
  store i32 1, i32* %.omp.stride, align 4, !dbg !449, !tbaa !222
  %11 = bitcast i32* %.omp.is_last to i8*, !dbg !447
  call void @llvm.lifetime.start(i64 4, i8* %11) #4, !dbg !455
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !428, metadata !172), !dbg !442
  %12 = ptrtoint i32* %.omp.is_last to i64
  call void @__DiscoPoPOpenMPWrite(i64 %12)
  store i32 0, i32* %.omp.is_last, align 4, !dbg !449, !tbaa !222
  %13 = bitcast double* %sx5 to i8*, !dbg !447
  call void @llvm.lifetime.start(i64 8, i8* %13) #4, !dbg !457
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !429, metadata !172), !dbg !442
  %14 = ptrtoint double* %sx5 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %14)
  store double 0.000000e+00, double* %sx5, align 8, !dbg !459, !tbaa !229
  %15 = bitcast double* %sy6 to i8*, !dbg !447
  call void @llvm.lifetime.start(i64 8, i8* %15) #4, !dbg !460
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !430, metadata !172), !dbg !442
  %16 = ptrtoint double* %sy6 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %16)
  store double 0.000000e+00, double* %sy6, align 8, !dbg !462, !tbaa !229
  %17 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i64 0, i32 4, !dbg !447
  %18 = ptrtoint i8** %17 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %18)
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @4, i64 0, i64 0), i8** %17, align 8, !dbg !447
  %19 = ptrtoint i32* %.global_tid. to i64
  call void @__DiscoPoPOpenMPRead(i64 %19, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.129, i32 0, i32 0), i32 4, i32 0, i32 0)
  %20 = load i32, i32* %.global_tid., align 4, !dbg !463, !tbaa !222
  call void @__DiscoPoPOpenMPBeforeCall(i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.131, i32 0, i32 0))
  call void @__kmpc_dispatch_init_4(%ident_t* nonnull %.kmpc_loc.addr, i32 %20, i32 35, i32 0, i32 %sub, i32 1, i32 1) #4, !dbg !465
  call void @__DiscoPoPOpenMPAfterCall()
  %21 = ptrtoint i8** %17 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %21)
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @4, i64 0, i64 0), i8** %17, align 8, !dbg !467
  call void @llvm.dbg.value(metadata i32* %.omp.lb, i64 0, metadata !425, metadata !239), !dbg !442
  call void @llvm.dbg.value(metadata i32* %.omp.ub, i64 0, metadata !426, metadata !239), !dbg !442
  call void @llvm.dbg.value(metadata i32* %.omp.stride, i64 0, metadata !427, metadata !239), !dbg !442
  call void @llvm.dbg.value(metadata i32* %.omp.is_last, i64 0, metadata !428, metadata !239), !dbg !442
  call void @__DiscoPoPOpenMPBeforeCall(i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.133, i32 0, i32 0))
  %22 = call i32 @__kmpc_dispatch_next_4(%ident_t* nonnull %.kmpc_loc.addr, i32 %20, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride) #4, !dbg !467
  call void @__DiscoPoPOpenMPAfterCall()
  %tobool152 = icmp eq i32 %22, 0, !dbg !467
  br i1 %tobool152, label %omp.dispatch.end, label %omp.dispatch.body.lr.ph, !dbg !467

omp.dispatch.body.lr.ph:                          ; preds = %omp.precond.then
  %23 = bitcast double* %an to i64*, !dbg !469
  %24 = bitcast double* %t2 to i64*, !dbg !471
  br label %omp.dispatch.body, !dbg !467

omp.dispatch.cond.loopexit.loopexit:              ; preds = %omp.inner.for.cond.backedge
  br label %omp.dispatch.cond.loopexit, !dbg !467

omp.dispatch.cond.loopexit:                       ; preds = %omp.dispatch.cond.loopexit.loopexit, %omp.dispatch.body
  %25 = ptrtoint i8** %17 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %25)
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @4, i64 0, i64 0), i8** %17, align 8, !dbg !467
  call void @llvm.dbg.value(metadata i32* %.omp.lb, i64 0, metadata !425, metadata !239), !dbg !442
  call void @llvm.dbg.value(metadata i32* %.omp.ub, i64 0, metadata !426, metadata !239), !dbg !442
  call void @llvm.dbg.value(metadata i32* %.omp.stride, i64 0, metadata !427, metadata !239), !dbg !442
  call void @llvm.dbg.value(metadata i32* %.omp.is_last, i64 0, metadata !428, metadata !239), !dbg !442
  call void @__DiscoPoPOpenMPBeforeCall(i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.135, i32 0, i32 0))
  %26 = call i32 @__kmpc_dispatch_next_4(%ident_t* nonnull %.kmpc_loc.addr, i32 %20, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride) #4, !dbg !467
  call void @__DiscoPoPOpenMPAfterCall()
  %tobool = icmp eq i32 %26, 0, !dbg !467
  br i1 %tobool, label %omp.dispatch.end.loopexit, label %omp.dispatch.body, !dbg !467

omp.dispatch.body:                                ; preds = %omp.dispatch.body.lr.ph, %omp.dispatch.cond.loopexit
  %27 = ptrtoint i32* %.omp.lb to i64
  call void @__DiscoPoPOpenMPRead(i64 %27, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.137, i32 0, i32 0), i32 4, i32 0, i32 0)
  %28 = load i32, i32* %.omp.lb, align 4, !dbg !472, !tbaa !222
  call void @llvm.dbg.value(metadata i32 %28, i64 0, metadata !425, metadata !172), !dbg !442
  call void @llvm.dbg.value(metadata i32 %28, i64 0, metadata !420, metadata !172), !dbg !442
  %29 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %29, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.139, i32 0, i32 0), i32 4, i32 0, i32 0)
  %30 = load i32, i32* %.omp.ub, align 4, !dbg !474, !tbaa !222, !llvm.mem.parallel_loop_access !476
  call void @llvm.dbg.value(metadata i32 %30, i64 0, metadata !426, metadata !172), !dbg !442
  %cmp7150 = icmp sgt i32 %28, %30, !dbg !477
  br i1 %cmp7150, label %omp.dispatch.cond.loopexit, label %omp.inner.for.body.preheader, !dbg !478

omp.inner.for.body.preheader:                     ; preds = %omp.dispatch.body
  br label %omp.inner.for.body, !dbg !480

omp.inner.for.body:                               ; preds = %omp.inner.for.body.preheader, %omp.inner.for.cond.backedge
  %.omp.iv.0151 = phi i32 [ %add8, %omp.inner.for.cond.backedge ], [ %28, %omp.inner.for.body.preheader ]
  %add8 = add nsw i32 %.omp.iv.0151, 1, !dbg !480
  call void @llvm.dbg.value(metadata i32 %add8, i64 0, metadata !424, metadata !172), !dbg !442
  %31 = ptrtoint i32* %k_offset to i64
  call void @__DiscoPoPOpenMPRead(i64 %31, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.141, i32 0, i32 0), i32 4, i32 0, i32 0)
  %32 = load i32, i32* %k_offset, align 4, !dbg !482, !tbaa !222, !llvm.mem.parallel_loop_access !476
  %add9 = add nsw i32 %32, %add8, !dbg !483
  call void @llvm.dbg.value(metadata i32 %add9, i64 0, metadata !410, metadata !172), !dbg !431
  call void @llvm.dbg.value(metadata double 0x41B033C4D7000000, i64 0, metadata !411, metadata !172), !dbg !431
  %33 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %33)
  store double 0x41B033C4D7000000, double* %t1, align 8, !dbg !484, !tbaa !229, !llvm.mem.parallel_loop_access !476
  %34 = ptrtoint i64* %23 to i64
  call void @__DiscoPoPOpenMPRead(i64 %34, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.143, i32 0, i32 0), i32 8, i32 0, i32 0)
  %35 = load i64, i64* %23, align 8, !dbg !469, !tbaa !229, !llvm.mem.parallel_loop_access !476
  %36 = ptrtoint i64* %24 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %36)
  store i64 %35, i64* %24, align 8, !dbg !471, !tbaa !229, !llvm.mem.parallel_loop_access !476
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !415, metadata !172), !dbg !431
  br label %for.body12, !dbg !485

for.body12:                                       ; preds = %omp.inner.for.body, %if.end18
  %kk.0148 = phi i32 [ %add9, %omp.inner.for.body ], [ %div13, %if.end18 ]
  %i.1147 = phi i32 [ 1, %omp.inner.for.body ], [ %inc21, %if.end18 ]
  %div13 = sdiv i32 %kk.0148, 2, !dbg !489
  call void @llvm.dbg.value(metadata i32 %div13, i64 0, metadata !416, metadata !172), !dbg !431
  %mul14 = shl nsw i32 %div13, 1, !dbg !491
  %cmp15 = icmp eq i32 %mul14, %kk.0148, !dbg !493
  br i1 %cmp15, label %if.end, label %if.then, !dbg !494

if.then:                                          ; preds = %for.body12
  %37 = ptrtoint double* %t2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %37, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.145, i32 0, i32 0), i32 8, i32 0, i32 0)
  %38 = load double, double* %t2, align 8, !dbg !495, !tbaa !229
  call void @llvm.dbg.value(metadata double %38, i64 0, metadata !412, metadata !172), !dbg !431
  call void @llvm.dbg.value(metadata double* %t1, i64 0, metadata !411, metadata !239), !dbg !431
  %call = call double @randlc(double* nonnull %t1, double %38) #4, !dbg !497
  call void @llvm.dbg.value(metadata double %call, i64 0, metadata !413, metadata !172), !dbg !431
  br label %if.end, !dbg !498

if.end:                                           ; preds = %for.body12, %if.then
  %kk.0.off = add i32 %kk.0148, 1, !dbg !499
  %39 = icmp ult i32 %kk.0.off, 3, !dbg !499
  br i1 %39, label %for.end22, label %if.end18, !dbg !501

if.end18:                                         ; preds = %if.end
  %40 = ptrtoint double* %t2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %40, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.147, i32 0, i32 0), i32 8, i32 0, i32 0)
  %41 = load double, double* %t2, align 8, !dbg !502, !tbaa !229
  call void @llvm.dbg.value(metadata double %41, i64 0, metadata !412, metadata !172), !dbg !431
  call void @llvm.dbg.value(metadata double* %t2, i64 0, metadata !412, metadata !239), !dbg !431
  %call19 = call double @randlc(double* nonnull %t2, double %41) #4, !dbg !503
  call void @llvm.dbg.value(metadata double %call19, i64 0, metadata !413, metadata !172), !dbg !431
  call void @llvm.dbg.value(metadata i32 %div13, i64 0, metadata !410, metadata !172), !dbg !431
  %inc21 = add nuw nsw i32 %i.1147, 1, !dbg !504
  call void @llvm.dbg.value(metadata i32 %inc21, i64 0, metadata !415, metadata !172), !dbg !431
  %cmp11 = icmp slt i32 %inc21, 101, !dbg !506
  br i1 %cmp11, label %for.body12, label %for.end22, !dbg !485, !llvm.loop !507

for.end22:                                        ; preds = %if.end, %if.end18
  %42 = ptrtoint i32* %timers_enabled to i64
  call void @__DiscoPoPOpenMPRead(i64 %42, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.149, i32 0, i32 0), i32 4, i32 0, i32 0)
  %43 = load i32, i32* %timers_enabled, align 4, !dbg !509, !tbaa !199, !llvm.mem.parallel_loop_access !476
  %tobool23 = icmp eq i32 %43, 0, !dbg !509
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !511

if.then24:                                        ; preds = %for.end22
  call void @timer_start(i32 2) #4, !dbg !512, !llvm.mem.parallel_loop_access !476
  br label %if.end25, !dbg !512

if.end25:                                         ; preds = %for.end22, %if.then24
  call void @llvm.dbg.value(metadata double* %t1, i64 0, metadata !411, metadata !239), !dbg !431
  call void @vranlc(i32 131072, double* nonnull %t1, double 0x41D2309CE5400000, double* getelementptr inbounds ([131072 x double], [131072 x double]* @x, i64 0, i64 0)) #4, !dbg !514, !llvm.mem.parallel_loop_access !476
  %44 = ptrtoint i32* %timers_enabled to i64
  call void @__DiscoPoPOpenMPRead(i64 %44, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.151, i32 0, i32 0), i32 4, i32 0, i32 0)
  %45 = load i32, i32* %timers_enabled, align 4, !dbg !516, !tbaa !199, !llvm.mem.parallel_loop_access !476
  %tobool26 = icmp eq i32 %45, 0, !dbg !516
  br i1 %tobool26, label %for.body34.preheader, label %if.end28, !dbg !518

if.end28:                                         ; preds = %if.end25
  call void @timer_stop(i32 2) #4, !dbg !519, !llvm.mem.parallel_loop_access !476
  %46 = ptrtoint i32* %timers_enabled to i64
  call void @__DiscoPoPOpenMPRead(i64 %46, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.153, i32 0, i32 0), i32 4, i32 0, i32 0)
  %.pr = load i32, i32* %timers_enabled, align 4, !dbg !521, !tbaa !199
  %tobool29 = icmp eq i32 %.pr, 0, !dbg !521
  br i1 %tobool29, label %for.body34.preheader, label %if.then30, !dbg !523

if.then30:                                        ; preds = %if.end28
  call void @timer_start(i32 1) #4, !dbg !524, !llvm.mem.parallel_loop_access !476
  br label %for.body34.preheader, !dbg !524

for.body34.preheader:                             ; preds = %if.end28, %if.then30, %if.end25
  br label %for.body34, !dbg !526

for.body34:                                       ; preds = %for.body34.preheader, %for.inc70
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc70 ], [ 0, %for.body34.preheader ]
  %47 = shl nsw i64 %indvars.iv, 1, !dbg !526
  %arrayidx37 = getelementptr inbounds [131072 x double], [131072 x double]* @x, i64 0, i64 %47, !dbg !530
  call void @llvm.dbg.value(metadata double undef, i64 0, metadata !417, metadata !172), !dbg !431
  %48 = bitcast double* %arrayidx37 to <2 x double>*, !dbg !530
  %49 = ptrtoint <2 x double>* %48 to i64
  call void @__DiscoPoPOpenMPRead(i64 %49, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.155, i32 0, i32 0), i32 16, i32 0, i32 0)
  %50 = load <2 x double>, <2 x double>* %48, align 16, !dbg !530, !tbaa !229
  %51 = fmul <2 x double> %50, <double 2.000000e+00, double 2.000000e+00>, !dbg !531
  %52 = fadd <2 x double> %51, <double -1.000000e+00, double -1.000000e+00>, !dbg !532
  call void @llvm.dbg.value(metadata double undef, i64 0, metadata !418, metadata !172), !dbg !431
  %53 = fmul <2 x double> %52, %52, !dbg !533
  %54 = extractelement <2 x double> %53, i32 0, !dbg !534
  %55 = extractelement <2 x double> %53, i32 1, !dbg !534
  %add48 = fadd double %54, %55, !dbg !534
  call void @llvm.dbg.value(metadata double %add48, i64 0, metadata !411, metadata !172), !dbg !431
  %56 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %56)
  store double %add48, double* %t1, align 8, !dbg !535, !tbaa !229
  %cmp49 = fcmp ugt double %add48, 1.000000e+00, !dbg !536
  br i1 %cmp49, label %for.inc70, label %if.then50, !dbg !538

if.then50:                                        ; preds = %for.body34
  %call51 = call double @log(double %add48) #4, !dbg !539
  %mul52 = fmul double %call51, -2.000000e+00, !dbg !541
  %57 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %57, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.157, i32 0, i32 0), i32 8, i32 0, i32 0)
  %58 = load double, double* %t1, align 8, !dbg !542, !tbaa !229
  call void @llvm.dbg.value(metadata double %58, i64 0, metadata !411, metadata !172), !dbg !431
  %div53 = fdiv double %mul52, %58, !dbg !543
  %call54 = call double @sqrt(double %div53) #4, !dbg !544
  call void @llvm.dbg.value(metadata double %call54, i64 0, metadata !412, metadata !172), !dbg !431
  %59 = ptrtoint double* %t2 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %59)
  store double %call54, double* %t2, align 8, !dbg !546, !tbaa !229
  call void @llvm.dbg.value(metadata double undef, i64 0, metadata !413, metadata !172), !dbg !431
  %60 = insertelement <2 x double> undef, double %call54, i32 0, !dbg !547
  %61 = insertelement <2 x double> %60, double %call54, i32 1, !dbg !547
  %62 = fmul <2 x double> %52, %61, !dbg !547
  call void @llvm.dbg.value(metadata double undef, i64 0, metadata !414, metadata !172), !dbg !431
  %63 = call <2 x double> @llvm.fabs.v2f64(<2 x double> %62), !dbg !548
  %64 = extractelement <2 x double> %63, i32 0, !dbg !548
  %65 = extractelement <2 x double> %63, i32 1, !dbg !548
  %cmp59 = fcmp ogt double %64, %65, !dbg !548
  %66 = extractelement <2 x double> %62, i32 0, !dbg !548
  %67 = extractelement <2 x double> %62, i32 1, !dbg !548
  %.sink = select i1 %cmp59, double %66, double %67, !dbg !548
  %call60 = call double @fabs(double %.sink) #2, !dbg !549
  %conv = fptosi double %call60 to i32, !dbg !550
  call void @llvm.dbg.value(metadata i32 %conv, i64 0, metadata !419, metadata !172), !dbg !431
  %idxprom62 = sext i32 %conv to i64, !dbg !552
  %arrayidx63 = getelementptr inbounds [10 x double], [10 x double]* @qq, i64 0, i64 %idxprom62, !dbg !552
  %68 = ptrtoint double* %arrayidx63 to i64
  call void @__DiscoPoPOpenMPRead(i64 %68, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.159, i32 0, i32 0), i32 8, i32 0, i32 0)
  %69 = load double, double* %arrayidx63, align 8, !dbg !552, !tbaa !229
  %add64 = fadd double %69, 1.000000e+00, !dbg !553
  %70 = ptrtoint double* %arrayidx63 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %70)
  store double %add64, double* %arrayidx63, align 8, !dbg !554, !tbaa !229
  %71 = ptrtoint double* %sx5 to i64
  call void @__DiscoPoPOpenMPRead(i64 %71, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.161, i32 0, i32 0), i32 8, i32 0, i32 0)
  %72 = load double, double* %sx5, align 8, !dbg !555, !tbaa !229
  call void @llvm.dbg.value(metadata double %72, i64 0, metadata !429, metadata !172), !dbg !442
  %add67 = fadd double %66, %72, !dbg !556
  call void @llvm.dbg.value(metadata double %add67, i64 0, metadata !429, metadata !172), !dbg !442
  %73 = ptrtoint double* %sx5 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %73)
  store double %add67, double* %sx5, align 8, !dbg !557, !tbaa !229
  %74 = ptrtoint double* %sy6 to i64
  call void @__DiscoPoPOpenMPRead(i64 %74, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.163, i32 0, i32 0), i32 8, i32 0, i32 0)
  %75 = load double, double* %sy6, align 8, !dbg !558, !tbaa !229
  call void @llvm.dbg.value(metadata double %75, i64 0, metadata !430, metadata !172), !dbg !442
  %add68 = fadd double %67, %75, !dbg !559
  call void @llvm.dbg.value(metadata double %add68, i64 0, metadata !430, metadata !172), !dbg !442
  %76 = ptrtoint double* %sy6 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %76)
  store double %add68, double* %sy6, align 8, !dbg !560, !tbaa !229
  br label %for.inc70, !dbg !561

for.inc70:                                        ; preds = %for.body34, %if.then50
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !562
  %exitcond = icmp eq i64 %indvars.iv.next, 65536, !dbg !562
  br i1 %exitcond, label %for.end72, label %for.body34, !dbg !562, !llvm.loop !564

for.end72:                                        ; preds = %for.inc70
  %77 = ptrtoint i32* %timers_enabled to i64
  call void @__DiscoPoPOpenMPRead(i64 %77, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.165, i32 0, i32 0), i32 4, i32 0, i32 0)
  %78 = load i32, i32* %timers_enabled, align 4, !dbg !566, !tbaa !199, !llvm.mem.parallel_loop_access !476
  %tobool73 = icmp eq i32 %78, 0, !dbg !566
  br i1 %tobool73, label %omp.inner.for.cond.backedge, label %if.then74, !dbg !568

omp.inner.for.cond.backedge:                      ; preds = %for.end72, %if.then74
  %79 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %79, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.167, i32 0, i32 0), i32 4, i32 0, i32 0)
  %80 = load i32, i32* %.omp.ub, align 4, !dbg !474, !tbaa !222, !llvm.mem.parallel_loop_access !476
  call void @llvm.dbg.value(metadata i32 %80, i64 0, metadata !426, metadata !172), !dbg !442
  %cmp7 = icmp slt i32 %.omp.iv.0151, %80, !dbg !477
  br i1 %cmp7, label %omp.inner.for.body, label %omp.dispatch.cond.loopexit.loopexit, !dbg !478

if.then74:                                        ; preds = %for.end72
  call void @timer_stop(i32 1) #4, !dbg !569, !llvm.mem.parallel_loop_access !476
  br label %omp.inner.for.cond.backedge, !dbg !569

omp.dispatch.end.loopexit:                        ; preds = %omp.dispatch.cond.loopexit
  br label %omp.dispatch.end, !dbg !463

omp.dispatch.end:                                 ; preds = %omp.dispatch.end.loopexit, %omp.precond.then
  %81 = bitcast [2 x i8*]* %.omp.reduction.red_list to double**, !dbg !463
  %82 = ptrtoint double** %81 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %82)
  store double* %sx5, double** %81, align 8, !dbg !463
  %83 = getelementptr inbounds [2 x i8*], [2 x i8*]* %.omp.reduction.red_list, i64 0, i64 1, !dbg !463
  %84 = bitcast i8** %83 to double**, !dbg !463
  %85 = ptrtoint double** %84 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %85)
  store double* %sy6, double** %84, align 8, !dbg !463
  %86 = ptrtoint i8** %17 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %86)
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @5, i64 0, i64 0), i8** %17, align 8, !dbg !463
  %87 = bitcast [2 x i8*]* %.omp.reduction.red_list to i8*, !dbg !463
  call void @__DiscoPoPOpenMPBeforeCall(i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.169, i32 0, i32 0))
  %88 = call i32 @__kmpc_reduce_nowait(%ident_t* nonnull %.kmpc_loc.addr, i32 %20, i32 2, i64 16, i8* %87, void (i8*, i8*)* nonnull @.omp.reduction.reduction_func, [8 x i32]* nonnull @.gomp_critical_user_.reduction.var) #4, !dbg !463
  call void @__DiscoPoPOpenMPAfterCall()
  switch i32 %88, label %.omp.reduction.default [
    i32 1, label %.omp.reduction.case1
    i32 2, label %.omp.reduction.case2
  ], !dbg !463

.omp.reduction.case1:                             ; preds = %omp.dispatch.end
  %89 = ptrtoint double* %sx to i64
  call void @__DiscoPoPOpenMPRead(i64 %89, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.171, i32 0, i32 0), i32 8, i32 0, i32 0)
  %90 = load double, double* %sx, align 8, !dbg !571, !tbaa !229
  %91 = ptrtoint double* %sx5 to i64
  call void @__DiscoPoPOpenMPRead(i64 %91, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.173, i32 0, i32 0), i32 8, i32 0, i32 0)
  %92 = load double, double* %sx5, align 8, !dbg !571, !tbaa !229
  call void @llvm.dbg.value(metadata double %92, i64 0, metadata !429, metadata !172), !dbg !442
  %add77 = fadd double %90, %92, !dbg !573
  %93 = ptrtoint double* %sx to i64
  call void @__DiscoPoPOpenMPWrite(i64 %93)
  store double %add77, double* %sx, align 8, !dbg !573, !tbaa !229
  %94 = ptrtoint double* %sy to i64
  call void @__DiscoPoPOpenMPRead(i64 %94, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.175, i32 0, i32 0), i32 8, i32 0, i32 0)
  %95 = load double, double* %sy, align 8, !dbg !574, !tbaa !229
  %96 = ptrtoint double* %sy6 to i64
  call void @__DiscoPoPOpenMPRead(i64 %96, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.177, i32 0, i32 0), i32 8, i32 0, i32 0)
  %97 = load double, double* %sy6, align 8, !dbg !574, !tbaa !229
  call void @llvm.dbg.value(metadata double %97, i64 0, metadata !430, metadata !172), !dbg !442
  %add78 = fadd double %95, %97, !dbg !573
  %98 = ptrtoint double* %sy to i64
  call void @__DiscoPoPOpenMPWrite(i64 %98)
  store double %add78, double* %sy, align 8, !dbg !573, !tbaa !229
  call void @__DiscoPoPOpenMPBeforeCall(i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.179, i32 0, i32 0))
  call void @__kmpc_end_reduce_nowait(%ident_t* nonnull %.kmpc_loc.addr, i32 %20, [8 x i32]* nonnull @.gomp_critical_user_.reduction.var) #4, !dbg !575
  call void @__DiscoPoPOpenMPAfterCall()
  br label %.omp.reduction.default, !dbg !575

.omp.reduction.case2:                             ; preds = %omp.dispatch.end
  %99 = bitcast double* %sx to i64*, !dbg !576
  %100 = ptrtoint i64* %99 to i64
  call void @__DiscoPoPOpenMPRead(i64 %100, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.181, i32 0, i32 0), i32 8, i32 0, i32 0)
  %atomic-load = load atomic i64, i64* %99 monotonic, align 8, !dbg !576, !tbaa !229
  %101 = ptrtoint double* %sx5 to i64
  call void @__DiscoPoPOpenMPRead(i64 %101, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.183, i32 0, i32 0), i32 8, i32 0, i32 0)
  %102 = load double, double* %sx5, align 8, !dbg !578, !tbaa !229
  br label %atomic_cont, !dbg !576

atomic_cont:                                      ; preds = %atomic_cont, %.omp.reduction.case2
  %103 = phi i64 [ %atomic-load, %.omp.reduction.case2 ], [ %107, %atomic_cont ], !dbg !580
  %104 = bitcast i64 %103 to double, !dbg !580
  call void @llvm.dbg.value(metadata double %102, i64 0, metadata !429, metadata !172), !dbg !442
  %add79 = fadd double %104, %102, !dbg !581
  %105 = bitcast double %add79 to i64, !dbg !580
  %106 = cmpxchg i64* %99, i64 %103, i64 %105 monotonic monotonic, !dbg !580
  %107 = extractvalue { i64, i1 } %106, 0, !dbg !580
  %108 = extractvalue { i64, i1 } %106, 1, !dbg !580
  br i1 %108, label %atomic_exit, label %atomic_cont, !dbg !580

atomic_exit:                                      ; preds = %atomic_cont
  %109 = bitcast double* %sy to i64*, !dbg !582
  %110 = ptrtoint i64* %109 to i64
  call void @__DiscoPoPOpenMPRead(i64 %110, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.185, i32 0, i32 0), i32 8, i32 0, i32 0)
  %atomic-load80 = load atomic i64, i64* %109 monotonic, align 8, !dbg !582, !tbaa !229
  %111 = ptrtoint double* %sy6 to i64
  call void @__DiscoPoPOpenMPRead(i64 %111, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.187, i32 0, i32 0), i32 8, i32 0, i32 0)
  %112 = load double, double* %sy6, align 8, !dbg !584, !tbaa !229
  br label %atomic_cont81, !dbg !582

atomic_cont81:                                    ; preds = %atomic_cont81, %atomic_exit
  %113 = phi i64 [ %atomic-load80, %atomic_exit ], [ %117, %atomic_cont81 ], !dbg !586
  %114 = bitcast i64 %113 to double, !dbg !586
  call void @llvm.dbg.value(metadata double %112, i64 0, metadata !430, metadata !172), !dbg !442
  %add84 = fadd double %114, %112, !dbg !587
  %115 = bitcast double %add84 to i64, !dbg !586
  %116 = cmpxchg i64* %109, i64 %113, i64 %115 monotonic monotonic, !dbg !586
  %117 = extractvalue { i64, i1 } %116, 0, !dbg !586
  %118 = extractvalue { i64, i1 } %116, 1, !dbg !586
  br i1 %118, label %.omp.reduction.default.loopexit, label %atomic_cont81, !dbg !586

.omp.reduction.default.loopexit:                  ; preds = %atomic_cont81
  br label %.omp.reduction.default, !dbg !588

.omp.reduction.default:                           ; preds = %.omp.reduction.default.loopexit, %.omp.reduction.case1, %omp.dispatch.end
  call void @llvm.lifetime.end(i64 8, i8* %15) #4, !dbg !588
  call void @llvm.lifetime.end(i64 8, i8* %13) #4, !dbg !590
  %119 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @qq, i64 0, i64 0) to i64
  call void @__DiscoPoPOpenMPRead(i64 %119, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.189, i32 0, i32 0), i32 16, i32 0, i32 0)
  %.pre = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @qq, i64 0, i64 0), align 16, !dbg !592, !tbaa !229
  br label %omp.precond.end, !dbg !588

omp.precond.end:                                  ; preds = %entry.omp.precond.end_crit_edge, %.omp.reduction.default
  %.pre-phi165 = phi i8* [ %.pre164, %entry.omp.precond.end_crit_edge ], [ %5, %.omp.reduction.default ], !dbg !445
  %.pre-phi163 = phi i8* [ %.pre162, %entry.omp.precond.end_crit_edge ], [ %7, %.omp.reduction.default ], !dbg !445
  %.pre-phi161 = phi i8* [ %.pre160, %entry.omp.precond.end_crit_edge ], [ %9, %.omp.reduction.default ], !dbg !445
  %.pre-phi = phi i8* [ %.pre159, %entry.omp.precond.end_crit_edge ], [ %11, %.omp.reduction.default ], !dbg !445
  %120 = phi double [ 0.000000e+00, %entry.omp.precond.end_crit_edge ], [ %.pre, %.omp.reduction.default ], !dbg !592
  call void @llvm.lifetime.end(i64 4, i8* %.pre-phi) #4, !dbg !445
  call void @llvm.lifetime.end(i64 4, i8* %.pre-phi161) #4, !dbg !597
  call void @llvm.lifetime.end(i64 4, i8* %.pre-phi163) #4, !dbg !599
  call void @llvm.lifetime.end(i64 4, i8* %.pre-phi165) #4, !dbg !601
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !415, metadata !172), !dbg !431
  %121 = ptrtoint i64* bitcast ([10 x double]* @q to i64*) to i64
  call void @__DiscoPoPOpenMPRead(i64 %121, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.191, i32 0, i32 0), i32 16, i32 0, i32 0)
  %atomic-load94 = load atomic i64, i64* bitcast ([10 x double]* @q to i64*) monotonic, align 16, !dbg !603, !tbaa !229
  br label %atomic_cont95, !dbg !603

atomic_cont95:                                    ; preds = %atomic_cont95, %omp.precond.end
  %122 = phi i64 [ %atomic-load94, %omp.precond.end ], [ %126, %atomic_cont95 ], !dbg !604
  %123 = bitcast i64 %122 to double, !dbg !604
  %add97 = fadd double %120, %123, !dbg !606
  %124 = bitcast double %add97 to i64, !dbg !604
  %125 = cmpxchg i64* bitcast ([10 x double]* @q to i64*), i64 %122, i64 %124 monotonic monotonic, !dbg !604
  %126 = extractvalue { i64, i1 } %125, 0, !dbg !604
  %127 = extractvalue { i64, i1 } %125, 1, !dbg !604
  br i1 %127, label %for.inc99, label %atomic_cont95, !dbg !604

for.inc99:                                        ; preds = %atomic_cont95
  %128 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @qq, i64 0, i64 1) to i64
  call void @__DiscoPoPOpenMPRead(i64 %128, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.193, i32 0, i32 0), i32 8, i32 0, i32 0)
  %129 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @qq, i64 0, i64 1), align 8, !dbg !592, !tbaa !229
  %130 = ptrtoint i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 1) to i64*) to i64
  call void @__DiscoPoPOpenMPRead(i64 %130, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.195, i32 0, i32 0), i32 8, i32 0, i32 0)
  %atomic-load94.1 = load atomic i64, i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 1) to i64*) monotonic, align 8, !dbg !603, !tbaa !229
  br label %atomic_cont95.1, !dbg !603

atomic_cont95.1:                                  ; preds = %atomic_cont95.1, %for.inc99
  %131 = phi i64 [ %atomic-load94.1, %for.inc99 ], [ %135, %atomic_cont95.1 ], !dbg !604
  %132 = bitcast i64 %131 to double, !dbg !604
  %add97.1 = fadd double %129, %132, !dbg !606
  %133 = bitcast double %add97.1 to i64, !dbg !604
  %134 = cmpxchg i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 1) to i64*), i64 %131, i64 %133 monotonic monotonic, !dbg !604
  %135 = extractvalue { i64, i1 } %134, 0, !dbg !604
  %136 = extractvalue { i64, i1 } %134, 1, !dbg !604
  br i1 %136, label %for.inc99.1, label %atomic_cont95.1, !dbg !604

for.inc99.1:                                      ; preds = %atomic_cont95.1
  %137 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @qq, i64 0, i64 2) to i64
  call void @__DiscoPoPOpenMPRead(i64 %137, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.197, i32 0, i32 0), i32 16, i32 0, i32 0)
  %138 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @qq, i64 0, i64 2), align 16, !dbg !592, !tbaa !229
  %139 = ptrtoint i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 2) to i64*) to i64
  call void @__DiscoPoPOpenMPRead(i64 %139, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.199, i32 0, i32 0), i32 16, i32 0, i32 0)
  %atomic-load94.2 = load atomic i64, i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 2) to i64*) monotonic, align 16, !dbg !603, !tbaa !229
  br label %atomic_cont95.2, !dbg !603

atomic_cont95.2:                                  ; preds = %atomic_cont95.2, %for.inc99.1
  %140 = phi i64 [ %atomic-load94.2, %for.inc99.1 ], [ %144, %atomic_cont95.2 ], !dbg !604
  %141 = bitcast i64 %140 to double, !dbg !604
  %add97.2 = fadd double %138, %141, !dbg !606
  %142 = bitcast double %add97.2 to i64, !dbg !604
  %143 = cmpxchg i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 2) to i64*), i64 %140, i64 %142 monotonic monotonic, !dbg !604
  %144 = extractvalue { i64, i1 } %143, 0, !dbg !604
  %145 = extractvalue { i64, i1 } %143, 1, !dbg !604
  br i1 %145, label %for.inc99.2, label %atomic_cont95.2, !dbg !604

for.inc99.2:                                      ; preds = %atomic_cont95.2
  %146 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @qq, i64 0, i64 3) to i64
  call void @__DiscoPoPOpenMPRead(i64 %146, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.201, i32 0, i32 0), i32 8, i32 0, i32 0)
  %147 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @qq, i64 0, i64 3), align 8, !dbg !592, !tbaa !229
  %148 = ptrtoint i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 3) to i64*) to i64
  call void @__DiscoPoPOpenMPRead(i64 %148, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.203, i32 0, i32 0), i32 8, i32 0, i32 0)
  %atomic-load94.3 = load atomic i64, i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 3) to i64*) monotonic, align 8, !dbg !603, !tbaa !229
  br label %atomic_cont95.3, !dbg !603

atomic_cont95.3:                                  ; preds = %atomic_cont95.3, %for.inc99.2
  %149 = phi i64 [ %atomic-load94.3, %for.inc99.2 ], [ %153, %atomic_cont95.3 ], !dbg !604
  %150 = bitcast i64 %149 to double, !dbg !604
  %add97.3 = fadd double %147, %150, !dbg !606
  %151 = bitcast double %add97.3 to i64, !dbg !604
  %152 = cmpxchg i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 3) to i64*), i64 %149, i64 %151 monotonic monotonic, !dbg !604
  %153 = extractvalue { i64, i1 } %152, 0, !dbg !604
  %154 = extractvalue { i64, i1 } %152, 1, !dbg !604
  br i1 %154, label %for.inc99.3, label %atomic_cont95.3, !dbg !604

for.inc99.3:                                      ; preds = %atomic_cont95.3
  %155 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @qq, i64 0, i64 4) to i64
  call void @__DiscoPoPOpenMPRead(i64 %155, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.205, i32 0, i32 0), i32 16, i32 0, i32 0)
  %156 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @qq, i64 0, i64 4), align 16, !dbg !592, !tbaa !229
  %157 = ptrtoint i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 4) to i64*) to i64
  call void @__DiscoPoPOpenMPRead(i64 %157, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.207, i32 0, i32 0), i32 16, i32 0, i32 0)
  %atomic-load94.4 = load atomic i64, i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 4) to i64*) monotonic, align 16, !dbg !603, !tbaa !229
  br label %atomic_cont95.4, !dbg !603

atomic_cont95.4:                                  ; preds = %atomic_cont95.4, %for.inc99.3
  %158 = phi i64 [ %atomic-load94.4, %for.inc99.3 ], [ %162, %atomic_cont95.4 ], !dbg !604
  %159 = bitcast i64 %158 to double, !dbg !604
  %add97.4 = fadd double %156, %159, !dbg !606
  %160 = bitcast double %add97.4 to i64, !dbg !604
  %161 = cmpxchg i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 4) to i64*), i64 %158, i64 %160 monotonic monotonic, !dbg !604
  %162 = extractvalue { i64, i1 } %161, 0, !dbg !604
  %163 = extractvalue { i64, i1 } %161, 1, !dbg !604
  br i1 %163, label %for.inc99.4, label %atomic_cont95.4, !dbg !604

for.inc99.4:                                      ; preds = %atomic_cont95.4
  %164 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @qq, i64 0, i64 5) to i64
  call void @__DiscoPoPOpenMPRead(i64 %164, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.209, i32 0, i32 0), i32 8, i32 0, i32 0)
  %165 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @qq, i64 0, i64 5), align 8, !dbg !592, !tbaa !229
  %166 = ptrtoint i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 5) to i64*) to i64
  call void @__DiscoPoPOpenMPRead(i64 %166, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.211, i32 0, i32 0), i32 8, i32 0, i32 0)
  %atomic-load94.5 = load atomic i64, i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 5) to i64*) monotonic, align 8, !dbg !603, !tbaa !229
  br label %atomic_cont95.5, !dbg !603

atomic_cont95.5:                                  ; preds = %atomic_cont95.5, %for.inc99.4
  %167 = phi i64 [ %atomic-load94.5, %for.inc99.4 ], [ %171, %atomic_cont95.5 ], !dbg !604
  %168 = bitcast i64 %167 to double, !dbg !604
  %add97.5 = fadd double %165, %168, !dbg !606
  %169 = bitcast double %add97.5 to i64, !dbg !604
  %170 = cmpxchg i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 5) to i64*), i64 %167, i64 %169 monotonic monotonic, !dbg !604
  %171 = extractvalue { i64, i1 } %170, 0, !dbg !604
  %172 = extractvalue { i64, i1 } %170, 1, !dbg !604
  br i1 %172, label %for.inc99.5, label %atomic_cont95.5, !dbg !604

for.inc99.5:                                      ; preds = %atomic_cont95.5
  %173 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @qq, i64 0, i64 6) to i64
  call void @__DiscoPoPOpenMPRead(i64 %173, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.213, i32 0, i32 0), i32 16, i32 0, i32 0)
  %174 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @qq, i64 0, i64 6), align 16, !dbg !592, !tbaa !229
  %175 = ptrtoint i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 6) to i64*) to i64
  call void @__DiscoPoPOpenMPRead(i64 %175, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.215, i32 0, i32 0), i32 16, i32 0, i32 0)
  %atomic-load94.6 = load atomic i64, i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 6) to i64*) monotonic, align 16, !dbg !603, !tbaa !229
  br label %atomic_cont95.6, !dbg !603

atomic_cont95.6:                                  ; preds = %atomic_cont95.6, %for.inc99.5
  %176 = phi i64 [ %atomic-load94.6, %for.inc99.5 ], [ %180, %atomic_cont95.6 ], !dbg !604
  %177 = bitcast i64 %176 to double, !dbg !604
  %add97.6 = fadd double %174, %177, !dbg !606
  %178 = bitcast double %add97.6 to i64, !dbg !604
  %179 = cmpxchg i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 6) to i64*), i64 %176, i64 %178 monotonic monotonic, !dbg !604
  %180 = extractvalue { i64, i1 } %179, 0, !dbg !604
  %181 = extractvalue { i64, i1 } %179, 1, !dbg !604
  br i1 %181, label %for.inc99.6, label %atomic_cont95.6, !dbg !604

for.inc99.6:                                      ; preds = %atomic_cont95.6
  %182 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @qq, i64 0, i64 7) to i64
  call void @__DiscoPoPOpenMPRead(i64 %182, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.217, i32 0, i32 0), i32 8, i32 0, i32 0)
  %183 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @qq, i64 0, i64 7), align 8, !dbg !592, !tbaa !229
  %184 = ptrtoint i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 7) to i64*) to i64
  call void @__DiscoPoPOpenMPRead(i64 %184, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.219, i32 0, i32 0), i32 8, i32 0, i32 0)
  %atomic-load94.7 = load atomic i64, i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 7) to i64*) monotonic, align 8, !dbg !603, !tbaa !229
  br label %atomic_cont95.7, !dbg !603

atomic_cont95.7:                                  ; preds = %atomic_cont95.7, %for.inc99.6
  %185 = phi i64 [ %atomic-load94.7, %for.inc99.6 ], [ %189, %atomic_cont95.7 ], !dbg !604
  %186 = bitcast i64 %185 to double, !dbg !604
  %add97.7 = fadd double %183, %186, !dbg !606
  %187 = bitcast double %add97.7 to i64, !dbg !604
  %188 = cmpxchg i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 7) to i64*), i64 %185, i64 %187 monotonic monotonic, !dbg !604
  %189 = extractvalue { i64, i1 } %188, 0, !dbg !604
  %190 = extractvalue { i64, i1 } %188, 1, !dbg !604
  br i1 %190, label %for.inc99.7, label %atomic_cont95.7, !dbg !604

for.inc99.7:                                      ; preds = %atomic_cont95.7
  %191 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @qq, i64 0, i64 8) to i64
  call void @__DiscoPoPOpenMPRead(i64 %191, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.221, i32 0, i32 0), i32 16, i32 0, i32 0)
  %192 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @qq, i64 0, i64 8), align 16, !dbg !592, !tbaa !229
  %193 = ptrtoint i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 8) to i64*) to i64
  call void @__DiscoPoPOpenMPRead(i64 %193, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.223, i32 0, i32 0), i32 16, i32 0, i32 0)
  %atomic-load94.8 = load atomic i64, i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 8) to i64*) monotonic, align 16, !dbg !603, !tbaa !229
  br label %atomic_cont95.8, !dbg !603

atomic_cont95.8:                                  ; preds = %atomic_cont95.8, %for.inc99.7
  %194 = phi i64 [ %atomic-load94.8, %for.inc99.7 ], [ %198, %atomic_cont95.8 ], !dbg !604
  %195 = bitcast i64 %194 to double, !dbg !604
  %add97.8 = fadd double %192, %195, !dbg !606
  %196 = bitcast double %add97.8 to i64, !dbg !604
  %197 = cmpxchg i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 8) to i64*), i64 %194, i64 %196 monotonic monotonic, !dbg !604
  %198 = extractvalue { i64, i1 } %197, 0, !dbg !604
  %199 = extractvalue { i64, i1 } %197, 1, !dbg !604
  br i1 %199, label %for.inc99.8, label %atomic_cont95.8, !dbg !604

for.inc99.8:                                      ; preds = %atomic_cont95.8
  %200 = ptrtoint double* getelementptr inbounds ([10 x double], [10 x double]* @qq, i64 0, i64 9) to i64
  call void @__DiscoPoPOpenMPRead(i64 %200, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.225, i32 0, i32 0), i32 8, i32 0, i32 0)
  %201 = load double, double* getelementptr inbounds ([10 x double], [10 x double]* @qq, i64 0, i64 9), align 8, !dbg !592, !tbaa !229
  %202 = ptrtoint i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 9) to i64*) to i64
  call void @__DiscoPoPOpenMPRead(i64 %202, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.227, i32 0, i32 0), i32 8, i32 0, i32 0)
  %atomic-load94.9 = load atomic i64, i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 9) to i64*) monotonic, align 8, !dbg !603, !tbaa !229
  br label %atomic_cont95.9, !dbg !603

atomic_cont95.9:                                  ; preds = %atomic_cont95.9, %for.inc99.8
  %203 = phi i64 [ %atomic-load94.9, %for.inc99.8 ], [ %207, %atomic_cont95.9 ], !dbg !604
  %204 = bitcast i64 %203 to double, !dbg !604
  %add97.9 = fadd double %201, %204, !dbg !606
  %205 = bitcast double %add97.9 to i64, !dbg !604
  %206 = cmpxchg i64* bitcast (double* getelementptr inbounds ([10 x double], [10 x double]* @q, i64 0, i64 9) to i64*), i64 %203, i64 %205 monotonic monotonic, !dbg !604
  %207 = extractvalue { i64, i1 } %206, 0, !dbg !604
  %208 = extractvalue { i64, i1 } %206, 1, !dbg !604
  br i1 %208, label %for.inc99.9, label %atomic_cont95.9, !dbg !604

for.inc99.9:                                      ; preds = %atomic_cont95.9
  call void @llvm.lifetime.end(i64 8, i8* %2) #4, !dbg !607
  call void @llvm.lifetime.end(i64 8, i8* %1) #4, !dbg !609
  ret void, !dbg !611
}

; Function Attrs: nounwind readnone
declare double @fabs(double) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

declare void @__kmpc_dispatch_init_4(%ident_t*, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @__kmpc_dispatch_next_4(%ident_t*, i32, i32*, i32*, i32*, i32*) local_unnamed_addr

; Function Attrs: nounwind readnone
declare <2 x double> @llvm.fabs.v2f64(<2 x double>) #2

; Function Attrs: nounwind uwtable
define internal void @.omp.reduction.reduction_func(i8* nocapture readonly, i8* nocapture readonly) #0 !dbg !612 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !615, metadata !172), !dbg !617
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !616, metadata !172), !dbg !617
  %2 = bitcast i8* %1 to double**
  %3 = ptrtoint double** %2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.228, i32 0, i32 0), i32 8, i32 0, i32 0)
  %4 = load double*, double** %2, align 8
  %5 = bitcast i8* %0 to double**
  %6 = ptrtoint double** %5 to i64
  call void @__DiscoPoPOpenMPRead(i64 %6, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.229, i32 0, i32 0), i32 8, i32 0, i32 0)
  %7 = load double*, double** %5, align 8
  %8 = getelementptr inbounds i8, i8* %1, i64 8
  %9 = bitcast i8* %8 to double**
  %10 = ptrtoint double** %9 to i64
  call void @__DiscoPoPOpenMPRead(i64 %10, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.230, i32 0, i32 0), i32 8, i32 0, i32 0)
  %11 = load double*, double** %9, align 8
  %12 = getelementptr inbounds i8, i8* %0, i64 8
  %13 = bitcast i8* %12 to double**
  %14 = ptrtoint double** %13 to i64
  call void @__DiscoPoPOpenMPRead(i64 %14, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.231, i32 0, i32 0), i32 8, i32 0, i32 0)
  %15 = load double*, double** %13, align 8
  %16 = ptrtoint double* %7 to i64
  call void @__DiscoPoPOpenMPRead(i64 %16, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @.str.233, i32 0, i32 0), i32 8, i32 0, i32 0)
  %17 = load double, double* %7, align 8, !dbg !618, !tbaa !229
  %18 = ptrtoint double* %4 to i64
  call void @__DiscoPoPOpenMPRead(i64 %18, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @.str.235, i32 0, i32 0), i32 8, i32 0, i32 0)
  %19 = load double, double* %4, align 8, !dbg !618, !tbaa !229
  %add = fadd double %17, %19, !dbg !619
  %20 = ptrtoint double* %7 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %20)
  store double %add, double* %7, align 8, !dbg !619, !tbaa !229
  %21 = ptrtoint double* %15 to i64
  call void @__DiscoPoPOpenMPRead(i64 %21, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @.str.237, i32 0, i32 0), i32 8, i32 0, i32 0)
  %22 = load double, double* %15, align 8, !dbg !620, !tbaa !229
  %23 = ptrtoint double* %11 to i64
  call void @__DiscoPoPOpenMPRead(i64 %23, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @.str.239, i32 0, i32 0), i32 8, i32 0, i32 0)
  %24 = load double, double* %11, align 8, !dbg !620, !tbaa !229
  %add2 = fadd double %22, %24, !dbg !619
  %25 = ptrtoint double* %15 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %25)
  store double %add2, double* %15, align 8, !dbg !619, !tbaa !229
  ret void, !dbg !620
}

declare i32 @__kmpc_reduce_nowait(%ident_t*, i32, i32, i64, i8*, void (i8*, i8*)*, [8 x i32]*) local_unnamed_addr

declare void @__kmpc_end_reduce_nowait(%ident_t*, i32, [8 x i32]*) local_unnamed_addr

; Function Attrs: nounwind uwtable
define void @print_results(i8* %name, i8 signext %class, i32 %n1, i32 %n2, i32 %n3, i32 %niter, double %t, double %mops, i8* %optype, i32 %verified, i8* %npbversion, i8* %compiletime, i8* %cs1, i8* %cs2, i8* %cs3, i8* %cs4, i8* %cs5, i8* %cs6, i8* %cs7) local_unnamed_addr #0 !dbg !621 {
entry:
  %size = alloca [16 x i8], align 16
  %num_threads = alloca i32, align 4
  %.kmpc_loc.addr = alloca %ident_t, align 8
  %0 = bitcast %ident_t* %.kmpc_loc.addr to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast (%ident_t* @6 to i8*), i64 16, i32 8, i1 false)
  tail call void @llvm.dbg.value(metadata i8* %name, i64 0, metadata !627, metadata !172), !dbg !650
  tail call void @llvm.dbg.value(metadata i8 %class, i64 0, metadata !628, metadata !172), !dbg !651
  tail call void @llvm.dbg.value(metadata i32 %n1, i64 0, metadata !629, metadata !172), !dbg !652
  tail call void @llvm.dbg.value(metadata i32 %n2, i64 0, metadata !630, metadata !172), !dbg !653
  tail call void @llvm.dbg.value(metadata i32 %n3, i64 0, metadata !631, metadata !172), !dbg !654
  tail call void @llvm.dbg.value(metadata i32 %niter, i64 0, metadata !632, metadata !172), !dbg !655
  tail call void @llvm.dbg.value(metadata double %t, i64 0, metadata !633, metadata !172), !dbg !656
  tail call void @llvm.dbg.value(metadata double %mops, i64 0, metadata !634, metadata !172), !dbg !657
  tail call void @llvm.dbg.value(metadata i8* %optype, i64 0, metadata !635, metadata !172), !dbg !658
  tail call void @llvm.dbg.value(metadata i32 %verified, i64 0, metadata !636, metadata !172), !dbg !659
  tail call void @llvm.dbg.value(metadata i8* %npbversion, i64 0, metadata !637, metadata !172), !dbg !660
  tail call void @llvm.dbg.value(metadata i8* %compiletime, i64 0, metadata !638, metadata !172), !dbg !661
  tail call void @llvm.dbg.value(metadata i8* %cs1, i64 0, metadata !639, metadata !172), !dbg !662
  tail call void @llvm.dbg.value(metadata i8* %cs2, i64 0, metadata !640, metadata !172), !dbg !663
  tail call void @llvm.dbg.value(metadata i8* %cs3, i64 0, metadata !641, metadata !172), !dbg !664
  tail call void @llvm.dbg.value(metadata i8* %cs4, i64 0, metadata !642, metadata !172), !dbg !665
  tail call void @llvm.dbg.value(metadata i8* %cs5, i64 0, metadata !643, metadata !172), !dbg !666
  tail call void @llvm.dbg.value(metadata i8* %cs6, i64 0, metadata !644, metadata !172), !dbg !667
  tail call void @llvm.dbg.value(metadata i8* %cs7, i64 0, metadata !645, metadata !172), !dbg !668
  %1 = getelementptr inbounds [16 x i8], [16 x i8]* %size, i64 0, i64 0, !dbg !669
  call void @llvm.lifetime.start(i64 16, i8* %1) #4, !dbg !669
  tail call void @llvm.dbg.declare(metadata [16 x i8]* %size, metadata !646, metadata !172), !dbg !670
  %2 = bitcast i32* %num_threads to i8*, !dbg !671
  call void @llvm.lifetime.start(i64 4, i8* %2) #4, !dbg !671
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !649, metadata !172), !dbg !672
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !648, metadata !172), !dbg !673
  %3 = ptrtoint i32* %num_threads to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store i32 1, i32* %num_threads, align 4, !dbg !674, !tbaa !222
  %call = tail call i32 @omp_get_max_threads() #4, !dbg !675
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !649, metadata !172), !dbg !672
  %4 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i64 0, i32 4, !dbg !676
  %5 = ptrtoint i8** %4 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @7, i64 0, i64 0), i8** %4, align 8, !dbg !676
  tail call void @llvm.dbg.value(metadata i32* %num_threads, i64 0, metadata !648, metadata !239), !dbg !673
  call void @__DiscoPoPOpenMPBeforeCall(i8* getelementptr inbounds ([106 x i8], [106 x i8]* @.str.241, i32 0, i32 0))
  call void (%ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%ident_t* nonnull %.kmpc_loc.addr, i32 1, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i32*)* @.omp_outlined..3 to void (i32*, i32*, ...)*), i32* nonnull %num_threads) #4, !dbg !676
  call void @__DiscoPoPOpenMPAfterCall()
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.4, i64 0, i64 0), i8* %name), !dbg !677
  %conv = sext i8 %class to i32, !dbg !678
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.5, i64 0, i64 0), i32 %conv), !dbg !679
  %6 = or i32 %n3, %n2, !dbg !680
  %7 = icmp eq i32 %6, 0, !dbg !680
  br i1 %7, label %if.then, label %if.else31, !dbg !680

if.then:                                          ; preds = %entry
  %8 = ptrtoint i8* %name to i64
  call void @__DiscoPoPOpenMPRead(i64 %8, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.243, i32 0, i32 0), i32 1, i32 0, i32 0)
  %9 = load i8, i8* %name, align 1, !dbg !682, !tbaa !199
  %cmp7 = icmp eq i8 %9, 69, !dbg !685
  br i1 %cmp7, label %land.lhs.true9, label %if.else, !dbg !686

land.lhs.true9:                                   ; preds = %if.then
  %arrayidx10 = getelementptr inbounds i8, i8* %name, i64 1, !dbg !687
  %10 = ptrtoint i8* %arrayidx10 to i64
  call void @__DiscoPoPOpenMPRead(i64 %10, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.245, i32 0, i32 0), i32 1, i32 0, i32 0)
  %11 = load i8, i8* %arrayidx10, align 1, !dbg !687, !tbaa !199
  %cmp12 = icmp eq i8 %11, 80, !dbg !689
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !690

if.then14:                                        ; preds = %land.lhs.true9
  %12 = call double @ldexp(double 1.000000e+00, i32 %n1) #4, !dbg !691
  %call17 = call i32 (i8*, i8*, ...) @sprintf(i8* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), double %12) #4, !dbg !693
  call void @llvm.dbg.value(metadata i32 14, i64 0, metadata !647, metadata !172), !dbg !695
  %arrayidx18 = getelementptr inbounds [16 x i8], [16 x i8]* %size, i64 0, i64 14, !dbg !696
  %13 = ptrtoint i8* %arrayidx18 to i64
  call void @__DiscoPoPOpenMPRead(i64 %13, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.247, i32 0, i32 0), i32 2, i32 0, i32 0)
  %14 = load i8, i8* %arrayidx18, align 2, !dbg !696, !tbaa !199
  %cmp20 = icmp eq i8 %14, 46, !dbg !698
  br i1 %cmp20, label %if.then22, label %if.end, !dbg !699

if.then22:                                        ; preds = %if.then14
  %15 = ptrtoint i8* %arrayidx18 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %15)
  store i8 32, i8* %arrayidx18, align 2, !dbg !700, !tbaa !199
  call void @llvm.dbg.value(metadata i32 13, i64 0, metadata !647, metadata !172), !dbg !695
  br label %if.end, !dbg !702

if.end:                                           ; preds = %if.then22, %if.then14
  %j.0 = phi i64 [ 14, %if.then22 ], [ 15, %if.then14 ]
  %arrayidx26 = getelementptr inbounds [16 x i8], [16 x i8]* %size, i64 0, i64 %j.0, !dbg !703
  %16 = ptrtoint i8* %arrayidx26 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %16)
  store i8 0, i8* %arrayidx26, align 1, !dbg !704, !tbaa !199
  %call28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.6, i64 0, i64 0), i8* nonnull %1), !dbg !705
  br label %if.end33, !dbg !706

if.else:                                          ; preds = %land.lhs.true9, %if.then
  %call29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5.7, i64 0, i64 0), i32 %n1), !dbg !707
  br label %if.end33

if.else31:                                        ; preds = %entry
  %call32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6.8, i64 0, i64 0), i32 %n1, i32 %n2, i32 %n3), !dbg !709
  br label %if.end33

if.end33:                                         ; preds = %if.end, %if.else, %if.else31
  %call34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i64 0, i64 0), i32 %niter), !dbg !711
  %call35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8, i64 0, i64 0), double %t), !dbg !712
  %17 = ptrtoint i32* %num_threads to i64
  call void @__DiscoPoPOpenMPRead(i64 %17, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.249, i32 0, i32 0), i32 4, i32 0, i32 0)
  %18 = load i32, i32* %num_threads, align 4, !dbg !713, !tbaa !222
  call void @llvm.dbg.value(metadata i32 %18, i64 0, metadata !648, metadata !172), !dbg !673
  %call36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0), i32 %18), !dbg !714
  %call37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10.9, i64 0, i64 0), i32 %call), !dbg !715
  %19 = ptrtoint i32* %num_threads to i64
  call void @__DiscoPoPOpenMPRead(i64 %19, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.251, i32 0, i32 0), i32 4, i32 0, i32 0)
  %20 = load i32, i32* %num_threads, align 4, !dbg !716, !tbaa !222
  call void @llvm.dbg.value(metadata i32 %20, i64 0, metadata !648, metadata !172), !dbg !673
  %cmp38 = icmp eq i32 %20, %call, !dbg !718
  br i1 %cmp38, label %if.end42, label %if.then40, !dbg !719

if.then40:                                        ; preds = %if.end33
  %puts75 = call i32 @puts(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @str.28, i64 0, i64 0)), !dbg !720
  br label %if.end42, !dbg !720

if.end42:                                         ; preds = %if.end33, %if.then40
  %call43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.12.10, i64 0, i64 0), double %mops), !dbg !721
  %21 = ptrtoint i32* %num_threads to i64
  call void @__DiscoPoPOpenMPRead(i64 %21, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.253, i32 0, i32 0), i32 4, i32 0, i32 0)
  %22 = load i32, i32* %num_threads, align 4, !dbg !722, !tbaa !222
  call void @llvm.dbg.value(metadata i32 %22, i64 0, metadata !648, metadata !172), !dbg !673
  %conv44 = sitofp i32 %22 to double, !dbg !723
  %div = fdiv double %mops, %conv44, !dbg !724
  %call45 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.13.11, i64 0, i64 0), double %div), !dbg !725
  %call46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i64 0, i64 0), i8* %optype), !dbg !726
  %tobool = icmp eq i32 %verified, 0, !dbg !727
  br i1 %tobool, label %if.else49, label %if.then47, !dbg !729

if.then47:                                        ; preds = %if.end42
  %call48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15.12, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16.13, i64 0, i64 0)), !dbg !730
  br label %if.end51, !dbg !730

if.else49:                                        ; preds = %if.end42
  %call50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15.12, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17.14, i64 0, i64 0)), !dbg !731
  br label %if.end51

if.end51:                                         ; preds = %if.else49, %if.then47
  %call52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.18.15, i64 0, i64 0), i8* %npbversion), !dbg !732
  %call53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.19.16, i64 0, i64 0), i8* %compiletime), !dbg !733
  %call54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.20.17, i64 0, i64 0), i8* %cs1), !dbg !734
  %call55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21.18, i64 0, i64 0), i8* %cs2), !dbg !735
  %call56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22.19, i64 0, i64 0), i8* %cs3), !dbg !736
  %call57 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23.20, i64 0, i64 0), i8* %cs4), !dbg !737
  %call58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24.21, i64 0, i64 0), i8* %cs5), !dbg !738
  %call59 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25.22, i64 0, i64 0), i8* %cs6), !dbg !739
  %call60 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26, i64 0, i64 0), i8* %cs7), !dbg !740
  %puts = call i32 @puts(i8* getelementptr inbounds ([194 x i8], [194 x i8]* @str.23, i64 0, i64 0)), !dbg !741
  call void @llvm.lifetime.end(i64 4, i8* nonnull %2) #4, !dbg !742
  call void @llvm.lifetime.end(i64 16, i8* %1) #4, !dbg !744
  ret void, !dbg !746
}

; Function Attrs: nounwind uwtable
define internal void @.omp_outlined..3(i32* noalias nocapture readonly %.global_tid., i32* noalias nocapture readnone %.bound_tid., i32* nocapture dereferenceable(4) %num_threads) #0 !dbg !747 {
entry:
  %.kmpc_loc.addr = alloca %ident_t, align 8
  %0 = bitcast %ident_t* %.kmpc_loc.addr to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast (%ident_t* @6 to i8*), i64 16, i32 8, i1 false)
  tail call void @llvm.dbg.value(metadata i32* %.global_tid., i64 0, metadata !751, metadata !172), !dbg !754
  tail call void @llvm.dbg.value(metadata i32* %.bound_tid., i64 0, metadata !752, metadata !172), !dbg !754
  tail call void @llvm.dbg.value(metadata i32* %num_threads, i64 0, metadata !753, metadata !172), !dbg !754
  %1 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i64 0, i32 4, !dbg !755
  %2 = ptrtoint i8** %1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @8, i64 0, i64 0), i8** %1, align 8, !dbg !755
  %3 = ptrtoint i32* %.global_tid. to i64
  call void @__DiscoPoPOpenMPRead(i64 %3, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.255, i32 0, i32 0), i32 4, i32 0, i32 0)
  %4 = load i32, i32* %.global_tid., align 4, !dbg !755, !tbaa !222
  call void @__DiscoPoPOpenMPBeforeCall(i8* getelementptr inbounds ([103 x i8], [103 x i8]* @.str.257, i32 0, i32 0))
  %5 = call i32 @__kmpc_master(%ident_t* nonnull %.kmpc_loc.addr, i32 %4) #4, !dbg !755
  call void @__DiscoPoPOpenMPAfterCall()
  %6 = icmp eq i32 %5, 0, !dbg !755
  br i1 %6, label %omp_if.end, label %omp_if.then, !dbg !755

omp_if.then:                                      ; preds = %entry
  %call = call i32 @omp_get_num_threads() #4, !dbg !758
  %7 = ptrtoint i32* %num_threads to i64
  call void @__DiscoPoPOpenMPWrite(i64 %7)
  store i32 %call, i32* %num_threads, align 4, !dbg !760, !tbaa !222
  call void @__DiscoPoPOpenMPBeforeCall(i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.259, i32 0, i32 0))
  call void @__kmpc_end_master(%ident_t* nonnull %.kmpc_loc.addr, i32 %4) #4, !dbg !761
  call void @__DiscoPoPOpenMPAfterCall()
  br label %omp_if.end, !dbg !763

omp_if.end:                                       ; preds = %entry, %omp_if.then
  ret void, !dbg !764
}

declare double @ldexp(double, i32)

declare i32 @__kmpc_master(%ident_t*, i32) local_unnamed_addr

declare i32 @omp_get_num_threads() local_unnamed_addr #5

declare void @__kmpc_end_master(%ident_t*, i32) local_unnamed_addr

; Function Attrs: nounwind uwtable
define double @randlc(double* nocapture %x, double %a) local_unnamed_addr #0 !dbg !765 {
entry:
  tail call void @llvm.dbg.value(metadata double* %x, i64 0, metadata !770, metadata !172), !dbg !787
  tail call void @llvm.dbg.value(metadata double %a, i64 0, metadata !771, metadata !172), !dbg !788
  tail call void @llvm.dbg.value(metadata double 0x3E80000000000000, i64 0, metadata !772, metadata !172), !dbg !789
  tail call void @llvm.dbg.value(metadata double 0x3D10000000000000, i64 0, metadata !774, metadata !172), !dbg !790
  tail call void @llvm.dbg.value(metadata double 8.388608e+06, i64 0, metadata !775, metadata !172), !dbg !791
  tail call void @llvm.dbg.value(metadata double 0x42D0000000000000, i64 0, metadata !776, metadata !172), !dbg !792
  %mul = fmul double %a, 0x3E80000000000000, !dbg !793
  tail call void @llvm.dbg.value(metadata double %mul, i64 0, metadata !777, metadata !172), !dbg !794
  %conv = fptosi double %mul to i32, !dbg !795
  %conv1 = sitofp i32 %conv to double, !dbg !795
  tail call void @llvm.dbg.value(metadata double %conv1, i64 0, metadata !781, metadata !172), !dbg !796
  %mul2 = fmul double %conv1, 8.388608e+06, !dbg !797
  %sub = fsub double %a, %mul2, !dbg !798
  tail call void @llvm.dbg.value(metadata double %sub, i64 0, metadata !782, metadata !172), !dbg !799
  %0 = ptrtoint double* %x to i64
  call void @__DiscoPoPOpenMPRead(i64 %0, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.261, i32 0, i32 0), i32 8, i32 0, i32 0)
  %1 = load double, double* %x, align 8, !dbg !800, !tbaa !229
  %mul3 = fmul double %1, 0x3E80000000000000, !dbg !801
  tail call void @llvm.dbg.value(metadata double %mul3, i64 0, metadata !777, metadata !172), !dbg !794
  %conv4 = fptosi double %mul3 to i32, !dbg !802
  %conv5 = sitofp i32 %conv4 to double, !dbg !802
  tail call void @llvm.dbg.value(metadata double %conv5, i64 0, metadata !783, metadata !172), !dbg !803
  %mul6 = fmul double %conv5, 8.388608e+06, !dbg !804
  %sub7 = fsub double %1, %mul6, !dbg !805
  tail call void @llvm.dbg.value(metadata double %sub7, i64 0, metadata !784, metadata !172), !dbg !806
  %mul8 = fmul double %conv1, %sub7, !dbg !807
  %mul9 = fmul double %sub, %conv5, !dbg !808
  %add = fadd double %mul9, %mul8, !dbg !809
  tail call void @llvm.dbg.value(metadata double %add, i64 0, metadata !777, metadata !172), !dbg !794
  %mul10 = fmul double %add, 0x3E80000000000000, !dbg !810
  %conv11 = fptosi double %mul10 to i32, !dbg !811
  %conv12 = sitofp i32 %conv11 to double, !dbg !811
  tail call void @llvm.dbg.value(metadata double %conv12, i64 0, metadata !778, metadata !172), !dbg !812
  %mul13 = fmul double %conv12, 8.388608e+06, !dbg !813
  %sub14 = fsub double %add, %mul13, !dbg !814
  tail call void @llvm.dbg.value(metadata double %sub14, i64 0, metadata !785, metadata !172), !dbg !815
  %mul15 = fmul double %sub14, 8.388608e+06, !dbg !816
  %mul16 = fmul double %sub, %sub7, !dbg !817
  %add17 = fadd double %mul16, %mul15, !dbg !818
  tail call void @llvm.dbg.value(metadata double %add17, i64 0, metadata !779, metadata !172), !dbg !819
  %mul18 = fmul double %add17, 0x3D10000000000000, !dbg !820
  %conv19 = fptosi double %mul18 to i32, !dbg !821
  %conv20 = sitofp i32 %conv19 to double, !dbg !821
  tail call void @llvm.dbg.value(metadata double %conv20, i64 0, metadata !780, metadata !172), !dbg !822
  %mul21 = fmul double %conv20, 0x42D0000000000000, !dbg !823
  %sub22 = fsub double %add17, %mul21, !dbg !824
  %2 = ptrtoint double* %x to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store double %sub22, double* %x, align 8, !dbg !825, !tbaa !229
  %mul23 = fmul double %sub22, 0x3D10000000000000, !dbg !826
  tail call void @llvm.dbg.value(metadata double %mul23, i64 0, metadata !786, metadata !172), !dbg !827
  ret double %mul23, !dbg !828
}

; Function Attrs: nounwind uwtable
define void @vranlc(i32 %n, double* nocapture %x, double %a, double* nocapture %y) local_unnamed_addr #0 !dbg !829 {
entry:
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !833, metadata !172), !dbg !851
  tail call void @llvm.dbg.value(metadata double* %x, i64 0, metadata !834, metadata !172), !dbg !852
  tail call void @llvm.dbg.value(metadata double %a, i64 0, metadata !835, metadata !172), !dbg !853
  tail call void @llvm.dbg.value(metadata double* %y, i64 0, metadata !836, metadata !172), !dbg !854
  tail call void @llvm.dbg.value(metadata double 0x3E80000000000000, i64 0, metadata !837, metadata !172), !dbg !855
  tail call void @llvm.dbg.value(metadata double 0x3D10000000000000, i64 0, metadata !838, metadata !172), !dbg !856
  tail call void @llvm.dbg.value(metadata double 8.388608e+06, i64 0, metadata !839, metadata !172), !dbg !857
  tail call void @llvm.dbg.value(metadata double 0x42D0000000000000, i64 0, metadata !840, metadata !172), !dbg !858
  %mul = fmul double %a, 0x3E80000000000000, !dbg !859
  tail call void @llvm.dbg.value(metadata double %mul, i64 0, metadata !841, metadata !172), !dbg !860
  %conv = fptosi double %mul to i32, !dbg !861
  %conv1 = sitofp i32 %conv to double, !dbg !861
  tail call void @llvm.dbg.value(metadata double %conv1, i64 0, metadata !845, metadata !172), !dbg !862
  %mul2 = fmul double %conv1, 8.388608e+06, !dbg !863
  %sub = fsub double %a, %mul2, !dbg !864
  tail call void @llvm.dbg.value(metadata double %sub, i64 0, metadata !846, metadata !172), !dbg !865
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !850, metadata !172), !dbg !866
  %cmp53 = icmp sgt i32 %n, 0, !dbg !867
  br i1 %cmp53, label %for.body.preheader, label %for.end, !dbg !871

for.body.preheader:                               ; preds = %entry
  br label %for.body, !dbg !872

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.body.preheader ]
  %0 = ptrtoint double* %x to i64
  call void @__DiscoPoPOpenMPRead(i64 %0, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.263, i32 0, i32 0), i32 8, i32 0, i32 0)
  %1 = load double, double* %x, align 8, !dbg !872, !tbaa !229
  %mul4 = fmul double %1, 0x3E80000000000000, !dbg !874
  tail call void @llvm.dbg.value(metadata double %mul4, i64 0, metadata !841, metadata !172), !dbg !860
  %conv5 = fptosi double %mul4 to i32, !dbg !875
  %conv6 = sitofp i32 %conv5 to double, !dbg !875
  tail call void @llvm.dbg.value(metadata double %conv6, i64 0, metadata !847, metadata !172), !dbg !876
  %mul7 = fmul double %conv6, 8.388608e+06, !dbg !877
  %sub8 = fsub double %1, %mul7, !dbg !878
  tail call void @llvm.dbg.value(metadata double %sub8, i64 0, metadata !848, metadata !172), !dbg !879
  %mul9 = fmul double %conv1, %sub8, !dbg !880
  %mul10 = fmul double %sub, %conv6, !dbg !881
  %add = fadd double %mul10, %mul9, !dbg !882
  tail call void @llvm.dbg.value(metadata double %add, i64 0, metadata !841, metadata !172), !dbg !860
  %mul11 = fmul double %add, 0x3E80000000000000, !dbg !883
  %conv12 = fptosi double %mul11 to i32, !dbg !884
  %conv13 = sitofp i32 %conv12 to double, !dbg !884
  tail call void @llvm.dbg.value(metadata double %conv13, i64 0, metadata !842, metadata !172), !dbg !885
  %mul14 = fmul double %conv13, 8.388608e+06, !dbg !886
  %sub15 = fsub double %add, %mul14, !dbg !887
  tail call void @llvm.dbg.value(metadata double %sub15, i64 0, metadata !849, metadata !172), !dbg !888
  %mul16 = fmul double %sub15, 8.388608e+06, !dbg !889
  %mul17 = fmul double %sub, %sub8, !dbg !890
  %add18 = fadd double %mul17, %mul16, !dbg !891
  tail call void @llvm.dbg.value(metadata double %add18, i64 0, metadata !843, metadata !172), !dbg !892
  %mul19 = fmul double %add18, 0x3D10000000000000, !dbg !893
  %conv20 = fptosi double %mul19 to i32, !dbg !894
  %conv21 = sitofp i32 %conv20 to double, !dbg !894
  tail call void @llvm.dbg.value(metadata double %conv21, i64 0, metadata !844, metadata !172), !dbg !895
  %mul22 = fmul double %conv21, 0x42D0000000000000, !dbg !896
  %sub23 = fsub double %add18, %mul22, !dbg !897
  %2 = ptrtoint double* %x to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store double %sub23, double* %x, align 8, !dbg !898, !tbaa !229
  %mul24 = fmul double %sub23, 0x3D10000000000000, !dbg !899
  %arrayidx = getelementptr inbounds double, double* %y, i64 %indvars.iv, !dbg !900
  %3 = ptrtoint double* %arrayidx to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store double %mul24, double* %arrayidx, align 8, !dbg !901, !tbaa !229
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !871
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !871
  %exitcond = icmp eq i32 %lftr.wideiv, %n, !dbg !871
  br i1 %exitcond, label %for.end.loopexit, label %for.body, !dbg !871, !llvm.loop !902

for.end.loopexit:                                 ; preds = %for.body
  br label %for.end, !dbg !904

for.end:                                          ; preds = %for.end.loopexit, %entry
  ret void, !dbg !904
}

; Function Attrs: nounwind uwtable
define void @timer_clear(i32 %n) local_unnamed_addr #0 !dbg !905 {
entry:
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !909, metadata !172), !dbg !910
  %idxprom = sext i32 %n to i64, !dbg !911
  %arrayidx = getelementptr inbounds [64 x double], [64 x double]* @elapsed, i64 0, i64 %idxprom, !dbg !911
  %0 = ptrtoint double* %arrayidx to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0)
  store double 0.000000e+00, double* %arrayidx, align 8, !dbg !912, !tbaa !229
  %arrayidx2 = getelementptr inbounds [64 x i32], [64 x i32]* @count, i64 0, i64 %idxprom, !dbg !913
  %1 = ptrtoint i32* %arrayidx2 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %1)
  store i32 0, i32* %arrayidx2, align 4, !dbg !914, !tbaa !222
  ret void, !dbg !915
}

; Function Attrs: nounwind uwtable
define void @timer_start(i32 %n) local_unnamed_addr #0 !dbg !916 {
entry:
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !918, metadata !172), !dbg !919
  %call.i = tail call double @omp_get_wtime() #4, !dbg !920
  tail call void @llvm.dbg.value(metadata double %call.i, i64 0, metadata !924, metadata !172) #4, !dbg !926
  %idxprom = sext i32 %n to i64, !dbg !927
  %arrayidx = getelementptr inbounds [64 x double], [64 x double]* @start, i64 0, i64 %idxprom, !dbg !927
  %0 = ptrtoint double* %arrayidx to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0)
  store double %call.i, double* %arrayidx, align 8, !dbg !928, !tbaa !229
  ret void, !dbg !929
}

declare double @omp_get_wtime() local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define void @timer_stop(i32 %n) local_unnamed_addr #0 !dbg !930 {
entry:
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !932, metadata !172), !dbg !935
  %call.i = tail call double @omp_get_wtime() #4, !dbg !936
  tail call void @llvm.dbg.value(metadata double %call.i, i64 0, metadata !924, metadata !172) #4, !dbg !938
  tail call void @llvm.dbg.value(metadata double %call.i, i64 0, metadata !934, metadata !172), !dbg !939
  %idxprom = sext i32 %n to i64, !dbg !940
  %arrayidx = getelementptr inbounds [64 x double], [64 x double]* @start, i64 0, i64 %idxprom, !dbg !940
  %0 = ptrtoint double* %arrayidx to i64
  call void @__DiscoPoPOpenMPRead(i64 %0, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.265, i32 0, i32 0), i32 8, i32 0, i32 0)
  %1 = load double, double* %arrayidx, align 8, !dbg !940, !tbaa !229
  %sub = fsub double %call.i, %1, !dbg !941
  tail call void @llvm.dbg.value(metadata double %sub, i64 0, metadata !933, metadata !172), !dbg !942
  %arrayidx2 = getelementptr inbounds [64 x double], [64 x double]* @elapsed, i64 0, i64 %idxprom, !dbg !943
  %2 = ptrtoint double* %arrayidx2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %2, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.267, i32 0, i32 0), i32 8, i32 0, i32 0)
  %3 = load double, double* %arrayidx2, align 8, !dbg !944, !tbaa !229
  %add = fadd double %3, %sub, !dbg !944
  %4 = ptrtoint double* %arrayidx2 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store double %add, double* %arrayidx2, align 8, !dbg !944, !tbaa !229
  %arrayidx4 = getelementptr inbounds [64 x i32], [64 x i32]* @count, i64 0, i64 %idxprom, !dbg !945
  %5 = ptrtoint i32* %arrayidx4 to i64
  call void @__DiscoPoPOpenMPRead(i64 %5, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.269, i32 0, i32 0), i32 4, i32 0, i32 0)
  %6 = load i32, i32* %arrayidx4, align 4, !dbg !946, !tbaa !222
  %inc = add i32 %6, 1, !dbg !946
  %7 = ptrtoint i32* %arrayidx4 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %7)
  store i32 %inc, i32* %arrayidx4, align 4, !dbg !946, !tbaa !222
  ret void, !dbg !947
}

; Function Attrs: nounwind readonly uwtable
define double @timer_read(i32 %n) local_unnamed_addr #7 !dbg !948 {
entry:
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !952, metadata !172), !dbg !953
  %idxprom = sext i32 %n to i64, !dbg !954
  %arrayidx = getelementptr inbounds [64 x double], [64 x double]* @elapsed, i64 0, i64 %idxprom, !dbg !954
  %0 = ptrtoint double* %arrayidx to i64
  call void @__DiscoPoPOpenMPRead(i64 %0, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.271, i32 0, i32 0), i32 8, i32 0, i32 0)
  %1 = load double, double* %arrayidx, align 8, !dbg !954, !tbaa !229
  ret double %1, !dbg !955
}

; Function Attrs: nounwind readonly uwtable
define i32 @timer_count(i32 %n) local_unnamed_addr #7 !dbg !956 {
entry:
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !960, metadata !172), !dbg !961
  %idxprom = sext i32 %n to i64, !dbg !962
  %arrayidx = getelementptr inbounds [64 x i32], [64 x i32]* @count, i64 0, i64 %idxprom, !dbg !962
  %0 = ptrtoint i32* %arrayidx to i64
  call void @__DiscoPoPOpenMPRead(i64 %0, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.273, i32 0, i32 0), i32 4, i32 0, i32 0)
  %1 = load i32, i32* %arrayidx, align 4, !dbg !962, !tbaa !222
  ret i32 %1, !dbg !963
}

; Function Attrs: nounwind uwtable
define void @wtime_(double* nocapture %t) local_unnamed_addr #0 !dbg !48 {
entry:
  %tv = alloca %struct.timeval, align 8
  tail call void @llvm.dbg.value(metadata double* %t, i64 0, metadata !53, metadata !172), !dbg !964
  %0 = bitcast %struct.timeval* %tv to i8*, !dbg !965
  call void @llvm.lifetime.start(i64 16, i8* %0) #4, !dbg !965
  tail call void @llvm.dbg.value(metadata %struct.timeval* %tv, i64 0, metadata !54, metadata !239), !dbg !966
  %call = call i32 @gettimeofday(%struct.timeval* nonnull %tv, %struct.timezone* null) #4, !dbg !967
  %1 = ptrtoint i32* @wtime_.sec to i64
  call void @__DiscoPoPOpenMPRead(i64 %1, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.275, i32 0, i32 0), i32 4, i32 0, i32 0)
  %2 = load i32, i32* @wtime_.sec, align 4, !dbg !968, !tbaa !222
  %cmp = icmp slt i32 %2, 0, !dbg !970
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %tv, i64 0, i32 0, !dbg !971
  %3 = ptrtoint i64* %tv_sec to i64
  call void @__DiscoPoPOpenMPRead(i64 %3, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.277, i32 0, i32 0), i32 8, i32 0, i32 0)
  %4 = load i64, i64* %tv_sec, align 8, !dbg !971, !tbaa !973
  br i1 %cmp, label %if.then, label %if.end, !dbg !976

if.then:                                          ; preds = %entry
  %conv = trunc i64 %4 to i32, !dbg !977
  %5 = ptrtoint i32* @wtime_.sec to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store i32 %conv, i32* @wtime_.sec, align 4, !dbg !978, !tbaa !222
  br label %if.end, !dbg !979

if.end:                                           ; preds = %entry, %if.then
  %6 = phi i32 [ %conv, %if.then ], [ %2, %entry ], !dbg !980
  %conv2 = sext i32 %6 to i64, !dbg !980
  %sub = sub nsw i64 %4, %conv2, !dbg !981
  %conv3 = sitofp i64 %sub to double, !dbg !982
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %tv, i64 0, i32 1, !dbg !983
  %7 = ptrtoint i64* %tv_usec to i64
  call void @__DiscoPoPOpenMPRead(i64 %7, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.279, i32 0, i32 0), i32 8, i32 0, i32 0)
  %8 = load i64, i64* %tv_usec, align 8, !dbg !983, !tbaa !984
  %conv4 = sitofp i64 %8 to double, !dbg !985
  %mul = fmul double %conv4, 1.000000e-06, !dbg !986
  %add = fadd double %conv3, %mul, !dbg !987
  %9 = ptrtoint double* %t to i64
  call void @__DiscoPoPOpenMPWrite(i64 %9)
  store double %add, double* %t, align 8, !dbg !988, !tbaa !229
  call void @llvm.lifetime.end(i64 16, i8* nonnull %0) #4, !dbg !989
  ret void, !dbg !989
}

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval* nocapture, %struct.timezone* nocapture) local_unnamed_addr #3

declare void @__DiscoPoPOpenMPInitialize()

declare void @__CollectThreadInfo()

declare void @__DiscoPoPOpenMPFinalize()

declare void @__DiscoPoPOpenMPRead(i64, i8*, i32, i32, i32)

declare void @__DiscoPoPOpenMPWrite(i64)

declare void @__DiscoPoPOpenMPBeforeCall(i8*)

declare void @__DiscoPoPOpenMPAfterCall()

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0, !21, !27, !32, !44}
!llvm.ident = !{!64, !64, !64, !64, !64}
!llvm.module.flags = !{!65, !66}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.1 (tags/RELEASE_391/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !8, globals: !10)
!1 = !DIFile(filename: "ep.c", directory: "/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP")
!2 = !{!3}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 4, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "../common/type.h", directory: "/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP")
!5 = !{!6, !7}
!6 = !DIEnumerator(name: "false", value: 0)
!7 = !DIEnumerator(name: "true", value: 1)
!8 = !{!9}
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!10 = !{!11, !16, !20}
!11 = distinct !DIGlobalVariable(name: "x", scope: !0, file: !1, line: 68, type: !12, isLocal: true, isDefinition: true, variable: [131072 x double]* @x)
!12 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 8388608, align: 64, elements: !14)
!13 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!14 = !{!15}
!15 = !DISubrange(count: 131072)
!16 = distinct !DIGlobalVariable(name: "qq", scope: !0, file: !1, line: 69, type: !17, isLocal: true, isDefinition: true, variable: [10 x double]* @qq)
!17 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 640, align: 64, elements: !18)
!18 = !{!19}
!19 = !DISubrange(count: 10)
!20 = distinct !DIGlobalVariable(name: "q", scope: !0, file: !1, line: 71, type: !17, isLocal: true, isDefinition: true, variable: [10 x double]* @q)
!21 = distinct !DICompileUnit(language: DW_LANG_C99, file: !22, producer: "clang version 3.9.1 (tags/RELEASE_391/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !23, retainedTypes: !26)
!22 = !DIFile(filename: "../common/print_results.c", directory: "/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common")
!23 = !{!24}
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !25, line: 4, size: 32, align: 32, elements: !5)
!25 = !DIFile(filename: "../common/type.h", directory: "/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common")
!26 = !{!13}
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "clang version 3.9.1 (tags/RELEASE_391/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !30)
!28 = !DIFile(filename: "../common/randdp.c", directory: "/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common")
!29 = !{}
!30 = !{!31}
!31 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!32 = distinct !DICompileUnit(language: DW_LANG_C99, file: !33, producer: "clang version 3.9.1 (tags/RELEASE_391/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, globals: !34)
!33 = !DIFile(filename: "../common/c_timers.c", directory: "/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common")
!34 = !{!35, !40, !41}
!35 = distinct !DIGlobalVariable(name: "start", scope: !32, file: !36, line: 28, type: !37, isLocal: true, isDefinition: true, variable: [64 x double]* @start)
!36 = !DIFile(filename: "c_timers.c", directory: "/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common")
!37 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 4096, align: 64, elements: !38)
!38 = !{!39}
!39 = !DISubrange(count: 64)
!40 = distinct !DIGlobalVariable(name: "elapsed", scope: !32, file: !36, line: 28, type: !37, isLocal: true, isDefinition: true, variable: [64 x double]* @elapsed)
!41 = distinct !DIGlobalVariable(name: "count", scope: !32, file: !36, line: 29, type: !42, isLocal: true, isDefinition: true, variable: [64 x i32]* @count)
!42 = !DICompositeType(tag: DW_TAG_array_type, baseType: !43, size: 2048, align: 32, elements: !38)
!43 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!44 = distinct !DICompileUnit(language: DW_LANG_C99, file: !45, producer: "clang version 3.9.1 (tags/RELEASE_391/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, globals: !46)
!45 = !DIFile(filename: "../common/wtime.c", directory: "/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common")
!46 = !{!47}
!47 = distinct !DIGlobalVariable(name: "sec", scope: !48, file: !45, line: 10, type: !31, isLocal: true, isDefinition: true, variable: i32* @wtime_.sec)
!48 = distinct !DISubprogram(name: "wtime_", scope: !45, file: !45, line: 7, type: !49, isLocal: false, isDefinition: true, scopeLine: 8, flags: DIFlagPrototyped, isOptimized: true, unit: !44, variables: !52)
!49 = !DISubroutineType(types: !50)
!50 = !{null, !51}
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64, align: 64)
!52 = !{!53, !54}
!53 = !DILocalVariable(name: "t", arg: 1, scope: !48, file: !45, line: 7, type: !51)
!54 = !DILocalVariable(name: "tv", scope: !48, file: !45, line: 11, type: !55)
!55 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !56, line: 30, size: 128, align: 64, elements: !57)
!56 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common")
!57 = !{!58, !62}
!58 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !55, file: !56, line: 32, baseType: !59, size: 64, align: 64)
!59 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !60, line: 139, baseType: !61)
!60 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common")
!61 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !55, file: !56, line: 33, baseType: !63, size: 64, align: 64, offset: 64)
!63 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !60, line: 141, baseType: !61)
!64 = !{!"clang version 3.9.1 (tags/RELEASE_391/final)"}
!65 = !{i32 2, !"Dwarf Version", i32 4}
!66 = !{i32 2, !"Debug Info Version", i32 3}
!67 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 74, type: !68, isLocal: false, isDefinition: true, scopeLine: 75, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !73)
!68 = !DISubroutineType(types: !69)
!69 = !{!31, !31, !70}
!70 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64, align: 64)
!71 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !72, size: 64, align: 64)
!72 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!73 = !{!74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !104, !105, !109, !113}
!74 = !DILocalVariable(name: "argc", arg: 1, scope: !67, file: !1, line: 74, type: !31)
!75 = !DILocalVariable(name: "argv", arg: 2, scope: !67, file: !1, line: 74, type: !70)
!76 = !DILocalVariable(name: "Mops", scope: !67, file: !1, line: 76, type: !13)
!77 = !DILocalVariable(name: "t1", scope: !67, file: !1, line: 76, type: !13)
!78 = !DILocalVariable(name: "t2", scope: !67, file: !1, line: 76, type: !13)
!79 = !DILocalVariable(name: "t3", scope: !67, file: !1, line: 76, type: !13)
!80 = !DILocalVariable(name: "t4", scope: !67, file: !1, line: 76, type: !13)
!81 = !DILocalVariable(name: "x1", scope: !67, file: !1, line: 76, type: !13)
!82 = !DILocalVariable(name: "x2", scope: !67, file: !1, line: 76, type: !13)
!83 = !DILocalVariable(name: "sx", scope: !67, file: !1, line: 77, type: !13)
!84 = !DILocalVariable(name: "sy", scope: !67, file: !1, line: 77, type: !13)
!85 = !DILocalVariable(name: "tm", scope: !67, file: !1, line: 77, type: !13)
!86 = !DILocalVariable(name: "an", scope: !67, file: !1, line: 77, type: !13)
!87 = !DILocalVariable(name: "tt", scope: !67, file: !1, line: 77, type: !13)
!88 = !DILocalVariable(name: "gc", scope: !67, file: !1, line: 77, type: !13)
!89 = !DILocalVariable(name: "sx_verify_value", scope: !67, file: !1, line: 78, type: !13)
!90 = !DILocalVariable(name: "sy_verify_value", scope: !67, file: !1, line: 78, type: !13)
!91 = !DILocalVariable(name: "sx_err", scope: !67, file: !1, line: 78, type: !13)
!92 = !DILocalVariable(name: "sy_err", scope: !67, file: !1, line: 78, type: !13)
!93 = !DILocalVariable(name: "np", scope: !67, file: !1, line: 79, type: !31)
!94 = !DILocalVariable(name: "i", scope: !67, file: !1, line: 80, type: !31)
!95 = !DILocalVariable(name: "ik", scope: !67, file: !1, line: 80, type: !31)
!96 = !DILocalVariable(name: "kk", scope: !67, file: !1, line: 80, type: !31)
!97 = !DILocalVariable(name: "l", scope: !67, file: !1, line: 80, type: !31)
!98 = !DILocalVariable(name: "k", scope: !67, file: !1, line: 80, type: !31)
!99 = !DILocalVariable(name: "nit", scope: !67, file: !1, line: 80, type: !31)
!100 = !DILocalVariable(name: "k_offset", scope: !67, file: !1, line: 81, type: !31)
!101 = !DILocalVariable(name: "j", scope: !67, file: !1, line: 81, type: !31)
!102 = !DILocalVariable(name: "verified", scope: !67, file: !1, line: 82, type: !103)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "logical", file: !4, line: 4, baseType: !3)
!104 = !DILocalVariable(name: "timers_enabled", scope: !67, file: !1, line: 82, type: !103)
!105 = !DILocalVariable(name: "dum", scope: !67, file: !1, line: 84, type: !106)
!106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 192, align: 64, elements: !107)
!107 = !{!108}
!108 = !DISubrange(count: 3)
!109 = !DILocalVariable(name: "size", scope: !67, file: !1, line: 85, type: !110)
!110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !72, size: 128, align: 8, elements: !111)
!111 = !{!112}
!112 = !DISubrange(count: 16)
!113 = !DILocalVariable(name: "fp", scope: !67, file: !1, line: 87, type: !114)
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 64, align: 64)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !116, line: 48, baseType: !117)
!116 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !118, line: 245, size: 1728, align: 64, elements: !119)
!118 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP")
!119 = !{!120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !140, !141, !142, !143, !146, !148, !150, !154, !157, !159, !160, !161, !162, !163, !167, !168}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !117, file: !118, line: 246, baseType: !31, size: 32, align: 32)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !117, file: !118, line: 251, baseType: !71, size: 64, align: 64, offset: 64)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !117, file: !118, line: 252, baseType: !71, size: 64, align: 64, offset: 128)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !117, file: !118, line: 253, baseType: !71, size: 64, align: 64, offset: 192)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !117, file: !118, line: 254, baseType: !71, size: 64, align: 64, offset: 256)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !117, file: !118, line: 255, baseType: !71, size: 64, align: 64, offset: 320)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !117, file: !118, line: 256, baseType: !71, size: 64, align: 64, offset: 384)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !117, file: !118, line: 257, baseType: !71, size: 64, align: 64, offset: 448)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !117, file: !118, line: 258, baseType: !71, size: 64, align: 64, offset: 512)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !117, file: !118, line: 260, baseType: !71, size: 64, align: 64, offset: 576)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !117, file: !118, line: 261, baseType: !71, size: 64, align: 64, offset: 640)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !117, file: !118, line: 262, baseType: !71, size: 64, align: 64, offset: 704)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !117, file: !118, line: 264, baseType: !133, size: 64, align: 64, offset: 768)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 64, align: 64)
!134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !118, line: 160, size: 192, align: 64, elements: !135)
!135 = !{!136, !137, !139}
!136 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !134, file: !118, line: 161, baseType: !133, size: 64, align: 64)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !134, file: !118, line: 162, baseType: !138, size: 64, align: 64, offset: 64)
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64, align: 64)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !134, file: !118, line: 166, baseType: !31, size: 32, align: 32, offset: 128)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !117, file: !118, line: 266, baseType: !138, size: 64, align: 64, offset: 832)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !117, file: !118, line: 268, baseType: !31, size: 32, align: 32, offset: 896)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !117, file: !118, line: 272, baseType: !31, size: 32, align: 32, offset: 928)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !117, file: !118, line: 274, baseType: !144, size: 64, align: 64, offset: 960)
!144 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !145, line: 131, baseType: !61)
!145 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP")
!146 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !117, file: !118, line: 278, baseType: !147, size: 16, align: 16, offset: 1024)
!147 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !117, file: !118, line: 279, baseType: !149, size: 8, align: 8, offset: 1040)
!149 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !117, file: !118, line: 280, baseType: !151, size: 8, align: 8, offset: 1048)
!151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !72, size: 8, align: 8, elements: !152)
!152 = !{!153}
!153 = !DISubrange(count: 1)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !117, file: !118, line: 284, baseType: !155, size: 64, align: 64, offset: 1088)
!155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 64, align: 64)
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !118, line: 154, baseType: null)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !117, file: !118, line: 293, baseType: !158, size: 64, align: 64, offset: 1152)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !145, line: 132, baseType: !61)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !117, file: !118, line: 302, baseType: !9, size: 64, align: 64, offset: 1216)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !117, file: !118, line: 303, baseType: !9, size: 64, align: 64, offset: 1280)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !117, file: !118, line: 304, baseType: !9, size: 64, align: 64, offset: 1344)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !117, file: !118, line: 305, baseType: !9, size: 64, align: 64, offset: 1408)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !117, file: !118, line: 306, baseType: !164, size: 64, align: 64, offset: 1472)
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !165, line: 62, baseType: !166)
!165 = !DIFile(filename: "/home/amiryousefi/buildforinstm/bin/../lib/clang/3.9.1/include/stddef.h", directory: "/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/EP")
!166 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !117, file: !118, line: 308, baseType: !31, size: 32, align: 32, offset: 1536)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !117, file: !118, line: 310, baseType: !169, size: 160, align: 8, offset: 1568)
!169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !72, size: 160, align: 8, elements: !170)
!170 = !{!171}
!171 = !DISubrange(count: 20)
!172 = !DIExpression()
!173 = !DILocation(line: 74, column: 14, scope: !67)
!174 = !DILocation(line: 74, column: 26, scope: !67)
!175 = !DILocation(line: 76, column: 3, scope: !67)
!176 = !DILocation(line: 76, column: 3, scope: !177)
!177 = !DILexicalBlockFile(scope: !67, file: !1, discriminator: 1)
!178 = !DILocation(line: 77, column: 3, scope: !67)
!179 = !DILocation(line: 77, column: 3, scope: !177)
!180 = !DILocation(line: 77, column: 3, scope: !181)
!181 = !DILexicalBlockFile(scope: !67, file: !1, discriminator: 3)
!182 = !DILocation(line: 79, column: 3, scope: !67)
!183 = !DILocation(line: 81, column: 3, scope: !67)
!184 = !DILocation(line: 82, column: 3, scope: !67)
!185 = !DILocation(line: 82, column: 3, scope: !177)
!186 = !DILocation(line: 84, column: 3, scope: !67)
!187 = !DILocation(line: 84, column: 10, scope: !67)
!188 = !DILocation(line: 84, column: 10, scope: !177)
!189 = !DILocation(line: 85, column: 3, scope: !67)
!190 = !DILocation(line: 85, column: 10, scope: !67)
!191 = !DILocation(line: 89, column: 13, scope: !192)
!192 = distinct !DILexicalBlock(scope: !67, file: !1, line: 89, column: 7)
!193 = !DILocation(line: 87, column: 9, scope: !67)
!194 = !DILocation(line: 89, column: 39, scope: !192)
!195 = !DILocation(line: 89, column: 7, scope: !67)
!196 = !DILocation(line: 82, column: 21, scope: !67)
!197 = !DILocation(line: 90, column: 20, scope: !198)
!198 = distinct !DILexicalBlock(scope: !192, file: !1, line: 89, column: 48)
!199 = !{!200, !200, i64 0}
!200 = !{!"omnipotent char", !201, i64 0}
!201 = !{!"Simple C/C++ TBAA"}
!202 = !DILocation(line: 91, column: 3, scope: !198)
!203 = !DILocation(line: 92, column: 20, scope: !204)
!204 = distinct !DILexicalBlock(scope: !192, file: !1, line: 91, column: 10)
!205 = !DILocation(line: 93, column: 5, scope: !204)
!206 = !DILocation(line: 103, column: 28, scope: !67)
!207 = !DILocation(line: 103, column: 3, scope: !177)
!208 = !DILocation(line: 81, column: 20, scope: !67)
!209 = !DILocation(line: 105, column: 7, scope: !210)
!210 = distinct !DILexicalBlock(scope: !67, file: !1, line: 105, column: 7)
!211 = !DILocation(line: 105, column: 15, scope: !210)
!212 = !DILocation(line: 105, column: 7, scope: !67)
!213 = !DILocation(line: 106, column: 3, scope: !67)
!214 = !DILocation(line: 106, column: 13, scope: !67)
!215 = !DILocation(line: 107, column: 3, scope: !67)
!216 = !DILocation(line: 108, column: 3, scope: !67)
!217 = !DILocation(line: 109, column: 61, scope: !67)
!218 = !DILocation(line: 109, column: 3, scope: !177)
!219 = !DILocation(line: 82, column: 11, scope: !67)
!220 = !DILocation(line: 79, column: 10, scope: !67)
!221 = !DILocation(line: 119, column: 6, scope: !67)
!222 = !{!223, !223, i64 0}
!223 = !{!"int", !200, i64 0}
!224 = !DILocation(line: 128, column: 14, scope: !67)
!225 = !DILocation(line: 128, column: 22, scope: !67)
!226 = !DILocation(line: 128, column: 31, scope: !67)
!227 = !DILocation(line: 128, column: 3, scope: !67)
!228 = !DILocation(line: 129, column: 28, scope: !67)
!229 = !{!230, !230, i64 0}
!230 = !{!"double", !200, i64 0}
!231 = !DILocation(line: 129, column: 12, scope: !67)
!232 = !DILocation(line: 129, column: 10, scope: !67)
!233 = !DILocation(line: 130, column: 11, scope: !67)
!234 = !DILocation(line: 136, column: 14, scope: !177)
!235 = !DILocation(line: 136, column: 10, scope: !236)
!236 = !DILexicalBlockFile(scope: !67, file: !1, discriminator: 2)
!237 = !DILocation(line: 76, column: 10, scope: !67)
!238 = !DILocation(line: 138, column: 11, scope: !67)
!239 = !DIExpression(DW_OP_deref)
!240 = !DILocation(line: 144, column: 3, scope: !67)
!241 = !DILocation(line: 76, column: 16, scope: !67)
!242 = !DILocation(line: 146, column: 6, scope: !67)
!243 = !DILocation(line: 147, column: 3, scope: !177)
!244 = !DILocation(line: 153, column: 6, scope: !67)
!245 = !DILocation(line: 80, column: 10, scope: !67)
!246 = !DILocation(line: 156, column: 10, scope: !247)
!247 = distinct !DILexicalBlock(scope: !248, file: !1, line: 155, column: 32)
!248 = distinct !DILexicalBlock(scope: !249, file: !1, line: 155, column: 3)
!249 = distinct !DILexicalBlock(scope: !67, file: !1, line: 155, column: 3)
!250 = !DILocation(line: 76, column: 20, scope: !67)
!251 = !DILocation(line: 156, column: 22, scope: !247)
!252 = !DILocation(line: 77, column: 22, scope: !67)
!253 = !DILocation(line: 159, column: 6, scope: !67)
!254 = !DILocation(line: 77, column: 26, scope: !67)
!255 = !DILocation(line: 77, column: 30, scope: !67)
!256 = !DILocation(line: 77, column: 10, scope: !67)
!257 = !DILocation(line: 162, column: 6, scope: !67)
!258 = !DILocation(line: 77, column: 14, scope: !67)
!259 = !DILocation(line: 163, column: 6, scope: !67)
!260 = !DILocation(line: 166, column: 10, scope: !261)
!261 = distinct !DILexicalBlock(scope: !262, file: !1, line: 165, column: 28)
!262 = distinct !DILexicalBlock(scope: !263, file: !1, line: 165, column: 3)
!263 = distinct !DILexicalBlock(scope: !67, file: !1, line: 165, column: 3)
!264 = !DILocation(line: 81, column: 10, scope: !67)
!265 = !DILocation(line: 175, column: 12, scope: !67)
!266 = !DILocation(line: 177, column: 11, scope: !67)
!267 = !DILocation(line: 238, column: 15, scope: !268)
!268 = distinct !DILexicalBlock(scope: !269, file: !1, line: 237, column: 28)
!269 = distinct !DILexicalBlock(scope: !270, file: !1, line: 237, column: 3)
!270 = distinct !DILexicalBlock(scope: !67, file: !1, line: 237, column: 3)
!271 = !DILocation(line: 238, column: 13, scope: !268)
!272 = !DILocation(line: 241, column: 3, scope: !67)
!273 = !DILocation(line: 242, column: 8, scope: !67)
!274 = !DILocation(line: 77, column: 18, scope: !67)
!275 = !DILocation(line: 80, column: 27, scope: !67)
!276 = !DILocation(line: 78, column: 10, scope: !67)
!277 = !DILocation(line: 78, column: 27, scope: !67)
!278 = !DILocation(line: 272, column: 20, scope: !279)
!279 = distinct !DILexicalBlock(scope: !280, file: !1, line: 271, column: 17)
!280 = distinct !DILexicalBlock(scope: !67, file: !1, line: 271, column: 7)
!281 = !DILocation(line: 272, column: 23, scope: !279)
!282 = !DILocation(line: 272, column: 42, scope: !279)
!283 = !DILocation(line: 272, column: 14, scope: !279)
!284 = !DILocation(line: 78, column: 44, scope: !67)
!285 = !DILocation(line: 273, column: 20, scope: !279)
!286 = !DILocation(line: 273, column: 23, scope: !279)
!287 = !DILocation(line: 273, column: 42, scope: !279)
!288 = !DILocation(line: 273, column: 14, scope: !279)
!289 = !DILocation(line: 78, column: 52, scope: !67)
!290 = !DILocation(line: 274, column: 25, scope: !279)
!291 = !DILocation(line: 274, column: 48, scope: !292)
!292 = !DILexicalBlockFile(scope: !279, file: !1, discriminator: 1)
!293 = !DILocation(line: 274, column: 37, scope: !279)
!294 = !DILocation(line: 277, column: 10, scope: !67)
!295 = !DILocation(line: 277, column: 24, scope: !67)
!296 = !DILocation(line: 279, column: 3, scope: !67)
!297 = !DILocation(line: 280, column: 3, scope: !67)
!298 = !DILocation(line: 281, column: 3, scope: !67)
!299 = !DILocation(line: 282, column: 3, scope: !67)
!300 = !DILocation(line: 283, column: 40, scope: !67)
!301 = !DILocation(line: 283, column: 44, scope: !67)
!302 = !DILocation(line: 283, column: 3, scope: !67)
!303 = !DILocation(line: 284, column: 3, scope: !67)
!304 = !DILocation(line: 286, column: 31, scope: !305)
!305 = distinct !DILexicalBlock(scope: !306, file: !1, line: 285, column: 28)
!306 = distinct !DILexicalBlock(scope: !307, file: !1, line: 285, column: 3)
!307 = distinct !DILexicalBlock(scope: !67, file: !1, line: 285, column: 3)
!308 = !DILocation(line: 286, column: 5, scope: !305)
!309 = !DILocation(line: 274, column: 37, scope: !310)
!310 = !DILexicalBlockFile(scope: !279, file: !1, discriminator: 2)
!311 = !DILocation(line: 277, column: 29, scope: !67)
!312 = !DILocation(line: 289, column: 3, scope: !67)
!313 = !DILocation(line: 295, column: 7, scope: !314)
!314 = distinct !DILexicalBlock(scope: !67, file: !1, line: 295, column: 7)
!315 = !DILocation(line: 295, column: 7, scope: !67)
!316 = !DILocation(line: 296, column: 12, scope: !317)
!317 = distinct !DILexicalBlock(scope: !318, file: !1, line: 296, column: 9)
!318 = distinct !DILexicalBlock(scope: !314, file: !1, line: 295, column: 23)
!319 = !DILocation(line: 296, column: 9, scope: !318)
!320 = !DILocation(line: 297, column: 10, scope: !318)
!321 = !DILocation(line: 298, column: 57, scope: !318)
!322 = !DILocation(line: 298, column: 63, scope: !318)
!323 = !DILocation(line: 298, column: 5, scope: !318)
!324 = !DILocation(line: 299, column: 10, scope: !318)
!325 = !DILocation(line: 300, column: 55, scope: !318)
!326 = !DILocation(line: 300, column: 61, scope: !318)
!327 = !DILocation(line: 300, column: 5, scope: !318)
!328 = !DILocation(line: 301, column: 10, scope: !318)
!329 = !DILocation(line: 302, column: 55, scope: !318)
!330 = !DILocation(line: 302, column: 61, scope: !318)
!331 = !DILocation(line: 302, column: 5, scope: !318)
!332 = !DILocation(line: 303, column: 3, scope: !318)
!333 = !DILocation(line: 306, column: 1, scope: !177)
!334 = !DILocation(line: 306, column: 1, scope: !236)
!335 = !DILocation(line: 306, column: 1, scope: !181)
!336 = !DILocation(line: 306, column: 1, scope: !337)
!337 = !DILexicalBlockFile(scope: !67, file: !1, discriminator: 6)
!338 = !DILocation(line: 306, column: 1, scope: !339)
!339 = !DILexicalBlockFile(scope: !67, file: !1, discriminator: 13)
!340 = !DILocation(line: 306, column: 1, scope: !341)
!341 = !DILexicalBlockFile(scope: !67, file: !1, discriminator: 20)
!342 = !DILocation(line: 306, column: 1, scope: !343)
!343 = !DILexicalBlockFile(scope: !67, file: !1, discriminator: 22)
!344 = !DILocation(line: 306, column: 1, scope: !345)
!345 = !DILexicalBlockFile(scope: !67, file: !1, discriminator: 23)
!346 = !DILocation(line: 306, column: 1, scope: !347)
!347 = !DILexicalBlockFile(scope: !67, file: !1, discriminator: 29)
!348 = !DILocation(line: 305, column: 3, scope: !67)
!349 = distinct !DISubprogram(name: ".omp_outlined.", scope: !1, file: !1, line: 130, type: !350, isLocal: true, isDefinition: true, scopeLine: 131, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !355)
!350 = !DISubroutineType(types: !351)
!351 = !{null, !352, !352}
!352 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !353)
!353 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !354)
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64, align: 64)
!355 = !{!356, !357, !358}
!356 = !DILocalVariable(name: ".global_tid.", arg: 1, scope: !349, type: !352, flags: DIFlagArtificial | DIFlagObjectPointer)
!357 = !DILocalVariable(name: ".bound_tid.", arg: 2, scope: !349, type: !352, flags: DIFlagArtificial)
!358 = !DILocalVariable(name: "i", scope: !349, type: !31, flags: DIFlagArtificial)
!359 = !DILocation(line: 0, scope: !349)
!360 = !DILocation(line: 132, column: 5, scope: !361)
!361 = !DILexicalBlockFile(scope: !362, file: !1, discriminator: 1)
!362 = distinct !DILexicalBlock(scope: !363, file: !1, line: 132, column: 5)
!363 = distinct !DILexicalBlock(scope: !364, file: !1, line: 132, column: 5)
!364 = distinct !DILexicalBlock(scope: !349, file: !1, line: 131, column: 3)
!365 = !DILocation(line: 133, column: 7, scope: !366)
!366 = distinct !DILexicalBlock(scope: !362, file: !1, line: 132, column: 34)
!367 = !DILocation(line: 133, column: 12, scope: !366)
!368 = distinct !{!368, !369, !370, !371}
!369 = !DILocation(line: 132, column: 5, scope: !364)
!370 = !{!"llvm.loop.vectorize.width", i32 1}
!371 = !{!"llvm.loop.interleave.count", i32 1}
!372 = !DILocation(line: 135, column: 3, scope: !349)
!373 = distinct !DISubprogram(name: ".omp_outlined..7", scope: !1, file: !1, line: 138, type: !374, isLocal: true, isDefinition: true, scopeLine: 139, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !377)
!374 = !DISubroutineType(types: !375)
!375 = !{null, !352, !352, !376}
!376 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !103, size: 64, align: 64)
!377 = !{!378, !379, !380}
!378 = !DILocalVariable(name: ".global_tid.", arg: 1, scope: !373, type: !352, flags: DIFlagArtificial | DIFlagObjectPointer)
!379 = !DILocalVariable(name: ".bound_tid.", arg: 2, scope: !373, type: !352, flags: DIFlagArtificial)
!380 = !DILocalVariable(name: "timers_enabled", arg: 3, scope: !373, type: !376, flags: DIFlagArtificial)
!381 = !DILocation(line: 0, scope: !373)
!382 = !DILocation(line: 140, column: 5, scope: !383)
!383 = distinct !DILexicalBlock(scope: !373, file: !1, line: 139, column: 3)
!384 = !DILocation(line: 141, column: 9, scope: !385)
!385 = distinct !DILexicalBlock(scope: !383, file: !1, line: 141, column: 9)
!386 = !DILocation(line: 141, column: 9, scope: !383)
!387 = !DILocation(line: 141, column: 25, scope: !388)
!388 = !DILexicalBlockFile(scope: !385, file: !1, discriminator: 1)
!389 = !DILocation(line: 142, column: 9, scope: !390)
!390 = distinct !DILexicalBlock(scope: !383, file: !1, line: 142, column: 9)
!391 = !DILocation(line: 142, column: 9, scope: !383)
!392 = !DILocation(line: 142, column: 25, scope: !393)
!393 = !DILexicalBlockFile(scope: !390, file: !1, discriminator: 1)
!394 = !DILocation(line: 143, column: 3, scope: !373)
!395 = distinct !DISubprogram(name: ".omp_outlined..8", scope: !1, file: !1, line: 177, type: !396, isLocal: true, isDefinition: true, scopeLine: 178, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !400)
!396 = !DISubroutineType(types: !397)
!397 = !{null, !352, !352, !398, !398, !399, !399, !398, !376}
!398 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !13, size: 64, align: 64)
!399 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !31, size: 64, align: 64)
!400 = !{!401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !423, !423, !424, !425, !426, !427, !428, !429, !430}
!401 = !DILocalVariable(name: ".global_tid.", arg: 1, scope: !395, type: !352, flags: DIFlagArtificial | DIFlagObjectPointer)
!402 = !DILocalVariable(name: ".bound_tid.", arg: 2, scope: !395, type: !352, flags: DIFlagArtificial)
!403 = !DILocalVariable(name: "sx", arg: 3, scope: !395, type: !398, flags: DIFlagArtificial)
!404 = !DILocalVariable(name: "sy", arg: 4, scope: !395, type: !398, flags: DIFlagArtificial)
!405 = !DILocalVariable(name: "np", arg: 5, scope: !395, type: !399, flags: DIFlagArtificial)
!406 = !DILocalVariable(name: "k_offset", arg: 6, scope: !395, type: !399, flags: DIFlagArtificial)
!407 = !DILocalVariable(name: "an", arg: 7, scope: !395, type: !398, flags: DIFlagArtificial)
!408 = !DILocalVariable(name: "timers_enabled", arg: 8, scope: !395, type: !376, flags: DIFlagArtificial)
!409 = !DILocalVariable(name: "k", scope: !395, type: !31, flags: DIFlagArtificial)
!410 = !DILocalVariable(name: "kk", scope: !395, type: !31, flags: DIFlagArtificial)
!411 = !DILocalVariable(name: "t1", scope: !395, type: !13, flags: DIFlagArtificial)
!412 = !DILocalVariable(name: "t2", scope: !395, type: !13, flags: DIFlagArtificial)
!413 = !DILocalVariable(name: "t3", scope: !395, type: !13, flags: DIFlagArtificial)
!414 = !DILocalVariable(name: "t4", scope: !395, type: !13, flags: DIFlagArtificial)
!415 = !DILocalVariable(name: "i", scope: !395, type: !31, flags: DIFlagArtificial)
!416 = !DILocalVariable(name: "ik", scope: !395, type: !31, flags: DIFlagArtificial)
!417 = !DILocalVariable(name: "x1", scope: !395, type: !13, flags: DIFlagArtificial)
!418 = !DILocalVariable(name: "x2", scope: !395, type: !13, flags: DIFlagArtificial)
!419 = !DILocalVariable(name: "l", scope: !395, type: !31, flags: DIFlagArtificial)
!420 = !DILocalVariable(name: ".omp.iv", scope: !421, type: !31, flags: DIFlagArtificial)
!421 = distinct !DILexicalBlock(scope: !422, file: !1, line: 183, column: 13)
!422 = distinct !DILexicalBlock(scope: !395, file: !1, line: 178, column: 3)
!423 = !DILocalVariable(name: ".capture_expr.", scope: !421, type: !31, flags: DIFlagArtificial)
!424 = !DILocalVariable(name: "k", scope: !421, type: !31, flags: DIFlagArtificial)
!425 = !DILocalVariable(name: ".omp.lb", scope: !421, type: !31, flags: DIFlagArtificial)
!426 = !DILocalVariable(name: ".omp.ub", scope: !421, type: !31, flags: DIFlagArtificial)
!427 = !DILocalVariable(name: ".omp.stride", scope: !421, type: !31, flags: DIFlagArtificial)
!428 = !DILocalVariable(name: ".omp.is_last", scope: !421, type: !31, flags: DIFlagArtificial)
!429 = !DILocalVariable(name: "sx", scope: !421, type: !13, flags: DIFlagArtificial)
!430 = !DILocalVariable(name: "sy", scope: !421, type: !13, flags: DIFlagArtificial)
!431 = !DILocation(line: 0, scope: !395)
!432 = !DILocation(line: 178, column: 3, scope: !395)
!433 = !DILocation(line: 178, column: 3, scope: !434)
!434 = !DILexicalBlockFile(scope: !395, file: !1, discriminator: 2)
!435 = !DILocation(line: 178, column: 3, scope: !436)
!436 = !DILexicalBlockFile(scope: !395, file: !1, discriminator: 3)
!437 = !DILocation(line: 180, column: 13, scope: !438)
!438 = distinct !DILexicalBlock(scope: !439, file: !1, line: 179, column: 30)
!439 = distinct !DILexicalBlock(scope: !440, file: !1, line: 179, column: 5)
!440 = distinct !DILexicalBlock(scope: !422, file: !1, line: 179, column: 5)
!441 = !DILocation(line: 184, column: 22, scope: !421)
!442 = !DILocation(line: 0, scope: !421)
!443 = !DILocation(line: 184, column: 5, scope: !421)
!444 = !DILocation(line: 183, column: 13, scope: !422)
!445 = !DILocation(line: 183, column: 13, scope: !446)
!446 = !DILexicalBlockFile(scope: !421, file: !1, discriminator: 19)
!447 = !DILocation(line: 183, column: 13, scope: !448)
!448 = !DILexicalBlockFile(scope: !422, file: !1, discriminator: 1)
!449 = !DILocation(line: 184, column: 10, scope: !450)
!450 = !DILexicalBlockFile(scope: !421, file: !1, discriminator: 1)
!451 = !DILocation(line: 183, column: 13, scope: !452)
!452 = !DILexicalBlockFile(scope: !448, file: !1, discriminator: 24)
!453 = !DILocation(line: 183, column: 13, scope: !454)
!454 = !DILexicalBlockFile(scope: !448, file: !1, discriminator: 25)
!455 = !DILocation(line: 183, column: 13, scope: !456)
!456 = !DILexicalBlockFile(scope: !448, file: !1, discriminator: 26)
!457 = !DILocation(line: 183, column: 13, scope: !458)
!458 = !DILexicalBlockFile(scope: !448, file: !1, discriminator: 27)
!459 = !DILocation(line: 183, column: 33, scope: !448)
!460 = !DILocation(line: 183, column: 13, scope: !461)
!461 = !DILexicalBlockFile(scope: !448, file: !1, discriminator: 28)
!462 = !DILocation(line: 183, column: 36, scope: !448)
!463 = !DILocation(line: 183, column: 13, scope: !464)
!464 = !DILexicalBlockFile(scope: !421, file: !1, discriminator: 11)
!465 = !DILocation(line: 183, column: 13, scope: !466)
!466 = !DILexicalBlockFile(scope: !448, file: !1, discriminator: 29)
!467 = !DILocation(line: 183, column: 13, scope: !468)
!468 = !DILexicalBlockFile(scope: !422, file: !1, discriminator: 2)
!469 = !DILocation(line: 187, column: 12, scope: !470)
!470 = distinct !DILexicalBlock(scope: !421, file: !1, line: 184, column: 31)
!471 = !DILocation(line: 187, column: 10, scope: !470)
!472 = !DILocation(line: 184, column: 10, scope: !473)
!473 = !DILexicalBlockFile(scope: !421, file: !1, discriminator: 2)
!474 = !DILocation(line: 184, column: 10, scope: !475)
!475 = !DILexicalBlockFile(scope: !421, file: !1, discriminator: 3)
!476 = distinct !{!476, !444}
!477 = !DILocation(line: 0, scope: !473)
!478 = !DILocation(line: 183, column: 13, scope: !479)
!479 = !DILexicalBlockFile(scope: !422, file: !1, discriminator: 5)
!480 = !DILocation(line: 184, column: 26, scope: !481)
!481 = !DILexicalBlockFile(scope: !421, file: !1, discriminator: 4)
!482 = !DILocation(line: 185, column: 12, scope: !470)
!483 = !DILocation(line: 185, column: 21, scope: !470)
!484 = !DILocation(line: 186, column: 10, scope: !470)
!485 = !DILocation(line: 191, column: 7, scope: !486)
!486 = !DILexicalBlockFile(scope: !487, file: !1, discriminator: 1)
!487 = distinct !DILexicalBlock(scope: !488, file: !1, line: 191, column: 7)
!488 = distinct !DILexicalBlock(scope: !470, file: !1, line: 191, column: 7)
!489 = !DILocation(line: 192, column: 17, scope: !490)
!490 = distinct !DILexicalBlock(scope: !487, file: !1, line: 191, column: 34)
!491 = !DILocation(line: 193, column: 16, scope: !492)
!492 = distinct !DILexicalBlock(scope: !490, file: !1, line: 193, column: 13)
!493 = !DILocation(line: 193, column: 22, scope: !492)
!494 = !DILocation(line: 193, column: 13, scope: !490)
!495 = !DILocation(line: 193, column: 46, scope: !496)
!496 = !DILexicalBlockFile(scope: !492, file: !1, discriminator: 1)
!497 = !DILocation(line: 193, column: 34, scope: !496)
!498 = !DILocation(line: 193, column: 29, scope: !496)
!499 = !DILocation(line: 194, column: 16, scope: !500)
!500 = distinct !DILexicalBlock(scope: !490, file: !1, line: 194, column: 13)
!501 = !DILocation(line: 194, column: 13, scope: !490)
!502 = !DILocation(line: 195, column: 26, scope: !490)
!503 = !DILocation(line: 195, column: 14, scope: !490)
!504 = !DILocation(line: 191, column: 30, scope: !505)
!505 = !DILexicalBlockFile(scope: !487, file: !1, discriminator: 2)
!506 = !DILocation(line: 191, column: 21, scope: !486)
!507 = distinct !{!507, !508}
!508 = !DILocation(line: 191, column: 7, scope: !470)
!509 = !DILocation(line: 202, column: 11, scope: !510)
!510 = distinct !DILexicalBlock(scope: !470, file: !1, line: 202, column: 11)
!511 = !DILocation(line: 202, column: 11, scope: !470)
!512 = !DILocation(line: 202, column: 27, scope: !513)
!513 = !DILexicalBlockFile(scope: !510, file: !1, discriminator: 1)
!514 = !DILocation(line: 203, column: 7, scope: !515)
!515 = !DILexicalBlockFile(scope: !470, file: !1, discriminator: 1)
!516 = !DILocation(line: 204, column: 11, scope: !517)
!517 = distinct !DILexicalBlock(scope: !470, file: !1, line: 204, column: 11)
!518 = !DILocation(line: 204, column: 11, scope: !470)
!519 = !DILocation(line: 204, column: 27, scope: !520)
!520 = !DILexicalBlockFile(scope: !517, file: !1, discriminator: 1)
!521 = !DILocation(line: 211, column: 11, scope: !522)
!522 = distinct !DILexicalBlock(scope: !470, file: !1, line: 211, column: 11)
!523 = !DILocation(line: 211, column: 11, scope: !470)
!524 = !DILocation(line: 211, column: 27, scope: !525)
!525 = !DILexicalBlockFile(scope: !522, file: !1, discriminator: 1)
!526 = !DILocation(line: 214, column: 23, scope: !527)
!527 = distinct !DILexicalBlock(scope: !528, file: !1, line: 213, column: 32)
!528 = distinct !DILexicalBlock(scope: !529, file: !1, line: 213, column: 7)
!529 = distinct !DILexicalBlock(scope: !470, file: !1, line: 213, column: 7)
!530 = !DILocation(line: 214, column: 20, scope: !527)
!531 = !DILocation(line: 214, column: 18, scope: !527)
!532 = !DILocation(line: 214, column: 27, scope: !527)
!533 = !DILocation(line: 216, column: 17, scope: !527)
!534 = !DILocation(line: 216, column: 22, scope: !527)
!535 = !DILocation(line: 216, column: 12, scope: !527)
!536 = !DILocation(line: 217, column: 16, scope: !537)
!537 = distinct !DILexicalBlock(scope: !527, file: !1, line: 217, column: 13)
!538 = !DILocation(line: 217, column: 13, scope: !527)
!539 = !DILocation(line: 218, column: 31, scope: !540)
!540 = distinct !DILexicalBlock(scope: !537, file: !1, line: 217, column: 24)
!541 = !DILocation(line: 218, column: 29, scope: !540)
!542 = !DILocation(line: 218, column: 41, scope: !540)
!543 = !DILocation(line: 218, column: 39, scope: !540)
!544 = !DILocation(line: 218, column: 19, scope: !545)
!545 = !DILexicalBlockFile(scope: !540, file: !1, discriminator: 1)
!546 = !DILocation(line: 218, column: 17, scope: !540)
!547 = !DILocation(line: 219, column: 23, scope: !540)
!548 = !DILocation(line: 221, column: 19, scope: !540)
!549 = !DILocation(line: 221, column: 19, scope: !545)
!550 = !DILocation(line: 221, column: 19, scope: !551)
!551 = !DILexicalBlockFile(scope: !540, file: !1, discriminator: 3)
!552 = !DILocation(line: 222, column: 19, scope: !540)
!553 = !DILocation(line: 222, column: 25, scope: !540)
!554 = !DILocation(line: 222, column: 17, scope: !540)
!555 = !DILocation(line: 223, column: 19, scope: !540)
!556 = !DILocation(line: 223, column: 22, scope: !540)
!557 = !DILocation(line: 223, column: 17, scope: !540)
!558 = !DILocation(line: 224, column: 19, scope: !540)
!559 = !DILocation(line: 224, column: 22, scope: !540)
!560 = !DILocation(line: 224, column: 17, scope: !540)
!561 = !DILocation(line: 225, column: 9, scope: !540)
!562 = !DILocation(line: 213, column: 7, scope: !563)
!563 = !DILexicalBlockFile(scope: !528, file: !1, discriminator: 1)
!564 = distinct !{!564, !565}
!565 = !DILocation(line: 213, column: 7, scope: !470)
!566 = !DILocation(line: 228, column: 11, scope: !567)
!567 = distinct !DILexicalBlock(scope: !470, file: !1, line: 228, column: 11)
!568 = !DILocation(line: 228, column: 11, scope: !470)
!569 = !DILocation(line: 228, column: 27, scope: !570)
!570 = !DILexicalBlockFile(scope: !567, file: !1, discriminator: 1)
!571 = !DILocation(line: 183, column: 33, scope: !572)
!572 = !DILexicalBlockFile(scope: !421, file: !1, discriminator: 12)
!573 = !DILocation(line: 183, column: 31, scope: !572)
!574 = !DILocation(line: 183, column: 36, scope: !572)
!575 = !DILocation(line: 183, column: 13, scope: !572)
!576 = !DILocation(line: 183, column: 13, scope: !577)
!577 = !DILexicalBlockFile(scope: !421, file: !1, discriminator: 13)
!578 = !DILocation(line: 183, column: 33, scope: !579)
!579 = !DILexicalBlockFile(scope: !421, file: !1, discriminator: 14)
!580 = !DILocation(line: 183, column: 13, scope: !579)
!581 = !DILocation(line: 183, column: 31, scope: !579)
!582 = !DILocation(line: 183, column: 13, scope: !583)
!583 = !DILexicalBlockFile(scope: !421, file: !1, discriminator: 15)
!584 = !DILocation(line: 183, column: 36, scope: !585)
!585 = !DILexicalBlockFile(scope: !421, file: !1, discriminator: 16)
!586 = !DILocation(line: 183, column: 13, scope: !585)
!587 = !DILocation(line: 183, column: 31, scope: !585)
!588 = !DILocation(line: 183, column: 13, scope: !589)
!589 = !DILexicalBlockFile(scope: !421, file: !1, discriminator: 18)
!590 = !DILocation(line: 183, column: 13, scope: !591)
!591 = !DILexicalBlockFile(scope: !589, file: !1, discriminator: 30)
!592 = !DILocation(line: 233, column: 15, scope: !593)
!593 = distinct !DILexicalBlock(scope: !594, file: !1, line: 232, column: 15)
!594 = distinct !DILexicalBlock(scope: !595, file: !1, line: 231, column: 30)
!595 = distinct !DILexicalBlock(scope: !596, file: !1, line: 231, column: 5)
!596 = distinct !DILexicalBlock(scope: !422, file: !1, line: 231, column: 5)
!597 = !DILocation(line: 183, column: 13, scope: !598)
!598 = !DILexicalBlockFile(scope: !446, file: !1, discriminator: 31)
!599 = !DILocation(line: 183, column: 13, scope: !600)
!600 = !DILexicalBlockFile(scope: !446, file: !1, discriminator: 32)
!601 = !DILocation(line: 183, column: 13, scope: !602)
!602 = !DILexicalBlockFile(scope: !446, file: !1, discriminator: 33)
!603 = !DILocation(line: 233, column: 7, scope: !593)
!604 = !DILocation(line: 233, column: 7, scope: !605)
!605 = !DILexicalBlockFile(scope: !593, file: !1, discriminator: 1)
!606 = !DILocation(line: 233, column: 12, scope: !605)
!607 = !DILocation(line: 235, column: 3, scope: !608)
!608 = !DILexicalBlockFile(scope: !422, file: !1, discriminator: 7)
!609 = !DILocation(line: 235, column: 3, scope: !610)
!610 = !DILexicalBlockFile(scope: !422, file: !1, discriminator: 8)
!611 = !DILocation(line: 235, column: 3, scope: !395)
!612 = distinct !DISubprogram(linkageName: ".omp.reduction.reduction_func", scope: !1, file: !1, type: !613, isLocal: true, isDefinition: true, flags: DIFlagArtificial, isOptimized: true, unit: !0, variables: !614)
!613 = !DISubroutineType(types: !29)
!614 = !{!615, !616}
!615 = !DILocalVariable(arg: 1, scope: !612, type: !9, flags: DIFlagArtificial | DIFlagObjectPointer)
!616 = !DILocalVariable(arg: 2, scope: !612, type: !9, flags: DIFlagArtificial)
!617 = !DILocation(line: 0, scope: !612)
!618 = !DILocation(line: 183, column: 33, scope: !612)
!619 = !DILocation(line: 183, column: 31, scope: !612)
!620 = !DILocation(line: 183, column: 36, scope: !612)
!621 = distinct !DISubprogram(name: "print_results", scope: !622, file: !622, line: 10, type: !623, isLocal: false, isDefinition: true, scopeLine: 14, flags: DIFlagPrototyped, isOptimized: true, unit: !21, variables: !626)
!622 = !DIFile(filename: "print_results.c", directory: "/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common")
!623 = !DISubroutineType(types: !624)
!624 = !{null, !71, !72, !31, !31, !31, !31, !13, !13, !71, !625, !71, !71, !71, !71, !71, !71, !71, !71, !71}
!625 = !DIDerivedType(tag: DW_TAG_typedef, name: "logical", file: !25, line: 4, baseType: !24)
!626 = !{!627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649}
!627 = !DILocalVariable(name: "name", arg: 1, scope: !621, file: !622, line: 10, type: !71)
!628 = !DILocalVariable(name: "class", arg: 2, scope: !621, file: !622, line: 10, type: !72)
!629 = !DILocalVariable(name: "n1", arg: 3, scope: !621, file: !622, line: 10, type: !31)
!630 = !DILocalVariable(name: "n2", arg: 4, scope: !621, file: !622, line: 10, type: !31)
!631 = !DILocalVariable(name: "n3", arg: 5, scope: !621, file: !622, line: 10, type: !31)
!632 = !DILocalVariable(name: "niter", arg: 6, scope: !621, file: !622, line: 10, type: !31)
!633 = !DILocalVariable(name: "t", arg: 7, scope: !621, file: !622, line: 11, type: !13)
!634 = !DILocalVariable(name: "mops", arg: 8, scope: !621, file: !622, line: 11, type: !13)
!635 = !DILocalVariable(name: "optype", arg: 9, scope: !621, file: !622, line: 11, type: !71)
!636 = !DILocalVariable(name: "verified", arg: 10, scope: !621, file: !622, line: 11, type: !625)
!637 = !DILocalVariable(name: "npbversion", arg: 11, scope: !621, file: !622, line: 11, type: !71)
!638 = !DILocalVariable(name: "compiletime", arg: 12, scope: !621, file: !622, line: 12, type: !71)
!639 = !DILocalVariable(name: "cs1", arg: 13, scope: !621, file: !622, line: 12, type: !71)
!640 = !DILocalVariable(name: "cs2", arg: 14, scope: !621, file: !622, line: 12, type: !71)
!641 = !DILocalVariable(name: "cs3", arg: 15, scope: !621, file: !622, line: 12, type: !71)
!642 = !DILocalVariable(name: "cs4", arg: 16, scope: !621, file: !622, line: 12, type: !71)
!643 = !DILocalVariable(name: "cs5", arg: 17, scope: !621, file: !622, line: 12, type: !71)
!644 = !DILocalVariable(name: "cs6", arg: 18, scope: !621, file: !622, line: 13, type: !71)
!645 = !DILocalVariable(name: "cs7", arg: 19, scope: !621, file: !622, line: 13, type: !71)
!646 = !DILocalVariable(name: "size", scope: !621, file: !622, line: 15, type: !110)
!647 = !DILocalVariable(name: "j", scope: !621, file: !622, line: 16, type: !31)
!648 = !DILocalVariable(name: "num_threads", scope: !621, file: !622, line: 17, type: !31)
!649 = !DILocalVariable(name: "max_threads", scope: !621, file: !622, line: 17, type: !31)
!650 = !DILocation(line: 10, column: 26, scope: !621)
!651 = !DILocation(line: 10, column: 37, scope: !621)
!652 = !DILocation(line: 10, column: 48, scope: !621)
!653 = !DILocation(line: 10, column: 56, scope: !621)
!654 = !DILocation(line: 10, column: 64, scope: !621)
!655 = !DILocation(line: 10, column: 72, scope: !621)
!656 = !DILocation(line: 11, column: 12, scope: !621)
!657 = !DILocation(line: 11, column: 22, scope: !621)
!658 = !DILocation(line: 11, column: 34, scope: !621)
!659 = !DILocation(line: 11, column: 50, scope: !621)
!660 = !DILocation(line: 11, column: 66, scope: !621)
!661 = !DILocation(line: 12, column: 11, scope: !621)
!662 = !DILocation(line: 12, column: 30, scope: !621)
!663 = !DILocation(line: 12, column: 41, scope: !621)
!664 = !DILocation(line: 12, column: 52, scope: !621)
!665 = !DILocation(line: 12, column: 63, scope: !621)
!666 = !DILocation(line: 12, column: 74, scope: !621)
!667 = !DILocation(line: 13, column: 11, scope: !621)
!668 = !DILocation(line: 13, column: 22, scope: !621)
!669 = !DILocation(line: 15, column: 3, scope: !621)
!670 = !DILocation(line: 15, column: 8, scope: !621)
!671 = !DILocation(line: 17, column: 3, scope: !621)
!672 = !DILocation(line: 17, column: 20, scope: !621)
!673 = !DILocation(line: 17, column: 7, scope: !621)
!674 = !DILocation(line: 20, column: 15, scope: !621)
!675 = !DILocation(line: 24, column: 17, scope: !621)
!676 = !DILocation(line: 25, column: 9, scope: !621)
!677 = !DILocation(line: 33, column: 3, scope: !621)
!678 = !DILocation(line: 34, column: 52, scope: !621)
!679 = !DILocation(line: 34, column: 3, scope: !621)
!680 = !DILocation(line: 41, column: 20, scope: !681)
!681 = distinct !DILexicalBlock(scope: !621, file: !622, line: 41, column: 8)
!682 = !DILocation(line: 42, column: 12, scope: !683)
!683 = distinct !DILexicalBlock(scope: !684, file: !622, line: 42, column: 10)
!684 = distinct !DILexicalBlock(scope: !681, file: !622, line: 41, column: 37)
!685 = !DILocation(line: 42, column: 20, scope: !683)
!686 = !DILocation(line: 42, column: 29, scope: !683)
!687 = !DILocation(line: 42, column: 34, scope: !688)
!688 = !DILexicalBlockFile(scope: !683, file: !622, discriminator: 1)
!689 = !DILocation(line: 42, column: 42, scope: !688)
!690 = !DILocation(line: 42, column: 10, scope: !688)
!691 = !DILocation(line: 43, column: 33, scope: !692)
!692 = distinct !DILexicalBlock(scope: !683, file: !622, line: 42, column: 53)
!693 = !DILocation(line: 43, column: 7, scope: !694)
!694 = !DILexicalBlockFile(scope: !692, file: !622, discriminator: 1)
!695 = !DILocation(line: 16, column: 7, scope: !621)
!696 = !DILocation(line: 45, column: 12, scope: !697)
!697 = distinct !DILexicalBlock(scope: !692, file: !622, line: 45, column: 12)
!698 = !DILocation(line: 45, column: 20, scope: !697)
!699 = !DILocation(line: 45, column: 12, scope: !692)
!700 = !DILocation(line: 46, column: 17, scope: !701)
!701 = distinct !DILexicalBlock(scope: !697, file: !622, line: 45, column: 29)
!702 = !DILocation(line: 48, column: 7, scope: !701)
!703 = !DILocation(line: 49, column: 7, scope: !692)
!704 = !DILocation(line: 49, column: 17, scope: !692)
!705 = !DILocation(line: 50, column: 7, scope: !692)
!706 = !DILocation(line: 51, column: 5, scope: !692)
!707 = !DILocation(line: 52, column: 7, scope: !708)
!708 = distinct !DILexicalBlock(scope: !683, file: !622, line: 51, column: 12)
!709 = !DILocation(line: 55, column: 5, scope: !710)
!710 = distinct !DILexicalBlock(scope: !681, file: !622, line: 54, column: 10)
!711 = !DILocation(line: 58, column: 3, scope: !621)
!712 = !DILocation(line: 59, column: 3, scope: !621)
!713 = !DILocation(line: 61, column: 52, scope: !621)
!714 = !DILocation(line: 61, column: 3, scope: !621)
!715 = !DILocation(line: 62, column: 3, scope: !621)
!716 = !DILocation(line: 63, column: 8, scope: !717)
!717 = distinct !DILexicalBlock(scope: !621, file: !622, line: 63, column: 8)
!718 = !DILocation(line: 63, column: 20, scope: !717)
!719 = !DILocation(line: 63, column: 8, scope: !621)
!720 = !DILocation(line: 64, column: 5, scope: !717)
!721 = !DILocation(line: 66, column: 3, scope: !621)
!722 = !DILocation(line: 67, column: 65, scope: !621)
!723 = !DILocation(line: 67, column: 57, scope: !621)
!724 = !DILocation(line: 67, column: 56, scope: !621)
!725 = !DILocation(line: 67, column: 3, scope: !621)
!726 = !DILocation(line: 69, column: 3, scope: !621)
!727 = !DILocation(line: 70, column: 8, scope: !728)
!728 = distinct !DILexicalBlock(scope: !621, file: !622, line: 70, column: 8)
!729 = !DILocation(line: 70, column: 8, scope: !621)
!730 = !DILocation(line: 71, column: 5, scope: !728)
!731 = !DILocation(line: 73, column: 5, scope: !728)
!732 = !DILocation(line: 74, column: 3, scope: !621)
!733 = !DILocation(line: 75, column: 3, scope: !621)
!734 = !DILocation(line: 77, column: 3, scope: !621)
!735 = !DILocation(line: 79, column: 3, scope: !621)
!736 = !DILocation(line: 80, column: 3, scope: !621)
!737 = !DILocation(line: 81, column: 3, scope: !621)
!738 = !DILocation(line: 82, column: 3, scope: !621)
!739 = !DILocation(line: 83, column: 3, scope: !621)
!740 = !DILocation(line: 84, column: 3, scope: !621)
!741 = !DILocation(line: 86, column: 3, scope: !621)
!742 = !DILocation(line: 92, column: 1, scope: !743)
!743 = !DILexicalBlockFile(scope: !621, file: !622, discriminator: 1)
!744 = !DILocation(line: 92, column: 1, scope: !745)
!745 = !DILexicalBlockFile(scope: !621, file: !622, discriminator: 3)
!746 = !DILocation(line: 92, column: 1, scope: !621)
!747 = distinct !DISubprogram(name: ".omp_outlined.", scope: !22, file: !22, line: 25, type: !748, isLocal: true, isDefinition: true, scopeLine: 26, flags: DIFlagPrototyped, isOptimized: true, unit: !21, variables: !750)
!748 = !DISubroutineType(types: !749)
!749 = !{null, !352, !352, !399}
!750 = !{!751, !752, !753}
!751 = !DILocalVariable(name: ".global_tid.", arg: 1, scope: !747, type: !352, flags: DIFlagArtificial | DIFlagObjectPointer)
!752 = !DILocalVariable(name: ".bound_tid.", arg: 2, scope: !747, type: !352, flags: DIFlagArtificial)
!753 = !DILocalVariable(name: "num_threads", arg: 3, scope: !747, type: !399, flags: DIFlagArtificial)
!754 = !DILocation(line: 0, scope: !747)
!755 = !DILocation(line: 27, column: 13, scope: !756)
!756 = distinct !DILexicalBlock(scope: !757, file: !622, line: 26, column: 3)
!757 = !DILexicalBlockFile(scope: !747, file: !622, discriminator: 0)
!758 = !DILocation(line: 28, column: 19, scope: !759)
!759 = distinct !DILexicalBlock(scope: !756, file: !622, line: 27, column: 13)
!760 = !DILocation(line: 28, column: 17, scope: !759)
!761 = !DILocation(line: 28, column: 5, scope: !762)
!762 = !DILexicalBlockFile(scope: !759, file: !622, discriminator: 1)
!763 = !DILocation(line: 28, column: 5, scope: !759)
!764 = !DILocation(line: 29, column: 3, scope: !757)
!765 = distinct !DISubprogram(name: "randlc", scope: !766, file: !766, line: 4, type: !767, isLocal: false, isDefinition: true, scopeLine: 5, flags: DIFlagPrototyped, isOptimized: true, unit: !27, variables: !769)
!766 = !DIFile(filename: "randdp.c", directory: "/home/amiryousefi/MasterThesis/Codes/NAS/NPB3.3-OMP-C/common")
!767 = !DISubroutineType(types: !768)
!768 = !{!13, !51, !13}
!769 = !{!770, !771, !772, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786}
!770 = !DILocalVariable(name: "x", arg: 1, scope: !765, file: !766, line: 4, type: !51)
!771 = !DILocalVariable(name: "a", arg: 2, scope: !765, file: !766, line: 4, type: !13)
!772 = !DILocalVariable(name: "r23", scope: !765, file: !766, line: 36, type: !773)
!773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!774 = !DILocalVariable(name: "r46", scope: !765, file: !766, line: 37, type: !773)
!775 = !DILocalVariable(name: "t23", scope: !765, file: !766, line: 38, type: !773)
!776 = !DILocalVariable(name: "t46", scope: !765, file: !766, line: 39, type: !773)
!777 = !DILocalVariable(name: "t1", scope: !765, file: !766, line: 41, type: !13)
!778 = !DILocalVariable(name: "t2", scope: !765, file: !766, line: 41, type: !13)
!779 = !DILocalVariable(name: "t3", scope: !765, file: !766, line: 41, type: !13)
!780 = !DILocalVariable(name: "t4", scope: !765, file: !766, line: 41, type: !13)
!781 = !DILocalVariable(name: "a1", scope: !765, file: !766, line: 41, type: !13)
!782 = !DILocalVariable(name: "a2", scope: !765, file: !766, line: 41, type: !13)
!783 = !DILocalVariable(name: "x1", scope: !765, file: !766, line: 41, type: !13)
!784 = !DILocalVariable(name: "x2", scope: !765, file: !766, line: 41, type: !13)
!785 = !DILocalVariable(name: "z", scope: !765, file: !766, line: 41, type: !13)
!786 = !DILocalVariable(name: "r", scope: !765, file: !766, line: 42, type: !13)
!787 = !DILocation(line: 4, column: 24, scope: !765)
!788 = !DILocation(line: 4, column: 34, scope: !765)
!789 = !DILocation(line: 36, column: 16, scope: !765)
!790 = !DILocation(line: 37, column: 16, scope: !765)
!791 = !DILocation(line: 38, column: 16, scope: !765)
!792 = !DILocation(line: 39, column: 16, scope: !765)
!793 = !DILocation(line: 47, column: 12, scope: !765)
!794 = !DILocation(line: 41, column: 10, scope: !765)
!795 = !DILocation(line: 48, column: 8, scope: !765)
!796 = !DILocation(line: 41, column: 26, scope: !765)
!797 = !DILocation(line: 49, column: 16, scope: !765)
!798 = !DILocation(line: 49, column: 10, scope: !765)
!799 = !DILocation(line: 41, column: 30, scope: !765)
!800 = !DILocation(line: 56, column: 15, scope: !765)
!801 = !DILocation(line: 56, column: 12, scope: !765)
!802 = !DILocation(line: 57, column: 8, scope: !765)
!803 = !DILocation(line: 41, column: 34, scope: !765)
!804 = !DILocation(line: 58, column: 17, scope: !765)
!805 = !DILocation(line: 58, column: 11, scope: !765)
!806 = !DILocation(line: 41, column: 38, scope: !765)
!807 = !DILocation(line: 59, column: 11, scope: !765)
!808 = !DILocation(line: 59, column: 21, scope: !765)
!809 = !DILocation(line: 59, column: 16, scope: !765)
!810 = !DILocation(line: 60, column: 19, scope: !765)
!811 = !DILocation(line: 60, column: 8, scope: !765)
!812 = !DILocation(line: 41, column: 14, scope: !765)
!813 = !DILocation(line: 61, column: 16, scope: !765)
!814 = !DILocation(line: 61, column: 10, scope: !765)
!815 = !DILocation(line: 41, column: 42, scope: !765)
!816 = !DILocation(line: 62, column: 12, scope: !765)
!817 = !DILocation(line: 62, column: 21, scope: !765)
!818 = !DILocation(line: 62, column: 16, scope: !765)
!819 = !DILocation(line: 41, column: 18, scope: !765)
!820 = !DILocation(line: 63, column: 19, scope: !765)
!821 = !DILocation(line: 63, column: 8, scope: !765)
!822 = !DILocation(line: 41, column: 22, scope: !765)
!823 = !DILocation(line: 64, column: 17, scope: !765)
!824 = !DILocation(line: 64, column: 11, scope: !765)
!825 = !DILocation(line: 64, column: 6, scope: !765)
!826 = !DILocation(line: 65, column: 11, scope: !765)
!827 = !DILocation(line: 42, column: 10, scope: !765)
!828 = !DILocation(line: 67, column: 3, scope: !765)
!829 = distinct !DISubprogram(name: "vranlc", scope: !766, file: !766, line: 71, type: !830, isLocal: false, isDefinition: true, scopeLine: 72, flags: DIFlagPrototyped, isOptimized: true, unit: !27, variables: !832)
!830 = !DISubroutineType(types: !831)
!831 = !{null, !31, !51, !13, !51}
!832 = !{!833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850}
!833 = !DILocalVariable(name: "n", arg: 1, scope: !829, file: !766, line: 71, type: !31)
!834 = !DILocalVariable(name: "x", arg: 2, scope: !829, file: !766, line: 71, type: !51)
!835 = !DILocalVariable(name: "a", arg: 3, scope: !829, file: !766, line: 71, type: !13)
!836 = !DILocalVariable(name: "y", arg: 4, scope: !829, file: !766, line: 71, type: !51)
!837 = !DILocalVariable(name: "r23", scope: !829, file: !766, line: 103, type: !773)
!838 = !DILocalVariable(name: "r46", scope: !829, file: !766, line: 104, type: !773)
!839 = !DILocalVariable(name: "t23", scope: !829, file: !766, line: 105, type: !773)
!840 = !DILocalVariable(name: "t46", scope: !829, file: !766, line: 106, type: !773)
!841 = !DILocalVariable(name: "t1", scope: !829, file: !766, line: 108, type: !13)
!842 = !DILocalVariable(name: "t2", scope: !829, file: !766, line: 108, type: !13)
!843 = !DILocalVariable(name: "t3", scope: !829, file: !766, line: 108, type: !13)
!844 = !DILocalVariable(name: "t4", scope: !829, file: !766, line: 108, type: !13)
!845 = !DILocalVariable(name: "a1", scope: !829, file: !766, line: 108, type: !13)
!846 = !DILocalVariable(name: "a2", scope: !829, file: !766, line: 108, type: !13)
!847 = !DILocalVariable(name: "x1", scope: !829, file: !766, line: 108, type: !13)
!848 = !DILocalVariable(name: "x2", scope: !829, file: !766, line: 108, type: !13)
!849 = !DILocalVariable(name: "z", scope: !829, file: !766, line: 108, type: !13)
!850 = !DILocalVariable(name: "i", scope: !829, file: !766, line: 110, type: !31)
!851 = !DILocation(line: 71, column: 18, scope: !829)
!852 = !DILocation(line: 71, column: 29, scope: !829)
!853 = !DILocation(line: 71, column: 39, scope: !829)
!854 = !DILocation(line: 71, column: 49, scope: !829)
!855 = !DILocation(line: 103, column: 16, scope: !829)
!856 = !DILocation(line: 104, column: 16, scope: !829)
!857 = !DILocation(line: 105, column: 16, scope: !829)
!858 = !DILocation(line: 106, column: 16, scope: !829)
!859 = !DILocation(line: 115, column: 12, scope: !829)
!860 = !DILocation(line: 108, column: 10, scope: !829)
!861 = !DILocation(line: 116, column: 8, scope: !829)
!862 = !DILocation(line: 108, column: 26, scope: !829)
!863 = !DILocation(line: 117, column: 16, scope: !829)
!864 = !DILocation(line: 117, column: 10, scope: !829)
!865 = !DILocation(line: 108, column: 30, scope: !829)
!866 = !DILocation(line: 110, column: 7, scope: !829)
!867 = !DILocation(line: 122, column: 18, scope: !868)
!868 = !DILexicalBlockFile(scope: !869, file: !766, discriminator: 1)
!869 = distinct !DILexicalBlock(scope: !870, file: !766, line: 122, column: 3)
!870 = distinct !DILexicalBlock(scope: !829, file: !766, line: 122, column: 3)
!871 = !DILocation(line: 122, column: 3, scope: !868)
!872 = !DILocation(line: 128, column: 17, scope: !873)
!873 = distinct !DILexicalBlock(scope: !869, file: !766, line: 122, column: 29)
!874 = !DILocation(line: 128, column: 14, scope: !873)
!875 = !DILocation(line: 129, column: 10, scope: !873)
!876 = !DILocation(line: 108, column: 34, scope: !829)
!877 = !DILocation(line: 130, column: 19, scope: !873)
!878 = !DILocation(line: 130, column: 13, scope: !873)
!879 = !DILocation(line: 108, column: 38, scope: !829)
!880 = !DILocation(line: 131, column: 13, scope: !873)
!881 = !DILocation(line: 131, column: 23, scope: !873)
!882 = !DILocation(line: 131, column: 18, scope: !873)
!883 = !DILocation(line: 132, column: 21, scope: !873)
!884 = !DILocation(line: 132, column: 10, scope: !873)
!885 = !DILocation(line: 108, column: 14, scope: !829)
!886 = !DILocation(line: 133, column: 18, scope: !873)
!887 = !DILocation(line: 133, column: 12, scope: !873)
!888 = !DILocation(line: 108, column: 42, scope: !829)
!889 = !DILocation(line: 134, column: 14, scope: !873)
!890 = !DILocation(line: 134, column: 23, scope: !873)
!891 = !DILocation(line: 134, column: 18, scope: !873)
!892 = !DILocation(line: 108, column: 18, scope: !829)
!893 = !DILocation(line: 135, column: 21, scope: !873)
!894 = !DILocation(line: 135, column: 10, scope: !873)
!895 = !DILocation(line: 108, column: 22, scope: !829)
!896 = !DILocation(line: 136, column: 19, scope: !873)
!897 = !DILocation(line: 136, column: 13, scope: !873)
!898 = !DILocation(line: 136, column: 8, scope: !873)
!899 = !DILocation(line: 137, column: 16, scope: !873)
!900 = !DILocation(line: 137, column: 5, scope: !873)
!901 = !DILocation(line: 137, column: 10, scope: !873)
!902 = distinct !{!902, !903}
!903 = !DILocation(line: 122, column: 3, scope: !829)
!904 = !DILocation(line: 141, column: 1, scope: !829)
!905 = distinct !DISubprogram(name: "timer_clear", scope: !36, file: !36, line: 37, type: !906, isLocal: false, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: true, unit: !32, variables: !908)
!906 = !DISubroutineType(types: !907)
!907 = !{null, !31}
!908 = !{!909}
!909 = !DILocalVariable(name: "n", arg: 1, scope: !905, file: !36, line: 37, type: !31)
!910 = !DILocation(line: 37, column: 23, scope: !905)
!911 = !DILocation(line: 39, column: 5, scope: !905)
!912 = !DILocation(line: 39, column: 16, scope: !905)
!913 = !DILocation(line: 40, column: 5, scope: !905)
!914 = !DILocation(line: 40, column: 14, scope: !905)
!915 = !DILocation(line: 41, column: 1, scope: !905)
!916 = distinct !DISubprogram(name: "timer_start", scope: !36, file: !36, line: 47, type: !906, isLocal: false, isDefinition: true, scopeLine: 48, flags: DIFlagPrototyped, isOptimized: true, unit: !32, variables: !917)
!917 = !{!918}
!918 = !DILocalVariable(name: "n", arg: 1, scope: !916, file: !36, line: 47, type: !31)
!919 = !DILocation(line: 47, column: 23, scope: !916)
!920 = !DILocation(line: 20, column: 9, scope: !921, inlinedAt: !925)
!921 = distinct !DISubprogram(name: "elapsed_time", scope: !36, file: !36, line: 14, type: !922, isLocal: true, isDefinition: true, scopeLine: 15, flags: DIFlagPrototyped, isOptimized: true, unit: !32, variables: !923)
!922 = !DISubroutineType(types: !26)
!923 = !{!924}
!924 = !DILocalVariable(name: "t", scope: !921, file: !36, line: 16, type: !13)
!925 = distinct !DILocation(line: 49, column: 16, scope: !916)
!926 = !DILocation(line: 16, column: 12, scope: !921, inlinedAt: !925)
!927 = !DILocation(line: 49, column: 5, scope: !916)
!928 = !DILocation(line: 49, column: 14, scope: !916)
!929 = !DILocation(line: 50, column: 1, scope: !916)
!930 = distinct !DISubprogram(name: "timer_stop", scope: !36, file: !36, line: 56, type: !906, isLocal: false, isDefinition: true, scopeLine: 57, flags: DIFlagPrototyped, isOptimized: true, unit: !32, variables: !931)
!931 = !{!932, !933, !934}
!932 = !DILocalVariable(name: "n", arg: 1, scope: !930, file: !36, line: 56, type: !31)
!933 = !DILocalVariable(name: "t", scope: !930, file: !36, line: 58, type: !13)
!934 = !DILocalVariable(name: "now", scope: !930, file: !36, line: 58, type: !13)
!935 = !DILocation(line: 56, column: 22, scope: !930)
!936 = !DILocation(line: 20, column: 9, scope: !921, inlinedAt: !937)
!937 = distinct !DILocation(line: 60, column: 11, scope: !930)
!938 = !DILocation(line: 16, column: 12, scope: !921, inlinedAt: !937)
!939 = !DILocation(line: 58, column: 15, scope: !930)
!940 = !DILocation(line: 61, column: 15, scope: !930)
!941 = !DILocation(line: 61, column: 13, scope: !930)
!942 = !DILocation(line: 58, column: 12, scope: !930)
!943 = !DILocation(line: 62, column: 5, scope: !930)
!944 = !DILocation(line: 62, column: 16, scope: !930)
!945 = !DILocation(line: 63, column: 5, scope: !930)
!946 = !DILocation(line: 63, column: 13, scope: !930)
!947 = !DILocation(line: 65, column: 1, scope: !930)
!948 = distinct !DISubprogram(name: "timer_read", scope: !36, file: !36, line: 71, type: !949, isLocal: false, isDefinition: true, scopeLine: 72, flags: DIFlagPrototyped, isOptimized: true, unit: !32, variables: !951)
!949 = !DISubroutineType(types: !950)
!950 = !{!13, !31}
!951 = !{!952}
!952 = !DILocalVariable(name: "n", arg: 1, scope: !948, file: !36, line: 71, type: !31)
!953 = !DILocation(line: 71, column: 24, scope: !948)
!954 = !DILocation(line: 73, column: 13, scope: !948)
!955 = !DILocation(line: 73, column: 5, scope: !948)
!956 = distinct !DISubprogram(name: "timer_count", scope: !36, file: !36, line: 76, type: !957, isLocal: false, isDefinition: true, scopeLine: 77, flags: DIFlagPrototyped, isOptimized: true, unit: !32, variables: !959)
!957 = !DISubroutineType(types: !958)
!958 = !{!43, !31}
!959 = !{!960}
!960 = !DILocalVariable(name: "n", arg: 1, scope: !956, file: !36, line: 76, type: !31)
!961 = !DILocation(line: 76, column: 27, scope: !956)
!962 = !DILocation(line: 78, column: 12, scope: !956)
!963 = !DILocation(line: 78, column: 5, scope: !956)
!964 = !DILocation(line: 7, column: 20, scope: !48)
!965 = !DILocation(line: 11, column: 4, scope: !48)
!966 = !DILocation(line: 11, column: 19, scope: !48)
!967 = !DILocation(line: 12, column: 4, scope: !48)
!968 = !DILocation(line: 13, column: 8, scope: !969)
!969 = distinct !DILexicalBlock(scope: !48, file: !45, line: 13, column: 8)
!970 = !DILocation(line: 13, column: 12, scope: !969)
!971 = !DILocation(line: 13, column: 26, scope: !972)
!972 = !DILexicalBlockFile(scope: !969, file: !45, discriminator: 1)
!973 = !{!974, !975, i64 0}
!974 = !{!"timeval", !975, i64 0, !975, i64 8}
!975 = !{!"long", !200, i64 0}
!976 = !DILocation(line: 13, column: 8, scope: !48)
!977 = !DILocation(line: 13, column: 23, scope: !972)
!978 = !DILocation(line: 13, column: 21, scope: !972)
!979 = !DILocation(line: 13, column: 17, scope: !972)
!980 = !DILocation(line: 14, column: 22, scope: !48)
!981 = !DILocation(line: 14, column: 20, scope: !48)
!982 = !DILocation(line: 14, column: 9, scope: !48)
!983 = !DILocation(line: 14, column: 39, scope: !48)
!984 = !{!974, !975, i64 8}
!985 = !DILocation(line: 14, column: 36, scope: !48)
!986 = !DILocation(line: 14, column: 35, scope: !48)
!987 = !DILocation(line: 14, column: 27, scope: !48)
!988 = !DILocation(line: 14, column: 7, scope: !48)
!989 = !DILocation(line: 15, column: 1, scope: !48)
