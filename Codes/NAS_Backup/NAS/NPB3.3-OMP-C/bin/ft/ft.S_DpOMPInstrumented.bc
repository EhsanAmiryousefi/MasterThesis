; ModuleID = '<stdin>'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.dcomplex = type { double, double }
%ident_t = type { i32, i32, i32, i32, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.timeval = type { i64, i64 }
%struct.timezone = type { i32, i32 }

@u0 = common global [266240 x %struct.dcomplex] zeroinitializer, align 16
@u1 = common global [266240 x %struct.dcomplex] zeroinitializer, align 16
@twiddle = common global [266240 x double] zeroinitializer, align 16
@pad1 = common global [3 x %struct.dcomplex] zeroinitializer, align 16
@pad2 = common global [3 x %struct.dcomplex] zeroinitializer, align 16
@.gomp_critical_user_.var = common global [8 x i32] zeroinitializer
@sums = internal global [7 x %struct.dcomplex] zeroinitializer, align 16
@u = internal global [65 x %struct.dcomplex] zeroinitializer, align 16
@fftblockpad = internal global i32 0, align 4
@fftblock = internal global i32 0, align 4
@debug = internal global i32 0, align 4
@ty2 = internal thread_local global [64 x [33 x %struct.dcomplex]] zeroinitializer, align 16
@ty1 = internal thread_local global [64 x [33 x %struct.dcomplex]] zeroinitializer, align 16
@niter = internal global i32 0, align 4
@timers_enabled = internal global i32 0, align 4
@dims = internal global [3 x i32] zeroinitializer, align 4
@.str = private unnamed_addr constant [3 x i8] c"FT\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"          floating point\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"3.3.1\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"21 Feb 2017\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"(none)\00", align 1
@.str.5 = private unnamed_addr constant [47 x i8] c"-I ../common -I /home/amiryousefi/buildfori...\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"randdp\00", align 1
@.str.18 = private unnamed_addr constant [17 x i8] c"          total \00", align 1
@.str.19 = private unnamed_addr constant [17 x i8] c"          setup \00", align 1
@.str.20 = private unnamed_addr constant [17 x i8] c"            fft \00", align 1
@.str.21 = private unnamed_addr constant [17 x i8] c"         evolve \00", align 1
@.str.22 = private unnamed_addr constant [17 x i8] c"       checksum \00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"           fftx \00", align 1
@.str.24 = private unnamed_addr constant [17 x i8] c"           ffty \00", align 1
@.str.25 = private unnamed_addr constant [17 x i8] c"           fftz \00", align 1
@.str.26 = private unnamed_addr constant [35 x i8] c" timer %2d(%16s) :%9.4f (%6.2f%%)\0A\00", align 1
@.str.33 = private unnamed_addr constant [33 x i8] c" Result verification successful\0A\00", align 1
@.str.34 = private unnamed_addr constant [29 x i8] c" Result verification failed\0A\00", align 1
@.str.35 = private unnamed_addr constant [13 x i8] c" class = %c\0A\00", align 1
@0 = private unnamed_addr constant %ident_t { i32 0, i32 2, i32 0, i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0) }, align 8
@1 = private unnamed_addr constant [24 x i8] c";ft.c;checksum;676;11;;\00"
@.str.32 = private unnamed_addr constant [38 x i8] c" T =%5d     Checksum =%22.12E%22.12E\0A\00", align 1
@2 = private unnamed_addr constant [24 x i8] c";ft.c;checksum;680;13;;\00"
@3 = private unnamed_addr constant [24 x i8] c";ft.c;checksum;680;27;;\00"
@4 = private unnamed_addr constant [24 x i8] c";ft.c;checksum;688;13;;\00"
@.str.7 = private unnamed_addr constant [23 x i8] c";unknown;unknown;0;0;;\00", align 1
@5 = private unnamed_addr constant [22 x i8] c";ft.c;evolve;223;11;;\00"
@6 = private unnamed_addr constant [22 x i8] c";ft.c;evolve;223;58;;\00"
@7 = private unnamed_addr constant [22 x i8] c";ft.c;cffts3;513;11;;\00"
@8 = private unnamed_addr constant [22 x i8] c";ft.c;cffts3;513;61;;\00"
@.str.28 = private unnamed_addr constant [99 x i8] c"CFFTZ: Either U has not been initialized, or else\0Aone of the input parameters is invalid%5d%5d%5d\0A\00", align 1
@9 = private unnamed_addr constant [22 x i8] c";ft.c;cffts2;480;11;;\00"
@10 = private unnamed_addr constant [22 x i8] c";ft.c;cffts2;480;61;;\00"
@11 = private unnamed_addr constant [22 x i8] c";ft.c;cffts1;447;11;;\00"
@12 = private unnamed_addr constant [22 x i8] c";ft.c;cffts1;447;61;;\00"
@13 = private unnamed_addr constant [42 x i8] c";ft.c;compute_initial_conditions;263;11;;\00"
@14 = private unnamed_addr constant [42 x i8] c";ft.c;compute_initial_conditions;263;59;;\00"
@15 = private unnamed_addr constant [32 x i8] c";ft.c;compute_indexmap;376;11;;\00"
@16 = private unnamed_addr constant [32 x i8] c";ft.c;compute_indexmap;376;75;;\00"
@17 = private unnamed_addr constant [23 x i8] c";ft.c;init_ui;199;11;;\00"
@18 = private unnamed_addr constant [23 x i8] c";ft.c;init_ui;199;58;;\00"
@.str.10 = private unnamed_addr constant [11 x i8] c"timer.flag\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.12 = private unnamed_addr constant [59 x i8] c"\0A\0A NAS Parallel Benchmarks (NPB3.3-OMP-C) - FT Benchmark\0A\0A\00", align 1
@.str.13 = private unnamed_addr constant [36 x i8] c" Size                : %4dx%4dx%4d\0A\00", align 1
@.str.14 = private unnamed_addr constant [35 x i8] c" Iterations                  :%7d\0A\00", align 1
@.str.15 = private unnamed_addr constant [35 x i8] c" Number of available threads :%7d\0A\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@19 = private unnamed_addr constant %ident_t { i32 0, i32 2, i32 0, i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.29, i32 0, i32 0) }, align 8
@20 = private unnamed_addr constant [38 x i8] c";print_results.c;print_results;25;9;;\00"
@.str.1.4 = private unnamed_addr constant [28 x i8] c"\0A\0A %s Benchmark Completed.\0A\00", align 1
@.str.2.5 = private unnamed_addr constant [37 x i8] c" Class           =             %12c\0A\00", align 1
@.str.3.6 = private unnamed_addr constant [8 x i8] c"%15.0lf\00", align 1
@.str.4.7 = private unnamed_addr constant [34 x i8] c" Size            =          %15s\0A\00", align 1
@.str.5.8 = private unnamed_addr constant [37 x i8] c" Size            =             %12d\0A\00", align 1
@.str.6.9 = private unnamed_addr constant [42 x i8] c" Size            =           %4dx%4dx%4d\0A\00", align 1
@.str.7.10 = private unnamed_addr constant [37 x i8] c" Iterations      =             %12d\0A\00", align 1
@.str.8 = private unnamed_addr constant [40 x i8] c" Time in seconds =             %12.2lf\0A\00", align 1
@.str.9 = private unnamed_addr constant [37 x i8] c" Total threads   =             %12d\0A\00", align 1
@.str.10.11 = private unnamed_addr constant [37 x i8] c" Avail threads   =             %12d\0A\00", align 1
@.str.11.12 = private unnamed_addr constant [54 x i8] c" Warning: Threads used differ from threads available\0A\00", align 1
@.str.12.13 = private unnamed_addr constant [37 x i8] c" Mop/s total     =          %15.2lf\0A\00", align 1
@.str.13.14 = private unnamed_addr constant [37 x i8] c" Mop/s/thread    =          %15.2lf\0A\00", align 1
@.str.14.15 = private unnamed_addr constant [25 x i8] c" Operation type  = %24s\0A\00", align 1
@.str.15.16 = private unnamed_addr constant [37 x i8] c" Verification    =             %12s\0A\00", align 1
@.str.16.17 = private unnamed_addr constant [11 x i8] c"SUCCESSFUL\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"UNSUCCESSFUL\00", align 1
@.str.18.18 = private unnamed_addr constant [37 x i8] c" Version         =             %12s\0A\00", align 1
@.str.19.19 = private unnamed_addr constant [37 x i8] c" Compile date    =             %12s\0A\00", align 1
@.str.20.20 = private unnamed_addr constant [42 x i8] c"\0A Compile options:\0A    CC           = %s\0A\00", align 1
@.str.21.21 = private unnamed_addr constant [23 x i8] c"    CLINK        = %s\0A\00", align 1
@.str.22.22 = private unnamed_addr constant [23 x i8] c"    C_LIB        = %s\0A\00", align 1
@.str.23.23 = private unnamed_addr constant [23 x i8] c"    C_INC        = %s\0A\00", align 1
@.str.24.24 = private unnamed_addr constant [23 x i8] c"    CFLAGS       = %s\0A\00", align 1
@.str.25.25 = private unnamed_addr constant [23 x i8] c"    CLINKFLAGS   = %s\0A\00", align 1
@.str.26.26 = private unnamed_addr constant [23 x i8] c"    RAND         = %s\0A\00", align 1
@.str.27 = private unnamed_addr constant [195 x i8] c"\0A--------------------------------------\0A Please send all errors/feedbacks to:\0A Center for Manycore Programming\0A cmp@aces.snu.ac.kr\0A http://aces.snu.ac.kr\0A--------------------------------------\0A\0A\00", align 1
@21 = private unnamed_addr constant [39 x i8] c";print_results.c;print_results;27;13;;\00"
@.str.29 = private unnamed_addr constant [23 x i8] c";unknown;unknown;0;0;;\00", align 1
@count = internal thread_local global [64 x i32] zeroinitializer, align 16
@elapsed = internal thread_local global [64 x double] zeroinitializer, align 16
@start = internal thread_local global [64 x double] zeroinitializer, align 16
@wtime_.sec = internal global i32 -1, align 4
@.str.30 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.31 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.36 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.37 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.38 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.39 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.40 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.41 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.42 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.43 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.44 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.45 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.46 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.47 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.48 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.49 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.50 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.51 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.52 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.53 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.54 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.55 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.56 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.57 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.58 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.59 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.60 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.61 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.62 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.63 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.64 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.65 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.66 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.67 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.68 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.69 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.70 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.71 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.72 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.73 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.74 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.75 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.76 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.77 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.78 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.79 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.80 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.81 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.82 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.83 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.84 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.85 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.86 = private unnamed_addr constant [5 x i8] c"main\00"
@.str.87 = private unnamed_addr constant [6 x i8] c"setup\00"
@.str.88 = private unnamed_addr constant [6 x i8] c"setup\00"
@.str.89 = private unnamed_addr constant [6 x i8] c"setup\00"
@.str.90 = private unnamed_addr constant [6 x i8] c"setup\00"
@.str.91 = private unnamed_addr constant [8 x i8] c"init_ui\00"
@.str.92 = private unnamed_addr constant [8 x i8] c"init_ui\00"
@.str.93 = private unnamed_addr constant [8 x i8] c"init_ui\00"
@.str.94 = private unnamed_addr constant [8 x i8] c"init_ui\00"
@.str.95 = private unnamed_addr constant [8 x i8] c"init_ui\00"
@.str.96 = private unnamed_addr constant [8 x i8] c"init_ui\00"
@.str.97 = private unnamed_addr constant [8 x i8] c"init_ui\00"
@.str.98 = private unnamed_addr constant [8 x i8] c"init_ui\00"
@.str.99 = private unnamed_addr constant [8 x i8] c"init_ui\00"
@.str.100 = private unnamed_addr constant [8 x i8] c"init_ui\00"
@.str.101 = private unnamed_addr constant [8 x i8] c"init_ui\00"
@.str.102 = private unnamed_addr constant [8 x i8] c"init_ui\00"
@.str.103 = private unnamed_addr constant [8 x i8] c"init_ui\00"
@.str.104 = private unnamed_addr constant [8 x i8] c"init_ui\00"
@.str.105 = private unnamed_addr constant [8 x i8] c"init_ui\00"
@.str.106 = private unnamed_addr constant [17 x i8] c"compute_indexmap\00"
@.str.107 = private unnamed_addr constant [17 x i8] c"compute_indexmap\00"
@.str.108 = private unnamed_addr constant [17 x i8] c"compute_indexmap\00"
@.str.109 = private unnamed_addr constant [17 x i8] c"compute_indexmap\00"
@.str.110 = private unnamed_addr constant [17 x i8] c"compute_indexmap\00"
@.str.111 = private unnamed_addr constant [27 x i8] c"compute_initial_conditions\00"
@.str.112 = private unnamed_addr constant [27 x i8] c"compute_initial_conditions\00"
@.str.113 = private unnamed_addr constant [27 x i8] c"compute_initial_conditions\00"
@.str.114 = private unnamed_addr constant [27 x i8] c"compute_initial_conditions\00"
@.str.115 = private unnamed_addr constant [27 x i8] c"compute_initial_conditions\00"
@.str.116 = private unnamed_addr constant [27 x i8] c"compute_initial_conditions\00"
@.str.117 = private unnamed_addr constant [27 x i8] c"compute_initial_conditions\00"
@.str.118 = private unnamed_addr constant [27 x i8] c"compute_initial_conditions\00"
@.str.119 = private unnamed_addr constant [27 x i8] c"compute_initial_conditions\00"
@.str.120 = private unnamed_addr constant [27 x i8] c"compute_initial_conditions\00"
@.str.121 = private unnamed_addr constant [27 x i8] c"compute_initial_conditions\00"
@.str.122 = private unnamed_addr constant [27 x i8] c"compute_initial_conditions\00"
@.str.123 = private unnamed_addr constant [27 x i8] c"compute_initial_conditions\00"
@.str.124 = private unnamed_addr constant [9 x i8] c"fft_init\00"
@.str.125 = private unnamed_addr constant [9 x i8] c"fft_init\00"
@.str.126 = private unnamed_addr constant [9 x i8] c"fft_init\00"
@.str.127 = private unnamed_addr constant [9 x i8] c"fft_init\00"
@.str.128 = private unnamed_addr constant [9 x i8] c"fft_init\00"
@.str.129 = private unnamed_addr constant [9 x i8] c"fft_init\00"
@.str.130 = private unnamed_addr constant [9 x i8] c"fft_init\00"
@.str.131 = private unnamed_addr constant [9 x i8] c"fft_init\00"
@.str.132 = private unnamed_addr constant [9 x i8] c"fft_init\00"
@.str.133 = private unnamed_addr constant [9 x i8] c"fft_init\00"
@.str.134 = private unnamed_addr constant [9 x i8] c"fft_init\00"
@.str.135 = private unnamed_addr constant [9 x i8] c"fft_init\00"
@.str.136 = private unnamed_addr constant [9 x i8] c"fft_init\00"
@.str.137 = private unnamed_addr constant [9 x i8] c"fft_init\00"
@.str.138 = private unnamed_addr constant [9 x i8] c"fft_init\00"
@.str.139 = private unnamed_addr constant [9 x i8] c"fft_init\00"
@.str.140 = private unnamed_addr constant [9 x i8] c"fft_init\00"
@.str.141 = private unnamed_addr constant [9 x i8] c"fft_init\00"
@.str.142 = private unnamed_addr constant [9 x i8] c"fft_init\00"
@.str.143 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.144 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.145 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.146 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.147 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.148 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.149 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.150 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.151 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.152 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.153 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.154 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.155 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.156 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.157 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.158 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.159 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.160 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.161 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.162 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.163 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.164 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.165 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.166 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.167 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.168 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.169 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.170 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.171 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.172 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.173 = private unnamed_addr constant [4 x i8] c"fft\00"
@.str.174 = private unnamed_addr constant [7 x i8] c"evolve\00"
@.str.175 = private unnamed_addr constant [7 x i8] c"evolve\00"
@.str.176 = private unnamed_addr constant [7 x i8] c"evolve\00"
@.str.177 = private unnamed_addr constant [7 x i8] c"evolve\00"
@.str.178 = private unnamed_addr constant [7 x i8] c"evolve\00"
@.str.179 = private unnamed_addr constant [7 x i8] c"evolve\00"
@.str.180 = private unnamed_addr constant [7 x i8] c"evolve\00"
@.str.181 = private unnamed_addr constant [7 x i8] c"evolve\00"
@.str.182 = private unnamed_addr constant [7 x i8] c"evolve\00"
@.str.183 = private unnamed_addr constant [7 x i8] c"evolve\00"
@.str.184 = private unnamed_addr constant [7 x i8] c"evolve\00"
@.str.185 = private unnamed_addr constant [7 x i8] c"evolve\00"
@.str.186 = private unnamed_addr constant [7 x i8] c"evolve\00"
@.str.187 = private unnamed_addr constant [7 x i8] c"evolve\00"
@.str.188 = private unnamed_addr constant [7 x i8] c"evolve\00"
@.str.189 = private unnamed_addr constant [9 x i8] c"checksum\00"
@.str.190 = private unnamed_addr constant [9 x i8] c"checksum\00"
@.str.191 = private unnamed_addr constant [9 x i8] c"checksum\00"
@.str.192 = private unnamed_addr constant [9 x i8] c"checksum\00"
@.str.193 = private unnamed_addr constant [9 x i8] c"checksum\00"
@.str.194 = private unnamed_addr constant [9 x i8] c"checksum\00"
@.str.195 = private unnamed_addr constant [9 x i8] c"checksum\00"
@.str.196 = private unnamed_addr constant [9 x i8] c"checksum\00"
@.str.197 = private unnamed_addr constant [9 x i8] c"checksum\00"
@.str.198 = private unnamed_addr constant [9 x i8] c"checksum\00"
@.str.199 = private unnamed_addr constant [9 x i8] c"checksum\00"
@.str.200 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.201 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.202 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.203 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.204 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.205 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.206 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.207 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.208 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.209 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.210 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.211 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.212 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.213 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.214 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.215 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.216 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.217 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.218 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.219 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.220 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.221 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.222 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.223 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.224 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.225 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.226 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.227 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.228 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.229 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.230 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.231 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.232 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.233 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.234 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.235 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.236 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.237 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.238 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.239 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.240 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.241 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.242 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.243 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.244 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.245 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.246 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.247 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.248 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.249 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.250 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.251 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.252 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.253 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.254 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.255 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.256 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.257 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.258 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.259 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.260 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.261 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.262 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.263 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.264 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.265 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.266 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.267 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.268 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.269 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.270 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.271 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.272 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.273 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.274 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.275 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.276 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.277 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.278 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.279 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.280 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.281 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.282 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.283 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.284 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.285 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.286 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.287 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.288 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.289 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.290 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.291 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.292 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.293 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.294 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.295 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.296 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.297 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.298 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.299 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.300 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.301 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.302 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.303 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.304 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.305 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.306 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.307 = private unnamed_addr constant [7 x i8] c"verify\00"
@.str.308 = private unnamed_addr constant [13 x i8] c"print_timers\00"
@.str.309 = private unnamed_addr constant [13 x i8] c"print_timers\00"
@.str.310 = private unnamed_addr constant [13 x i8] c"print_timers\00"
@.str.311 = private unnamed_addr constant [13 x i8] c"print_timers\00"
@.str.312 = private unnamed_addr constant [13 x i8] c"print_timers\00"
@.str.313 = private unnamed_addr constant [13 x i8] c"print_timers\00"
@.str.314 = private unnamed_addr constant [13 x i8] c"print_timers\00"
@.str.315 = private unnamed_addr constant [13 x i8] c"print_timers\00"
@.str.316 = private unnamed_addr constant [13 x i8] c"print_timers\00"
@.str.317 = private unnamed_addr constant [13 x i8] c"print_timers\00"
@.str.318 = private unnamed_addr constant [11 x i8] c"dcmplx_div\00"
@.str.319 = private unnamed_addr constant [11 x i8] c"dcmplx_div\00"
@.str.320 = private unnamed_addr constant [11 x i8] c"dcmplx_div\00"
@.str.321 = private unnamed_addr constant [11 x i8] c"dcmplx_div\00"
@.str.322 = private unnamed_addr constant [11 x i8] c"dcmplx_div\00"
@.str.323 = private unnamed_addr constant [11 x i8] c"dcmplx_div\00"
@.str.324 = private unnamed_addr constant [11 x i8] c"dcmplx_div\00"
@.str.325 = private unnamed_addr constant [11 x i8] c"dcmplx_div\00"
@.str.326 = private unnamed_addr constant [11 x i8] c"dcmplx_div\00"
@.str.327 = private unnamed_addr constant [11 x i8] c"dcmplx_div\00"
@.str.328 = private unnamed_addr constant [11 x i8] c"dcmplx_div\00"
@.str.329 = private unnamed_addr constant [11 x i8] c"dcmplx_div\00"
@.str.330 = private unnamed_addr constant [11 x i8] c"dcmplx_div\00"
@.str.331 = private unnamed_addr constant [11 x i8] c"dcmplx_div\00"
@.str.332 = private unnamed_addr constant [11 x i8] c"dcmplx_div\00"
@.str.333 = private unnamed_addr constant [11 x i8] c"dcmplx_div\00"
@.str.334 = private unnamed_addr constant [11 x i8] c"dcmplx_div\00"
@.str.335 = private unnamed_addr constant [11 x i8] c"dcmplx_div\00"
@.str.336 = private unnamed_addr constant [11 x i8] c"dcmplx_div\00"
@.str.337 = private unnamed_addr constant [11 x i8] c"dcmplx_div\00"
@.str.338 = private unnamed_addr constant [11 x i8] c"dcmplx_div\00"
@.str.339 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@.str.340 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@22 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.341 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@23 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.342 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@24 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.343 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@25 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.344 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@26 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.345 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@27 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.346 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@28 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.347 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@29 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.348 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@30 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.349 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@31 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.350 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@32 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.351 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@33 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.352 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@34 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.353 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@35 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.354 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@36 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.355 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@37 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.356 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@38 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.357 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@39 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.358 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@40 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.359 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@41 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.360 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@42 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.361 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@43 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.362 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@44 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.363 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@45 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.364 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@46 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.365 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@47 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.366 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@48 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.367 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@49 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.368 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@50 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.369 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@51 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.370 = private unnamed_addr constant [18 x i8] c".omp_outlined..31\00"
@52 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.371 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@.str.372 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@53 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.373 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@54 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.374 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@55 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.375 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@56 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.376 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@57 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.377 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@58 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.378 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@59 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.379 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@60 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.380 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@61 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.381 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@62 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.382 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@63 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.383 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@64 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.384 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@65 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.385 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@66 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.386 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@67 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.387 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@68 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.388 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@69 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.389 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@70 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.390 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@71 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.391 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@72 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.392 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@73 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.393 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@74 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.394 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@75 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.395 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@76 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.396 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@77 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.397 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@78 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.398 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@79 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.399 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@80 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.400 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@81 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.401 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@82 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.402 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@83 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.403 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@84 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.404 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@85 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.405 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@86 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.406 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@87 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.407 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@88 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.408 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@89 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.409 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@90 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.410 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@91 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.411 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@92 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.412 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@93 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.413 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@94 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.414 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@95 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.415 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@96 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.416 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@97 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.417 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@98 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.418 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@99 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.419 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@100 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.420 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@101 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.421 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@102 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.422 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@103 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.423 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@104 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.424 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@105 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.425 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@106 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.426 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@107 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.427 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@108 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.428 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@109 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.429 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@110 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.430 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@111 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.431 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@112 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.432 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@113 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.433 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@114 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.434 = private unnamed_addr constant [17 x i8] c".omp_outlined..8\00"
@115 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.435 = private unnamed_addr constant [7 x i8] c"cffts1\00"
@.str.436 = private unnamed_addr constant [7 x i8] c"cffts1\00"
@.str.437 = private unnamed_addr constant [7 x i8] c"cffts1\00"
@.str.438 = private unnamed_addr constant [7 x i8] c"cffts1\00"
@.str.439 = private unnamed_addr constant [7 x i8] c"cffts1\00"
@.str.440 = private unnamed_addr constant [7 x i8] c"cffts1\00"
@.str.441 = private unnamed_addr constant [7 x i8] c"cffts1\00"
@.str.442 = private unnamed_addr constant [7 x i8] c"cffts1\00"
@.str.443 = private unnamed_addr constant [7 x i8] c"cffts1\00"
@.str.444 = private unnamed_addr constant [7 x i8] c"cffts1\00"
@.str.445 = private unnamed_addr constant [7 x i8] c"cffts1\00"
@.str.446 = private unnamed_addr constant [7 x i8] c"cffts1\00"
@.str.447 = private unnamed_addr constant [7 x i8] c"cffts1\00"
@.str.448 = private unnamed_addr constant [7 x i8] c"cffts2\00"
@.str.449 = private unnamed_addr constant [7 x i8] c"cffts2\00"
@.str.450 = private unnamed_addr constant [7 x i8] c"cffts2\00"
@.str.451 = private unnamed_addr constant [7 x i8] c"cffts2\00"
@.str.452 = private unnamed_addr constant [7 x i8] c"cffts2\00"
@.str.453 = private unnamed_addr constant [7 x i8] c"cffts2\00"
@.str.454 = private unnamed_addr constant [7 x i8] c"cffts2\00"
@.str.455 = private unnamed_addr constant [7 x i8] c"cffts2\00"
@.str.456 = private unnamed_addr constant [7 x i8] c"cffts2\00"
@.str.457 = private unnamed_addr constant [7 x i8] c"cffts2\00"
@.str.458 = private unnamed_addr constant [7 x i8] c"cffts2\00"
@.str.459 = private unnamed_addr constant [7 x i8] c"cffts2\00"
@.str.460 = private unnamed_addr constant [7 x i8] c"cffts2\00"
@.str.461 = private unnamed_addr constant [7 x i8] c"cffts3\00"
@.str.462 = private unnamed_addr constant [7 x i8] c"cffts3\00"
@.str.463 = private unnamed_addr constant [7 x i8] c"cffts3\00"
@.str.464 = private unnamed_addr constant [7 x i8] c"cffts3\00"
@.str.465 = private unnamed_addr constant [7 x i8] c"cffts3\00"
@.str.466 = private unnamed_addr constant [7 x i8] c"cffts3\00"
@.str.467 = private unnamed_addr constant [7 x i8] c"cffts3\00"
@.str.468 = private unnamed_addr constant [7 x i8] c"cffts3\00"
@.str.469 = private unnamed_addr constant [7 x i8] c"cffts3\00"
@.str.470 = private unnamed_addr constant [7 x i8] c"cffts3\00"
@.str.471 = private unnamed_addr constant [7 x i8] c"cffts3\00"
@.str.472 = private unnamed_addr constant [7 x i8] c"cffts3\00"
@.str.473 = private unnamed_addr constant [7 x i8] c"cffts3\00"
@.str.474 = private unnamed_addr constant [6 x i8] c"ilog2\00"
@.str.475 = private unnamed_addr constant [6 x i8] c"ilog2\00"
@.str.476 = private unnamed_addr constant [6 x i8] c"ilog2\00"
@.str.477 = private unnamed_addr constant [6 x i8] c"ilog2\00"
@.str.478 = private unnamed_addr constant [6 x i8] c"ilog2\00"
@.str.479 = private unnamed_addr constant [6 x i8] c"ilog2\00"
@.str.480 = private unnamed_addr constant [6 x i8] c"ilog2\00"
@.str.481 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@.str.482 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@116 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.483 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@117 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.484 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@118 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.485 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@119 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.486 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@120 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.487 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@121 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.488 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@122 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.489 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@123 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.490 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@124 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.491 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@125 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.492 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@126 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.493 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@127 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.494 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@128 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.495 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@129 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.496 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@130 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.497 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@131 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.498 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@132 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.499 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@133 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.500 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@134 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.501 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@135 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.502 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@136 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.503 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@137 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.504 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@138 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.505 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@139 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.506 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@140 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.507 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@141 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.508 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@142 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.509 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@143 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.510 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@144 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.511 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@145 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.512 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@146 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.513 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@147 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.514 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@148 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.515 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@149 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.516 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@150 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.517 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@151 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.518 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@152 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.519 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@153 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.520 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@154 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.521 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@155 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.522 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@156 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.523 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@157 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.524 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@158 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.525 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@159 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.526 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@160 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.527 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@161 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.528 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@162 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.529 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@163 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.530 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@164 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.531 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@165 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.532 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@166 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.533 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@167 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.534 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@168 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.535 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@169 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.536 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@170 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.537 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@171 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.538 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@172 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.539 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@173 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.540 = private unnamed_addr constant [18 x i8] c".omp_outlined..30\00"
@174 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.541 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.542 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.543 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.544 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.545 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.546 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.547 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.548 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.549 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.550 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.551 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.552 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.553 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.554 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.555 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.556 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.557 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.558 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.559 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.560 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.561 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.562 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.563 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.564 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.565 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.566 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.567 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.568 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.569 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.570 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.571 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.572 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.573 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.574 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.575 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.576 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.577 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.578 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.579 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.580 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.581 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.582 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.583 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.584 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.585 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.586 = private unnamed_addr constant [6 x i8] c"cfftz\00"
@.str.587 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.588 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.589 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.590 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.591 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.592 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.593 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.594 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.595 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.596 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.597 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.598 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.599 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.600 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.601 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.602 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.603 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.604 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.605 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.606 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.607 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.608 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.609 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.610 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.611 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.612 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.613 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.614 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.615 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.616 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.617 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.618 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.619 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.620 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.621 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.622 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.623 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.624 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.625 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.626 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.627 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.628 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.629 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.630 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.631 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.632 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.633 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.634 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.635 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.636 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.637 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.638 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.639 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.640 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.641 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.642 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.643 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.644 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.645 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.646 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.647 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.648 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.649 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.650 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.651 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.652 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.653 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.654 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.655 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.656 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.657 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.658 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.659 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.660 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.661 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.662 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.663 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.664 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.665 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.666 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.667 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.668 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.669 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.670 = private unnamed_addr constant [6 x i8] c"fftz2\00"
@.str.671 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@.str.672 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@175 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.673 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@176 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.674 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@177 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.675 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@178 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.676 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@179 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.677 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@180 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.678 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@181 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.679 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@182 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.680 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@183 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.681 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@184 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.682 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@185 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.683 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@186 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.684 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@187 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.685 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@188 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.686 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@189 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.687 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@190 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.688 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@191 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.689 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@192 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.690 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@193 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.691 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@194 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.692 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@195 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.693 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@196 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.694 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@197 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.695 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@198 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.696 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@199 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.697 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@200 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.698 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@201 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.699 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@202 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.700 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@203 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.701 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@204 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.702 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@205 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.703 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@206 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.704 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@207 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.705 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@208 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.706 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@209 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.707 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@210 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.708 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@211 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.709 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@212 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.710 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@213 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.711 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@214 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.712 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@215 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.713 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@216 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.714 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@217 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.715 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@218 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.716 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@219 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.717 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@220 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.718 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@221 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.719 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@222 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.720 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@223 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.721 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@224 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.722 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@225 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.723 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@226 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.724 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@227 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.725 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@228 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.726 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@229 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.727 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@230 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.728 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@231 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.729 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@232 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.730 = private unnamed_addr constant [18 x i8] c".omp_outlined..29\00"
@233 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.731 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@.str.732 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@234 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.733 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@235 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.734 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@236 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.735 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@237 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.736 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@238 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.737 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@239 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.738 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@240 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.739 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@241 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.740 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@242 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.741 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@243 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.742 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@244 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.743 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@245 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.744 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@246 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.745 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@247 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.746 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@248 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.747 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@249 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.748 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@250 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.749 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@251 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.750 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@252 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.751 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@253 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.752 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@254 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.753 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@255 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.754 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@256 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.755 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@257 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.756 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@258 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.757 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@259 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.758 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@260 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.759 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@261 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.760 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@262 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.761 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@263 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.762 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@264 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.763 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@265 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.764 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@266 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.765 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@267 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.766 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@268 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.767 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@269 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.768 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@270 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.769 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@271 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.770 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@272 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.771 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@273 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.772 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@274 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.773 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@275 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.774 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@276 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.775 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@277 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.776 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@278 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.777 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@279 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.778 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@280 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.779 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@281 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.780 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@282 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.781 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@283 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.782 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@284 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.783 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@285 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.784 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@286 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.785 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@287 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.786 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@288 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.787 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@289 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.788 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@290 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.789 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@291 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.790 = private unnamed_addr constant [18 x i8] c".omp_outlined..27\00"
@292 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.791 = private unnamed_addr constant [7 x i8] c"ipow46\00"
@.str.792 = private unnamed_addr constant [7 x i8] c"ipow46\00"
@.str.793 = private unnamed_addr constant [7 x i8] c"ipow46\00"
@.str.794 = private unnamed_addr constant [7 x i8] c"ipow46\00"
@.str.795 = private unnamed_addr constant [7 x i8] c"ipow46\00"
@.str.796 = private unnamed_addr constant [7 x i8] c"ipow46\00"
@.str.797 = private unnamed_addr constant [7 x i8] c"ipow46\00"
@.str.798 = private unnamed_addr constant [7 x i8] c"ipow46\00"
@.str.799 = private unnamed_addr constant [7 x i8] c"ipow46\00"
@.str.800 = private unnamed_addr constant [7 x i8] c"ipow46\00"
@.str.801 = private unnamed_addr constant [7 x i8] c"ipow46\00"
@.str.802 = private unnamed_addr constant [7 x i8] c"ipow46\00"
@.str.803 = private unnamed_addr constant [7 x i8] c"ipow46\00"
@.str.804 = private unnamed_addr constant [7 x i8] c"ipow46\00"
@.str.805 = private unnamed_addr constant [7 x i8] c"ipow46\00"
@.str.806 = private unnamed_addr constant [7 x i8] c"ipow46\00"
@.str.807 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@.str.808 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@293 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.809 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@294 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.810 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@295 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.811 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@296 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.812 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@297 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.813 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@298 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.814 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@299 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.815 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@300 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.816 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@301 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.817 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@302 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.818 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@303 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.819 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@304 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.820 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@305 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.821 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@306 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.822 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@307 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.823 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@308 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.824 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@309 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.825 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@310 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.826 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@311 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.827 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@312 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.828 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@313 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.829 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@314 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.830 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@315 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.831 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@316 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.832 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@317 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.833 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@318 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.834 = private unnamed_addr constant [17 x i8] c".omp_outlined..9\00"
@319 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.835 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@.str.836 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@320 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.837 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@321 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.838 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@322 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.839 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@323 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.840 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@324 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.841 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@325 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.842 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@326 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.843 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@327 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.844 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@328 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.845 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@329 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.846 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@330 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.847 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@331 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.848 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@332 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.849 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@333 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.850 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@334 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.851 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@335 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.852 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@336 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.853 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@337 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.854 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@338 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.855 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@339 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.856 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@340 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.857 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@341 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.858 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@342 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.859 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@343 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.860 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@344 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.861 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@345 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.862 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@346 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.863 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@347 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.864 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@348 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.865 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@349 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.866 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@350 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.867 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@351 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.868 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@352 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.869 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@353 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.870 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@354 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.871 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@355 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.872 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@356 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.873 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@357 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.874 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@358 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.875 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@359 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.876 = private unnamed_addr constant [18 x i8] c".omp_outlined..17\00"
@360 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.877 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.878 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.879 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.880 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.881 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.882 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.883 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.884 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.885 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.886 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.887 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.888 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.889 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.890 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.891 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.892 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.893 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.894 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.895 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.896 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.897 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.898 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.899 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.900 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.901 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.902 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.903 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.904 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.905 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.906 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.907 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.908 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.909 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.910 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.911 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.912 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.913 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.914 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.915 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.916 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.917 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.918 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.919 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.920 = private unnamed_addr constant [15 x i8] c".omp_outlined.\00"
@.str.921 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.922 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.923 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.924 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.925 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.926 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.927 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.928 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.929 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.930 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.931 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.932 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.933 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.934 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.935 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.936 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.937 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.938 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.939 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.940 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.941 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.942 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.943 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.944 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.945 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.946 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.947 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.948 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.949 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.950 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.951 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.952 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.953 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.954 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.955 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.956 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.957 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.958 = private unnamed_addr constant [14 x i8] c"print_results\00"
@.str.959 = private unnamed_addr constant [17 x i8] c".omp_outlined..3\00"
@.str.960 = private unnamed_addr constant [17 x i8] c".omp_outlined..3\00"
@361 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.961 = private unnamed_addr constant [17 x i8] c".omp_outlined..3\00"
@362 = private unnamed_addr constant [5 x i8] c".str\00"
@.str.962 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.963 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.964 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.965 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.966 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.967 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.968 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.969 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.970 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.971 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.972 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.973 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.974 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.975 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.976 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.977 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.978 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.979 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.980 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.981 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.982 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.983 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.984 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.985 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.986 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.987 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.988 = private unnamed_addr constant [7 x i8] c"randlc\00"
@.str.989 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.990 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.991 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.992 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.993 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.994 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.995 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.996 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.997 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.998 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.999 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.1000 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.1001 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.1002 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.1003 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.1004 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.1005 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.1006 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.1007 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.1008 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.1009 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.1010 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.1011 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.1012 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.1013 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.1014 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.1015 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.1016 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.1017 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.1018 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.1019 = private unnamed_addr constant [7 x i8] c"vranlc\00"
@.str.1020 = private unnamed_addr constant [12 x i8] c"timer_clear\00"
@.str.1021 = private unnamed_addr constant [12 x i8] c"timer_clear\00"
@.str.1022 = private unnamed_addr constant [12 x i8] c"timer_start\00"
@.str.1023 = private unnamed_addr constant [13 x i8] c"elapsed_time\00"
@.str.1024 = private unnamed_addr constant [11 x i8] c"timer_stop\00"
@.str.1025 = private unnamed_addr constant [11 x i8] c"timer_stop\00"
@.str.1026 = private unnamed_addr constant [11 x i8] c"timer_stop\00"
@.str.1027 = private unnamed_addr constant [11 x i8] c"timer_stop\00"
@.str.1028 = private unnamed_addr constant [11 x i8] c"timer_stop\00"
@.str.1029 = private unnamed_addr constant [11 x i8] c"timer_stop\00"
@.str.1030 = private unnamed_addr constant [11 x i8] c"timer_stop\00"
@.str.1031 = private unnamed_addr constant [11 x i8] c"timer_stop\00"
@.str.1032 = private unnamed_addr constant [11 x i8] c"timer_read\00"
@.str.1033 = private unnamed_addr constant [11 x i8] c"timer_read\00"
@.str.1034 = private unnamed_addr constant [12 x i8] c"timer_count\00"
@.str.1035 = private unnamed_addr constant [12 x i8] c"timer_count\00"
@.str.1036 = private unnamed_addr constant [7 x i8] c"wtime_\00"
@.str.1037 = private unnamed_addr constant [7 x i8] c"wtime_\00"
@.str.1038 = private unnamed_addr constant [7 x i8] c"wtime_\00"
@.str.1039 = private unnamed_addr constant [7 x i8] c"wtime_\00"
@.str.1040 = private unnamed_addr constant [7 x i8] c"wtime_\00"
@.str.1041 = private unnamed_addr constant [7 x i8] c"wtime_\00"

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 !dbg !91 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  %iter = alloca i32, align 4
  %total_time = alloca double, align 8
  %mflops = alloca double, align 8
  %verified = alloca i32, align 4
  %Class = alloca i8, align 1
  %0 = ptrtoint i32* %retval to i64
  store i32 0, i32* %retval, align 4
  %1 = ptrtoint i32* %argc.addr to i64
  store i32 %argc, i32* %argc.addr, align 4
  call void @__DiscoPoPOpenMPInitialize()
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !97, metadata !98), !dbg !99
  %2 = ptrtoint i8*** %argv.addr to i64
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !100, metadata !98), !dbg !101
  call void @llvm.dbg.declare(metadata i32* %i, metadata !102, metadata !98), !dbg !103
  call void @llvm.dbg.declare(metadata i32* %iter, metadata !104, metadata !98), !dbg !105
  call void @llvm.dbg.declare(metadata double* %total_time, metadata !106, metadata !98), !dbg !107
  call void @llvm.dbg.declare(metadata double* %mflops, metadata !108, metadata !98), !dbg !109
  call void @llvm.dbg.declare(metadata i32* %verified, metadata !110, metadata !98), !dbg !111
  call void @llvm.dbg.declare(metadata i8* %Class, metadata !112, metadata !98), !dbg !113
  %3 = ptrtoint i32* %i to i64
  store i32 1, i32* %i, align 4, !dbg !114
  br label %for.cond, !dbg !116

for.cond:                                         ; preds = %for.inc, %entry
  %4 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %5 = load i32, i32* %i, align 4, !dbg !117
  %cmp = icmp sle i32 %5, 8, !dbg !120
  br i1 %cmp, label %for.body, label %for.end, !dbg !121

for.body:                                         ; preds = %for.cond
  %6 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %7 = load i32, i32* %i, align 4, !dbg !122
  call void @timer_clear(i32 %7), !dbg !124
  br label %for.inc, !dbg !125

for.inc:                                          ; preds = %for.body
  %8 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %9 = load i32, i32* %i, align 4, !dbg !126
  %inc = add nsw i32 %9, 1, !dbg !126
  %10 = ptrtoint i32* %i to i64
  store i32 %inc, i32* %i, align 4, !dbg !126
  br label %for.cond, !dbg !128, !llvm.loop !129

for.end:                                          ; preds = %for.cond
  call void @setup(), !dbg !131
  %11 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0) to i64
  call void @__DiscoPoPOpenMPRead(i64 %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %12 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0), align 4, !dbg !132
  %13 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1) to i64
  call void @__DiscoPoPOpenMPRead(i64 %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %14 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1), align 4, !dbg !133
  %15 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2) to i64
  call void @__DiscoPoPOpenMPRead(i64 %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %16 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2), align 4, !dbg !134
  call void @init_ui(i8* bitcast ([266240 x %struct.dcomplex]* @u0 to i8*), i8* bitcast ([266240 x %struct.dcomplex]* @u1 to i8*), i8* bitcast ([266240 x double]* @twiddle to i8*), i32 %12, i32 %14, i32 %16), !dbg !135
  %17 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0) to i64
  call void @__DiscoPoPOpenMPRead(i64 %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %18 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0), align 4, !dbg !136
  %19 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1) to i64
  call void @__DiscoPoPOpenMPRead(i64 %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %20 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1), align 4, !dbg !137
  %21 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2) to i64
  call void @__DiscoPoPOpenMPRead(i64 %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %22 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2), align 4, !dbg !138
  call void @compute_indexmap(i8* bitcast ([266240 x double]* @twiddle to i8*), i32 %18, i32 %20, i32 %22), !dbg !139
  %23 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0) to i64
  call void @__DiscoPoPOpenMPRead(i64 %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %24 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0), align 4, !dbg !140
  %25 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1) to i64
  call void @__DiscoPoPOpenMPRead(i64 %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %26 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1), align 4, !dbg !141
  %27 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2) to i64
  call void @__DiscoPoPOpenMPRead(i64 %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %28 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2), align 4, !dbg !142
  call void @compute_initial_conditions(i8* bitcast ([266240 x %struct.dcomplex]* @u1 to i8*), i32 %24, i32 %26, i32 %28), !dbg !143
  %29 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0) to i64
  call void @__DiscoPoPOpenMPRead(i64 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %30 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0), align 4, !dbg !144
  call void @fft_init(i32 %30), !dbg !145
  call void @fft(i32 1, %struct.dcomplex* getelementptr inbounds ([266240 x %struct.dcomplex], [266240 x %struct.dcomplex]* @u1, i32 0, i32 0), %struct.dcomplex* getelementptr inbounds ([266240 x %struct.dcomplex], [266240 x %struct.dcomplex]* @u0, i32 0, i32 0)), !dbg !146
  %31 = ptrtoint i32* %i to i64
  store i32 1, i32* %i, align 4, !dbg !147
  br label %for.cond1, !dbg !149

for.cond1:                                        ; preds = %for.inc4, %for.end
  %32 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %33 = load i32, i32* %i, align 4, !dbg !150
  %cmp2 = icmp sle i32 %33, 8, !dbg !153
  br i1 %cmp2, label %for.body3, label %for.end6, !dbg !154

for.body3:                                        ; preds = %for.cond1
  %34 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %35 = load i32, i32* %i, align 4, !dbg !155
  call void @timer_clear(i32 %35), !dbg !157
  br label %for.inc4, !dbg !158

for.inc4:                                         ; preds = %for.body3
  %36 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %37 = load i32, i32* %i, align 4, !dbg !159
  %inc5 = add nsw i32 %37, 1, !dbg !159
  %38 = ptrtoint i32* %i to i64
  store i32 %inc5, i32* %i, align 4, !dbg !159
  br label %for.cond1, !dbg !161, !llvm.loop !162

for.end6:                                         ; preds = %for.cond1
  call void @timer_start(i32 1), !dbg !164
  %39 = ptrtoint i32* @timers_enabled to i64
  call void @__DiscoPoPOpenMPRead(i64 %39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %40 = load i32, i32* @timers_enabled, align 4, !dbg !165
  %tobool = icmp ne i32 %40, 0, !dbg !165
  br i1 %tobool, label %if.then, label %if.end, !dbg !167

if.then:                                          ; preds = %for.end6
  call void @timer_start(i32 2), !dbg !168
  br label %if.end, !dbg !168

if.end:                                           ; preds = %if.then, %for.end6
  %41 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0) to i64
  call void @__DiscoPoPOpenMPRead(i64 %41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %42 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0), align 4, !dbg !170
  %43 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1) to i64
  call void @__DiscoPoPOpenMPRead(i64 %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %44 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1), align 4, !dbg !171
  %45 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2) to i64
  call void @__DiscoPoPOpenMPRead(i64 %45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %46 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2), align 4, !dbg !172
  call void @compute_indexmap(i8* bitcast ([266240 x double]* @twiddle to i8*), i32 %42, i32 %44, i32 %46), !dbg !173
  %47 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0) to i64
  call void @__DiscoPoPOpenMPRead(i64 %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.54, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %48 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0), align 4, !dbg !174
  %49 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1) to i64
  call void @__DiscoPoPOpenMPRead(i64 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %50 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1), align 4, !dbg !175
  %51 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2) to i64
  call void @__DiscoPoPOpenMPRead(i64 %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %52 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2), align 4, !dbg !176
  call void @compute_initial_conditions(i8* bitcast ([266240 x %struct.dcomplex]* @u1 to i8*), i32 %48, i32 %50, i32 %52), !dbg !177
  %53 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0) to i64
  call void @__DiscoPoPOpenMPRead(i64 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %54 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0), align 4, !dbg !178
  call void @fft_init(i32 %54), !dbg !179
  %55 = ptrtoint i32* @timers_enabled to i64
  call void @__DiscoPoPOpenMPRead(i64 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %56 = load i32, i32* @timers_enabled, align 4, !dbg !180
  %tobool7 = icmp ne i32 %56, 0, !dbg !180
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !182

if.then8:                                         ; preds = %if.end
  call void @timer_stop(i32 2), !dbg !183
  br label %if.end9, !dbg !183

if.end9:                                          ; preds = %if.then8, %if.end
  %57 = ptrtoint i32* @timers_enabled to i64
  call void @__DiscoPoPOpenMPRead(i64 %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %58 = load i32, i32* @timers_enabled, align 4, !dbg !185
  %tobool10 = icmp ne i32 %58, 0, !dbg !185
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !187

if.then11:                                        ; preds = %if.end9
  call void @timer_start(i32 3), !dbg !188
  br label %if.end12, !dbg !188

if.end12:                                         ; preds = %if.then11, %if.end9
  call void @fft(i32 1, %struct.dcomplex* getelementptr inbounds ([266240 x %struct.dcomplex], [266240 x %struct.dcomplex]* @u1, i32 0, i32 0), %struct.dcomplex* getelementptr inbounds ([266240 x %struct.dcomplex], [266240 x %struct.dcomplex]* @u0, i32 0, i32 0)), !dbg !190
  %59 = ptrtoint i32* @timers_enabled to i64
  call void @__DiscoPoPOpenMPRead(i64 %59, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %60 = load i32, i32* @timers_enabled, align 4, !dbg !191
  %tobool13 = icmp ne i32 %60, 0, !dbg !191
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !193

if.then14:                                        ; preds = %if.end12
  call void @timer_stop(i32 3), !dbg !194
  br label %if.end15, !dbg !194

if.end15:                                         ; preds = %if.then14, %if.end12
  %61 = ptrtoint i32* %iter to i64
  store i32 1, i32* %iter, align 4, !dbg !196
  br label %for.cond16, !dbg !198

for.cond16:                                       ; preds = %for.inc37, %if.end15
  %62 = ptrtoint i32* %iter to i64
  call void @__DiscoPoPOpenMPRead(i64 %62, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %63 = load i32, i32* %iter, align 4, !dbg !199
  %64 = ptrtoint i32* @niter to i64
  call void @__DiscoPoPOpenMPRead(i64 %64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %65 = load i32, i32* @niter, align 4, !dbg !202
  %cmp17 = icmp sle i32 %63, %65, !dbg !203
  br i1 %cmp17, label %for.body18, label %for.end39, !dbg !204

for.body18:                                       ; preds = %for.cond16
  %66 = ptrtoint i32* @timers_enabled to i64
  call void @__DiscoPoPOpenMPRead(i64 %66, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %67 = load i32, i32* @timers_enabled, align 4, !dbg !205
  %tobool19 = icmp ne i32 %67, 0, !dbg !205
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !208

if.then20:                                        ; preds = %for.body18
  call void @timer_start(i32 4), !dbg !209
  br label %if.end21, !dbg !209

if.end21:                                         ; preds = %if.then20, %for.body18
  %68 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0) to i64
  call void @__DiscoPoPOpenMPRead(i64 %68, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %69 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0), align 4, !dbg !211
  %70 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1) to i64
  call void @__DiscoPoPOpenMPRead(i64 %70, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %71 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1), align 4, !dbg !212
  %72 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2) to i64
  call void @__DiscoPoPOpenMPRead(i64 %72, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.66, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %73 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2), align 4, !dbg !213
  call void @evolve(i8* bitcast ([266240 x %struct.dcomplex]* @u0 to i8*), i8* bitcast ([266240 x %struct.dcomplex]* @u1 to i8*), i8* bitcast ([266240 x double]* @twiddle to i8*), i32 %69, i32 %71, i32 %73), !dbg !214
  %74 = ptrtoint i32* @timers_enabled to i64
  call void @__DiscoPoPOpenMPRead(i64 %74, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %75 = load i32, i32* @timers_enabled, align 4, !dbg !215
  %tobool22 = icmp ne i32 %75, 0, !dbg !215
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !217

if.then23:                                        ; preds = %if.end21
  call void @timer_stop(i32 4), !dbg !218
  br label %if.end24, !dbg !218

if.end24:                                         ; preds = %if.then23, %if.end21
  %76 = ptrtoint i32* @timers_enabled to i64
  call void @__DiscoPoPOpenMPRead(i64 %76, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %77 = load i32, i32* @timers_enabled, align 4, !dbg !220
  %tobool25 = icmp ne i32 %77, 0, !dbg !220
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !222

if.then26:                                        ; preds = %if.end24
  call void @timer_start(i32 3), !dbg !223
  br label %if.end27, !dbg !223

if.end27:                                         ; preds = %if.then26, %if.end24
  call void @fft(i32 -1, %struct.dcomplex* getelementptr inbounds ([266240 x %struct.dcomplex], [266240 x %struct.dcomplex]* @u1, i32 0, i32 0), %struct.dcomplex* getelementptr inbounds ([266240 x %struct.dcomplex], [266240 x %struct.dcomplex]* @u1, i32 0, i32 0)), !dbg !225
  %78 = ptrtoint i32* @timers_enabled to i64
  call void @__DiscoPoPOpenMPRead(i64 %78, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %79 = load i32, i32* @timers_enabled, align 4, !dbg !226
  %tobool28 = icmp ne i32 %79, 0, !dbg !226
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !228

if.then29:                                        ; preds = %if.end27
  call void @timer_stop(i32 3), !dbg !229
  br label %if.end30, !dbg !229

if.end30:                                         ; preds = %if.then29, %if.end27
  %80 = ptrtoint i32* @timers_enabled to i64
  call void @__DiscoPoPOpenMPRead(i64 %80, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.70, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %81 = load i32, i32* @timers_enabled, align 4, !dbg !231
  %tobool31 = icmp ne i32 %81, 0, !dbg !231
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !233

if.then32:                                        ; preds = %if.end30
  call void @timer_start(i32 5), !dbg !234
  br label %if.end33, !dbg !234

if.end33:                                         ; preds = %if.then32, %if.end30
  %82 = ptrtoint i32* %iter to i64
  call void @__DiscoPoPOpenMPRead(i64 %82, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %83 = load i32, i32* %iter, align 4, !dbg !236
  %84 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0) to i64
  call void @__DiscoPoPOpenMPRead(i64 %84, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %85 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0), align 4, !dbg !237
  %86 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1) to i64
  call void @__DiscoPoPOpenMPRead(i64 %86, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %87 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1), align 4, !dbg !238
  %88 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2) to i64
  call void @__DiscoPoPOpenMPRead(i64 %88, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %89 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2), align 4, !dbg !239
  call void @checksum(i32 %83, i8* bitcast ([266240 x %struct.dcomplex]* @u1 to i8*), i32 %85, i32 %87, i32 %89), !dbg !240
  %90 = ptrtoint i32* @timers_enabled to i64
  call void @__DiscoPoPOpenMPRead(i64 %90, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %91 = load i32, i32* @timers_enabled, align 4, !dbg !241
  %tobool34 = icmp ne i32 %91, 0, !dbg !241
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !243

if.then35:                                        ; preds = %if.end33
  call void @timer_stop(i32 5), !dbg !244
  br label %if.end36, !dbg !244

if.end36:                                         ; preds = %if.then35, %if.end33
  br label %for.inc37, !dbg !246

for.inc37:                                        ; preds = %if.end36
  %92 = ptrtoint i32* %iter to i64
  call void @__DiscoPoPOpenMPRead(i64 %92, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.76, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %93 = load i32, i32* %iter, align 4, !dbg !247
  %inc38 = add nsw i32 %93, 1, !dbg !247
  %94 = ptrtoint i32* %iter to i64
  store i32 %inc38, i32* %iter, align 4, !dbg !247
  br label %for.cond16, !dbg !249, !llvm.loop !250

for.end39:                                        ; preds = %for.cond16
  %95 = ptrtoint i32* @niter to i64
  call void @__DiscoPoPOpenMPRead(i64 %95, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %96 = load i32, i32* @niter, align 4, !dbg !252
  call void @verify(i32 64, i32 64, i32 64, i32 %96, i32* %verified, i8* %Class), !dbg !253
  call void @timer_stop(i32 1), !dbg !254
  %call = call double @timer_read(i32 1), !dbg !255
  %97 = ptrtoint double* %total_time to i64
  store double %call, double* %total_time, align 8, !dbg !256
  %98 = ptrtoint double* %total_time to i64
  call void @__DiscoPoPOpenMPRead(i64 %98, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %99 = load double, double* %total_time, align 8, !dbg !257
  %cmp40 = fcmp une double %99, 0.000000e+00, !dbg !259
  br i1 %cmp40, label %if.then41, label %if.else, !dbg !260

if.then41:                                        ; preds = %for.end39
  %call42 = call double @log(double 2.621440e+05) #8, !dbg !261
  %mul = fmul double 7.196410e+00, %call42, !dbg !263
  %add = fadd double 1.481570e+01, %mul, !dbg !264
  %call43 = call double @log(double 2.621440e+05) #8, !dbg !265
  %mul44 = fmul double 7.211130e+00, %call43, !dbg !266
  %add45 = fadd double 5.235180e+00, %mul44, !dbg !267
  %100 = ptrtoint i32* @niter to i64
  call void @__DiscoPoPOpenMPRead(i64 %100, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.79, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %101 = load i32, i32* @niter, align 4, !dbg !268
  %conv = sitofp i32 %101 to double, !dbg !268
  %mul46 = fmul double %add45, %conv, !dbg !269
  %add47 = fadd double %add, %mul46, !dbg !270
  %mul48 = fmul double 2.621440e-01, %add47, !dbg !271
  %102 = ptrtoint double* %total_time to i64
  call void @__DiscoPoPOpenMPRead(i64 %102, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.80, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %103 = load double, double* %total_time, align 8, !dbg !272
  %div = fdiv double %mul48, %103, !dbg !273
  %104 = ptrtoint double* %mflops to i64
  store double %div, double* %mflops, align 8, !dbg !274
  br label %if.end49, !dbg !275

if.else:                                          ; preds = %for.end39
  %105 = ptrtoint double* %mflops to i64
  store double 0.000000e+00, double* %mflops, align 8, !dbg !276
  br label %if.end49

if.end49:                                         ; preds = %if.else, %if.then41
  %106 = ptrtoint i8* %Class to i64
  call void @__DiscoPoPOpenMPRead(i64 %106, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81, i32 0, i32 0), i32 0, i32 -1, i32 1)
  %107 = load i8, i8* %Class, align 1, !dbg !278
  %108 = ptrtoint i32* @niter to i64
  call void @__DiscoPoPOpenMPRead(i64 %108, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %109 = load i32, i32* @niter, align 4, !dbg !279
  %110 = ptrtoint double* %total_time to i64
  call void @__DiscoPoPOpenMPRead(i64 %110, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %111 = load double, double* %total_time, align 8, !dbg !280
  %112 = ptrtoint double* %mflops to i64
  call void @__DiscoPoPOpenMPRead(i64 %112, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.84, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %113 = load double, double* %mflops, align 8, !dbg !281
  %114 = ptrtoint i32* %verified to i64
  call void @__DiscoPoPOpenMPRead(i64 %114, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %115 = load i32, i32* %verified, align 4, !dbg !282
  call void @print_results(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8 signext %107, i32 64, i32 64, i32 64, i32 %109, double %111, double %113, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i32 %115, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0)), !dbg !283
  %116 = ptrtoint i32* @timers_enabled to i64
  call void @__DiscoPoPOpenMPRead(i64 %116, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.86, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %117 = load i32, i32* @timers_enabled, align 4, !dbg !284
  %tobool50 = icmp ne i32 %117, 0, !dbg !284
  br i1 %tobool50, label %if.then51, label %if.end52, !dbg !286

if.then51:                                        ; preds = %if.end49
  call void @print_timers(), !dbg !287
  br label %if.end52, !dbg !287

if.end52:                                         ; preds = %if.then51, %if.end49
  call void @__DiscoPoPOpenMPFinalize()
  ret i32 0, !dbg !289
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define internal void @setup() #0 !dbg !290 {
entry:
  %fp = alloca %struct._IO_FILE*, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !293, metadata !98), !dbg !353
  %0 = ptrtoint i32* @debug to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0)
  store i32 0, i32* @debug, align 4, !dbg !354
  %call = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i32 0, i32 0)), !dbg !355
  %1 = ptrtoint %struct._IO_FILE** %fp to i64
  call void @__DiscoPoPOpenMPWrite(i64 %1)
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fp, align 8, !dbg !357
  %cmp = icmp ne %struct._IO_FILE* %call, null, !dbg !358
  br i1 %cmp, label %if.then, label %if.else, !dbg !359

if.then:                                          ; preds = %entry
  %2 = ptrtoint i32* @timers_enabled to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store i32 1, i32* @timers_enabled, align 4, !dbg !360
  %3 = ptrtoint %struct._IO_FILE** %fp to i64
  call void @__DiscoPoPOpenMPRead(i64 %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.87, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !362
  %call1 = call i32 @fclose(%struct._IO_FILE* %4), !dbg !363
  br label %if.end, !dbg !364

if.else:                                          ; preds = %entry
  %5 = ptrtoint i32* @timers_enabled to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store i32 0, i32* @timers_enabled, align 4, !dbg !365
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = ptrtoint i32* @niter to i64
  call void @__DiscoPoPOpenMPWrite(i64 %6)
  store i32 6, i32* @niter, align 4, !dbg !367
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i32 0, i32 0)), !dbg !368
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.13, i32 0, i32 0), i32 64, i32 64, i32 64), !dbg !369
  %7 = ptrtoint i32* @niter to i64
  call void @__DiscoPoPOpenMPRead(i64 %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.88, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %8 = load i32, i32* @niter, align 4, !dbg !370
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.14, i32 0, i32 0), i32 %8), !dbg !371
  %call5 = call i32 @omp_get_max_threads(), !dbg !372
  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.15, i32 0, i32 0), i32 %call5), !dbg !373
  %call7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i32 0, i32 0)), !dbg !375
  %9 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0) to i64
  call void @__DiscoPoPOpenMPWrite(i64 %9)
  store i32 64, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0), align 4, !dbg !376
  %10 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1) to i64
  call void @__DiscoPoPOpenMPWrite(i64 %10)
  store i32 64, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1), align 4, !dbg !377
  %11 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2) to i64
  call void @__DiscoPoPOpenMPWrite(i64 %11)
  store i32 64, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2), align 4, !dbg !378
  %12 = ptrtoint i32* @fftblock to i64
  call void @__DiscoPoPOpenMPWrite(i64 %12)
  store i32 32, i32* @fftblock, align 4, !dbg !379
  %13 = ptrtoint i32* @fftblockpad to i64
  call void @__DiscoPoPOpenMPWrite(i64 %13)
  store i32 33, i32* @fftblockpad, align 4, !dbg !380
  %14 = ptrtoint i32* @fftblock to i64
  call void @__DiscoPoPOpenMPRead(i64 %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %15 = load i32, i32* @fftblock, align 4, !dbg !381
  %cmp8 = icmp ne i32 %15, 32, !dbg !383
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !384

if.then9:                                         ; preds = %if.end
  %16 = ptrtoint i32* @fftblock to i64
  call void @__DiscoPoPOpenMPRead(i64 %16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %17 = load i32, i32* @fftblock, align 4, !dbg !385
  %add = add nsw i32 %17, 3, !dbg !387
  %18 = ptrtoint i32* @fftblockpad to i64
  call void @__DiscoPoPOpenMPWrite(i64 %18)
  store i32 %add, i32* @fftblockpad, align 4, !dbg !388
  br label %if.end10, !dbg !389

if.end10:                                         ; preds = %if.then9, %if.end
  ret void, !dbg !390
}

; Function Attrs: nounwind uwtable
define internal void @init_ui(i8* %ou0, i8* %ou1, i8* %ot, i32 %d1, i32 %d2, i32 %d3) #0 !dbg !391 {
entry:
  %ou0.addr = alloca i8*, align 8
  %ou1.addr = alloca i8*, align 8
  %ot.addr = alloca i8*, align 8
  %d1.addr = alloca i32, align 4
  %d2.addr = alloca i32, align 4
  %d3.addr = alloca i32, align 4
  %u0 = alloca %struct.dcomplex*, align 8
  %u1 = alloca %struct.dcomplex*, align 8
  %twiddle = alloca double*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %.kmpc_loc.addr = alloca %ident_t, align 8
  %0 = bitcast %ident_t* %.kmpc_loc.addr to i8*
  %1 = bitcast %ident_t* @0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 24, i32 8, i1 false)
  %2 = ptrtoint i8** %ou0.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store i8* %ou0, i8** %ou0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ou0.addr, metadata !394, metadata !98), !dbg !395
  %3 = ptrtoint i8** %ou1.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store i8* %ou1, i8** %ou1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ou1.addr, metadata !396, metadata !98), !dbg !397
  %4 = ptrtoint i8** %ot.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store i8* %ot, i8** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ot.addr, metadata !398, metadata !98), !dbg !399
  %5 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store i32 %d1, i32* %d1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d1.addr, metadata !400, metadata !98), !dbg !401
  %6 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %6)
  store i32 %d2, i32* %d2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d2.addr, metadata !402, metadata !98), !dbg !403
  %7 = ptrtoint i32* %d3.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %7)
  store i32 %d3, i32* %d3.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d3.addr, metadata !404, metadata !98), !dbg !405
  %8 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.91, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %9 = load i32, i32* %d2.addr, align 4, !dbg !406
  %10 = zext i32 %9 to i64, !dbg !407
  %11 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.92, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %12 = load i32, i32* %d1.addr, align 4, !dbg !408
  %add = add nsw i32 %12, 1, !dbg !409
  %13 = zext i32 %add to i64, !dbg !407
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %u0, metadata !410, metadata !98), !dbg !411
  %14 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %14, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.93, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %15 = load i32, i32* %d2.addr, align 4, !dbg !412
  %16 = zext i32 %15 to i64, !dbg !413
  %17 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %17, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.94, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %18 = load i32, i32* %d1.addr, align 4, !dbg !414
  %add1 = add nsw i32 %18, 1, !dbg !415
  %19 = zext i32 %add1 to i64, !dbg !413
  %20 = ptrtoint i8** %ou0.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %20, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.95, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %21 = load i8*, i8** %ou0.addr, align 8, !dbg !416
  %22 = bitcast i8* %21 to %struct.dcomplex*, !dbg !413
  %23 = ptrtoint %struct.dcomplex** %u0 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %23)
  store %struct.dcomplex* %22, %struct.dcomplex** %u0, align 8, !dbg !411
  %24 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.96, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %25 = load i32, i32* %d2.addr, align 4, !dbg !417
  %26 = zext i32 %25 to i64, !dbg !418
  %27 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %27, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.97, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %28 = load i32, i32* %d1.addr, align 4, !dbg !419
  %add2 = add nsw i32 %28, 1, !dbg !420
  %29 = zext i32 %add2 to i64, !dbg !418
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %u1, metadata !421, metadata !98), !dbg !422
  %30 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %30, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.98, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %31 = load i32, i32* %d2.addr, align 4, !dbg !423
  %32 = zext i32 %31 to i64, !dbg !424
  %33 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %33, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.99, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %34 = load i32, i32* %d1.addr, align 4, !dbg !425
  %add3 = add nsw i32 %34, 1, !dbg !426
  %35 = zext i32 %add3 to i64, !dbg !424
  %36 = ptrtoint i8** %ou1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %36, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.100, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %37 = load i8*, i8** %ou1.addr, align 8, !dbg !427
  %38 = bitcast i8* %37 to %struct.dcomplex*, !dbg !424
  %39 = ptrtoint %struct.dcomplex** %u1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %39)
  store %struct.dcomplex* %38, %struct.dcomplex** %u1, align 8, !dbg !422
  %40 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %40, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.101, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %41 = load i32, i32* %d2.addr, align 4, !dbg !428
  %42 = zext i32 %41 to i64, !dbg !429
  %43 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %43, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.102, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %44 = load i32, i32* %d1.addr, align 4, !dbg !430
  %add4 = add nsw i32 %44, 1, !dbg !431
  %45 = zext i32 %add4 to i64, !dbg !429
  call void @llvm.dbg.declare(metadata double** %twiddle, metadata !432, metadata !98), !dbg !433
  %46 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %46, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.103, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %47 = load i32, i32* %d2.addr, align 4, !dbg !434
  %48 = zext i32 %47 to i64, !dbg !435
  %49 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %49, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.104, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %50 = load i32, i32* %d1.addr, align 4, !dbg !436
  %add5 = add nsw i32 %50, 1, !dbg !437
  %51 = zext i32 %add5 to i64, !dbg !435
  %52 = ptrtoint i8** %ot.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %52, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.105, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %53 = load i8*, i8** %ot.addr, align 8, !dbg !438
  %54 = bitcast i8* %53 to double*, !dbg !435
  %55 = ptrtoint double** %twiddle to i64
  call void @__DiscoPoPOpenMPWrite(i64 %55)
  store double* %54, double** %twiddle, align 8, !dbg !433
  call void @llvm.dbg.declare(metadata i32* %i, metadata !439, metadata !98), !dbg !440
  call void @llvm.dbg.declare(metadata i32* %j, metadata !441, metadata !98), !dbg !442
  call void @llvm.dbg.declare(metadata i32* %k, metadata !443, metadata !98), !dbg !444
  %56 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !445
  %57 = ptrtoint i8** %56 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %57)
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @17, i32 0, i32 0), i8** %56, align 8, !dbg !445
  call void (%ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%ident_t* %.kmpc_loc.addr, i32 12, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i32*, i32*, i32*, i64, i64, %struct.dcomplex*, i64, i64, %struct.dcomplex*, i64, i64, double*)* @.omp_outlined. to void (i32*, i32*, ...)*), i32* %d3.addr, i32* %d2.addr, i32* %d1.addr, i64 %10, i64 %13, %struct.dcomplex** %u0, i64 %26, i64 %29, %struct.dcomplex** %u1, i64 %42, i64 %45, double** %twiddle), !dbg !445
  ret void, !dbg !446
}

; Function Attrs: nounwind uwtable
define internal void @compute_indexmap(i8* %ot, i32 %d1, i32 %d2, i32 %d3) #0 !dbg !447 {
entry:
  %ot.addr = alloca i8*, align 8
  %d1.addr = alloca i32, align 4
  %d2.addr = alloca i32, align 4
  %d3.addr = alloca i32, align 4
  %twiddle = alloca double*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %kk = alloca i32, align 4
  %kk2 = alloca i32, align 4
  %jj = alloca i32, align 4
  %kj2 = alloca i32, align 4
  %ii = alloca i32, align 4
  %ap = alloca double, align 8
  %.kmpc_loc.addr = alloca %ident_t, align 8
  %0 = bitcast %ident_t* %.kmpc_loc.addr to i8*
  %1 = bitcast %ident_t* @0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 24, i32 8, i1 false)
  %2 = ptrtoint i8** %ot.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store i8* %ot, i8** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ot.addr, metadata !450, metadata !98), !dbg !451
  %3 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store i32 %d1, i32* %d1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d1.addr, metadata !452, metadata !98), !dbg !453
  %4 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store i32 %d2, i32* %d2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d2.addr, metadata !454, metadata !98), !dbg !455
  %5 = ptrtoint i32* %d3.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store i32 %d3, i32* %d3.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d3.addr, metadata !456, metadata !98), !dbg !457
  %6 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.106, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %7 = load i32, i32* %d2.addr, align 4, !dbg !458
  %8 = zext i32 %7 to i64, !dbg !459
  %9 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %9, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.107, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %10 = load i32, i32* %d1.addr, align 4, !dbg !460
  %add = add nsw i32 %10, 1, !dbg !461
  %11 = zext i32 %add to i64, !dbg !459
  call void @llvm.dbg.declare(metadata double** %twiddle, metadata !462, metadata !98), !dbg !463
  %12 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.108, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %13 = load i32, i32* %d2.addr, align 4, !dbg !464
  %14 = zext i32 %13 to i64, !dbg !465
  %15 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %15, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.109, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %16 = load i32, i32* %d1.addr, align 4, !dbg !466
  %add1 = add nsw i32 %16, 1, !dbg !467
  %17 = zext i32 %add1 to i64, !dbg !465
  %18 = ptrtoint i8** %ot.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %18, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.110, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %19 = load i8*, i8** %ot.addr, align 8, !dbg !468
  %20 = bitcast i8* %19 to double*, !dbg !465
  %21 = ptrtoint double** %twiddle to i64
  call void @__DiscoPoPOpenMPWrite(i64 %21)
  store double* %20, double** %twiddle, align 8, !dbg !463
  call void @llvm.dbg.declare(metadata i32* %i, metadata !469, metadata !98), !dbg !470
  call void @llvm.dbg.declare(metadata i32* %j, metadata !471, metadata !98), !dbg !472
  call void @llvm.dbg.declare(metadata i32* %k, metadata !473, metadata !98), !dbg !474
  call void @llvm.dbg.declare(metadata i32* %kk, metadata !475, metadata !98), !dbg !476
  call void @llvm.dbg.declare(metadata i32* %kk2, metadata !477, metadata !98), !dbg !478
  call void @llvm.dbg.declare(metadata i32* %jj, metadata !479, metadata !98), !dbg !480
  call void @llvm.dbg.declare(metadata i32* %kj2, metadata !481, metadata !98), !dbg !482
  call void @llvm.dbg.declare(metadata i32* %ii, metadata !483, metadata !98), !dbg !484
  call void @llvm.dbg.declare(metadata double* %ap, metadata !485, metadata !98), !dbg !486
  %22 = ptrtoint double* %ap to i64
  call void @__DiscoPoPOpenMPWrite(i64 %22)
  store double 0xBF04B2B4199E149A, double* %ap, align 8, !dbg !487
  %23 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !488
  %24 = ptrtoint i8** %23 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %24)
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @15, i32 0, i32 0), i8** %23, align 8, !dbg !488
  call void (%ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%ident_t* %.kmpc_loc.addr, i32 4, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, double*, double*)* @.omp_outlined..17 to void (i32*, i32*, ...)*), i64 %8, i64 %11, double** %twiddle, double* %ap), !dbg !488
  ret void, !dbg !489
}

; Function Attrs: nounwind uwtable
define internal void @compute_initial_conditions(i8* %ou0, i32 %d1, i32 %d2, i32 %d3) #0 !dbg !490 {
entry:
  %ou0.addr = alloca i8*, align 8
  %d1.addr = alloca i32, align 4
  %d2.addr = alloca i32, align 4
  %d3.addr = alloca i32, align 4
  %u0 = alloca %struct.dcomplex*, align 8
  %k = alloca i32, align 4
  %j = alloca i32, align 4
  %x0 = alloca double, align 8
  %start = alloca double, align 8
  %an = alloca double, align 8
  %dummy = alloca double, align 8
  %starts = alloca [64 x double], align 16
  %.kmpc_loc.addr = alloca %ident_t, align 8
  %0 = bitcast %ident_t* %.kmpc_loc.addr to i8*
  %1 = bitcast %ident_t* @0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 24, i32 8, i1 false)
  %2 = ptrtoint i8** %ou0.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store i8* %ou0, i8** %ou0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ou0.addr, metadata !491, metadata !98), !dbg !492
  %3 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store i32 %d1, i32* %d1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d1.addr, metadata !493, metadata !98), !dbg !494
  %4 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store i32 %d2, i32* %d2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d2.addr, metadata !495, metadata !98), !dbg !496
  %5 = ptrtoint i32* %d3.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store i32 %d3, i32* %d3.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d3.addr, metadata !497, metadata !98), !dbg !498
  %6 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.111, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %7 = load i32, i32* %d2.addr, align 4, !dbg !499
  %8 = zext i32 %7 to i64, !dbg !500
  %9 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %9, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.112, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %10 = load i32, i32* %d1.addr, align 4, !dbg !501
  %add = add nsw i32 %10, 1, !dbg !502
  %11 = zext i32 %add to i64, !dbg !500
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %u0, metadata !503, metadata !98), !dbg !504
  %12 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %12, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.113, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %13 = load i32, i32* %d2.addr, align 4, !dbg !505
  %14 = zext i32 %13 to i64, !dbg !506
  %15 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %15, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.114, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %16 = load i32, i32* %d1.addr, align 4, !dbg !507
  %add1 = add nsw i32 %16, 1, !dbg !508
  %17 = zext i32 %add1 to i64, !dbg !506
  %18 = ptrtoint i8** %ou0.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %18, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.115, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %19 = load i8*, i8** %ou0.addr, align 8, !dbg !509
  %20 = bitcast i8* %19 to %struct.dcomplex*, !dbg !506
  %21 = ptrtoint %struct.dcomplex** %u0 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %21)
  store %struct.dcomplex* %20, %struct.dcomplex** %u0, align 8, !dbg !504
  call void @llvm.dbg.declare(metadata i32* %k, metadata !510, metadata !98), !dbg !511
  call void @llvm.dbg.declare(metadata i32* %j, metadata !512, metadata !98), !dbg !513
  call void @llvm.dbg.declare(metadata double* %x0, metadata !514, metadata !98), !dbg !515
  call void @llvm.dbg.declare(metadata double* %start, metadata !516, metadata !98), !dbg !517
  call void @llvm.dbg.declare(metadata double* %an, metadata !518, metadata !98), !dbg !519
  call void @llvm.dbg.declare(metadata double* %dummy, metadata !520, metadata !98), !dbg !521
  call void @llvm.dbg.declare(metadata [64 x double]* %starts, metadata !522, metadata !98), !dbg !523
  %22 = ptrtoint double* %start to i64
  call void @__DiscoPoPOpenMPWrite(i64 %22)
  store double 0x41B2B9B0A1000000, double* %start, align 8, !dbg !524
  %call = call double @ipow46(double 0x41D2309CE5400000, i32 0), !dbg !525
  %23 = ptrtoint double* %an to i64
  call void @__DiscoPoPOpenMPWrite(i64 %23)
  store double %call, double* %an, align 8, !dbg !526
  %24 = ptrtoint double* %an to i64
  call void @__DiscoPoPOpenMPRead(i64 %24, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.116, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %25 = load double, double* %an, align 8, !dbg !527
  %call2 = call double @randlc(double* %start, double %25), !dbg !528
  %26 = ptrtoint double* %dummy to i64
  call void @__DiscoPoPOpenMPWrite(i64 %26)
  store double %call2, double* %dummy, align 8, !dbg !529
  %call3 = call double @ipow46(double 0x41D2309CE5400000, i32 8192), !dbg !530
  %27 = ptrtoint double* %an to i64
  call void @__DiscoPoPOpenMPWrite(i64 %27)
  store double %call3, double* %an, align 8, !dbg !531
  %28 = ptrtoint double* %start to i64
  call void @__DiscoPoPOpenMPRead(i64 %28, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.117, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %29 = load double, double* %start, align 8, !dbg !532
  %arrayidx = getelementptr inbounds [64 x double], [64 x double]* %starts, i64 0, i64 0, !dbg !533
  %30 = ptrtoint double* %arrayidx to i64
  call void @__DiscoPoPOpenMPWrite(i64 %30)
  store double %29, double* %arrayidx, align 16, !dbg !534
  %31 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPWrite(i64 %31)
  store i32 1, i32* %k, align 4, !dbg !535
  br label %for.cond, !dbg !537

for.cond:                                         ; preds = %for.inc, %entry
  %32 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPRead(i64 %32, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.118, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %33 = load i32, i32* %k, align 4, !dbg !538
  %34 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2) to i64
  call void @__DiscoPoPOpenMPRead(i64 %34, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.119, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %35 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2), align 4, !dbg !541
  %cmp = icmp slt i32 %33, %35, !dbg !542
  br i1 %cmp, label %for.body, label %for.end, !dbg !543

for.body:                                         ; preds = %for.cond
  %36 = ptrtoint double* %an to i64
  call void @__DiscoPoPOpenMPRead(i64 %36, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.120, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %37 = load double, double* %an, align 8, !dbg !544
  %call4 = call double @randlc(double* %start, double %37), !dbg !546
  %38 = ptrtoint double* %dummy to i64
  call void @__DiscoPoPOpenMPWrite(i64 %38)
  store double %call4, double* %dummy, align 8, !dbg !547
  %39 = ptrtoint double* %start to i64
  call void @__DiscoPoPOpenMPRead(i64 %39, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.121, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %40 = load double, double* %start, align 8, !dbg !548
  %41 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPRead(i64 %41, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.122, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %42 = load i32, i32* %k, align 4, !dbg !549
  %idxprom = sext i32 %42 to i64, !dbg !550
  %arrayidx5 = getelementptr inbounds [64 x double], [64 x double]* %starts, i64 0, i64 %idxprom, !dbg !550
  %43 = ptrtoint double* %arrayidx5 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %43)
  store double %40, double* %arrayidx5, align 8, !dbg !551
  br label %for.inc, !dbg !552

for.inc:                                          ; preds = %for.body
  %44 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPRead(i64 %44, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.123, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %45 = load i32, i32* %k, align 4, !dbg !553
  %inc = add nsw i32 %45, 1, !dbg !553
  %46 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPWrite(i64 %46)
  store i32 %inc, i32* %k, align 4, !dbg !553
  br label %for.cond, !dbg !555, !llvm.loop !556

for.end:                                          ; preds = %for.cond
  %47 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !558
  %48 = ptrtoint i8** %47 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %48)
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @13, i32 0, i32 0), i8** %47, align 8, !dbg !558
  call void (%ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%ident_t* %.kmpc_loc.addr, i32 4, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, [64 x double]*, i64, i64, %struct.dcomplex*)* @.omp_outlined..9 to void (i32*, i32*, ...)*), [64 x double]* %starts, i64 %8, i64 %11, %struct.dcomplex** %u0), !dbg !558
  ret void, !dbg !559
}

; Function Attrs: nounwind uwtable
define internal void @fft_init(i32 %n) #0 !dbg !560 {
entry:
  %n.addr = alloca i32, align 4
  %m = alloca i32, align 4
  %nu = alloca i32, align 4
  %ku = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %ln = alloca i32, align 4
  %t = alloca double, align 8
  %ti = alloca double, align 8
  %.compoundliteral = alloca %struct.dcomplex, align 8
  %.compoundliteral9 = alloca %struct.dcomplex, align 8
  %0 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0)
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !563, metadata !98), !dbg !564
  call void @llvm.dbg.declare(metadata i32* %m, metadata !565, metadata !98), !dbg !566
  call void @llvm.dbg.declare(metadata i32* %nu, metadata !567, metadata !98), !dbg !568
  call void @llvm.dbg.declare(metadata i32* %ku, metadata !569, metadata !98), !dbg !570
  call void @llvm.dbg.declare(metadata i32* %i, metadata !571, metadata !98), !dbg !572
  call void @llvm.dbg.declare(metadata i32* %j, metadata !573, metadata !98), !dbg !574
  call void @llvm.dbg.declare(metadata i32* %ln, metadata !575, metadata !98), !dbg !576
  call void @llvm.dbg.declare(metadata double* %t, metadata !577, metadata !98), !dbg !578
  call void @llvm.dbg.declare(metadata double* %ti, metadata !579, metadata !98), !dbg !580
  %1 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.124, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %2 = load i32, i32* %n.addr, align 4, !dbg !581
  %3 = ptrtoint i32* %nu to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store i32 %2, i32* %nu, align 4, !dbg !582
  %4 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.125, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %5 = load i32, i32* %n.addr, align 4, !dbg !583
  %call = call i32 @ilog2(i32 %5), !dbg !584
  %6 = ptrtoint i32* %m to i64
  call void @__DiscoPoPOpenMPWrite(i64 %6)
  store i32 %call, i32* %m, align 4, !dbg !585
  %real = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral, i32 0, i32 0, !dbg !586
  %7 = ptrtoint i32* %m to i64
  call void @__DiscoPoPOpenMPRead(i64 %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.126, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %8 = load i32, i32* %m, align 4, !dbg !586
  %conv = sitofp i32 %8 to double, !dbg !586
  %9 = ptrtoint double* %real to i64
  call void @__DiscoPoPOpenMPWrite(i64 %9)
  store double %conv, double* %real, align 8, !dbg !586
  %imag = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral, i32 0, i32 1, !dbg !586
  %10 = ptrtoint double* %imag to i64
  call void @__DiscoPoPOpenMPWrite(i64 %10)
  store double 0.000000e+00, double* %imag, align 8, !dbg !586
  %11 = bitcast %struct.dcomplex* %.compoundliteral to i8*, !dbg !586
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([65 x %struct.dcomplex]* @u to i8*), i8* %11, i64 16, i32 8, i1 false), !dbg !586
  %12 = ptrtoint i32* %ku to i64
  call void @__DiscoPoPOpenMPWrite(i64 %12)
  store i32 2, i32* %ku, align 4, !dbg !587
  %13 = ptrtoint i32* %ln to i64
  call void @__DiscoPoPOpenMPWrite(i64 %13)
  store i32 1, i32* %ln, align 4, !dbg !588
  %14 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPWrite(i64 %14)
  store i32 1, i32* %j, align 4, !dbg !589
  br label %for.cond, !dbg !591

for.cond:                                         ; preds = %for.inc16, %entry
  %15 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %15, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.127, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %16 = load i32, i32* %j, align 4, !dbg !592
  %17 = ptrtoint i32* %m to i64
  call void @__DiscoPoPOpenMPRead(i64 %17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.128, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %18 = load i32, i32* %m, align 4, !dbg !595
  %cmp = icmp sle i32 %16, %18, !dbg !596
  br i1 %cmp, label %for.body, label %for.end18, !dbg !597

for.body:                                         ; preds = %for.cond
  %19 = ptrtoint i32* %ln to i64
  call void @__DiscoPoPOpenMPRead(i64 %19, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.129, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %20 = load i32, i32* %ln, align 4, !dbg !598
  %conv2 = sitofp i32 %20 to double, !dbg !598
  %div = fdiv double 0x400921FB54442D18, %conv2, !dbg !600
  %21 = ptrtoint double* %t to i64
  call void @__DiscoPoPOpenMPWrite(i64 %21)
  store double %div, double* %t, align 8, !dbg !601
  %22 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %22)
  store i32 0, i32* %i, align 4, !dbg !602
  br label %for.cond3, !dbg !604

for.cond3:                                        ; preds = %for.inc, %for.body
  %23 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %23, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.130, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %24 = load i32, i32* %i, align 4, !dbg !605
  %25 = ptrtoint i32* %ln to i64
  call void @__DiscoPoPOpenMPRead(i64 %25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.131, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %26 = load i32, i32* %ln, align 4, !dbg !608
  %sub = sub nsw i32 %26, 1, !dbg !609
  %cmp4 = icmp sle i32 %24, %sub, !dbg !610
  br i1 %cmp4, label %for.body6, label %for.end, !dbg !611

for.body6:                                        ; preds = %for.cond3
  %27 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %27, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.132, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %28 = load i32, i32* %i, align 4, !dbg !612
  %conv7 = sitofp i32 %28 to double, !dbg !612
  %29 = ptrtoint double* %t to i64
  call void @__DiscoPoPOpenMPRead(i64 %29, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.133, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %30 = load double, double* %t, align 8, !dbg !614
  %mul = fmul double %conv7, %30, !dbg !615
  %31 = ptrtoint double* %ti to i64
  call void @__DiscoPoPOpenMPWrite(i64 %31)
  store double %mul, double* %ti, align 8, !dbg !616
  %32 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.134, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %33 = load i32, i32* %i, align 4, !dbg !617
  %34 = ptrtoint i32* %ku to i64
  call void @__DiscoPoPOpenMPRead(i64 %34, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.135, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %35 = load i32, i32* %ku, align 4, !dbg !618
  %add = add nsw i32 %33, %35, !dbg !619
  %sub8 = sub nsw i32 %add, 1, !dbg !620
  %idxprom = sext i32 %sub8 to i64, !dbg !621
  %arrayidx = getelementptr inbounds [65 x %struct.dcomplex], [65 x %struct.dcomplex]* @u, i64 0, i64 %idxprom, !dbg !621
  %real10 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral9, i32 0, i32 0, !dbg !622
  %36 = ptrtoint double* %ti to i64
  call void @__DiscoPoPOpenMPRead(i64 %36, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.136, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %37 = load double, double* %ti, align 8, !dbg !622
  %call11 = call double @cos(double %37) #8, !dbg !622
  %38 = ptrtoint double* %real10 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %38)
  store double %call11, double* %real10, align 8, !dbg !622
  %imag12 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral9, i32 0, i32 1, !dbg !622
  %39 = ptrtoint double* %ti to i64
  call void @__DiscoPoPOpenMPRead(i64 %39, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.137, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %40 = load double, double* %ti, align 8, !dbg !622
  %call13 = call double @sin(double %40) #8, !dbg !623
  %41 = ptrtoint double* %imag12 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %41)
  store double %call13, double* %imag12, align 8, !dbg !622
  %42 = bitcast %struct.dcomplex* %arrayidx to i8*, !dbg !622
  %43 = bitcast %struct.dcomplex* %.compoundliteral9 to i8*, !dbg !622
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 16, i32 8, i1 false), !dbg !625
  br label %for.inc, !dbg !627

for.inc:                                          ; preds = %for.body6
  %44 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %44, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.138, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %45 = load i32, i32* %i, align 4, !dbg !628
  %inc = add nsw i32 %45, 1, !dbg !628
  %46 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %46)
  store i32 %inc, i32* %i, align 4, !dbg !628
  br label %for.cond3, !dbg !630, !llvm.loop !631

for.end:                                          ; preds = %for.cond3
  %47 = ptrtoint i32* %ku to i64
  call void @__DiscoPoPOpenMPRead(i64 %47, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.139, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %48 = load i32, i32* %ku, align 4, !dbg !633
  %49 = ptrtoint i32* %ln to i64
  call void @__DiscoPoPOpenMPRead(i64 %49, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.140, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %50 = load i32, i32* %ln, align 4, !dbg !634
  %add14 = add nsw i32 %48, %50, !dbg !635
  %51 = ptrtoint i32* %ku to i64
  call void @__DiscoPoPOpenMPWrite(i64 %51)
  store i32 %add14, i32* %ku, align 4, !dbg !636
  %52 = ptrtoint i32* %ln to i64
  call void @__DiscoPoPOpenMPRead(i64 %52, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.141, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %53 = load i32, i32* %ln, align 4, !dbg !637
  %mul15 = mul nsw i32 2, %53, !dbg !638
  %54 = ptrtoint i32* %ln to i64
  call void @__DiscoPoPOpenMPWrite(i64 %54)
  store i32 %mul15, i32* %ln, align 4, !dbg !639
  br label %for.inc16, !dbg !640

for.inc16:                                        ; preds = %for.end
  %55 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %55, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.142, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %56 = load i32, i32* %j, align 4, !dbg !641
  %inc17 = add nsw i32 %56, 1, !dbg !641
  %57 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPWrite(i64 %57)
  store i32 %inc17, i32* %j, align 4, !dbg !641
  br label %for.cond, !dbg !643, !llvm.loop !644

for.end18:                                        ; preds = %for.cond
  ret void, !dbg !646
}

; Function Attrs: nounwind uwtable
define internal void @fft(i32 %dir, %struct.dcomplex* %x1, %struct.dcomplex* %x2) #0 !dbg !647 {
entry:
  %dir.addr = alloca i32, align 4
  %x1.addr = alloca %struct.dcomplex*, align 8
  %x2.addr = alloca %struct.dcomplex*, align 8
  %0 = ptrtoint i32* %dir.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0)
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !651, metadata !98), !dbg !652
  %1 = ptrtoint %struct.dcomplex** %x1.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %1)
  store %struct.dcomplex* %x1, %struct.dcomplex** %x1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %x1.addr, metadata !653, metadata !98), !dbg !654
  %2 = ptrtoint %struct.dcomplex** %x2.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store %struct.dcomplex* %x2, %struct.dcomplex** %x2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %x2.addr, metadata !655, metadata !98), !dbg !656
  %3 = ptrtoint i32* %dir.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.143, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %4 = load i32, i32* %dir.addr, align 4, !dbg !657
  %cmp = icmp eq i32 %4, 1, !dbg !659
  br i1 %cmp, label %if.then, label %if.else, !dbg !660

if.then:                                          ; preds = %entry
  %5 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0) to i64
  call void @__DiscoPoPOpenMPRead(i64 %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.144, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %6 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0), align 4, !dbg !661
  %7 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1) to i64
  call void @__DiscoPoPOpenMPRead(i64 %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.145, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %8 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1), align 4, !dbg !663
  %9 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2) to i64
  call void @__DiscoPoPOpenMPRead(i64 %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.146, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %10 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2), align 4, !dbg !664
  %11 = ptrtoint %struct.dcomplex** %x1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %12 = load %struct.dcomplex*, %struct.dcomplex** %x1.addr, align 8, !dbg !665
  %13 = bitcast %struct.dcomplex* %12 to i8*, !dbg !665
  %14 = ptrtoint %struct.dcomplex** %x1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.148, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %15 = load %struct.dcomplex*, %struct.dcomplex** %x1.addr, align 8, !dbg !666
  %16 = bitcast %struct.dcomplex* %15 to i8*, !dbg !666
  call void @cffts1(i32 1, i32 %6, i32 %8, i32 %10, i8* %13, i8* %16), !dbg !667
  %17 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0) to i64
  call void @__DiscoPoPOpenMPRead(i64 %17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.149, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %18 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0), align 4, !dbg !668
  %19 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1) to i64
  call void @__DiscoPoPOpenMPRead(i64 %19, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.150, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %20 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1), align 4, !dbg !669
  %21 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2) to i64
  call void @__DiscoPoPOpenMPRead(i64 %21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.151, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %22 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2), align 4, !dbg !670
  %23 = ptrtoint %struct.dcomplex** %x1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %23, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.152, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %24 = load %struct.dcomplex*, %struct.dcomplex** %x1.addr, align 8, !dbg !671
  %25 = bitcast %struct.dcomplex* %24 to i8*, !dbg !671
  %26 = ptrtoint %struct.dcomplex** %x1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %26, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.153, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %27 = load %struct.dcomplex*, %struct.dcomplex** %x1.addr, align 8, !dbg !672
  %28 = bitcast %struct.dcomplex* %27 to i8*, !dbg !672
  call void @cffts2(i32 1, i32 %18, i32 %20, i32 %22, i8* %25, i8* %28), !dbg !673
  %29 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0) to i64
  call void @__DiscoPoPOpenMPRead(i64 %29, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.154, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %30 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0), align 4, !dbg !674
  %31 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1) to i64
  call void @__DiscoPoPOpenMPRead(i64 %31, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.155, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %32 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1), align 4, !dbg !675
  %33 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2) to i64
  call void @__DiscoPoPOpenMPRead(i64 %33, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.156, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %34 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2), align 4, !dbg !676
  %35 = ptrtoint %struct.dcomplex** %x1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %35, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.157, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %36 = load %struct.dcomplex*, %struct.dcomplex** %x1.addr, align 8, !dbg !677
  %37 = bitcast %struct.dcomplex* %36 to i8*, !dbg !677
  %38 = ptrtoint %struct.dcomplex** %x2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %38, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.158, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %39 = load %struct.dcomplex*, %struct.dcomplex** %x2.addr, align 8, !dbg !678
  %40 = bitcast %struct.dcomplex* %39 to i8*, !dbg !678
  call void @cffts3(i32 1, i32 %30, i32 %32, i32 %34, i8* %37, i8* %40), !dbg !679
  br label %if.end, !dbg !680

if.else:                                          ; preds = %entry
  %41 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0) to i64
  call void @__DiscoPoPOpenMPRead(i64 %41, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.159, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %42 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0), align 4, !dbg !681
  %43 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1) to i64
  call void @__DiscoPoPOpenMPRead(i64 %43, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.160, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %44 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1), align 4, !dbg !683
  %45 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2) to i64
  call void @__DiscoPoPOpenMPRead(i64 %45, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.161, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %46 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2), align 4, !dbg !684
  %47 = ptrtoint %struct.dcomplex** %x1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %47, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.162, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %48 = load %struct.dcomplex*, %struct.dcomplex** %x1.addr, align 8, !dbg !685
  %49 = bitcast %struct.dcomplex* %48 to i8*, !dbg !685
  %50 = ptrtoint %struct.dcomplex** %x1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %50, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.163, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %51 = load %struct.dcomplex*, %struct.dcomplex** %x1.addr, align 8, !dbg !686
  %52 = bitcast %struct.dcomplex* %51 to i8*, !dbg !686
  call void @cffts3(i32 -1, i32 %42, i32 %44, i32 %46, i8* %49, i8* %52), !dbg !687
  %53 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0) to i64
  call void @__DiscoPoPOpenMPRead(i64 %53, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.164, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %54 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0), align 4, !dbg !688
  %55 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1) to i64
  call void @__DiscoPoPOpenMPRead(i64 %55, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.165, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %56 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1), align 4, !dbg !689
  %57 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2) to i64
  call void @__DiscoPoPOpenMPRead(i64 %57, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.166, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %58 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2), align 4, !dbg !690
  %59 = ptrtoint %struct.dcomplex** %x1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %59, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.167, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %60 = load %struct.dcomplex*, %struct.dcomplex** %x1.addr, align 8, !dbg !691
  %61 = bitcast %struct.dcomplex* %60 to i8*, !dbg !691
  %62 = ptrtoint %struct.dcomplex** %x1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %62, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.168, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %63 = load %struct.dcomplex*, %struct.dcomplex** %x1.addr, align 8, !dbg !692
  %64 = bitcast %struct.dcomplex* %63 to i8*, !dbg !692
  call void @cffts2(i32 -1, i32 %54, i32 %56, i32 %58, i8* %61, i8* %64), !dbg !693
  %65 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0) to i64
  call void @__DiscoPoPOpenMPRead(i64 %65, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.169, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %66 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0), align 4, !dbg !694
  %67 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1) to i64
  call void @__DiscoPoPOpenMPRead(i64 %67, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.170, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %68 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1), align 4, !dbg !695
  %69 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2) to i64
  call void @__DiscoPoPOpenMPRead(i64 %69, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %70 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2), align 4, !dbg !696
  %71 = ptrtoint %struct.dcomplex** %x1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %71, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.172, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %72 = load %struct.dcomplex*, %struct.dcomplex** %x1.addr, align 8, !dbg !697
  %73 = bitcast %struct.dcomplex* %72 to i8*, !dbg !697
  %74 = ptrtoint %struct.dcomplex** %x2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %74, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.173, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %75 = load %struct.dcomplex*, %struct.dcomplex** %x2.addr, align 8, !dbg !698
  %76 = bitcast %struct.dcomplex* %75 to i8*, !dbg !698
  call void @cffts1(i32 -1, i32 %66, i32 %68, i32 %70, i8* %73, i8* %76), !dbg !699
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !700
}

; Function Attrs: nounwind uwtable
define internal void @evolve(i8* %ou0, i8* %ou1, i8* %ot, i32 %d1, i32 %d2, i32 %d3) #0 !dbg !701 {
entry:
  %ou0.addr = alloca i8*, align 8
  %ou1.addr = alloca i8*, align 8
  %ot.addr = alloca i8*, align 8
  %d1.addr = alloca i32, align 4
  %d2.addr = alloca i32, align 4
  %d3.addr = alloca i32, align 4
  %u0 = alloca %struct.dcomplex*, align 8
  %u1 = alloca %struct.dcomplex*, align 8
  %twiddle = alloca double*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %.kmpc_loc.addr = alloca %ident_t, align 8
  %0 = bitcast %ident_t* %.kmpc_loc.addr to i8*
  %1 = bitcast %ident_t* @0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 24, i32 8, i1 false)
  %2 = ptrtoint i8** %ou0.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store i8* %ou0, i8** %ou0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ou0.addr, metadata !702, metadata !98), !dbg !703
  %3 = ptrtoint i8** %ou1.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store i8* %ou1, i8** %ou1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ou1.addr, metadata !704, metadata !98), !dbg !705
  %4 = ptrtoint i8** %ot.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store i8* %ot, i8** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ot.addr, metadata !706, metadata !98), !dbg !707
  %5 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store i32 %d1, i32* %d1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d1.addr, metadata !708, metadata !98), !dbg !709
  %6 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %6)
  store i32 %d2, i32* %d2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d2.addr, metadata !710, metadata !98), !dbg !711
  %7 = ptrtoint i32* %d3.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %7)
  store i32 %d3, i32* %d3.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d3.addr, metadata !712, metadata !98), !dbg !713
  %8 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.174, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %9 = load i32, i32* %d2.addr, align 4, !dbg !714
  %10 = zext i32 %9 to i64, !dbg !715
  %11 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.175, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %12 = load i32, i32* %d1.addr, align 4, !dbg !716
  %add = add nsw i32 %12, 1, !dbg !717
  %13 = zext i32 %add to i64, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %u0, metadata !718, metadata !98), !dbg !719
  %14 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.176, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %15 = load i32, i32* %d2.addr, align 4, !dbg !720
  %16 = zext i32 %15 to i64, !dbg !721
  %17 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.177, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %18 = load i32, i32* %d1.addr, align 4, !dbg !722
  %add1 = add nsw i32 %18, 1, !dbg !723
  %19 = zext i32 %add1 to i64, !dbg !721
  %20 = ptrtoint i8** %ou0.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %20, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.178, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %21 = load i8*, i8** %ou0.addr, align 8, !dbg !724
  %22 = bitcast i8* %21 to %struct.dcomplex*, !dbg !721
  %23 = ptrtoint %struct.dcomplex** %u0 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %23)
  store %struct.dcomplex* %22, %struct.dcomplex** %u0, align 8, !dbg !719
  %24 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.179, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %25 = load i32, i32* %d2.addr, align 4, !dbg !725
  %26 = zext i32 %25 to i64, !dbg !726
  %27 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.180, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %28 = load i32, i32* %d1.addr, align 4, !dbg !727
  %add2 = add nsw i32 %28, 1, !dbg !728
  %29 = zext i32 %add2 to i64, !dbg !726
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %u1, metadata !729, metadata !98), !dbg !730
  %30 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %30, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.181, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %31 = load i32, i32* %d2.addr, align 4, !dbg !731
  %32 = zext i32 %31 to i64, !dbg !732
  %33 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %33, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.182, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %34 = load i32, i32* %d1.addr, align 4, !dbg !733
  %add3 = add nsw i32 %34, 1, !dbg !734
  %35 = zext i32 %add3 to i64, !dbg !732
  %36 = ptrtoint i8** %ou1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %36, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.183, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %37 = load i8*, i8** %ou1.addr, align 8, !dbg !735
  %38 = bitcast i8* %37 to %struct.dcomplex*, !dbg !732
  %39 = ptrtoint %struct.dcomplex** %u1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %39)
  store %struct.dcomplex* %38, %struct.dcomplex** %u1, align 8, !dbg !730
  %40 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %40, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.184, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %41 = load i32, i32* %d2.addr, align 4, !dbg !736
  %42 = zext i32 %41 to i64, !dbg !737
  %43 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %43, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.185, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %44 = load i32, i32* %d1.addr, align 4, !dbg !738
  %add4 = add nsw i32 %44, 1, !dbg !739
  %45 = zext i32 %add4 to i64, !dbg !737
  call void @llvm.dbg.declare(metadata double** %twiddle, metadata !740, metadata !98), !dbg !741
  %46 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %46, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.186, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %47 = load i32, i32* %d2.addr, align 4, !dbg !742
  %48 = zext i32 %47 to i64, !dbg !743
  %49 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %49, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.187, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %50 = load i32, i32* %d1.addr, align 4, !dbg !744
  %add5 = add nsw i32 %50, 1, !dbg !745
  %51 = zext i32 %add5 to i64, !dbg !743
  %52 = ptrtoint i8** %ot.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %52, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.188, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %53 = load i8*, i8** %ot.addr, align 8, !dbg !746
  %54 = bitcast i8* %53 to double*, !dbg !743
  %55 = ptrtoint double** %twiddle to i64
  call void @__DiscoPoPOpenMPWrite(i64 %55)
  store double* %54, double** %twiddle, align 8, !dbg !741
  call void @llvm.dbg.declare(metadata i32* %i, metadata !747, metadata !98), !dbg !748
  call void @llvm.dbg.declare(metadata i32* %j, metadata !749, metadata !98), !dbg !750
  call void @llvm.dbg.declare(metadata i32* %k, metadata !751, metadata !98), !dbg !752
  %56 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !753
  %57 = ptrtoint i8** %56 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %57)
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @5, i32 0, i32 0), i8** %56, align 8, !dbg !753
  call void (%ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%ident_t* %.kmpc_loc.addr, i32 12, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i32*, i32*, i32*, i64, i64, %struct.dcomplex*, i64, i64, double*, i64, i64, %struct.dcomplex*)* @.omp_outlined..8 to void (i32*, i32*, ...)*), i32* %d3.addr, i32* %d2.addr, i32* %d1.addr, i64 %10, i64 %13, %struct.dcomplex** %u0, i64 %42, i64 %45, double** %twiddle, i64 %26, i64 %29, %struct.dcomplex** %u1), !dbg !753
  ret void, !dbg !754
}

; Function Attrs: nounwind uwtable
define internal void @checksum(i32 %i, i8* %ou1, i32 %d1, i32 %d2, i32 %d3) #0 !dbg !755 {
entry:
  %i.addr = alloca i32, align 4
  %ou1.addr = alloca i8*, align 8
  %d1.addr = alloca i32, align 4
  %d2.addr = alloca i32, align 4
  %d3.addr = alloca i32, align 4
  %u1 = alloca %struct.dcomplex*, align 8
  %j = alloca i32, align 4
  %q = alloca i32, align 4
  %r = alloca i32, align 4
  %s = alloca i32, align 4
  %chk = alloca %struct.dcomplex, align 8
  %.kmpc_loc.addr = alloca %ident_t, align 8
  %0 = bitcast %ident_t* %.kmpc_loc.addr to i8*
  %1 = bitcast %ident_t* @0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 24, i32 8, i1 false)
  %.compoundliteral = alloca %struct.dcomplex, align 8
  %2 = ptrtoint i32* %i.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !758, metadata !98), !dbg !759
  %3 = ptrtoint i8** %ou1.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store i8* %ou1, i8** %ou1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ou1.addr, metadata !760, metadata !98), !dbg !761
  %4 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store i32 %d1, i32* %d1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d1.addr, metadata !762, metadata !98), !dbg !763
  %5 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store i32 %d2, i32* %d2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d2.addr, metadata !764, metadata !98), !dbg !765
  %6 = ptrtoint i32* %d3.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %6)
  store i32 %d3, i32* %d3.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d3.addr, metadata !766, metadata !98), !dbg !767
  %7 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.189, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %8 = load i32, i32* %d2.addr, align 4, !dbg !768
  %9 = zext i32 %8 to i64, !dbg !769
  %10 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.190, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %11 = load i32, i32* %d1.addr, align 4, !dbg !770
  %add = add nsw i32 %11, 1, !dbg !771
  %12 = zext i32 %add to i64, !dbg !769
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %u1, metadata !772, metadata !98), !dbg !773
  %13 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %13, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.191, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %14 = load i32, i32* %d2.addr, align 4, !dbg !774
  %15 = zext i32 %14 to i64, !dbg !775
  %16 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.192, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %17 = load i32, i32* %d1.addr, align 4, !dbg !776
  %add1 = add nsw i32 %17, 1, !dbg !777
  %18 = zext i32 %add1 to i64, !dbg !775
  %19 = ptrtoint i8** %ou1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %19, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.193, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %20 = load i8*, i8** %ou1.addr, align 8, !dbg !778
  %21 = bitcast i8* %20 to %struct.dcomplex*, !dbg !775
  %22 = ptrtoint %struct.dcomplex** %u1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %22)
  store %struct.dcomplex* %21, %struct.dcomplex** %u1, align 8, !dbg !773
  call void @llvm.dbg.declare(metadata i32* %j, metadata !779, metadata !98), !dbg !780
  call void @llvm.dbg.declare(metadata i32* %q, metadata !781, metadata !98), !dbg !782
  call void @llvm.dbg.declare(metadata i32* %r, metadata !783, metadata !98), !dbg !784
  call void @llvm.dbg.declare(metadata i32* %s, metadata !785, metadata !98), !dbg !786
  call void @llvm.dbg.declare(metadata %struct.dcomplex* %chk, metadata !787, metadata !98), !dbg !788
  %23 = bitcast %struct.dcomplex* %chk to i8*, !dbg !788
  call void @llvm.memset.p0i8.i64(i8* %23, i8 0, i64 16, i32 8, i1 false), !dbg !788
  %24 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !789
  %25 = ptrtoint i8** %24 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %25)
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @1, i32 0, i32 0), i8** %24, align 8, !dbg !789
  call void (%ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%ident_t* %.kmpc_loc.addr, i32 5, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i32*, i64, i64, %struct.dcomplex*, %struct.dcomplex*)* @.omp_outlined..31 to void (i32*, i32*, ...)*), i32* %j, i64 %9, i64 %12, %struct.dcomplex** %u1, %struct.dcomplex* %chk), !dbg !789
  %real = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral, i32 0, i32 0, !dbg !790
  %real2 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %chk, i32 0, i32 0, !dbg !790
  %26 = ptrtoint double* %real2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %26, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.194, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %27 = load double, double* %real2, align 8, !dbg !790
  %div = fdiv double %27, 2.621440e+05, !dbg !790
  %28 = ptrtoint double* %real to i64
  call void @__DiscoPoPOpenMPWrite(i64 %28)
  store double %div, double* %real, align 8, !dbg !790
  %imag = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral, i32 0, i32 1, !dbg !790
  %imag3 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %chk, i32 0, i32 1, !dbg !790
  %29 = ptrtoint double* %imag3 to i64
  call void @__DiscoPoPOpenMPRead(i64 %29, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.195, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %30 = load double, double* %imag3, align 8, !dbg !790
  %div4 = fdiv double %30, 2.621440e+05, !dbg !790
  %31 = ptrtoint double* %imag to i64
  call void @__DiscoPoPOpenMPWrite(i64 %31)
  store double %div4, double* %imag, align 8, !dbg !790
  %32 = bitcast %struct.dcomplex* %chk to i8*, !dbg !790
  %33 = bitcast %struct.dcomplex* %.compoundliteral to i8*, !dbg !790
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 16, i32 8, i1 false), !dbg !790
  %34 = ptrtoint i32* %i.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %34, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.196, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %35 = load i32, i32* %i.addr, align 4, !dbg !791
  %real5 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %chk, i32 0, i32 0, !dbg !792
  %36 = ptrtoint double* %real5 to i64
  call void @__DiscoPoPOpenMPRead(i64 %36, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.197, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %37 = load double, double* %real5, align 8, !dbg !792
  %imag6 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %chk, i32 0, i32 1, !dbg !793
  %38 = ptrtoint double* %imag6 to i64
  call void @__DiscoPoPOpenMPRead(i64 %38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.198, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %39 = load double, double* %imag6, align 8, !dbg !793
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.32, i32 0, i32 0), i32 %35, double %37, double %39), !dbg !794
  %40 = ptrtoint i32* %i.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %40, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.199, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %41 = load i32, i32* %i.addr, align 4, !dbg !795
  %idxprom = sext i32 %41 to i64, !dbg !796
  %arrayidx = getelementptr inbounds [7 x %struct.dcomplex], [7 x %struct.dcomplex]* @sums, i64 0, i64 %idxprom, !dbg !796
  %42 = bitcast %struct.dcomplex* %arrayidx to i8*, !dbg !797
  %43 = bitcast %struct.dcomplex* %chk to i8*, !dbg !797
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 16, i32 8, i1 false), !dbg !797
  ret void, !dbg !798
}

; Function Attrs: nounwind uwtable
define internal void @verify(i32 %d1, i32 %d2, i32 %d3, i32 %nt, i32* %verified, i8* %Class) #0 !dbg !799 {
entry:
  %d1.addr = alloca i32, align 4
  %d2.addr = alloca i32, align 4
  %d3.addr = alloca i32, align 4
  %nt.addr = alloca i32, align 4
  %verified.addr = alloca i32*, align 8
  %Class.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %err = alloca double, align 8
  %epsilon = alloca double, align 8
  %csum_ref = alloca [26 x %struct.dcomplex], align 16
  %.compoundliteral = alloca %struct.dcomplex, align 8
  %.compoundliteral7 = alloca %struct.dcomplex, align 8
  %.compoundliteral11 = alloca %struct.dcomplex, align 8
  %.compoundliteral15 = alloca %struct.dcomplex, align 8
  %.compoundliteral19 = alloca %struct.dcomplex, align 8
  %.compoundliteral23 = alloca %struct.dcomplex, align 8
  %.compoundliteral35 = alloca %struct.dcomplex, align 8
  %.compoundliteral39 = alloca %struct.dcomplex, align 8
  %.compoundliteral43 = alloca %struct.dcomplex, align 8
  %.compoundliteral47 = alloca %struct.dcomplex, align 8
  %.compoundliteral51 = alloca %struct.dcomplex, align 8
  %.compoundliteral55 = alloca %struct.dcomplex, align 8
  %.compoundliteral68 = alloca %struct.dcomplex, align 8
  %.compoundliteral72 = alloca %struct.dcomplex, align 8
  %.compoundliteral76 = alloca %struct.dcomplex, align 8
  %.compoundliteral80 = alloca %struct.dcomplex, align 8
  %.compoundliteral84 = alloca %struct.dcomplex, align 8
  %.compoundliteral88 = alloca %struct.dcomplex, align 8
  %.compoundliteral101 = alloca %struct.dcomplex, align 8
  %.compoundliteral105 = alloca %struct.dcomplex, align 8
  %.compoundliteral109 = alloca %struct.dcomplex, align 8
  %.compoundliteral113 = alloca %struct.dcomplex, align 8
  %.compoundliteral117 = alloca %struct.dcomplex, align 8
  %.compoundliteral121 = alloca %struct.dcomplex, align 8
  %.compoundliteral125 = alloca %struct.dcomplex, align 8
  %.compoundliteral129 = alloca %struct.dcomplex, align 8
  %.compoundliteral133 = alloca %struct.dcomplex, align 8
  %.compoundliteral137 = alloca %struct.dcomplex, align 8
  %.compoundliteral141 = alloca %struct.dcomplex, align 8
  %.compoundliteral145 = alloca %struct.dcomplex, align 8
  %.compoundliteral149 = alloca %struct.dcomplex, align 8
  %.compoundliteral153 = alloca %struct.dcomplex, align 8
  %.compoundliteral157 = alloca %struct.dcomplex, align 8
  %.compoundliteral161 = alloca %struct.dcomplex, align 8
  %.compoundliteral165 = alloca %struct.dcomplex, align 8
  %.compoundliteral169 = alloca %struct.dcomplex, align 8
  %.compoundliteral173 = alloca %struct.dcomplex, align 8
  %.compoundliteral177 = alloca %struct.dcomplex, align 8
  %.compoundliteral190 = alloca %struct.dcomplex, align 8
  %.compoundliteral194 = alloca %struct.dcomplex, align 8
  %.compoundliteral198 = alloca %struct.dcomplex, align 8
  %.compoundliteral202 = alloca %struct.dcomplex, align 8
  %.compoundliteral206 = alloca %struct.dcomplex, align 8
  %.compoundliteral210 = alloca %struct.dcomplex, align 8
  %.compoundliteral214 = alloca %struct.dcomplex, align 8
  %.compoundliteral218 = alloca %struct.dcomplex, align 8
  %.compoundliteral222 = alloca %struct.dcomplex, align 8
  %.compoundliteral226 = alloca %struct.dcomplex, align 8
  %.compoundliteral230 = alloca %struct.dcomplex, align 8
  %.compoundliteral234 = alloca %struct.dcomplex, align 8
  %.compoundliteral238 = alloca %struct.dcomplex, align 8
  %.compoundliteral242 = alloca %struct.dcomplex, align 8
  %.compoundliteral246 = alloca %struct.dcomplex, align 8
  %.compoundliteral250 = alloca %struct.dcomplex, align 8
  %.compoundliteral254 = alloca %struct.dcomplex, align 8
  %.compoundliteral258 = alloca %struct.dcomplex, align 8
  %.compoundliteral262 = alloca %struct.dcomplex, align 8
  %.compoundliteral266 = alloca %struct.dcomplex, align 8
  %.compoundliteral279 = alloca %struct.dcomplex, align 8
  %.compoundliteral283 = alloca %struct.dcomplex, align 8
  %.compoundliteral287 = alloca %struct.dcomplex, align 8
  %.compoundliteral291 = alloca %struct.dcomplex, align 8
  %.compoundliteral295 = alloca %struct.dcomplex, align 8
  %.compoundliteral299 = alloca %struct.dcomplex, align 8
  %.compoundliteral303 = alloca %struct.dcomplex, align 8
  %.compoundliteral307 = alloca %struct.dcomplex, align 8
  %.compoundliteral311 = alloca %struct.dcomplex, align 8
  %.compoundliteral315 = alloca %struct.dcomplex, align 8
  %.compoundliteral319 = alloca %struct.dcomplex, align 8
  %.compoundliteral323 = alloca %struct.dcomplex, align 8
  %.compoundliteral327 = alloca %struct.dcomplex, align 8
  %.compoundliteral331 = alloca %struct.dcomplex, align 8
  %.compoundliteral335 = alloca %struct.dcomplex, align 8
  %.compoundliteral339 = alloca %struct.dcomplex, align 8
  %.compoundliteral343 = alloca %struct.dcomplex, align 8
  %.compoundliteral347 = alloca %struct.dcomplex, align 8
  %.compoundliteral351 = alloca %struct.dcomplex, align 8
  %.compoundliteral355 = alloca %struct.dcomplex, align 8
  %.compoundliteral359 = alloca %struct.dcomplex, align 8
  %.compoundliteral363 = alloca %struct.dcomplex, align 8
  %.compoundliteral367 = alloca %struct.dcomplex, align 8
  %.compoundliteral371 = alloca %struct.dcomplex, align 8
  %.compoundliteral375 = alloca %struct.dcomplex, align 8
  %.compoundliteral388 = alloca %struct.dcomplex, align 8
  %.compoundliteral392 = alloca %struct.dcomplex, align 8
  %.compoundliteral396 = alloca %struct.dcomplex, align 8
  %.compoundliteral400 = alloca %struct.dcomplex, align 8
  %.compoundliteral404 = alloca %struct.dcomplex, align 8
  %.compoundliteral408 = alloca %struct.dcomplex, align 8
  %.compoundliteral412 = alloca %struct.dcomplex, align 8
  %.compoundliteral416 = alloca %struct.dcomplex, align 8
  %.compoundliteral420 = alloca %struct.dcomplex, align 8
  %.compoundliteral424 = alloca %struct.dcomplex, align 8
  %.compoundliteral428 = alloca %struct.dcomplex, align 8
  %.compoundliteral432 = alloca %struct.dcomplex, align 8
  %.compoundliteral436 = alloca %struct.dcomplex, align 8
  %.compoundliteral440 = alloca %struct.dcomplex, align 8
  %.compoundliteral444 = alloca %struct.dcomplex, align 8
  %.compoundliteral448 = alloca %struct.dcomplex, align 8
  %.compoundliteral452 = alloca %struct.dcomplex, align 8
  %.compoundliteral456 = alloca %struct.dcomplex, align 8
  %.compoundliteral460 = alloca %struct.dcomplex, align 8
  %.compoundliteral464 = alloca %struct.dcomplex, align 8
  %.compoundliteral468 = alloca %struct.dcomplex, align 8
  %.compoundliteral472 = alloca %struct.dcomplex, align 8
  %.compoundliteral476 = alloca %struct.dcomplex, align 8
  %.compoundliteral480 = alloca %struct.dcomplex, align 8
  %.compoundliteral484 = alloca %struct.dcomplex, align 8
  %.compoundliteral498 = alloca %struct.dcomplex, align 8
  %coerce = alloca %struct.dcomplex, align 8
  %.compoundliteral516 = alloca %struct.dcomplex, align 8
  %coerce536 = alloca %struct.dcomplex, align 8
  %.compoundliteral538 = alloca %struct.dcomplex, align 8
  %coerce558 = alloca %struct.dcomplex, align 8
  %.compoundliteral560 = alloca %struct.dcomplex, align 8
  %coerce580 = alloca %struct.dcomplex, align 8
  %0 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0)
  store i32 %d1, i32* %d1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d1.addr, metadata !803, metadata !98), !dbg !804
  %1 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %1)
  store i32 %d2, i32* %d2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d2.addr, metadata !805, metadata !98), !dbg !806
  %2 = ptrtoint i32* %d3.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store i32 %d3, i32* %d3.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d3.addr, metadata !807, metadata !98), !dbg !808
  %3 = ptrtoint i32* %nt.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store i32 %nt, i32* %nt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nt.addr, metadata !809, metadata !98), !dbg !810
  %4 = ptrtoint i32** %verified.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store i32* %verified, i32** %verified.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %verified.addr, metadata !811, metadata !98), !dbg !812
  %5 = ptrtoint i8** %Class.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store i8* %Class, i8** %Class.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %Class.addr, metadata !813, metadata !98), !dbg !814
  call void @llvm.dbg.declare(metadata i32* %i, metadata !815, metadata !98), !dbg !816
  call void @llvm.dbg.declare(metadata double* %err, metadata !817, metadata !98), !dbg !818
  call void @llvm.dbg.declare(metadata double* %epsilon, metadata !819, metadata !98), !dbg !820
  call void @llvm.dbg.declare(metadata [26 x %struct.dcomplex]* %csum_ref, metadata !821, metadata !98), !dbg !825
  %6 = ptrtoint i8** %Class.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.200, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %7 = load i8*, i8** %Class.addr, align 8, !dbg !826
  %8 = ptrtoint i8* %7 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %8)
  store i8 85, i8* %7, align 1, !dbg !827
  %9 = ptrtoint double* %epsilon to i64
  call void @__DiscoPoPOpenMPWrite(i64 %9)
  store double 1.000000e-12, double* %epsilon, align 8, !dbg !828
  %10 = ptrtoint i32** %verified.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.201, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %11 = load i32*, i32** %verified.addr, align 8, !dbg !829
  %12 = ptrtoint i32* %11 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %12)
  store i32 0, i32* %11, align 4, !dbg !830
  %13 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.202, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %14 = load i32, i32* %d1.addr, align 4, !dbg !831
  %cmp = icmp eq i32 %14, 64, !dbg !833
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !834

land.lhs.true:                                    ; preds = %entry
  %15 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.203, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %16 = load i32, i32* %d2.addr, align 4, !dbg !835
  %cmp1 = icmp eq i32 %16, 64, !dbg !837
  br i1 %cmp1, label %land.lhs.true2, label %if.else, !dbg !838

land.lhs.true2:                                   ; preds = %land.lhs.true
  %17 = ptrtoint i32* %d3.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.204, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %18 = load i32, i32* %d3.addr, align 4, !dbg !839
  %cmp3 = icmp eq i32 %18, 64, !dbg !841
  br i1 %cmp3, label %land.lhs.true4, label %if.else, !dbg !842

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %19 = ptrtoint i32* %nt.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %19, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.205, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %20 = load i32, i32* %nt.addr, align 4, !dbg !843
  %cmp5 = icmp eq i32 %20, 6, !dbg !845
  br i1 %cmp5, label %if.then, label %if.else, !dbg !846

if.then:                                          ; preds = %land.lhs.true4
  %21 = ptrtoint i8** %Class.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %21, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.206, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %22 = load i8*, i8** %Class.addr, align 8, !dbg !847
  %23 = ptrtoint i8* %22 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %23)
  store i8 83, i8* %22, align 1, !dbg !849
  %arrayidx = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 1, !dbg !850
  %real = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral, i32 0, i32 0, !dbg !851
  %24 = ptrtoint double* %real to i64
  call void @__DiscoPoPOpenMPWrite(i64 %24)
  store double 0x408154DE9E5DA8C7, double* %real, align 8, !dbg !851
  %imag = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral, i32 0, i32 1, !dbg !851
  %25 = ptrtoint double* %imag to i64
  call void @__DiscoPoPOpenMPWrite(i64 %25)
  store double 0x407E4894D21E84F6, double* %imag, align 8, !dbg !851
  %26 = bitcast %struct.dcomplex* %arrayidx to i8*, !dbg !851
  %27 = bitcast %struct.dcomplex* %.compoundliteral to i8*, !dbg !851
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 16, i32 8, i1 false), !dbg !851
  %arrayidx6 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 2, !dbg !852
  %real8 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral7, i32 0, i32 0, !dbg !853
  %28 = ptrtoint double* %real8 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %28)
  store double 0x4081551BBB575EAB, double* %real8, align 8, !dbg !853
  %imag9 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral7, i32 0, i32 1, !dbg !853
  %29 = ptrtoint double* %imag9 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %29)
  store double 0x407E687CA0F87E44, double* %imag9, align 8, !dbg !853
  %30 = bitcast %struct.dcomplex* %arrayidx6 to i8*, !dbg !853
  %31 = bitcast %struct.dcomplex* %.compoundliteral7 to i8*, !dbg !853
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 16, i32 8, i1 false), !dbg !853
  %arrayidx10 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 3, !dbg !854
  %real12 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral11, i32 0, i32 0, !dbg !855
  %32 = ptrtoint double* %real12 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %32)
  store double 0x408154EB318EB593, double* %real12, align 8, !dbg !855
  %imag13 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral11, i32 0, i32 1, !dbg !855
  %33 = ptrtoint double* %imag13 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %33)
  store double 0x407E8641D4F55AF9, double* %imag13, align 8, !dbg !855
  %34 = bitcast %struct.dcomplex* %arrayidx10 to i8*, !dbg !855
  %35 = bitcast %struct.dcomplex* %.compoundliteral11 to i8*, !dbg !855
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 16, i32 8, i1 false), !dbg !855
  %arrayidx14 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 4, !dbg !856
  %real16 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral15, i32 0, i32 0, !dbg !857
  %36 = ptrtoint double* %real16 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %36)
  store double 0x40815456C13A7B04, double* %real16, align 8, !dbg !857
  %imag17 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral15, i32 0, i32 1, !dbg !857
  %37 = ptrtoint double* %imag17 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %37)
  store double 0x407EA2097D7357C2, double* %imag17, align 8, !dbg !857
  %38 = bitcast %struct.dcomplex* %arrayidx14 to i8*, !dbg !857
  %39 = bitcast %struct.dcomplex* %.compoundliteral15 to i8*, !dbg !857
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 16, i32 8, i1 false), !dbg !857
  %arrayidx18 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 5, !dbg !858
  %real20 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral19, i32 0, i32 0, !dbg !859
  %40 = ptrtoint double* %real20 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %40)
  store double 0x408153676E9F169C, double* %real20, align 8, !dbg !859
  %imag21 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral19, i32 0, i32 1, !dbg !859
  %41 = ptrtoint double* %imag21 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %41)
  store double 0x407EBBF61C86EF29, double* %imag21, align 8, !dbg !859
  %42 = bitcast %struct.dcomplex* %arrayidx18 to i8*, !dbg !859
  %43 = bitcast %struct.dcomplex* %.compoundliteral19 to i8*, !dbg !859
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 16, i32 8, i1 false), !dbg !859
  %arrayidx22 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 6, !dbg !860
  %real24 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral23, i32 0, i32 0, !dbg !861
  %44 = ptrtoint double* %real24 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %44)
  store double 0x408152259010E0A1, double* %real24, align 8, !dbg !861
  %imag25 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral23, i32 0, i32 1, !dbg !861
  %45 = ptrtoint double* %imag25 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %45)
  store double 0x407ED427D4DF0213, double* %imag25, align 8, !dbg !861
  %46 = bitcast %struct.dcomplex* %arrayidx22 to i8*, !dbg !861
  %47 = bitcast %struct.dcomplex* %.compoundliteral23 to i8*, !dbg !861
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 16, i32 8, i1 false), !dbg !861
  br label %if.end492, !dbg !862

if.else:                                          ; preds = %land.lhs.true4, %land.lhs.true2, %land.lhs.true, %entry
  %48 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %48, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.207, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %49 = load i32, i32* %d1.addr, align 4, !dbg !863
  %cmp26 = icmp eq i32 %49, 128, !dbg !866
  br i1 %cmp26, label %land.lhs.true27, label %if.else58, !dbg !867

land.lhs.true27:                                  ; preds = %if.else
  %50 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %50, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.208, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %51 = load i32, i32* %d2.addr, align 4, !dbg !868
  %cmp28 = icmp eq i32 %51, 128, !dbg !870
  br i1 %cmp28, label %land.lhs.true29, label %if.else58, !dbg !871

land.lhs.true29:                                  ; preds = %land.lhs.true27
  %52 = ptrtoint i32* %d3.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %52, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.209, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %53 = load i32, i32* %d3.addr, align 4, !dbg !872
  %cmp30 = icmp eq i32 %53, 32, !dbg !874
  br i1 %cmp30, label %land.lhs.true31, label %if.else58, !dbg !875

land.lhs.true31:                                  ; preds = %land.lhs.true29
  %54 = ptrtoint i32* %nt.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %54, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.210, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %55 = load i32, i32* %nt.addr, align 4, !dbg !876
  %cmp32 = icmp eq i32 %55, 6, !dbg !878
  br i1 %cmp32, label %if.then33, label %if.else58, !dbg !879

if.then33:                                        ; preds = %land.lhs.true31
  %56 = ptrtoint i8** %Class.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %56, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.211, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %57 = load i8*, i8** %Class.addr, align 8, !dbg !880
  %58 = ptrtoint i8* %57 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %58)
  store i8 87, i8* %57, align 1, !dbg !882
  %arrayidx34 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 1, !dbg !883
  %real36 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral35, i32 0, i32 0, !dbg !884
  %59 = ptrtoint double* %real36 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %59)
  store double 0x4081BAE3C635196D, double* %real36, align 8, !dbg !884
  %imag37 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral35, i32 0, i32 1, !dbg !884
  %60 = ptrtoint double* %imag37 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %60)
  store double 0x40808A98F467F156, double* %imag37, align 8, !dbg !884
  %61 = bitcast %struct.dcomplex* %arrayidx34 to i8*, !dbg !884
  %62 = bitcast %struct.dcomplex* %.compoundliteral35 to i8*, !dbg !884
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %61, i8* %62, i64 16, i32 8, i1 false), !dbg !884
  %arrayidx38 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 2, !dbg !885
  %real40 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral39, i32 0, i32 0, !dbg !886
  %63 = ptrtoint double* %real40 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %63)
  store double 0x40819926462BA5A4, double* %real40, align 8, !dbg !886
  %imag41 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral39, i32 0, i32 1, !dbg !886
  %64 = ptrtoint double* %imag41 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %64)
  store double 0x408081B851380EB7, double* %imag41, align 8, !dbg !886
  %65 = bitcast %struct.dcomplex* %arrayidx38 to i8*, !dbg !886
  %66 = bitcast %struct.dcomplex* %.compoundliteral39 to i8*, !dbg !886
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 16, i32 8, i1 false), !dbg !886
  %arrayidx42 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 3, !dbg !887
  %real44 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral43, i32 0, i32 0, !dbg !888
  %67 = ptrtoint double* %real44 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %67)
  store double 0x40817B3822354DD9, double* %real44, align 8, !dbg !888
  %imag45 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral43, i32 0, i32 1, !dbg !888
  %68 = ptrtoint double* %imag45 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %68)
  store double 0x408078CC18578DFC, double* %imag45, align 8, !dbg !888
  %69 = bitcast %struct.dcomplex* %arrayidx42 to i8*, !dbg !888
  %70 = bitcast %struct.dcomplex* %.compoundliteral43 to i8*, !dbg !888
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %70, i64 16, i32 8, i1 false), !dbg !888
  %arrayidx46 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 4, !dbg !889
  %real48 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral47, i32 0, i32 0, !dbg !890
  %71 = ptrtoint double* %real48 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %71)
  store double 0x4081608EF5C48194, double* %real48, align 8, !dbg !890
  %imag49 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral47, i32 0, i32 1, !dbg !890
  %72 = ptrtoint double* %imag49 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %72)
  store double 0x40807005B7059038, double* %imag49, align 8, !dbg !890
  %73 = bitcast %struct.dcomplex* %arrayidx46 to i8*, !dbg !890
  %74 = bitcast %struct.dcomplex* %.compoundliteral47 to i8*, !dbg !890
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 16, i32 8, i1 false), !dbg !890
  %arrayidx50 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 5, !dbg !891
  %real52 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral51, i32 0, i32 0, !dbg !892
  %75 = ptrtoint double* %real52 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %75)
  store double 0x408148B81D084E83, double* %real52, align 8, !dbg !892
  %imag53 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral51, i32 0, i32 1, !dbg !892
  %76 = ptrtoint double* %imag53 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %76)
  store double 0x408067854B0E36C9, double* %imag53, align 8, !dbg !892
  %77 = bitcast %struct.dcomplex* %arrayidx50 to i8*, !dbg !892
  %78 = bitcast %struct.dcomplex* %.compoundliteral51 to i8*, !dbg !892
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %77, i8* %78, i64 16, i32 8, i1 false), !dbg !892
  %arrayidx54 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 6, !dbg !893
  %real56 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral55, i32 0, i32 0, !dbg !894
  %79 = ptrtoint double* %real56 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %79)
  store double 0x40813353E9E3E09A, double* %real56, align 8, !dbg !894
  %imag57 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral55, i32 0, i32 1, !dbg !894
  %80 = ptrtoint double* %imag57 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %80)
  store double 0x40805F5EAB0F5DA2, double* %imag57, align 8, !dbg !894
  %81 = bitcast %struct.dcomplex* %arrayidx54 to i8*, !dbg !894
  %82 = bitcast %struct.dcomplex* %.compoundliteral55 to i8*, !dbg !894
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %81, i8* %82, i64 16, i32 8, i1 false), !dbg !894
  br label %if.end491, !dbg !895

if.else58:                                        ; preds = %land.lhs.true31, %land.lhs.true29, %land.lhs.true27, %if.else
  %83 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %83, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.212, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %84 = load i32, i32* %d1.addr, align 4, !dbg !896
  %cmp59 = icmp eq i32 %84, 256, !dbg !899
  br i1 %cmp59, label %land.lhs.true60, label %if.else91, !dbg !900

land.lhs.true60:                                  ; preds = %if.else58
  %85 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %85, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.213, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %86 = load i32, i32* %d2.addr, align 4, !dbg !901
  %cmp61 = icmp eq i32 %86, 256, !dbg !903
  br i1 %cmp61, label %land.lhs.true62, label %if.else91, !dbg !904

land.lhs.true62:                                  ; preds = %land.lhs.true60
  %87 = ptrtoint i32* %d3.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %87, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.214, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %88 = load i32, i32* %d3.addr, align 4, !dbg !905
  %cmp63 = icmp eq i32 %88, 128, !dbg !907
  br i1 %cmp63, label %land.lhs.true64, label %if.else91, !dbg !908

land.lhs.true64:                                  ; preds = %land.lhs.true62
  %89 = ptrtoint i32* %nt.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %89, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.215, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %90 = load i32, i32* %nt.addr, align 4, !dbg !909
  %cmp65 = icmp eq i32 %90, 6, !dbg !911
  br i1 %cmp65, label %if.then66, label %if.else91, !dbg !912

if.then66:                                        ; preds = %land.lhs.true64
  %91 = ptrtoint i8** %Class.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %91, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.216, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %92 = load i8*, i8** %Class.addr, align 8, !dbg !913
  %93 = ptrtoint i8* %92 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %93)
  store i8 65, i8* %92, align 1, !dbg !915
  %arrayidx67 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 1, !dbg !916
  %real69 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral68, i32 0, i32 0, !dbg !917
  %94 = ptrtoint double* %real69 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %94)
  store double 0x407F8AC6A8CB8B90, double* %real69, align 8, !dbg !917
  %imag70 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral68, i32 0, i32 1, !dbg !917
  %95 = ptrtoint double* %imag70 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %95)
  store double 0x407FF67A05A82466, double* %imag70, align 8, !dbg !917
  %96 = bitcast %struct.dcomplex* %arrayidx67 to i8*, !dbg !917
  %97 = bitcast %struct.dcomplex* %.compoundliteral68 to i8*, !dbg !917
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %96, i8* %97, i64 16, i32 8, i1 false), !dbg !917
  %arrayidx71 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 2, !dbg !918
  %real73 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral72, i32 0, i32 0, !dbg !919
  %98 = ptrtoint double* %real73 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %98)
  store double 0x407F9F0F4941FB3E, double* %real73, align 8, !dbg !919
  %imag74 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral72, i32 0, i32 1, !dbg !919
  %99 = ptrtoint double* %imag74 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %99)
  store double 0x407FDE18707A9D72, double* %imag74, align 8, !dbg !919
  %100 = bitcast %struct.dcomplex* %arrayidx71 to i8*, !dbg !919
  %101 = bitcast %struct.dcomplex* %.compoundliteral72 to i8*, !dbg !919
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 16, i32 8, i1 false), !dbg !919
  %arrayidx75 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 3, !dbg !920
  %real77 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral76, i32 0, i32 0, !dbg !921
  %102 = ptrtoint double* %real77 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %102)
  store double 0x407FAF00C6D7110A, double* %real77, align 8, !dbg !921
  %imag78 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral76, i32 0, i32 1, !dbg !921
  %103 = ptrtoint double* %imag78 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %103)
  store double 0x407FDD07CCB88353, double* %imag78, align 8, !dbg !921
  %104 = bitcast %struct.dcomplex* %arrayidx75 to i8*, !dbg !921
  %105 = bitcast %struct.dcomplex* %.compoundliteral76 to i8*, !dbg !921
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %104, i8* %105, i64 16, i32 8, i1 false), !dbg !921
  %arrayidx79 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 4, !dbg !922
  %real81 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral80, i32 0, i32 0, !dbg !923
  %106 = ptrtoint double* %real81 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %106)
  store double 0x407FBCA0EB3ECBEF, double* %real81, align 8, !dbg !923
  %imag82 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral80, i32 0, i32 1, !dbg !923
  %107 = ptrtoint double* %imag82 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %107)
  store double 0x407FE2234776F4EF, double* %imag82, align 8, !dbg !923
  %108 = bitcast %struct.dcomplex* %arrayidx79 to i8*, !dbg !923
  %109 = bitcast %struct.dcomplex* %.compoundliteral80 to i8*, !dbg !923
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %108, i8* %109, i64 16, i32 8, i1 false), !dbg !923
  %arrayidx83 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 5, !dbg !924
  %real85 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral84, i32 0, i32 0, !dbg !925
  %110 = ptrtoint double* %real85 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %110)
  store double 0x407FC85F79D2C1E9, double* %real85, align 8, !dbg !925
  %imag86 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral84, i32 0, i32 1, !dbg !925
  %111 = ptrtoint double* %imag86 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %111)
  store double 0x407FE7DD0AF2CEF4, double* %imag86, align 8, !dbg !925
  %112 = bitcast %struct.dcomplex* %arrayidx83 to i8*, !dbg !925
  %113 = bitcast %struct.dcomplex* %.compoundliteral84 to i8*, !dbg !925
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %112, i8* %113, i64 16, i32 8, i1 false), !dbg !925
  %arrayidx87 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 6, !dbg !926
  %real89 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral88, i32 0, i32 0, !dbg !927
  %114 = ptrtoint double* %real89 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %114)
  store double 0x407FD2611DBB8FA9, double* %real89, align 8, !dbg !927
  %imag90 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral88, i32 0, i32 1, !dbg !927
  %115 = ptrtoint double* %imag90 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %115)
  store double 0x407FECAB25FE5602, double* %imag90, align 8, !dbg !927
  %116 = bitcast %struct.dcomplex* %arrayidx87 to i8*, !dbg !927
  %117 = bitcast %struct.dcomplex* %.compoundliteral88 to i8*, !dbg !927
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %116, i8* %117, i64 16, i32 8, i1 false), !dbg !927
  br label %if.end490, !dbg !928

if.else91:                                        ; preds = %land.lhs.true64, %land.lhs.true62, %land.lhs.true60, %if.else58
  %118 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %118, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.217, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %119 = load i32, i32* %d1.addr, align 4, !dbg !929
  %cmp92 = icmp eq i32 %119, 512, !dbg !932
  br i1 %cmp92, label %land.lhs.true93, label %if.else180, !dbg !933

land.lhs.true93:                                  ; preds = %if.else91
  %120 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %120, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %121 = load i32, i32* %d2.addr, align 4, !dbg !934
  %cmp94 = icmp eq i32 %121, 256, !dbg !936
  br i1 %cmp94, label %land.lhs.true95, label %if.else180, !dbg !937

land.lhs.true95:                                  ; preds = %land.lhs.true93
  %122 = ptrtoint i32* %d3.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %122, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.219, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %123 = load i32, i32* %d3.addr, align 4, !dbg !938
  %cmp96 = icmp eq i32 %123, 256, !dbg !940
  br i1 %cmp96, label %land.lhs.true97, label %if.else180, !dbg !941

land.lhs.true97:                                  ; preds = %land.lhs.true95
  %124 = ptrtoint i32* %nt.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %124, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.220, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %125 = load i32, i32* %nt.addr, align 4, !dbg !942
  %cmp98 = icmp eq i32 %125, 20, !dbg !944
  br i1 %cmp98, label %if.then99, label %if.else180, !dbg !945

if.then99:                                        ; preds = %land.lhs.true97
  %126 = ptrtoint i8** %Class.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %126, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.221, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %127 = load i8*, i8** %Class.addr, align 8, !dbg !946
  %128 = ptrtoint i8* %127 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %128)
  store i8 66, i8* %127, align 1, !dbg !948
  %arrayidx100 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 1, !dbg !949
  %real102 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral101, i32 0, i32 0, !dbg !950
  %129 = ptrtoint double* %real102 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %129)
  store double 0x40802E1D67491D27, double* %real102, align 8, !dbg !950
  %imag103 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral101, i32 0, i32 1, !dbg !950
  %130 = ptrtoint double* %imag103 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %130)
  store double 0x407FBC7C4BF0AFB0, double* %imag103, align 8, !dbg !950
  %131 = bitcast %struct.dcomplex* %arrayidx100 to i8*, !dbg !950
  %132 = bitcast %struct.dcomplex* %.compoundliteral101 to i8*, !dbg !950
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %131, i8* %132, i64 16, i32 8, i1 false), !dbg !950
  %arrayidx104 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 2, !dbg !951
  %real106 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral105, i32 0, i32 0, !dbg !952
  %133 = ptrtoint double* %real106 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %133)
  store double 0x40801B9DF5E01838, double* %real106, align 8, !dbg !952
  %imag107 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral105, i32 0, i32 1, !dbg !952
  %134 = ptrtoint double* %imag107 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %134)
  store double 0x407FCD32F7994D45, double* %imag107, align 8, !dbg !952
  %135 = bitcast %struct.dcomplex* %arrayidx104 to i8*, !dbg !952
  %136 = bitcast %struct.dcomplex* %.compoundliteral105 to i8*, !dbg !952
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %135, i8* %136, i64 16, i32 8, i1 false), !dbg !952
  %arrayidx108 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 3, !dbg !953
  %real110 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral109, i32 0, i32 0, !dbg !954
  %137 = ptrtoint double* %real110 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %137)
  store double 0x408015209C2AC008, double* %real110, align 8, !dbg !954
  %imag111 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral109, i32 0, i32 1, !dbg !954
  %138 = ptrtoint double* %imag111 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %138)
  store double 0x407FD9EF2BAE169A, double* %imag111, align 8, !dbg !954
  %139 = bitcast %struct.dcomplex* %arrayidx108 to i8*, !dbg !954
  %140 = bitcast %struct.dcomplex* %.compoundliteral109 to i8*, !dbg !954
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %139, i8* %140, i64 16, i32 8, i1 false), !dbg !954
  %arrayidx112 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 4, !dbg !955
  %real114 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral113, i32 0, i32 0, !dbg !956
  %141 = ptrtoint double* %real114 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %141)
  store double 0x408011E72B556FFE, double* %real114, align 8, !dbg !956
  %imag115 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral113, i32 0, i32 1, !dbg !956
  %142 = ptrtoint double* %imag115 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %142)
  store double 0x407FE1A32DF83794, double* %imag115, align 8, !dbg !956
  %143 = bitcast %struct.dcomplex* %arrayidx112 to i8*, !dbg !956
  %144 = bitcast %struct.dcomplex* %.compoundliteral113 to i8*, !dbg !956
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %143, i8* %144, i64 16, i32 8, i1 false), !dbg !956
  %arrayidx116 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 5, !dbg !957
  %real118 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral117, i32 0, i32 0, !dbg !958
  %145 = ptrtoint double* %real118 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %145)
  store double 0x40800FB38AA32FE6, double* %real118, align 8, !dbg !958
  %imag119 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral117, i32 0, i32 1, !dbg !958
  %146 = ptrtoint double* %imag119 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %146)
  store double 0x407FE65CD1D86E4E, double* %imag119, align 8, !dbg !958
  %147 = bitcast %struct.dcomplex* %arrayidx116 to i8*, !dbg !958
  %148 = bitcast %struct.dcomplex* %.compoundliteral117 to i8*, !dbg !958
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %147, i8* %148, i64 16, i32 8, i1 false), !dbg !958
  %arrayidx120 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 6, !dbg !959
  %real122 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral121, i32 0, i32 0, !dbg !960
  %149 = ptrtoint double* %real122 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %149)
  store double 0x40800DF0531A9C48, double* %real122, align 8, !dbg !960
  %imag123 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral121, i32 0, i32 1, !dbg !960
  %150 = ptrtoint double* %imag123 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %150)
  store double 0x407FE9844F14C8E1, double* %imag123, align 8, !dbg !960
  %151 = bitcast %struct.dcomplex* %arrayidx120 to i8*, !dbg !960
  %152 = bitcast %struct.dcomplex* %.compoundliteral121 to i8*, !dbg !960
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %151, i8* %152, i64 16, i32 8, i1 false), !dbg !960
  %arrayidx124 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 7, !dbg !961
  %real126 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral125, i32 0, i32 0, !dbg !962
  %153 = ptrtoint double* %real126 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %153)
  store double 0x40800C700989200D, double* %real126, align 8, !dbg !962
  %imag127 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral125, i32 0, i32 1, !dbg !962
  %154 = ptrtoint double* %imag127 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %154)
  store double 0x407FEBD8BF0DD370, double* %imag127, align 8, !dbg !962
  %155 = bitcast %struct.dcomplex* %arrayidx124 to i8*, !dbg !962
  %156 = bitcast %struct.dcomplex* %.compoundliteral125 to i8*, !dbg !962
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %155, i8* %156, i64 16, i32 8, i1 false), !dbg !962
  %arrayidx128 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 8, !dbg !963
  %real130 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral129, i32 0, i32 0, !dbg !964
  %157 = ptrtoint double* %real130 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %157)
  store double 0x40800B20F5210ADA, double* %real130, align 8, !dbg !964
  %imag131 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral129, i32 0, i32 1, !dbg !964
  %158 = ptrtoint double* %imag131 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %158)
  store double 0x407FEDB8F6EE292B, double* %imag131, align 8, !dbg !964
  %159 = bitcast %struct.dcomplex* %arrayidx128 to i8*, !dbg !964
  %160 = bitcast %struct.dcomplex* %.compoundliteral129 to i8*, !dbg !964
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %159, i8* %160, i64 16, i32 8, i1 false), !dbg !964
  %arrayidx132 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 9, !dbg !965
  %real134 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral133, i32 0, i32 0, !dbg !966
  %161 = ptrtoint double* %real134 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %161)
  store double 0x408009FA001E667B, double* %real134, align 8, !dbg !966
  %imag135 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral133, i32 0, i32 1, !dbg !966
  %162 = ptrtoint double* %imag135 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %162)
  store double 0x407FEF52DA70C18D, double* %imag135, align 8, !dbg !966
  %163 = bitcast %struct.dcomplex* %arrayidx132 to i8*, !dbg !966
  %164 = bitcast %struct.dcomplex* %.compoundliteral133 to i8*, !dbg !966
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %163, i8* %164, i64 16, i32 8, i1 false), !dbg !966
  %arrayidx136 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 10, !dbg !967
  %real138 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral137, i32 0, i32 0, !dbg !968
  %165 = ptrtoint double* %real138 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %165)
  store double 0x408008F54B8BB893, double* %real138, align 8, !dbg !968
  %imag139 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral137, i32 0, i32 1, !dbg !968
  %166 = ptrtoint double* %imag139 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %166)
  store double 0x407FF0BC8A6C6119, double* %imag139, align 8, !dbg !968
  %167 = bitcast %struct.dcomplex* %arrayidx136 to i8*, !dbg !968
  %168 = bitcast %struct.dcomplex* %.compoundliteral137 to i8*, !dbg !968
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %167, i8* %168, i64 16, i32 8, i1 false), !dbg !968
  %arrayidx140 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 11, !dbg !969
  %real142 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral141, i32 0, i32 0, !dbg !970
  %169 = ptrtoint double* %real142 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %169)
  store double 0x4080080E66C1709C, double* %real142, align 8, !dbg !970
  %imag143 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral141, i32 0, i32 1, !dbg !970
  %170 = ptrtoint double* %imag143 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %170)
  store double 0x407FF200FF33D23F, double* %imag143, align 8, !dbg !970
  %171 = bitcast %struct.dcomplex* %arrayidx140 to i8*, !dbg !970
  %172 = bitcast %struct.dcomplex* %.compoundliteral141 to i8*, !dbg !970
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %171, i8* %172, i64 16, i32 8, i1 false), !dbg !970
  %arrayidx144 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 12, !dbg !971
  %real146 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral145, i32 0, i32 0, !dbg !972
  %173 = ptrtoint double* %real146 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %173)
  store double 0x40800741A55F37AD, double* %real146, align 8, !dbg !972
  %imag147 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral145, i32 0, i32 1, !dbg !972
  %174 = ptrtoint double* %imag147 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %174)
  store double 0x407FF3261FE7F7AD, double* %imag147, align 8, !dbg !972
  %175 = bitcast %struct.dcomplex* %arrayidx144 to i8*, !dbg !972
  %176 = bitcast %struct.dcomplex* %.compoundliteral145 to i8*, !dbg !972
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %175, i8* %176, i64 16, i32 8, i1 false), !dbg !972
  %arrayidx148 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 13, !dbg !973
  %real150 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral149, i32 0, i32 0, !dbg !974
  %177 = ptrtoint double* %real150 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %177)
  store double 0x4080068BDAC33674, double* %real150, align 8, !dbg !974
  %imag151 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral149, i32 0, i32 1, !dbg !974
  %178 = ptrtoint double* %imag151 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %178)
  store double 0x407FF42F9BEB8DC0, double* %imag151, align 8, !dbg !974
  %179 = bitcast %struct.dcomplex* %arrayidx148 to i8*, !dbg !974
  %180 = bitcast %struct.dcomplex* %.compoundliteral149 to i8*, !dbg !974
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %179, i8* %180, i64 16, i32 8, i1 false), !dbg !974
  %arrayidx152 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 14, !dbg !975
  %real154 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral153, i32 0, i32 0, !dbg !976
  %181 = ptrtoint double* %real154 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %181)
  store double 0x408005EA3C919C43, double* %real154, align 8, !dbg !976
  %imag155 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral153, i32 0, i32 1, !dbg !976
  %182 = ptrtoint double* %imag155 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %182)
  store double 0x407FF5203263B154, double* %imag155, align 8, !dbg !976
  %183 = bitcast %struct.dcomplex* %arrayidx152 to i8*, !dbg !976
  %184 = bitcast %struct.dcomplex* %.compoundliteral153 to i8*, !dbg !976
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %183, i8* %184, i64 16, i32 8, i1 false), !dbg !976
  %arrayidx156 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 15, !dbg !977
  %real158 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral157, i32 0, i32 0, !dbg !978
  %185 = ptrtoint double* %real158 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %185)
  store double 0x4080055A545A3920, double* %real158, align 8, !dbg !978
  %imag159 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral157, i32 0, i32 1, !dbg !978
  %186 = ptrtoint double* %imag159 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %186)
  store double 0x407FF5FA3C741F6E, double* %imag159, align 8, !dbg !978
  %187 = bitcast %struct.dcomplex* %arrayidx156 to i8*, !dbg !978
  %188 = bitcast %struct.dcomplex* %.compoundliteral157 to i8*, !dbg !978
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %187, i8* %188, i64 16, i32 8, i1 false), !dbg !978
  %arrayidx160 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 16, !dbg !979
  %real162 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral161, i32 0, i32 0, !dbg !980
  %189 = ptrtoint double* %real162 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %189)
  store double 0x408004D9F6B6B8E1, double* %real162, align 8, !dbg !980
  %imag163 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral161, i32 0, i32 1, !dbg !980
  %190 = ptrtoint double* %imag163 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %190)
  store double 0x407FF6BFE1A61501, double* %imag163, align 8, !dbg !980
  %191 = bitcast %struct.dcomplex* %arrayidx160 to i8*, !dbg !980
  %192 = bitcast %struct.dcomplex* %.compoundliteral161 to i8*, !dbg !980
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %191, i8* %192, i64 16, i32 8, i1 false), !dbg !980
  %arrayidx164 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 17, !dbg !981
  %real166 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral165, i32 0, i32 0, !dbg !982
  %193 = ptrtoint double* %real166 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %193)
  store double 0x408004673C213244, double* %real166, align 8, !dbg !982
  %imag167 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral165, i32 0, i32 1, !dbg !982
  %194 = ptrtoint double* %imag167 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %194)
  store double 0x407FF77327A3F7B0, double* %imag167, align 8, !dbg !982
  %195 = bitcast %struct.dcomplex* %arrayidx164 to i8*, !dbg !982
  %196 = bitcast %struct.dcomplex* %.compoundliteral165 to i8*, !dbg !982
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %195, i8* %196, i64 16, i32 8, i1 false), !dbg !982
  %arrayidx168 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 18, !dbg !983
  %real170 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral169, i32 0, i32 0, !dbg !984
  %197 = ptrtoint double* %real170 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %197)
  store double 0x408004007A3FD0EA, double* %real170, align 8, !dbg !984
  %imag171 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral169, i32 0, i32 1, !dbg !984
  %198 = ptrtoint double* %imag171 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %198)
  store double 0x407FF815F3F1C1DE, double* %imag171, align 8, !dbg !984
  %199 = bitcast %struct.dcomplex* %arrayidx168 to i8*, !dbg !984
  %200 = bitcast %struct.dcomplex* %.compoundliteral169 to i8*, !dbg !984
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %199, i8* %200, i64 16, i32 8, i1 false), !dbg !984
  %arrayidx172 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 19, !dbg !985
  %real174 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral173, i32 0, i32 0, !dbg !986
  %201 = ptrtoint double* %real174 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %201)
  store double 0x408003A43D5F793B, double* %real174, align 8, !dbg !986
  %imag175 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral173, i32 0, i32 1, !dbg !986
  %202 = ptrtoint double* %imag175 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %202)
  store double 0x407FF8AA099402A0, double* %imag175, align 8, !dbg !986
  %203 = bitcast %struct.dcomplex* %arrayidx172 to i8*, !dbg !986
  %204 = bitcast %struct.dcomplex* %.compoundliteral173 to i8*, !dbg !986
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %203, i8* %204, i64 16, i32 8, i1 false), !dbg !986
  %arrayidx176 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 20, !dbg !987
  %real178 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral177, i32 0, i32 0, !dbg !988
  %205 = ptrtoint double* %real178 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %205)
  store double 0x40800351422D2EDF, double* %real178, align 8, !dbg !988
  %imag179 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral177, i32 0, i32 1, !dbg !988
  %206 = ptrtoint double* %imag179 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %206)
  store double 0x407FF93106A352EE, double* %imag179, align 8, !dbg !988
  %207 = bitcast %struct.dcomplex* %arrayidx176 to i8*, !dbg !988
  %208 = bitcast %struct.dcomplex* %.compoundliteral177 to i8*, !dbg !988
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %207, i8* %208, i64 16, i32 8, i1 false), !dbg !988
  br label %if.end489, !dbg !989

if.else180:                                       ; preds = %land.lhs.true97, %land.lhs.true95, %land.lhs.true93, %if.else91
  %209 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %209, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.222, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %210 = load i32, i32* %d1.addr, align 4, !dbg !990
  %cmp181 = icmp eq i32 %210, 512, !dbg !993
  br i1 %cmp181, label %land.lhs.true182, label %if.else269, !dbg !994

land.lhs.true182:                                 ; preds = %if.else180
  %211 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %211, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.223, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %212 = load i32, i32* %d2.addr, align 4, !dbg !995
  %cmp183 = icmp eq i32 %212, 512, !dbg !997
  br i1 %cmp183, label %land.lhs.true184, label %if.else269, !dbg !998

land.lhs.true184:                                 ; preds = %land.lhs.true182
  %213 = ptrtoint i32* %d3.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %213, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.224, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %214 = load i32, i32* %d3.addr, align 4, !dbg !999
  %cmp185 = icmp eq i32 %214, 512, !dbg !1001
  br i1 %cmp185, label %land.lhs.true186, label %if.else269, !dbg !1002

land.lhs.true186:                                 ; preds = %land.lhs.true184
  %215 = ptrtoint i32* %nt.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %215, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.225, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %216 = load i32, i32* %nt.addr, align 4, !dbg !1003
  %cmp187 = icmp eq i32 %216, 20, !dbg !1005
  br i1 %cmp187, label %if.then188, label %if.else269, !dbg !1006

if.then188:                                       ; preds = %land.lhs.true186
  %217 = ptrtoint i8** %Class.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %217, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.226, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %218 = load i8*, i8** %Class.addr, align 8, !dbg !1007
  %219 = ptrtoint i8* %218 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %219)
  store i8 67, i8* %218, align 1, !dbg !1009
  %arrayidx189 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 1, !dbg !1010
  %real191 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral190, i32 0, i32 0, !dbg !1011
  %220 = ptrtoint double* %real191 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %220)
  store double 0x40803C101E899B03, double* %real191, align 8, !dbg !1011
  %imag192 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral190, i32 0, i32 1, !dbg !1011
  %221 = ptrtoint double* %imag192 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %221)
  store double 0x408017373C01E593, double* %imag192, align 8, !dbg !1011
  %222 = bitcast %struct.dcomplex* %arrayidx189 to i8*, !dbg !1011
  %223 = bitcast %struct.dcomplex* %.compoundliteral190 to i8*, !dbg !1011
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %222, i8* %223, i64 16, i32 8, i1 false), !dbg !1011
  %arrayidx193 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 2, !dbg !1012
  %real195 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral194, i32 0, i32 0, !dbg !1013
  %224 = ptrtoint double* %real195 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %224)
  store double 0x40801C5675ED0B14, double* %real195, align 8, !dbg !1013
  %imag196 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral194, i32 0, i32 1, !dbg !1013
  %225 = ptrtoint double* %imag196 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %225)
  store double 0x4080061004096FAD, double* %imag196, align 8, !dbg !1013
  %226 = bitcast %struct.dcomplex* %arrayidx193 to i8*, !dbg !1013
  %227 = bitcast %struct.dcomplex* %.compoundliteral194 to i8*, !dbg !1013
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %226, i8* %227, i64 16, i32 8, i1 false), !dbg !1013
  %arrayidx197 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 3, !dbg !1014
  %real199 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral198, i32 0, i32 0, !dbg !1015
  %228 = ptrtoint double* %real199 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %228)
  store double 0x408013BE0F176AC3, double* %real199, align 8, !dbg !1015
  %imag200 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral198, i32 0, i32 1, !dbg !1015
  %229 = ptrtoint double* %imag200 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %229)
  store double 0x408001CD2DA9B691, double* %imag200, align 8, !dbg !1015
  %230 = bitcast %struct.dcomplex* %arrayidx197 to i8*, !dbg !1015
  %231 = bitcast %struct.dcomplex* %.compoundliteral198 to i8*, !dbg !1015
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %230, i8* %231, i64 16, i32 8, i1 false), !dbg !1015
  %arrayidx201 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 4, !dbg !1016
  %real203 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral202, i32 0, i32 0, !dbg !1017
  %232 = ptrtoint double* %real203 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %232)
  store double 0x4080101ED77ADAFA, double* %real203, align 8, !dbg !1017
  %imag204 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral202, i32 0, i32 1, !dbg !1017
  %233 = ptrtoint double* %imag204 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %233)
  store double 0x408000DF4A8B7C66, double* %imag204, align 8, !dbg !1017
  %234 = bitcast %struct.dcomplex* %arrayidx201 to i8*, !dbg !1017
  %235 = bitcast %struct.dcomplex* %.compoundliteral202 to i8*, !dbg !1017
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %234, i8* %235, i64 16, i32 8, i1 false), !dbg !1017
  %arrayidx205 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 5, !dbg !1018
  %real207 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral206, i32 0, i32 0, !dbg !1019
  %236 = ptrtoint double* %real207 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %236)
  store double 0x40800E0A53D12FD5, double* %real207, align 8, !dbg !1019
  %imag208 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral206, i32 0, i32 1, !dbg !1019
  %237 = ptrtoint double* %imag208 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %237)
  store double 0x408000EA3A1348C8, double* %imag208, align 8, !dbg !1019
  %238 = bitcast %struct.dcomplex* %arrayidx205 to i8*, !dbg !1019
  %239 = bitcast %struct.dcomplex* %.compoundliteral206 to i8*, !dbg !1019
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %238, i8* %239, i64 16, i32 8, i1 false), !dbg !1019
  %arrayidx209 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 6, !dbg !1020
  %real211 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral210, i32 0, i32 0, !dbg !1021
  %240 = ptrtoint double* %real211 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %240)
  store double 0x40800CA61ABB2192, double* %real211, align 8, !dbg !1021
  %imag212 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral210, i32 0, i32 1, !dbg !1021
  %241 = ptrtoint double* %imag212 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %241)
  store double 0x408001328991F77F, double* %imag212, align 8, !dbg !1021
  %242 = bitcast %struct.dcomplex* %arrayidx209 to i8*, !dbg !1021
  %243 = bitcast %struct.dcomplex* %.compoundliteral210 to i8*, !dbg !1021
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %242, i8* %243, i64 16, i32 8, i1 false), !dbg !1021
  %arrayidx213 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 7, !dbg !1022
  %real215 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral214, i32 0, i32 0, !dbg !1023
  %244 = ptrtoint double* %real215 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %244)
  store double 0x40800BA7CD2DCE4D, double* %real215, align 8, !dbg !1023
  %imag216 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral214, i32 0, i32 1, !dbg !1023
  %245 = ptrtoint double* %imag216 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %245)
  store double 0x4080017F2A30930B, double* %imag216, align 8, !dbg !1023
  %246 = bitcast %struct.dcomplex* %arrayidx213 to i8*, !dbg !1023
  %247 = bitcast %struct.dcomplex* %.compoundliteral214 to i8*, !dbg !1023
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %246, i8* %247, i64 16, i32 8, i1 false), !dbg !1023
  %arrayidx217 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 8, !dbg !1024
  %real219 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral218, i32 0, i32 0, !dbg !1025
  %248 = ptrtoint double* %real219 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %248)
  store double 0x40800AEBECB397D4, double* %real219, align 8, !dbg !1025
  %imag220 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral218, i32 0, i32 1, !dbg !1025
  %249 = ptrtoint double* %imag220 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %249)
  store double 0x408001C12D7B83F2, double* %imag220, align 8, !dbg !1025
  %250 = bitcast %struct.dcomplex* %arrayidx217 to i8*, !dbg !1025
  %251 = bitcast %struct.dcomplex* %.compoundliteral218 to i8*, !dbg !1025
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %250, i8* %251, i64 16, i32 8, i1 false), !dbg !1025
  %arrayidx221 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 9, !dbg !1026
  %real223 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral222, i32 0, i32 0, !dbg !1027
  %252 = ptrtoint double* %real223 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %252)
  store double 0x40800A5D393668AE, double* %real223, align 8, !dbg !1027
  %imag224 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral222, i32 0, i32 1, !dbg !1027
  %253 = ptrtoint double* %imag224 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %253)
  store double 0x408001F6BADA1C71, double* %imag224, align 8, !dbg !1027
  %254 = bitcast %struct.dcomplex* %arrayidx221 to i8*, !dbg !1027
  %255 = bitcast %struct.dcomplex* %.compoundliteral222 to i8*, !dbg !1027
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %254, i8* %255, i64 16, i32 8, i1 false), !dbg !1027
  %arrayidx225 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 10, !dbg !1028
  %real227 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral226, i32 0, i32 0, !dbg !1029
  %256 = ptrtoint double* %real227 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %256)
  store double 0x408009EDAA24021D, double* %real227, align 8, !dbg !1029
  %imag228 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral226, i32 0, i32 1, !dbg !1029
  %257 = ptrtoint double* %imag228 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %257)
  store double 0x4080022183F3CA50, double* %imag228, align 8, !dbg !1029
  %258 = bitcast %struct.dcomplex* %arrayidx225 to i8*, !dbg !1029
  %259 = bitcast %struct.dcomplex* %.compoundliteral226 to i8*, !dbg !1029
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %258, i8* %259, i64 16, i32 8, i1 false), !dbg !1029
  %arrayidx229 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 11, !dbg !1030
  %real231 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral230, i32 0, i32 0, !dbg !1031
  %260 = ptrtoint double* %real231 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %260)
  store double 0x40800993B097C5AC, double* %real231, align 8, !dbg !1031
  %imag232 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral230, i32 0, i32 1, !dbg !1031
  %261 = ptrtoint double* %imag232 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %261)
  store double 0x40800243C3A1DCB2, double* %imag232, align 8, !dbg !1031
  %262 = bitcast %struct.dcomplex* %arrayidx229 to i8*, !dbg !1031
  %263 = bitcast %struct.dcomplex* %.compoundliteral230 to i8*, !dbg !1031
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %262, i8* %263, i64 16, i32 8, i1 false), !dbg !1031
  %arrayidx233 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 12, !dbg !1032
  %real235 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral234, i32 0, i32 0, !dbg !1033
  %264 = ptrtoint double* %real235 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %264)
  store double 0x40800948BF026ADC, double* %real235, align 8, !dbg !1033
  %imag236 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral234, i32 0, i32 1, !dbg !1033
  %265 = ptrtoint double* %imag236 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %265)
  store double 0x4080025F68FD8268, double* %imag236, align 8, !dbg !1033
  %266 = bitcast %struct.dcomplex* %arrayidx233 to i8*, !dbg !1033
  %267 = bitcast %struct.dcomplex* %.compoundliteral234 to i8*, !dbg !1033
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %266, i8* %267, i64 16, i32 8, i1 false), !dbg !1033
  %arrayidx237 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 13, !dbg !1034
  %real239 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral238, i32 0, i32 0, !dbg !1035
  %268 = ptrtoint double* %real239 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %268)
  store double 0x4080090857A518D9, double* %real239, align 8, !dbg !1035
  %imag240 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral238, i32 0, i32 1, !dbg !1035
  %269 = ptrtoint double* %imag240 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %269)
  store double 0x40800275F32F50EA, double* %imag240, align 8, !dbg !1035
  %270 = bitcast %struct.dcomplex* %arrayidx237 to i8*, !dbg !1035
  %271 = bitcast %struct.dcomplex* %.compoundliteral238 to i8*, !dbg !1035
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %270, i8* %271, i64 16, i32 8, i1 false), !dbg !1035
  %arrayidx241 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 14, !dbg !1036
  %real243 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral242, i32 0, i32 0, !dbg !1037
  %272 = ptrtoint double* %real243 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %272)
  store double 0x408008CF67B5F6E6, double* %real243, align 8, !dbg !1037
  %imag244 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral242, i32 0, i32 1, !dbg !1037
  %273 = ptrtoint double* %imag244 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %273)
  store double 0x408002887F1716B0, double* %imag244, align 8, !dbg !1037
  %274 = bitcast %struct.dcomplex* %arrayidx241 to i8*, !dbg !1037
  %275 = bitcast %struct.dcomplex* %.compoundliteral242 to i8*, !dbg !1037
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %274, i8* %275, i64 16, i32 8, i1 false), !dbg !1037
  %arrayidx245 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 15, !dbg !1038
  %real247 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral246, i32 0, i32 0, !dbg !1039
  %276 = ptrtoint double* %real247 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %276)
  store double 0x4080089BD580EA3A, double* %real247, align 8, !dbg !1039
  %imag248 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral246, i32 0, i32 1, !dbg !1039
  %277 = ptrtoint double* %imag248 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %277)
  store double 0x40800297DE24048E, double* %imag248, align 8, !dbg !1039
  %278 = bitcast %struct.dcomplex* %arrayidx245 to i8*, !dbg !1039
  %279 = bitcast %struct.dcomplex* %.compoundliteral246 to i8*, !dbg !1039
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %278, i8* %279, i64 16, i32 8, i1 false), !dbg !1039
  %arrayidx249 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 16, !dbg !1040
  %real251 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral250, i32 0, i32 0, !dbg !1041
  %280 = ptrtoint double* %real251 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %280)
  store double 0x4080086C31EBD984, double* %real251, align 8, !dbg !1041
  %imag252 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral250, i32 0, i32 1, !dbg !1041
  %281 = ptrtoint double* %imag252 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %281)
  store double 0x408002A4AAB9F9F8, double* %imag252, align 8, !dbg !1041
  %282 = bitcast %struct.dcomplex* %arrayidx249 to i8*, !dbg !1041
  %283 = bitcast %struct.dcomplex* %.compoundliteral250 to i8*, !dbg !1041
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %282, i8* %283, i64 16, i32 8, i1 false), !dbg !1041
  %arrayidx253 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 17, !dbg !1042
  %real255 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral254, i32 0, i32 0, !dbg !1043
  %284 = ptrtoint double* %real255 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %284)
  store double 0x4080083F8294129E, double* %real255, align 8, !dbg !1043
  %imag256 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral254, i32 0, i32 1, !dbg !1043
  %285 = ptrtoint double* %imag256 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %285)
  store double 0x408002AF57DC0D71, double* %imag256, align 8, !dbg !1043
  %286 = bitcast %struct.dcomplex* %arrayidx253 to i8*, !dbg !1043
  %287 = bitcast %struct.dcomplex* %.compoundliteral254 to i8*, !dbg !1043
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %286, i8* %287, i64 16, i32 8, i1 false), !dbg !1043
  %arrayidx257 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 18, !dbg !1044
  %real259 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral258, i32 0, i32 0, !dbg !1045
  %288 = ptrtoint double* %real259 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %288)
  store double 0x408008151CE457D2, double* %real259, align 8, !dbg !1045
  %imag260 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral258, i32 0, i32 1, !dbg !1045
  %289 = ptrtoint double* %imag260 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %289)
  store double 0x408002B83C8A44C9, double* %imag260, align 8, !dbg !1045
  %290 = bitcast %struct.dcomplex* %arrayidx257 to i8*, !dbg !1045
  %291 = bitcast %struct.dcomplex* %.compoundliteral258 to i8*, !dbg !1045
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %290, i8* %291, i64 16, i32 8, i1 false), !dbg !1045
  %arrayidx261 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 19, !dbg !1046
  %real263 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral262, i32 0, i32 0, !dbg !1047
  %292 = ptrtoint double* %real263 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %292)
  store double 0x408007EC8CCD48ED, double* %real263, align 8, !dbg !1047
  %imag264 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral262, i32 0, i32 1, !dbg !1047
  %293 = ptrtoint double* %imag264 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %293)
  store double 0x408002BF9BCECA75, double* %imag264, align 8, !dbg !1047
  %294 = bitcast %struct.dcomplex* %arrayidx261 to i8*, !dbg !1047
  %295 = bitcast %struct.dcomplex* %.compoundliteral262 to i8*, !dbg !1047
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %294, i8* %295, i64 16, i32 8, i1 false), !dbg !1047
  %arrayidx265 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 20, !dbg !1048
  %real267 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral266, i32 0, i32 0, !dbg !1049
  %296 = ptrtoint double* %real267 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %296)
  store double 0x408007C58371022F, double* %real267, align 8, !dbg !1049
  %imag268 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral266, i32 0, i32 1, !dbg !1049
  %297 = ptrtoint double* %imag268 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %297)
  store double 0x408002C5AA6407B6, double* %imag268, align 8, !dbg !1049
  %298 = bitcast %struct.dcomplex* %arrayidx265 to i8*, !dbg !1049
  %299 = bitcast %struct.dcomplex* %.compoundliteral266 to i8*, !dbg !1049
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %298, i8* %299, i64 16, i32 8, i1 false), !dbg !1049
  br label %if.end488, !dbg !1050

if.else269:                                       ; preds = %land.lhs.true186, %land.lhs.true184, %land.lhs.true182, %if.else180
  %300 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %300, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.227, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %301 = load i32, i32* %d1.addr, align 4, !dbg !1051
  %cmp270 = icmp eq i32 %301, 2048, !dbg !1054
  br i1 %cmp270, label %land.lhs.true271, label %if.else378, !dbg !1055

land.lhs.true271:                                 ; preds = %if.else269
  %302 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %302, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.228, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %303 = load i32, i32* %d2.addr, align 4, !dbg !1056
  %cmp272 = icmp eq i32 %303, 1024, !dbg !1058
  br i1 %cmp272, label %land.lhs.true273, label %if.else378, !dbg !1059

land.lhs.true273:                                 ; preds = %land.lhs.true271
  %304 = ptrtoint i32* %d3.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %304, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.229, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %305 = load i32, i32* %d3.addr, align 4, !dbg !1060
  %cmp274 = icmp eq i32 %305, 1024, !dbg !1062
  br i1 %cmp274, label %land.lhs.true275, label %if.else378, !dbg !1063

land.lhs.true275:                                 ; preds = %land.lhs.true273
  %306 = ptrtoint i32* %nt.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %306, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.230, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %307 = load i32, i32* %nt.addr, align 4, !dbg !1064
  %cmp276 = icmp eq i32 %307, 25, !dbg !1066
  br i1 %cmp276, label %if.then277, label %if.else378, !dbg !1067

if.then277:                                       ; preds = %land.lhs.true275
  %308 = ptrtoint i8** %Class.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %308, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.231, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %309 = load i8*, i8** %Class.addr, align 8, !dbg !1068
  %310 = ptrtoint i8* %309 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %310)
  store i8 68, i8* %309, align 1, !dbg !1070
  %arrayidx278 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 1, !dbg !1071
  %real280 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral279, i32 0, i32 0, !dbg !1072
  %311 = ptrtoint double* %real280 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %311)
  store double 0x408001C8B7A5243B, double* %real280, align 8, !dbg !1072
  %imag281 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral279, i32 0, i32 1, !dbg !1072
  %312 = ptrtoint double* %imag281 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %312)
  store double 0x407FFDA78AA6499C, double* %imag281, align 8, !dbg !1072
  %313 = bitcast %struct.dcomplex* %arrayidx278 to i8*, !dbg !1072
  %314 = bitcast %struct.dcomplex* %.compoundliteral279 to i8*, !dbg !1072
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %313, i8* %314, i64 16, i32 8, i1 false), !dbg !1072
  %arrayidx282 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 2, !dbg !1073
  %real284 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral283, i32 0, i32 0, !dbg !1074
  %315 = ptrtoint double* %real284 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %315)
  store double 0x4080005F05B14D73, double* %real284, align 8, !dbg !1074
  %imag285 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral283, i32 0, i32 1, !dbg !1074
  %316 = ptrtoint double* %imag285 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %316)
  store double 0x407FFB4C42805D51, double* %imag285, align 8, !dbg !1074
  %317 = bitcast %struct.dcomplex* %arrayidx282 to i8*, !dbg !1074
  %318 = bitcast %struct.dcomplex* %.compoundliteral283 to i8*, !dbg !1074
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %317, i8* %318, i64 16, i32 8, i1 false), !dbg !1074
  %arrayidx286 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 3, !dbg !1075
  %real288 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral287, i32 0, i32 0, !dbg !1076
  %319 = ptrtoint double* %real288 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %319)
  store double 0x407FFFC9049FE6AA, double* %real288, align 8, !dbg !1076
  %imag289 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral287, i32 0, i32 1, !dbg !1076
  %320 = ptrtoint double* %imag289 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %320)
  store double 0x407FFB5AABC2C2DC, double* %imag289, align 8, !dbg !1076
  %321 = bitcast %struct.dcomplex* %arrayidx286 to i8*, !dbg !1076
  %322 = bitcast %struct.dcomplex* %.compoundliteral287 to i8*, !dbg !1076
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %321, i8* %322, i64 16, i32 8, i1 false), !dbg !1076
  %arrayidx290 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 4, !dbg !1077
  %real292 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral291, i32 0, i32 0, !dbg !1078
  %323 = ptrtoint double* %real292 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %323)
  store double 0x407FFF3AE6781D07, double* %real292, align 8, !dbg !1078
  %imag293 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral291, i32 0, i32 1, !dbg !1078
  %324 = ptrtoint double* %imag293 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %324)
  store double 0x407FFBCC55AD30A5, double* %imag293, align 8, !dbg !1078
  %325 = bitcast %struct.dcomplex* %arrayidx290 to i8*, !dbg !1078
  %326 = bitcast %struct.dcomplex* %.compoundliteral291 to i8*, !dbg !1078
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %325, i8* %326, i64 16, i32 8, i1 false), !dbg !1078
  %arrayidx294 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 5, !dbg !1079
  %real296 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral295, i32 0, i32 0, !dbg !1080
  %327 = ptrtoint double* %real296 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %327)
  store double 0x407FFED49E586270, double* %real296, align 8, !dbg !1080
  %imag297 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral295, i32 0, i32 1, !dbg !1080
  %328 = ptrtoint double* %imag297 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %328)
  store double 0x407FFC49DED1E229, double* %imag297, align 8, !dbg !1080
  %329 = bitcast %struct.dcomplex* %arrayidx294 to i8*, !dbg !1080
  %330 = bitcast %struct.dcomplex* %.compoundliteral295 to i8*, !dbg !1080
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %329, i8* %330, i64 16, i32 8, i1 false), !dbg !1080
  %arrayidx298 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 6, !dbg !1081
  %real300 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral299, i32 0, i32 0, !dbg !1082
  %331 = ptrtoint double* %real300 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %331)
  store double 0x407FFE88286F1600, double* %real300, align 8, !dbg !1082
  %imag301 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral299, i32 0, i32 1, !dbg !1082
  %332 = ptrtoint double* %imag301 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %332)
  store double 0x407FFCBFA44E2DA9, double* %imag301, align 8, !dbg !1082
  %333 = bitcast %struct.dcomplex* %arrayidx298 to i8*, !dbg !1082
  %334 = bitcast %struct.dcomplex* %.compoundliteral299 to i8*, !dbg !1082
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %333, i8* %334, i64 16, i32 8, i1 false), !dbg !1082
  %arrayidx302 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 7, !dbg !1083
  %real304 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral303, i32 0, i32 0, !dbg !1084
  %335 = ptrtoint double* %real304 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %335)
  store double 0x407FFE4F62F012B7, double* %real304, align 8, !dbg !1084
  %imag305 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral303, i32 0, i32 1, !dbg !1084
  %336 = ptrtoint double* %imag305 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %336)
  store double 0x407FFD2913502BF7, double* %imag305, align 8, !dbg !1084
  %337 = bitcast %struct.dcomplex* %arrayidx302 to i8*, !dbg !1084
  %338 = bitcast %struct.dcomplex* %.compoundliteral303 to i8*, !dbg !1084
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %337, i8* %338, i64 16, i32 8, i1 false), !dbg !1084
  %arrayidx306 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 8, !dbg !1085
  %real308 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral307, i32 0, i32 0, !dbg !1086
  %339 = ptrtoint double* %real308 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %339)
  store double 0x407FFE25D7467D87, double* %real308, align 8, !dbg !1086
  %imag309 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral307, i32 0, i32 1, !dbg !1086
  %340 = ptrtoint double* %imag309 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %340)
  store double 0x407FFD85C991CC1E, double* %imag309, align 8, !dbg !1086
  %341 = bitcast %struct.dcomplex* %arrayidx306 to i8*, !dbg !1086
  %342 = bitcast %struct.dcomplex* %.compoundliteral307 to i8*, !dbg !1086
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %341, i8* %342, i64 16, i32 8, i1 false), !dbg !1086
  %arrayidx310 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 9, !dbg !1087
  %real312 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral311, i32 0, i32 0, !dbg !1088
  %343 = ptrtoint double* %real312 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %343)
  store double 0x407FFE07F5F9461B, double* %real312, align 8, !dbg !1088
  %imag313 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral311, i32 0, i32 1, !dbg !1088
  %344 = ptrtoint double* %imag313 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %344)
  store double 0x407FFDD6ADE6AA2F, double* %imag313, align 8, !dbg !1088
  %345 = bitcast %struct.dcomplex* %arrayidx310 to i8*, !dbg !1088
  %346 = bitcast %struct.dcomplex* %.compoundliteral311 to i8*, !dbg !1088
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %345, i8* %346, i64 16, i32 8, i1 false), !dbg !1088
  %arrayidx314 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 10, !dbg !1089
  %real316 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral315, i32 0, i32 0, !dbg !1090
  %347 = ptrtoint double* %real316 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %347)
  store double 0x407FFDF2F9E3CE75, double* %real316, align 8, !dbg !1090
  %imag317 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral315, i32 0, i32 1, !dbg !1090
  %348 = ptrtoint double* %imag317 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %348)
  store double 0x407FFE1D0052370F, double* %imag317, align 8, !dbg !1090
  %349 = bitcast %struct.dcomplex* %arrayidx314 to i8*, !dbg !1090
  %350 = bitcast %struct.dcomplex* %.compoundliteral315 to i8*, !dbg !1090
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %349, i8* %350, i64 16, i32 8, i1 false), !dbg !1090
  %arrayidx318 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 11, !dbg !1091
  %real320 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral319, i32 0, i32 0, !dbg !1092
  %351 = ptrtoint double* %real320 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %351)
  store double 0x407FFDE4CA360F49, double* %real320, align 8, !dbg !1092
  %imag321 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral319, i32 0, i32 1, !dbg !1092
  %352 = ptrtoint double* %imag321 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %352)
  store double 0x407FFE5A05B5973E, double* %imag321, align 8, !dbg !1092
  %353 = bitcast %struct.dcomplex* %arrayidx318 to i8*, !dbg !1092
  %354 = bitcast %struct.dcomplex* %.compoundliteral319 to i8*, !dbg !1092
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %353, i8* %354, i64 16, i32 8, i1 false), !dbg !1092
  %arrayidx322 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 12, !dbg !1093
  %real324 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral323, i32 0, i32 0, !dbg !1094
  %355 = ptrtoint double* %real324 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %355)
  store double 0x407FFDDBD5F99711, double* %real324, align 8, !dbg !1094
  %imag325 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral323, i32 0, i32 1, !dbg !1094
  %356 = ptrtoint double* %imag325 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %356)
  store double 0x407FFE8EEACAA874, double* %imag325, align 8, !dbg !1094
  %357 = bitcast %struct.dcomplex* %arrayidx322 to i8*, !dbg !1094
  %358 = bitcast %struct.dcomplex* %.compoundliteral323 to i8*, !dbg !1094
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %357, i8* %358, i64 16, i32 8, i1 false), !dbg !1094
  %arrayidx326 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 13, !dbg !1095
  %real328 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral327, i32 0, i32 0, !dbg !1096
  %359 = ptrtoint double* %real328 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %359)
  store double 0x407FFDD6F2033D21, double* %real328, align 8, !dbg !1096
  %imag329 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral327, i32 0, i32 1, !dbg !1096
  %360 = ptrtoint double* %imag329 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %360)
  store double 0x407FFEBCBBFA2EBF, double* %imag329, align 8, !dbg !1096
  %361 = bitcast %struct.dcomplex* %arrayidx326 to i8*, !dbg !1096
  %362 = bitcast %struct.dcomplex* %.compoundliteral327 to i8*, !dbg !1096
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %361, i8* %362, i64 16, i32 8, i1 false), !dbg !1096
  %arrayidx330 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 14, !dbg !1097
  %real332 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral331, i32 0, i32 0, !dbg !1098
  %363 = ptrtoint double* %real332 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %363)
  store double 0x407FFDD53D74DC74, double* %real332, align 8, !dbg !1098
  %imag333 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral331, i32 0, i32 1, !dbg !1098
  %364 = ptrtoint double* %imag333 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %364)
  store double 0x407FFEE46511649D, double* %imag333, align 8, !dbg !1098
  %365 = bitcast %struct.dcomplex* %arrayidx330 to i8*, !dbg !1098
  %366 = bitcast %struct.dcomplex* %.compoundliteral331 to i8*, !dbg !1098
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %365, i8* %366, i64 16, i32 8, i1 false), !dbg !1098
  %arrayidx334 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 15, !dbg !1099
  %real336 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral335, i32 0, i32 0, !dbg !1100
  %367 = ptrtoint double* %real336 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %367)
  store double 0x407FFDD60D2DB5D2, double* %real336, align 8, !dbg !1100
  %imag337 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral335, i32 0, i32 1, !dbg !1100
  %368 = ptrtoint double* %imag337 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %368)
  store double 0x407FFF06B3C01AEA, double* %imag337, align 8, !dbg !1100
  %369 = bitcast %struct.dcomplex* %arrayidx334 to i8*, !dbg !1100
  %370 = bitcast %struct.dcomplex* %.compoundliteral335 to i8*, !dbg !1100
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %369, i8* %370, i64 16, i32 8, i1 false), !dbg !1100
  %arrayidx338 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 16, !dbg !1101
  %real340 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral339, i32 0, i32 0, !dbg !1102
  %371 = ptrtoint double* %real340 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %371)
  store double 0x407FFDD8DD056A7D, double* %real340, align 8, !dbg !1102
  %imag341 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral339, i32 0, i32 1, !dbg !1102
  %372 = ptrtoint double* %imag341 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %372)
  store double 0x407FFF245ADF0BCE, double* %imag341, align 8, !dbg !1102
  %373 = bitcast %struct.dcomplex* %arrayidx338 to i8*, !dbg !1102
  %374 = bitcast %struct.dcomplex* %.compoundliteral339 to i8*, !dbg !1102
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %373, i8* %374, i64 16, i32 8, i1 false), !dbg !1102
  %arrayidx342 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 17, !dbg !1103
  %real344 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral343, i32 0, i32 0, !dbg !1104
  %375 = ptrtoint double* %real344 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %375)
  store double 0x407FFDDD45618FE6, double* %real344, align 8, !dbg !1104
  %imag345 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral343, i32 0, i32 1, !dbg !1104
  %376 = ptrtoint double* %imag345 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %376)
  store double 0x407FFF3DF5BAB029, double* %imag345, align 8, !dbg !1104
  %377 = bitcast %struct.dcomplex* %arrayidx342 to i8*, !dbg !1104
  %378 = bitcast %struct.dcomplex* %.compoundliteral343 to i8*, !dbg !1104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %377, i8* %378, i64 16, i32 8, i1 false), !dbg !1104
  %arrayidx346 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 18, !dbg !1105
  %real348 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral347, i32 0, i32 0, !dbg !1106
  %379 = ptrtoint double* %real348 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %379)
  store double 0x407FFDE2F3E650B3, double* %real348, align 8, !dbg !1106
  %imag349 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral347, i32 0, i32 1, !dbg !1106
  %380 = ptrtoint double* %imag349 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %380)
  store double 0x407FFF540B1CF5A1, double* %imag349, align 8, !dbg !1106
  %381 = bitcast %struct.dcomplex* %arrayidx346 to i8*, !dbg !1106
  %382 = bitcast %struct.dcomplex* %.compoundliteral347 to i8*, !dbg !1106
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %381, i8* %382, i64 16, i32 8, i1 false), !dbg !1106
  %arrayidx350 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 19, !dbg !1107
  %real352 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral351, i32 0, i32 0, !dbg !1108
  %383 = ptrtoint double* %real352 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %383)
  store double 0x407FFDE9A64E1245, double* %real352, align 8, !dbg !1108
  %imag353 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral351, i32 0, i32 1, !dbg !1108
  %384 = ptrtoint double* %imag353 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %384)
  store double 0x407FFF671002DAE5, double* %imag353, align 8, !dbg !1108
  %385 = bitcast %struct.dcomplex* %arrayidx350 to i8*, !dbg !1108
  %386 = bitcast %struct.dcomplex* %.compoundliteral351 to i8*, !dbg !1108
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %385, i8* %386, i64 16, i32 8, i1 false), !dbg !1108
  %arrayidx354 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 20, !dbg !1109
  %real356 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral355, i32 0, i32 0, !dbg !1110
  %387 = ptrtoint double* %real356 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %387)
  store double 0x407FFDF126BADF21, double* %real356, align 8, !dbg !1110
  %imag357 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral355, i32 0, i32 1, !dbg !1110
  %388 = ptrtoint double* %imag357 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %388)
  store double 0x407FFF7769FD4D32, double* %imag357, align 8, !dbg !1110
  %389 = bitcast %struct.dcomplex* %arrayidx354 to i8*, !dbg !1110
  %390 = bitcast %struct.dcomplex* %.compoundliteral355 to i8*, !dbg !1110
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %389, i8* %390, i64 16, i32 8, i1 false), !dbg !1110
  %arrayidx358 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 21, !dbg !1111
  %real360 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral359, i32 0, i32 0, !dbg !1112
  %391 = ptrtoint double* %real360 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %391)
  store double 0x407FFDF94909BB13, double* %real360, align 8, !dbg !1112
  %imag361 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral359, i32 0, i32 1, !dbg !1112
  %392 = ptrtoint double* %imag361 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %392)
  store double 0x407FFF85714411B2, double* %imag361, align 8, !dbg !1112
  %393 = bitcast %struct.dcomplex* %arrayidx358 to i8*, !dbg !1112
  %394 = bitcast %struct.dcomplex* %.compoundliteral359 to i8*, !dbg !1112
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %393, i8* %394, i64 16, i32 8, i1 false), !dbg !1112
  %arrayidx362 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 22, !dbg !1113
  %real364 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral363, i32 0, i32 0, !dbg !1114
  %395 = ptrtoint double* %real364 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %395)
  store double 0x407FFE01E8D7E962, double* %real364, align 8, !dbg !1114
  %imag365 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral363, i32 0, i32 1, !dbg !1114
  %396 = ptrtoint double* %imag365 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %396)
  store double 0x407FFF9172826820, double* %imag365, align 8, !dbg !1114
  %397 = bitcast %struct.dcomplex* %arrayidx362 to i8*, !dbg !1114
  %398 = bitcast %struct.dcomplex* %.compoundliteral363 to i8*, !dbg !1114
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %397, i8* %398, i64 16, i32 8, i1 false), !dbg !1114
  %arrayidx366 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 23, !dbg !1115
  %real368 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral367, i32 0, i32 0, !dbg !1116
  %399 = ptrtoint double* %real368 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %399)
  store double 0x407FFE0AE8040E41, double* %real368, align 8, !dbg !1116
  %imag369 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral367, i32 0, i32 1, !dbg !1116
  %400 = ptrtoint double* %imag369 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %400)
  store double 0x407FFF9BB06626E0, double* %imag369, align 8, !dbg !1116
  %401 = bitcast %struct.dcomplex* %arrayidx366 to i8*, !dbg !1116
  %402 = bitcast %struct.dcomplex* %.compoundliteral367 to i8*, !dbg !1116
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %401, i8* %402, i64 16, i32 8, i1 false), !dbg !1116
  %arrayidx370 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 24, !dbg !1117
  %real372 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral371, i32 0, i32 0, !dbg !1118
  %403 = ptrtoint double* %real372 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %403)
  store double 0x407FFE142D872C17, double* %real372, align 8, !dbg !1118
  %imag373 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral371, i32 0, i32 1, !dbg !1118
  %404 = ptrtoint double* %imag373 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %404)
  store double 0x407FFFA464F89DCE, double* %imag373, align 8, !dbg !1118
  %405 = bitcast %struct.dcomplex* %arrayidx370 to i8*, !dbg !1118
  %406 = bitcast %struct.dcomplex* %.compoundliteral371 to i8*, !dbg !1118
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %405, i8* %406, i64 16, i32 8, i1 false), !dbg !1118
  %arrayidx374 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 25, !dbg !1119
  %real376 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral375, i32 0, i32 0, !dbg !1120
  %407 = ptrtoint double* %real376 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %407)
  store double 0x407FFE1DA48D386E, double* %real376, align 8, !dbg !1120
  %imag377 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral375, i32 0, i32 1, !dbg !1120
  %408 = ptrtoint double* %imag377 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %408)
  store double 0x407FFFABC2C855DE, double* %imag377, align 8, !dbg !1120
  %409 = bitcast %struct.dcomplex* %arrayidx374 to i8*, !dbg !1120
  %410 = bitcast %struct.dcomplex* %.compoundliteral375 to i8*, !dbg !1120
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %409, i8* %410, i64 16, i32 8, i1 false), !dbg !1120
  br label %if.end487, !dbg !1121

if.else378:                                       ; preds = %land.lhs.true275, %land.lhs.true273, %land.lhs.true271, %if.else269
  %411 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %411, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.232, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %412 = load i32, i32* %d1.addr, align 4, !dbg !1122
  %cmp379 = icmp eq i32 %412, 4096, !dbg !1125
  br i1 %cmp379, label %land.lhs.true380, label %if.end, !dbg !1126

land.lhs.true380:                                 ; preds = %if.else378
  %413 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %413, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.233, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %414 = load i32, i32* %d2.addr, align 4, !dbg !1127
  %cmp381 = icmp eq i32 %414, 2048, !dbg !1129
  br i1 %cmp381, label %land.lhs.true382, label %if.end, !dbg !1130

land.lhs.true382:                                 ; preds = %land.lhs.true380
  %415 = ptrtoint i32* %d3.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %415, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.234, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %416 = load i32, i32* %d3.addr, align 4, !dbg !1131
  %cmp383 = icmp eq i32 %416, 2048, !dbg !1133
  br i1 %cmp383, label %land.lhs.true384, label %if.end, !dbg !1134

land.lhs.true384:                                 ; preds = %land.lhs.true382
  %417 = ptrtoint i32* %nt.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %417, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.235, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %418 = load i32, i32* %nt.addr, align 4, !dbg !1135
  %cmp385 = icmp eq i32 %418, 25, !dbg !1137
  br i1 %cmp385, label %if.then386, label %if.end, !dbg !1138

if.then386:                                       ; preds = %land.lhs.true384
  %419 = ptrtoint i8** %Class.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %419, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.236, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %420 = load i8*, i8** %Class.addr, align 8, !dbg !1139
  %421 = ptrtoint i8* %420 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %421)
  store i8 69, i8* %420, align 1, !dbg !1141
  %arrayidx387 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 1, !dbg !1142
  %real389 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral388, i32 0, i32 0, !dbg !1143
  %422 = ptrtoint double* %real389 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %422)
  store double 0x40800147E4E2E063, double* %real389, align 8, !dbg !1143
  %imag390 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral388, i32 0, i32 1, !dbg !1143
  %423 = ptrtoint double* %imag390 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %423)
  store double 0x407FFBD566A0B5FD, double* %imag390, align 8, !dbg !1143
  %424 = bitcast %struct.dcomplex* %arrayidx387 to i8*, !dbg !1143
  %425 = bitcast %struct.dcomplex* %.compoundliteral388 to i8*, !dbg !1143
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %424, i8* %425, i64 16, i32 8, i1 false), !dbg !1143
  %arrayidx391 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 2, !dbg !1144
  %real393 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral392, i32 0, i32 0, !dbg !1145
  %426 = ptrtoint double* %real393 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %426)
  store double 0x408000B96D3A755A, double* %real393, align 8, !dbg !1145
  %imag394 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral392, i32 0, i32 1, !dbg !1145
  %427 = ptrtoint double* %imag394 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %427)
  store double 0x407FFDC89676A99F, double* %imag394, align 8, !dbg !1145
  %428 = bitcast %struct.dcomplex* %arrayidx391 to i8*, !dbg !1145
  %429 = bitcast %struct.dcomplex* %.compoundliteral392 to i8*, !dbg !1145
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %428, i8* %429, i64 16, i32 8, i1 false), !dbg !1145
  %arrayidx395 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 3, !dbg !1146
  %real397 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral396, i32 0, i32 0, !dbg !1147
  %430 = ptrtoint double* %real397 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %430)
  store double 0x4080007FA32A25BE, double* %real397, align 8, !dbg !1147
  %imag398 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral396, i32 0, i32 1, !dbg !1147
  %431 = ptrtoint double* %imag398 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %431)
  store double 0x407FFE84CB3A10F8, double* %imag398, align 8, !dbg !1147
  %432 = bitcast %struct.dcomplex* %arrayidx395 to i8*, !dbg !1147
  %433 = bitcast %struct.dcomplex* %.compoundliteral396 to i8*, !dbg !1147
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %432, i8* %433, i64 16, i32 8, i1 false), !dbg !1147
  %arrayidx399 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 4, !dbg !1148
  %real401 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral400, i32 0, i32 0, !dbg !1149
  %434 = ptrtoint double* %real401 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %434)
  store double 0x40800059C9C82B40, double* %real401, align 8, !dbg !1149
  %imag402 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral400, i32 0, i32 1, !dbg !1149
  %435 = ptrtoint double* %imag402 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %435)
  store double 0x407FFEF414B87FD6, double* %imag402, align 8, !dbg !1149
  %436 = bitcast %struct.dcomplex* %arrayidx399 to i8*, !dbg !1149
  %437 = bitcast %struct.dcomplex* %.compoundliteral400 to i8*, !dbg !1149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %436, i8* %437, i64 16, i32 8, i1 false), !dbg !1149
  %arrayidx403 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 5, !dbg !1150
  %real405 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral404, i32 0, i32 0, !dbg !1151
  %438 = ptrtoint double* %real405 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %438)
  store double 0x4080003FCCB7C9C8, double* %real405, align 8, !dbg !1151
  %imag406 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral404, i32 0, i32 1, !dbg !1151
  %439 = ptrtoint double* %imag406 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %439)
  store double 0x407FFF483912F11E, double* %imag406, align 8, !dbg !1151
  %440 = bitcast %struct.dcomplex* %arrayidx403 to i8*, !dbg !1151
  %441 = bitcast %struct.dcomplex* %.compoundliteral404 to i8*, !dbg !1151
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %440, i8* %441, i64 16, i32 8, i1 false), !dbg !1151
  %arrayidx407 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 6, !dbg !1152
  %real409 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral408, i32 0, i32 0, !dbg !1153
  %442 = ptrtoint double* %real409 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %442)
  store double 0x4080002E4D90A084, double* %real409, align 8, !dbg !1153
  %imag410 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral408, i32 0, i32 1, !dbg !1153
  %443 = ptrtoint double* %imag410 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %443)
  store double 0x407FFF8D62BCE558, double* %imag410, align 8, !dbg !1153
  %444 = bitcast %struct.dcomplex* %arrayidx407 to i8*, !dbg !1153
  %445 = bitcast %struct.dcomplex* %.compoundliteral408 to i8*, !dbg !1153
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %444, i8* %445, i64 16, i32 8, i1 false), !dbg !1153
  %arrayidx411 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 7, !dbg !1154
  %real413 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral412, i32 0, i32 0, !dbg !1155
  %446 = ptrtoint double* %real413 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %446)
  store double 0x40800022AC039D7C, double* %real413, align 8, !dbg !1155
  %imag414 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral412, i32 0, i32 1, !dbg !1155
  %447 = ptrtoint double* %imag414 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %447)
  store double 0x407FFFC737C3F7CD, double* %imag414, align 8, !dbg !1155
  %448 = bitcast %struct.dcomplex* %arrayidx411 to i8*, !dbg !1155
  %449 = bitcast %struct.dcomplex* %.compoundliteral412 to i8*, !dbg !1155
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %448, i8* %449, i64 16, i32 8, i1 false), !dbg !1155
  %arrayidx415 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 8, !dbg !1156
  %real417 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral416, i32 0, i32 0, !dbg !1157
  %450 = ptrtoint double* %real417 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %450)
  store double 0x4080001ADFFA71B9, double* %real417, align 8, !dbg !1157
  %imag418 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral416, i32 0, i32 1, !dbg !1157
  %451 = ptrtoint double* %imag418 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %451)
  store double 0x407FFFF78C336255, double* %imag418, align 8, !dbg !1157
  %452 = bitcast %struct.dcomplex* %arrayidx415 to i8*, !dbg !1157
  %453 = bitcast %struct.dcomplex* %.compoundliteral416 to i8*, !dbg !1157
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %452, i8* %453, i64 16, i32 8, i1 false), !dbg !1157
  %arrayidx419 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 9, !dbg !1158
  %real421 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral420, i32 0, i32 0, !dbg !1159
  %454 = ptrtoint double* %real421 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %454)
  store double 0x4080001574D0520C, double* %real421, align 8, !dbg !1159
  %imag422 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral420, i32 0, i32 1, !dbg !1159
  %455 = ptrtoint double* %imag422 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %455)
  store double 0x4080000FE85C03E9, double* %imag422, align 8, !dbg !1159
  %456 = bitcast %struct.dcomplex* %arrayidx419 to i8*, !dbg !1159
  %457 = bitcast %struct.dcomplex* %.compoundliteral420 to i8*, !dbg !1159
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %456, i8* %457, i64 16, i32 8, i1 false), !dbg !1159
  %arrayidx423 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 10, !dbg !1160
  %real425 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral424, i32 0, i32 0, !dbg !1161
  %458 = ptrtoint double* %real425 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %458)
  store double 0x408000116F284244, double* %real425, align 8, !dbg !1161
  %imag426 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral424, i32 0, i32 1, !dbg !1161
  %459 = ptrtoint double* %imag426 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %459)
  store double 0x40800020A7695837, double* %imag426, align 8, !dbg !1161
  %460 = bitcast %struct.dcomplex* %arrayidx423 to i8*, !dbg !1161
  %461 = bitcast %struct.dcomplex* %.compoundliteral424 to i8*, !dbg !1161
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %460, i8* %461, i64 16, i32 8, i1 false), !dbg !1161
  %arrayidx427 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 11, !dbg !1162
  %real429 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral428, i32 0, i32 0, !dbg !1163
  %462 = ptrtoint double* %real429 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %462)
  store double 0x4080000E2D56813F, double* %real429, align 8, !dbg !1163
  %imag430 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral428, i32 0, i32 1, !dbg !1163
  %463 = ptrtoint double* %imag430 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %463)
  store double 0x4080002E951F7B34, double* %imag430, align 8, !dbg !1163
  %464 = bitcast %struct.dcomplex* %arrayidx427 to i8*, !dbg !1163
  %465 = bitcast %struct.dcomplex* %.compoundliteral428 to i8*, !dbg !1163
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %464, i8* %465, i64 16, i32 8, i1 false), !dbg !1163
  %arrayidx431 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 12, !dbg !1164
  %real433 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral432, i32 0, i32 0, !dbg !1165
  %466 = ptrtoint double* %real433 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %466)
  store double 0x4080000B4BE05864, double* %real433, align 8, !dbg !1165
  %imag434 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral432, i32 0, i32 1, !dbg !1165
  %467 = ptrtoint double* %imag434 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %467)
  store double 0x4080003A2ED08404, double* %imag434, align 8, !dbg !1165
  %468 = bitcast %struct.dcomplex* %arrayidx431 to i8*, !dbg !1165
  %469 = bitcast %struct.dcomplex* %.compoundliteral432 to i8*, !dbg !1165
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %468, i8* %469, i64 16, i32 8, i1 false), !dbg !1165
  %arrayidx435 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 13, !dbg !1166
  %real437 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral436, i32 0, i32 0, !dbg !1167
  %470 = ptrtoint double* %real437 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %470)
  store double 0x408000089094AC2D, double* %real437, align 8, !dbg !1167
  %imag438 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral436, i32 0, i32 1, !dbg !1167
  %471 = ptrtoint double* %imag438 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %471)
  store double 0x40800043DD87C2F3, double* %imag438, align 8, !dbg !1167
  %472 = bitcast %struct.dcomplex* %arrayidx435 to i8*, !dbg !1167
  %473 = bitcast %struct.dcomplex* %.compoundliteral436 to i8*, !dbg !1167
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %472, i8* %473, i64 16, i32 8, i1 false), !dbg !1167
  %arrayidx439 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 14, !dbg !1168
  %real441 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral440, i32 0, i32 0, !dbg !1169
  %474 = ptrtoint double* %real441 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %474)
  store double 0x40800005DBBF34DD, double* %real441, align 8, !dbg !1169
  %imag442 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral440, i32 0, i32 1, !dbg !1169
  %475 = ptrtoint double* %imag442 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %475)
  store double 0x4080004BF7DEAC1A, double* %imag442, align 8, !dbg !1169
  %476 = bitcast %struct.dcomplex* %arrayidx439 to i8*, !dbg !1169
  %477 = bitcast %struct.dcomplex* %.compoundliteral440 to i8*, !dbg !1169
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %476, i8* %477, i64 16, i32 8, i1 false), !dbg !1169
  %arrayidx443 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 15, !dbg !1170
  %real445 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral444, i32 0, i32 0, !dbg !1171
  %478 = ptrtoint double* %real445 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %478)
  store double 0x408000031E1FCB83, double* %real445, align 8, !dbg !1171
  %imag446 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral444, i32 0, i32 1, !dbg !1171
  %479 = ptrtoint double* %imag446 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %479)
  store double 0x40800052C48391C0, double* %imag446, align 8, !dbg !1171
  %480 = bitcast %struct.dcomplex* %arrayidx443 to i8*, !dbg !1171
  %481 = bitcast %struct.dcomplex* %.compoundliteral444 to i8*, !dbg !1171
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %480, i8* %481, i64 16, i32 8, i1 false), !dbg !1171
  %arrayidx447 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 16, !dbg !1172
  %real449 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral448, i32 0, i32 0, !dbg !1173
  %482 = ptrtoint double* %real449 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %482)
  store double 0x4080000052507A84, double* %real449, align 8, !dbg !1173
  %imag450 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral448, i32 0, i32 1, !dbg !1173
  %483 = ptrtoint double* %imag450 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %483)
  store double 0x408000587CD9C3A1, double* %imag450, align 8, !dbg !1173
  %484 = bitcast %struct.dcomplex* %arrayidx447 to i8*, !dbg !1173
  %485 = bitcast %struct.dcomplex* %.compoundliteral448 to i8*, !dbg !1173
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %484, i8* %485, i64 16, i32 8, i1 false), !dbg !1173
  %arrayidx451 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 17, !dbg !1174
  %real453 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral452, i32 0, i32 0, !dbg !1175
  %486 = ptrtoint double* %real453 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %486)
  store double 0x407FFFFAF1111C29, double* %real453, align 8, !dbg !1175
  %imag454 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral452, i32 0, i32 1, !dbg !1175
  %487 = ptrtoint double* %imag454 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %487)
  store double 0x4080005D4F648E97, double* %imag454, align 8, !dbg !1175
  %488 = bitcast %struct.dcomplex* %arrayidx451 to i8*, !dbg !1175
  %489 = bitcast %struct.dcomplex* %.compoundliteral452 to i8*, !dbg !1175
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %488, i8* %489, i64 16, i32 8, i1 false), !dbg !1175
  %arrayidx455 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 18, !dbg !1176
  %real457 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral456, i32 0, i32 0, !dbg !1177
  %490 = ptrtoint double* %real457 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %490)
  store double 0x407FFFF527E792B0, double* %real457, align 8, !dbg !1177
  %imag458 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral456, i32 0, i32 1, !dbg !1177
  %491 = ptrtoint double* %imag458 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %491)
  store double 0x4080006161DD7A20, double* %imag458, align 8, !dbg !1177
  %492 = bitcast %struct.dcomplex* %arrayidx455 to i8*, !dbg !1177
  %493 = bitcast %struct.dcomplex* %.compoundliteral456 to i8*, !dbg !1177
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %492, i8* %493, i64 16, i32 8, i1 false), !dbg !1177
  %arrayidx459 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 19, !dbg !1178
  %real461 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral460, i32 0, i32 0, !dbg !1179
  %494 = ptrtoint double* %real461 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %494)
  store double 0x407FFFEF5224A658, double* %real461, align 8, !dbg !1179
  %imag462 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral460, i32 0, i32 1, !dbg !1179
  %495 = ptrtoint double* %imag462 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %495)
  store double 0x40800064D2F0E0FB, double* %imag462, align 8, !dbg !1179
  %496 = bitcast %struct.dcomplex* %arrayidx459 to i8*, !dbg !1179
  %497 = bitcast %struct.dcomplex* %.compoundliteral460 to i8*, !dbg !1179
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %496, i8* %497, i64 16, i32 8, i1 false), !dbg !1179
  %arrayidx463 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 20, !dbg !1180
  %real465 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral464, i32 0, i32 0, !dbg !1181
  %498 = ptrtoint double* %real465 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %498)
  store double 0x407FFFE97985082F, double* %real465, align 8, !dbg !1181
  %imag466 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral464, i32 0, i32 1, !dbg !1181
  %499 = ptrtoint double* %imag466 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %499)
  store double 0x40800067BBA76761, double* %imag466, align 8, !dbg !1181
  %500 = bitcast %struct.dcomplex* %arrayidx463 to i8*, !dbg !1181
  %501 = bitcast %struct.dcomplex* %.compoundliteral464 to i8*, !dbg !1181
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %500, i8* %501, i64 16, i32 8, i1 false), !dbg !1181
  %arrayidx467 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 21, !dbg !1182
  %real469 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral468, i32 0, i32 0, !dbg !1183
  %502 = ptrtoint double* %real469 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %502)
  store double 0x407FFFE3A76CE198, double* %real469, align 8, !dbg !1183
  %imag470 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral468, i32 0, i32 1, !dbg !1183
  %503 = ptrtoint double* %imag470 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %503)
  store double 0x4080006A3087F53C, double* %imag470, align 8, !dbg !1183
  %504 = bitcast %struct.dcomplex* %arrayidx467 to i8*, !dbg !1183
  %505 = bitcast %struct.dcomplex* %.compoundliteral468 to i8*, !dbg !1183
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %504, i8* %505, i64 16, i32 8, i1 false), !dbg !1183
  %arrayidx471 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 22, !dbg !1184
  %real473 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral472, i32 0, i32 0, !dbg !1185
  %506 = ptrtoint double* %real473 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %506)
  store double 0x407FFFDDE458AC2A, double* %real473, align 8, !dbg !1185
  %imag474 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral472, i32 0, i32 1, !dbg !1185
  %507 = ptrtoint double* %imag474 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %507)
  store double 0x4080006C427E60CB, double* %imag474, align 8, !dbg !1185
  %508 = bitcast %struct.dcomplex* %arrayidx471 to i8*, !dbg !1185
  %509 = bitcast %struct.dcomplex* %.compoundliteral472 to i8*, !dbg !1185
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %508, i8* %509, i64 16, i32 8, i1 false), !dbg !1185
  %arrayidx475 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 23, !dbg !1186
  %real477 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral476, i32 0, i32 0, !dbg !1187
  %510 = ptrtoint double* %real477 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %510)
  store double 0x407FFFD8379EC190, double* %real477, align 8, !dbg !1187
  %imag478 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral476, i32 0, i32 1, !dbg !1187
  %511 = ptrtoint double* %imag478 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %511)
  store double 0x4080006DFF9235BC, double* %imag478, align 8, !dbg !1187
  %512 = bitcast %struct.dcomplex* %arrayidx475 to i8*, !dbg !1187
  %513 = bitcast %struct.dcomplex* %.compoundliteral476 to i8*, !dbg !1187
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %512, i8* %513, i64 16, i32 8, i1 false), !dbg !1187
  %arrayidx479 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 24, !dbg !1188
  %real481 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral480, i32 0, i32 0, !dbg !1189
  %514 = ptrtoint double* %real481 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %514)
  store double 0x407FFFD2A76113A7, double* %real481, align 8, !dbg !1189
  %imag482 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral480, i32 0, i32 1, !dbg !1189
  %515 = ptrtoint double* %imag482 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %515)
  store double 0x4080006F7377203C, double* %imag482, align 8, !dbg !1189
  %516 = bitcast %struct.dcomplex* %arrayidx479 to i8*, !dbg !1189
  %517 = bitcast %struct.dcomplex* %.compoundliteral480 to i8*, !dbg !1189
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %516, i8* %517, i64 16, i32 8, i1 false), !dbg !1189
  %arrayidx483 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 25, !dbg !1190
  %real485 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral484, i32 0, i32 0, !dbg !1191
  %518 = ptrtoint double* %real485 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %518)
  store double 0x407FFFCD389947BC, double* %real485, align 8, !dbg !1191
  %imag486 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral484, i32 0, i32 1, !dbg !1191
  %519 = ptrtoint double* %imag486 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %519)
  store double 0x40800070A7FF2BFD, double* %imag486, align 8, !dbg !1191
  %520 = bitcast %struct.dcomplex* %arrayidx483 to i8*, !dbg !1191
  %521 = bitcast %struct.dcomplex* %.compoundliteral484 to i8*, !dbg !1191
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %520, i8* %521, i64 16, i32 8, i1 false), !dbg !1191
  br label %if.end, !dbg !1192

if.end:                                           ; preds = %if.then386, %land.lhs.true384, %land.lhs.true382, %land.lhs.true380, %if.else378
  br label %if.end487

if.end487:                                        ; preds = %if.end, %if.then277
  br label %if.end488

if.end488:                                        ; preds = %if.end487, %if.then188
  br label %if.end489

if.end489:                                        ; preds = %if.end488, %if.then99
  br label %if.end490

if.end490:                                        ; preds = %if.end489, %if.then66
  br label %if.end491

if.end491:                                        ; preds = %if.end490, %if.then33
  br label %if.end492

if.end492:                                        ; preds = %if.end491, %if.then
  %522 = ptrtoint i8** %Class.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %522, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.237, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %523 = load i8*, i8** %Class.addr, align 8, !dbg !1193
  %524 = ptrtoint i8* %523 to i64
  call void @__DiscoPoPOpenMPRead(i64 %524, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.238, i32 0, i32 0), i32 0, i32 -1, i32 1)
  %525 = load i8, i8* %523, align 1, !dbg !1195
  %conv = sext i8 %525 to i32, !dbg !1195
  %cmp493 = icmp ne i32 %conv, 85, !dbg !1196
  br i1 %cmp493, label %if.then495, label %if.end588, !dbg !1197

if.then495:                                       ; preds = %if.end492
  %526 = ptrtoint i32** %verified.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %526, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.239, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %527 = load i32*, i32** %verified.addr, align 8, !dbg !1198
  %528 = ptrtoint i32* %527 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %528)
  store i32 1, i32* %527, align 4, !dbg !1200
  %529 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %529)
  store i32 1, i32* %i, align 4, !dbg !1201
  br label %for.cond, !dbg !1203

for.cond:                                         ; preds = %for.inc, %if.then495
  %530 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %530, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.240, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %531 = load i32, i32* %i, align 4, !dbg !1204
  %532 = ptrtoint i32* %nt.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %532, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.241, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %533 = load i32, i32* %nt.addr, align 4, !dbg !1207
  %cmp496 = icmp sle i32 %531, %533, !dbg !1208
  br i1 %cmp496, label %for.body, label %for.end, !dbg !1209

for.body:                                         ; preds = %for.cond
  %real499 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral498, i32 0, i32 0, !dbg !1210
  %534 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %534, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.242, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %535 = load i32, i32* %i, align 4, !dbg !1210
  %idxprom = sext i32 %535 to i64, !dbg !1210
  %arrayidx500 = getelementptr inbounds [7 x %struct.dcomplex], [7 x %struct.dcomplex]* @sums, i64 0, i64 %idxprom, !dbg !1210
  %real501 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx500, i32 0, i32 0, !dbg !1210
  %536 = ptrtoint double* %real501 to i64
  call void @__DiscoPoPOpenMPRead(i64 %536, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.243, i32 0, i32 0), i32 0, i32 -1, i32 16)
  %537 = load double, double* %real501, align 16, !dbg !1210
  %538 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %538, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.244, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %539 = load i32, i32* %i, align 4, !dbg !1210
  %idxprom502 = sext i32 %539 to i64, !dbg !1210
  %arrayidx503 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 %idxprom502, !dbg !1210
  %real504 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx503, i32 0, i32 0, !dbg !1210
  %540 = ptrtoint double* %real504 to i64
  call void @__DiscoPoPOpenMPRead(i64 %540, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.245, i32 0, i32 0), i32 0, i32 -1, i32 16)
  %541 = load double, double* %real504, align 16, !dbg !1210
  %sub = fsub double %537, %541, !dbg !1210
  %542 = ptrtoint double* %real499 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %542)
  store double %sub, double* %real499, align 8, !dbg !1210
  %imag505 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral498, i32 0, i32 1, !dbg !1210
  %543 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %543, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.246, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %544 = load i32, i32* %i, align 4, !dbg !1210
  %idxprom506 = sext i32 %544 to i64, !dbg !1210
  %arrayidx507 = getelementptr inbounds [7 x %struct.dcomplex], [7 x %struct.dcomplex]* @sums, i64 0, i64 %idxprom506, !dbg !1210
  %imag508 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx507, i32 0, i32 1, !dbg !1210
  %545 = ptrtoint double* %imag508 to i64
  call void @__DiscoPoPOpenMPRead(i64 %545, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.247, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %546 = load double, double* %imag508, align 8, !dbg !1210
  %547 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %547, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.248, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %548 = load i32, i32* %i, align 4, !dbg !1210
  %idxprom509 = sext i32 %548 to i64, !dbg !1210
  %arrayidx510 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 %idxprom509, !dbg !1210
  %imag511 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx510, i32 0, i32 1, !dbg !1210
  %549 = ptrtoint double* %imag511 to i64
  call void @__DiscoPoPOpenMPRead(i64 %549, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.249, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %550 = load double, double* %imag511, align 8, !dbg !1210
  %sub512 = fsub double %546, %550, !dbg !1210
  %551 = ptrtoint double* %imag505 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %551)
  store double %sub512, double* %imag505, align 8, !dbg !1210
  %552 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %552, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.250, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %553 = load i32, i32* %i, align 4, !dbg !1210
  %idxprom513 = sext i32 %553 to i64, !dbg !1210
  %arrayidx514 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 %idxprom513, !dbg !1210
  %554 = bitcast %struct.dcomplex* %.compoundliteral498 to { double, double }*, !dbg !1210
  %555 = getelementptr inbounds { double, double }, { double, double }* %554, i32 0, i32 0, !dbg !1210
  %556 = ptrtoint double* %555 to i64
  call void @__DiscoPoPOpenMPRead(i64 %556, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.251, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %557 = load double, double* %555, align 8, !dbg !1210
  %558 = getelementptr inbounds { double, double }, { double, double }* %554, i32 0, i32 1, !dbg !1210
  %559 = ptrtoint double* %558 to i64
  call void @__DiscoPoPOpenMPRead(i64 %559, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.252, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %560 = load double, double* %558, align 8, !dbg !1210
  %561 = bitcast %struct.dcomplex* %arrayidx514 to { double, double }*, !dbg !1210
  %562 = getelementptr inbounds { double, double }, { double, double }* %561, i32 0, i32 0, !dbg !1210
  %563 = ptrtoint double* %562 to i64
  call void @__DiscoPoPOpenMPRead(i64 %563, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.253, i32 0, i32 0), i32 0, i32 -1, i32 16)
  %564 = load double, double* %562, align 16, !dbg !1210
  %565 = getelementptr inbounds { double, double }, { double, double }* %561, i32 0, i32 1, !dbg !1210
  %566 = ptrtoint double* %565 to i64
  call void @__DiscoPoPOpenMPRead(i64 %566, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.254, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %567 = load double, double* %565, align 8, !dbg !1210
  %call = call { double, double } @dcmplx_div(double %557, double %560, double %564, double %567), !dbg !1210
  %568 = bitcast %struct.dcomplex* %coerce to { double, double }*, !dbg !1210
  %569 = getelementptr inbounds { double, double }, { double, double }* %568, i32 0, i32 0, !dbg !1210
  %570 = extractvalue { double, double } %call, 0, !dbg !1210
  %571 = ptrtoint double* %569 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %571)
  store double %570, double* %569, align 8, !dbg !1210
  %572 = getelementptr inbounds { double, double }, { double, double }* %568, i32 0, i32 1, !dbg !1210
  %573 = extractvalue { double, double } %call, 1, !dbg !1210
  %574 = ptrtoint double* %572 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %574)
  store double %573, double* %572, align 8, !dbg !1210
  %real515 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %coerce, i32 0, i32 0, !dbg !1210
  %575 = ptrtoint double* %real515 to i64
  call void @__DiscoPoPOpenMPRead(i64 %575, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.255, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %576 = load double, double* %real515, align 8, !dbg !1210
  %real517 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral516, i32 0, i32 0, !dbg !1210
  %577 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %577, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.256, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %578 = load i32, i32* %i, align 4, !dbg !1210
  %idxprom518 = sext i32 %578 to i64, !dbg !1210
  %arrayidx519 = getelementptr inbounds [7 x %struct.dcomplex], [7 x %struct.dcomplex]* @sums, i64 0, i64 %idxprom518, !dbg !1210
  %real520 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx519, i32 0, i32 0, !dbg !1210
  %579 = ptrtoint double* %real520 to i64
  call void @__DiscoPoPOpenMPRead(i64 %579, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.257, i32 0, i32 0), i32 0, i32 -1, i32 16)
  %580 = load double, double* %real520, align 16, !dbg !1210
  %581 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %581, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.258, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %582 = load i32, i32* %i, align 4, !dbg !1210
  %idxprom521 = sext i32 %582 to i64, !dbg !1210
  %arrayidx522 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 %idxprom521, !dbg !1210
  %real523 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx522, i32 0, i32 0, !dbg !1210
  %583 = ptrtoint double* %real523 to i64
  call void @__DiscoPoPOpenMPRead(i64 %583, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.259, i32 0, i32 0), i32 0, i32 -1, i32 16)
  %584 = load double, double* %real523, align 16, !dbg !1210
  %sub524 = fsub double %580, %584, !dbg !1210
  %585 = ptrtoint double* %real517 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %585)
  store double %sub524, double* %real517, align 8, !dbg !1210
  %imag525 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral516, i32 0, i32 1, !dbg !1210
  %586 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %586, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.260, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %587 = load i32, i32* %i, align 4, !dbg !1210
  %idxprom526 = sext i32 %587 to i64, !dbg !1210
  %arrayidx527 = getelementptr inbounds [7 x %struct.dcomplex], [7 x %struct.dcomplex]* @sums, i64 0, i64 %idxprom526, !dbg !1210
  %imag528 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx527, i32 0, i32 1, !dbg !1210
  %588 = ptrtoint double* %imag528 to i64
  call void @__DiscoPoPOpenMPRead(i64 %588, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.261, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %589 = load double, double* %imag528, align 8, !dbg !1210
  %590 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %590, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.262, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %591 = load i32, i32* %i, align 4, !dbg !1210
  %idxprom529 = sext i32 %591 to i64, !dbg !1210
  %arrayidx530 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 %idxprom529, !dbg !1210
  %imag531 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx530, i32 0, i32 1, !dbg !1210
  %592 = ptrtoint double* %imag531 to i64
  call void @__DiscoPoPOpenMPRead(i64 %592, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.263, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %593 = load double, double* %imag531, align 8, !dbg !1210
  %sub532 = fsub double %589, %593, !dbg !1210
  %594 = ptrtoint double* %imag525 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %594)
  store double %sub532, double* %imag525, align 8, !dbg !1210
  %595 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %595, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.264, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %596 = load i32, i32* %i, align 4, !dbg !1210
  %idxprom533 = sext i32 %596 to i64, !dbg !1210
  %arrayidx534 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 %idxprom533, !dbg !1210
  %597 = bitcast %struct.dcomplex* %.compoundliteral516 to { double, double }*, !dbg !1210
  %598 = getelementptr inbounds { double, double }, { double, double }* %597, i32 0, i32 0, !dbg !1210
  %599 = ptrtoint double* %598 to i64
  call void @__DiscoPoPOpenMPRead(i64 %599, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.265, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %600 = load double, double* %598, align 8, !dbg !1210
  %601 = getelementptr inbounds { double, double }, { double, double }* %597, i32 0, i32 1, !dbg !1210
  %602 = ptrtoint double* %601 to i64
  call void @__DiscoPoPOpenMPRead(i64 %602, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.266, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %603 = load double, double* %601, align 8, !dbg !1210
  %604 = bitcast %struct.dcomplex* %arrayidx534 to { double, double }*, !dbg !1210
  %605 = getelementptr inbounds { double, double }, { double, double }* %604, i32 0, i32 0, !dbg !1210
  %606 = ptrtoint double* %605 to i64
  call void @__DiscoPoPOpenMPRead(i64 %606, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.267, i32 0, i32 0), i32 0, i32 -1, i32 16)
  %607 = load double, double* %605, align 16, !dbg !1210
  %608 = getelementptr inbounds { double, double }, { double, double }* %604, i32 0, i32 1, !dbg !1210
  %609 = ptrtoint double* %608 to i64
  call void @__DiscoPoPOpenMPRead(i64 %609, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.268, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %610 = load double, double* %608, align 8, !dbg !1210
  %call535 = call { double, double } @dcmplx_div(double %600, double %603, double %607, double %610), !dbg !1212
  %611 = bitcast %struct.dcomplex* %coerce536 to { double, double }*, !dbg !1210
  %612 = getelementptr inbounds { double, double }, { double, double }* %611, i32 0, i32 0, !dbg !1210
  %613 = extractvalue { double, double } %call535, 0, !dbg !1210
  %614 = ptrtoint double* %612 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %614)
  store double %613, double* %612, align 8, !dbg !1210
  %615 = getelementptr inbounds { double, double }, { double, double }* %611, i32 0, i32 1, !dbg !1210
  %616 = extractvalue { double, double } %call535, 1, !dbg !1210
  %617 = ptrtoint double* %615 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %617)
  store double %616, double* %615, align 8, !dbg !1210
  %real537 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %coerce536, i32 0, i32 0, !dbg !1210
  %618 = ptrtoint double* %real537 to i64
  call void @__DiscoPoPOpenMPRead(i64 %618, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.269, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %619 = load double, double* %real537, align 8, !dbg !1210
  %mul = fmul double %576, %619, !dbg !1210
  %real539 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral538, i32 0, i32 0, !dbg !1210
  %620 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %620, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.270, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %621 = load i32, i32* %i, align 4, !dbg !1210
  %idxprom540 = sext i32 %621 to i64, !dbg !1210
  %arrayidx541 = getelementptr inbounds [7 x %struct.dcomplex], [7 x %struct.dcomplex]* @sums, i64 0, i64 %idxprom540, !dbg !1210
  %real542 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx541, i32 0, i32 0, !dbg !1210
  %622 = ptrtoint double* %real542 to i64
  call void @__DiscoPoPOpenMPRead(i64 %622, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.271, i32 0, i32 0), i32 0, i32 -1, i32 16)
  %623 = load double, double* %real542, align 16, !dbg !1210
  %624 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %624, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.272, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %625 = load i32, i32* %i, align 4, !dbg !1210
  %idxprom543 = sext i32 %625 to i64, !dbg !1210
  %arrayidx544 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 %idxprom543, !dbg !1210
  %real545 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx544, i32 0, i32 0, !dbg !1210
  %626 = ptrtoint double* %real545 to i64
  call void @__DiscoPoPOpenMPRead(i64 %626, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.273, i32 0, i32 0), i32 0, i32 -1, i32 16)
  %627 = load double, double* %real545, align 16, !dbg !1210
  %sub546 = fsub double %623, %627, !dbg !1210
  %628 = ptrtoint double* %real539 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %628)
  store double %sub546, double* %real539, align 8, !dbg !1210
  %imag547 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral538, i32 0, i32 1, !dbg !1210
  %629 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %629, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.274, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %630 = load i32, i32* %i, align 4, !dbg !1210
  %idxprom548 = sext i32 %630 to i64, !dbg !1210
  %arrayidx549 = getelementptr inbounds [7 x %struct.dcomplex], [7 x %struct.dcomplex]* @sums, i64 0, i64 %idxprom548, !dbg !1210
  %imag550 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx549, i32 0, i32 1, !dbg !1210
  %631 = ptrtoint double* %imag550 to i64
  call void @__DiscoPoPOpenMPRead(i64 %631, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.275, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %632 = load double, double* %imag550, align 8, !dbg !1210
  %633 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %633, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.276, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %634 = load i32, i32* %i, align 4, !dbg !1210
  %idxprom551 = sext i32 %634 to i64, !dbg !1210
  %arrayidx552 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 %idxprom551, !dbg !1210
  %imag553 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx552, i32 0, i32 1, !dbg !1210
  %635 = ptrtoint double* %imag553 to i64
  call void @__DiscoPoPOpenMPRead(i64 %635, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.277, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %636 = load double, double* %imag553, align 8, !dbg !1210
  %sub554 = fsub double %632, %636, !dbg !1210
  %637 = ptrtoint double* %imag547 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %637)
  store double %sub554, double* %imag547, align 8, !dbg !1210
  %638 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %638, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.278, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %639 = load i32, i32* %i, align 4, !dbg !1210
  %idxprom555 = sext i32 %639 to i64, !dbg !1210
  %arrayidx556 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 %idxprom555, !dbg !1210
  %640 = bitcast %struct.dcomplex* %.compoundliteral538 to { double, double }*, !dbg !1210
  %641 = getelementptr inbounds { double, double }, { double, double }* %640, i32 0, i32 0, !dbg !1210
  %642 = ptrtoint double* %641 to i64
  call void @__DiscoPoPOpenMPRead(i64 %642, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.279, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %643 = load double, double* %641, align 8, !dbg !1210
  %644 = getelementptr inbounds { double, double }, { double, double }* %640, i32 0, i32 1, !dbg !1210
  %645 = ptrtoint double* %644 to i64
  call void @__DiscoPoPOpenMPRead(i64 %645, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.280, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %646 = load double, double* %644, align 8, !dbg !1210
  %647 = bitcast %struct.dcomplex* %arrayidx556 to { double, double }*, !dbg !1210
  %648 = getelementptr inbounds { double, double }, { double, double }* %647, i32 0, i32 0, !dbg !1210
  %649 = ptrtoint double* %648 to i64
  call void @__DiscoPoPOpenMPRead(i64 %649, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.281, i32 0, i32 0), i32 0, i32 -1, i32 16)
  %650 = load double, double* %648, align 16, !dbg !1210
  %651 = getelementptr inbounds { double, double }, { double, double }* %647, i32 0, i32 1, !dbg !1210
  %652 = ptrtoint double* %651 to i64
  call void @__DiscoPoPOpenMPRead(i64 %652, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.282, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %653 = load double, double* %651, align 8, !dbg !1210
  %call557 = call { double, double } @dcmplx_div(double %643, double %646, double %650, double %653), !dbg !1214
  %654 = bitcast %struct.dcomplex* %coerce558 to { double, double }*, !dbg !1210
  %655 = getelementptr inbounds { double, double }, { double, double }* %654, i32 0, i32 0, !dbg !1210
  %656 = extractvalue { double, double } %call557, 0, !dbg !1210
  %657 = ptrtoint double* %655 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %657)
  store double %656, double* %655, align 8, !dbg !1210
  %658 = getelementptr inbounds { double, double }, { double, double }* %654, i32 0, i32 1, !dbg !1210
  %659 = extractvalue { double, double } %call557, 1, !dbg !1210
  %660 = ptrtoint double* %658 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %660)
  store double %659, double* %658, align 8, !dbg !1210
  %imag559 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %coerce558, i32 0, i32 1, !dbg !1210
  %661 = ptrtoint double* %imag559 to i64
  call void @__DiscoPoPOpenMPRead(i64 %661, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.283, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %662 = load double, double* %imag559, align 8, !dbg !1210
  %real561 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral560, i32 0, i32 0, !dbg !1210
  %663 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %663, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.284, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %664 = load i32, i32* %i, align 4, !dbg !1210
  %idxprom562 = sext i32 %664 to i64, !dbg !1210
  %arrayidx563 = getelementptr inbounds [7 x %struct.dcomplex], [7 x %struct.dcomplex]* @sums, i64 0, i64 %idxprom562, !dbg !1210
  %real564 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx563, i32 0, i32 0, !dbg !1210
  %665 = ptrtoint double* %real564 to i64
  call void @__DiscoPoPOpenMPRead(i64 %665, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.285, i32 0, i32 0), i32 0, i32 -1, i32 16)
  %666 = load double, double* %real564, align 16, !dbg !1210
  %667 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %667, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.286, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %668 = load i32, i32* %i, align 4, !dbg !1210
  %idxprom565 = sext i32 %668 to i64, !dbg !1210
  %arrayidx566 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 %idxprom565, !dbg !1210
  %real567 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx566, i32 0, i32 0, !dbg !1210
  %669 = ptrtoint double* %real567 to i64
  call void @__DiscoPoPOpenMPRead(i64 %669, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.287, i32 0, i32 0), i32 0, i32 -1, i32 16)
  %670 = load double, double* %real567, align 16, !dbg !1210
  %sub568 = fsub double %666, %670, !dbg !1210
  %671 = ptrtoint double* %real561 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %671)
  store double %sub568, double* %real561, align 8, !dbg !1210
  %imag569 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral560, i32 0, i32 1, !dbg !1210
  %672 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %672, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.288, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %673 = load i32, i32* %i, align 4, !dbg !1210
  %idxprom570 = sext i32 %673 to i64, !dbg !1210
  %arrayidx571 = getelementptr inbounds [7 x %struct.dcomplex], [7 x %struct.dcomplex]* @sums, i64 0, i64 %idxprom570, !dbg !1210
  %imag572 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx571, i32 0, i32 1, !dbg !1210
  %674 = ptrtoint double* %imag572 to i64
  call void @__DiscoPoPOpenMPRead(i64 %674, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.289, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %675 = load double, double* %imag572, align 8, !dbg !1210
  %676 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %676, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.290, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %677 = load i32, i32* %i, align 4, !dbg !1210
  %idxprom573 = sext i32 %677 to i64, !dbg !1210
  %arrayidx574 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 %idxprom573, !dbg !1210
  %imag575 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx574, i32 0, i32 1, !dbg !1210
  %678 = ptrtoint double* %imag575 to i64
  call void @__DiscoPoPOpenMPRead(i64 %678, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.291, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %679 = load double, double* %imag575, align 8, !dbg !1210
  %sub576 = fsub double %675, %679, !dbg !1210
  %680 = ptrtoint double* %imag569 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %680)
  store double %sub576, double* %imag569, align 8, !dbg !1210
  %681 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %681, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.292, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %682 = load i32, i32* %i, align 4, !dbg !1210
  %idxprom577 = sext i32 %682 to i64, !dbg !1210
  %arrayidx578 = getelementptr inbounds [26 x %struct.dcomplex], [26 x %struct.dcomplex]* %csum_ref, i64 0, i64 %idxprom577, !dbg !1210
  %683 = bitcast %struct.dcomplex* %.compoundliteral560 to { double, double }*, !dbg !1210
  %684 = getelementptr inbounds { double, double }, { double, double }* %683, i32 0, i32 0, !dbg !1210
  %685 = ptrtoint double* %684 to i64
  call void @__DiscoPoPOpenMPRead(i64 %685, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.293, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %686 = load double, double* %684, align 8, !dbg !1210
  %687 = getelementptr inbounds { double, double }, { double, double }* %683, i32 0, i32 1, !dbg !1210
  %688 = ptrtoint double* %687 to i64
  call void @__DiscoPoPOpenMPRead(i64 %688, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.294, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %689 = load double, double* %687, align 8, !dbg !1210
  %690 = bitcast %struct.dcomplex* %arrayidx578 to { double, double }*, !dbg !1210
  %691 = getelementptr inbounds { double, double }, { double, double }* %690, i32 0, i32 0, !dbg !1210
  %692 = ptrtoint double* %691 to i64
  call void @__DiscoPoPOpenMPRead(i64 %692, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.295, i32 0, i32 0), i32 0, i32 -1, i32 16)
  %693 = load double, double* %691, align 16, !dbg !1210
  %694 = getelementptr inbounds { double, double }, { double, double }* %690, i32 0, i32 1, !dbg !1210
  %695 = ptrtoint double* %694 to i64
  call void @__DiscoPoPOpenMPRead(i64 %695, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.296, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %696 = load double, double* %694, align 8, !dbg !1210
  %call579 = call { double, double } @dcmplx_div(double %686, double %689, double %693, double %696), !dbg !1216
  %697 = bitcast %struct.dcomplex* %coerce580 to { double, double }*, !dbg !1210
  %698 = getelementptr inbounds { double, double }, { double, double }* %697, i32 0, i32 0, !dbg !1210
  %699 = extractvalue { double, double } %call579, 0, !dbg !1210
  %700 = ptrtoint double* %698 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %700)
  store double %699, double* %698, align 8, !dbg !1210
  %701 = getelementptr inbounds { double, double }, { double, double }* %697, i32 0, i32 1, !dbg !1210
  %702 = extractvalue { double, double } %call579, 1, !dbg !1210
  %703 = ptrtoint double* %701 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %703)
  store double %702, double* %701, align 8, !dbg !1210
  %imag581 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %coerce580, i32 0, i32 1, !dbg !1210
  %704 = ptrtoint double* %imag581 to i64
  call void @__DiscoPoPOpenMPRead(i64 %704, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.297, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %705 = load double, double* %imag581, align 8, !dbg !1210
  %mul582 = fmul double %662, %705, !dbg !1210
  %add = fadd double %mul, %mul582, !dbg !1210
  %call583 = call double @sqrt(double %add) #8, !dbg !1218
  %706 = ptrtoint double* %err to i64
  call void @__DiscoPoPOpenMPWrite(i64 %706)
  store double %call583, double* %err, align 8, !dbg !1220
  %707 = ptrtoint double* %err to i64
  call void @__DiscoPoPOpenMPRead(i64 %707, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.298, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %708 = load double, double* %err, align 8, !dbg !1221
  %709 = ptrtoint double* %epsilon to i64
  call void @__DiscoPoPOpenMPRead(i64 %709, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.299, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %710 = load double, double* %epsilon, align 8, !dbg !1223
  %cmp584 = fcmp ole double %708, %710, !dbg !1224
  br i1 %cmp584, label %if.end587, label %if.then586, !dbg !1225

if.then586:                                       ; preds = %for.body
  %711 = ptrtoint i32** %verified.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %711, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.300, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %712 = load i32*, i32** %verified.addr, align 8, !dbg !1226
  %713 = ptrtoint i32* %712 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %713)
  store i32 0, i32* %712, align 4, !dbg !1228
  br label %for.end, !dbg !1229

if.end587:                                        ; preds = %for.body
  br label %for.inc, !dbg !1230

for.inc:                                          ; preds = %if.end587
  %714 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %714, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.301, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %715 = load i32, i32* %i, align 4, !dbg !1231
  %inc = add nsw i32 %715, 1, !dbg !1231
  %716 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %716)
  store i32 %inc, i32* %i, align 4, !dbg !1231
  br label %for.cond, !dbg !1233, !llvm.loop !1234

for.end:                                          ; preds = %if.then586, %for.cond
  br label %if.end588, !dbg !1236

if.end588:                                        ; preds = %for.end, %if.end492
  %717 = ptrtoint i8** %Class.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %717, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.302, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %718 = load i8*, i8** %Class.addr, align 8, !dbg !1237
  %719 = ptrtoint i8* %718 to i64
  call void @__DiscoPoPOpenMPRead(i64 %719, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.303, i32 0, i32 0), i32 0, i32 -1, i32 1)
  %720 = load i8, i8* %718, align 1, !dbg !1239
  %conv589 = sext i8 %720 to i32, !dbg !1239
  %cmp590 = icmp ne i32 %conv589, 85, !dbg !1240
  br i1 %cmp590, label %if.then592, label %if.end598, !dbg !1241

if.then592:                                       ; preds = %if.end588
  %721 = ptrtoint i32** %verified.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %721, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.304, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %722 = load i32*, i32** %verified.addr, align 8, !dbg !1242
  %723 = ptrtoint i32* %722 to i64
  call void @__DiscoPoPOpenMPRead(i64 %723, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.305, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %724 = load i32, i32* %722, align 4, !dbg !1245
  %tobool = icmp ne i32 %724, 0, !dbg !1245
  br i1 %tobool, label %if.then593, label %if.else595, !dbg !1246

if.then593:                                       ; preds = %if.then592
  %call594 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.33, i32 0, i32 0)), !dbg !1247
  br label %if.end597, !dbg !1249

if.else595:                                       ; preds = %if.then592
  %call596 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.34, i32 0, i32 0)), !dbg !1250
  br label %if.end597

if.end597:                                        ; preds = %if.else595, %if.then593
  br label %if.end598, !dbg !1252

if.end598:                                        ; preds = %if.end597, %if.end588
  %725 = ptrtoint i8** %Class.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %725, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.306, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %726 = load i8*, i8** %Class.addr, align 8, !dbg !1253
  %727 = ptrtoint i8* %726 to i64
  call void @__DiscoPoPOpenMPRead(i64 %727, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.307, i32 0, i32 0), i32 0, i32 -1, i32 1)
  %728 = load i8, i8* %726, align 1, !dbg !1254
  %conv599 = sext i8 %728 to i32, !dbg !1254
  %call600 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i32 0, i32 0), i32 %conv599), !dbg !1255
  ret void, !dbg !1256
}

; Function Attrs: nounwind
declare double @log(double) #2

; Function Attrs: nounwind uwtable
define internal void @print_timers() #0 !dbg !1257 {
entry:
  %i = alloca i32, align 4
  %t = alloca double, align 8
  %t_m = alloca double, align 8
  %tstrings = alloca [9 x i8*], align 16
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1258, metadata !98), !dbg !1259
  call void @llvm.dbg.declare(metadata double* %t, metadata !1260, metadata !98), !dbg !1261
  call void @llvm.dbg.declare(metadata double* %t_m, metadata !1262, metadata !98), !dbg !1263
  call void @llvm.dbg.declare(metadata [9 x i8*]* %tstrings, metadata !1264, metadata !98), !dbg !1268
  %arrayidx = getelementptr inbounds [9 x i8*], [9 x i8*]* %tstrings, i64 0, i64 1, !dbg !1269
  %0 = ptrtoint i8** %arrayidx to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0)
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i32 0, i32 0), i8** %arrayidx, align 8, !dbg !1270
  %arrayidx1 = getelementptr inbounds [9 x i8*], [9 x i8*]* %tstrings, i64 0, i64 2, !dbg !1271
  %1 = ptrtoint i8** %arrayidx1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %1)
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i32 0, i32 0), i8** %arrayidx1, align 16, !dbg !1272
  %arrayidx2 = getelementptr inbounds [9 x i8*], [9 x i8*]* %tstrings, i64 0, i64 3, !dbg !1273
  %2 = ptrtoint i8** %arrayidx2 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i32 0, i32 0), i8** %arrayidx2, align 8, !dbg !1274
  %arrayidx3 = getelementptr inbounds [9 x i8*], [9 x i8*]* %tstrings, i64 0, i64 4, !dbg !1275
  %3 = ptrtoint i8** %arrayidx3 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21, i32 0, i32 0), i8** %arrayidx3, align 16, !dbg !1276
  %arrayidx4 = getelementptr inbounds [9 x i8*], [9 x i8*]* %tstrings, i64 0, i64 5, !dbg !1277
  %4 = ptrtoint i8** %arrayidx4 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i32 0, i32 0), i8** %arrayidx4, align 8, !dbg !1278
  %arrayidx5 = getelementptr inbounds [9 x i8*], [9 x i8*]* %tstrings, i64 0, i64 6, !dbg !1279
  %5 = ptrtoint i8** %arrayidx5 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i32 0, i32 0), i8** %arrayidx5, align 16, !dbg !1280
  %arrayidx6 = getelementptr inbounds [9 x i8*], [9 x i8*]* %tstrings, i64 0, i64 7, !dbg !1281
  %6 = ptrtoint i8** %arrayidx6 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %6)
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i32 0, i32 0), i8** %arrayidx6, align 8, !dbg !1282
  %arrayidx7 = getelementptr inbounds [9 x i8*], [9 x i8*]* %tstrings, i64 0, i64 8, !dbg !1283
  %7 = ptrtoint i8** %arrayidx7 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %7)
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i32 0, i32 0), i8** %arrayidx7, align 16, !dbg !1284
  %call = call double @timer_read(i32 1), !dbg !1285
  %8 = ptrtoint double* %t_m to i64
  call void @__DiscoPoPOpenMPWrite(i64 %8)
  store double %call, double* %t_m, align 8, !dbg !1286
  %9 = ptrtoint double* %t_m to i64
  call void @__DiscoPoPOpenMPRead(i64 %9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.308, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %10 = load double, double* %t_m, align 8, !dbg !1287
  %cmp = fcmp ole double %10, 0.000000e+00, !dbg !1289
  br i1 %cmp, label %if.then, label %if.end, !dbg !1290

if.then:                                          ; preds = %entry
  %11 = ptrtoint double* %t_m to i64
  call void @__DiscoPoPOpenMPWrite(i64 %11)
  store double 1.000000e+00, double* %t_m, align 8, !dbg !1291
  br label %if.end, !dbg !1293

if.end:                                           ; preds = %if.then, %entry
  %12 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %12)
  store i32 1, i32* %i, align 4, !dbg !1294
  br label %for.cond, !dbg !1296

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %13, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.309, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %14 = load i32, i32* %i, align 4, !dbg !1297
  %cmp8 = icmp sle i32 %14, 8, !dbg !1300
  br i1 %cmp8, label %for.body, label %for.end, !dbg !1301

for.body:                                         ; preds = %for.cond
  %15 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %15, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.310, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %16 = load i32, i32* %i, align 4, !dbg !1302
  %call9 = call double @timer_read(i32 %16), !dbg !1304
  %17 = ptrtoint double* %t to i64
  call void @__DiscoPoPOpenMPWrite(i64 %17)
  store double %call9, double* %t, align 8, !dbg !1305
  %18 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %18, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.311, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %19 = load i32, i32* %i, align 4, !dbg !1306
  %20 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %20, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.312, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %21 = load i32, i32* %i, align 4, !dbg !1307
  %idxprom = sext i32 %21 to i64, !dbg !1308
  %arrayidx10 = getelementptr inbounds [9 x i8*], [9 x i8*]* %tstrings, i64 0, i64 %idxprom, !dbg !1308
  %22 = ptrtoint i8** %arrayidx10 to i64
  call void @__DiscoPoPOpenMPRead(i64 %22, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.313, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %23 = load i8*, i8** %arrayidx10, align 8, !dbg !1308
  %24 = ptrtoint double* %t to i64
  call void @__DiscoPoPOpenMPRead(i64 %24, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.314, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %25 = load double, double* %t, align 8, !dbg !1309
  %26 = ptrtoint double* %t to i64
  call void @__DiscoPoPOpenMPRead(i64 %26, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.315, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %27 = load double, double* %t, align 8, !dbg !1310
  %mul = fmul double %27, 1.000000e+02, !dbg !1311
  %28 = ptrtoint double* %t_m to i64
  call void @__DiscoPoPOpenMPRead(i64 %28, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.316, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %29 = load double, double* %t_m, align 8, !dbg !1312
  %div = fdiv double %mul, %29, !dbg !1313
  %call11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.26, i32 0, i32 0), i32 %19, i8* %23, double %25, double %div), !dbg !1314
  br label %for.inc, !dbg !1315

for.inc:                                          ; preds = %for.body
  %30 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %30, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.317, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %31 = load i32, i32* %i, align 4, !dbg !1316
  %inc = add nsw i32 %31, 1, !dbg !1316
  %32 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %32)
  store i32 %inc, i32* %i, align 4, !dbg !1316
  br label %for.cond, !dbg !1318, !llvm.loop !1319

for.end:                                          ; preds = %for.cond
  ret void, !dbg !1321
}

declare i32 @printf(i8*, ...) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: inlinehint nounwind uwtable
define internal { double, double } @dcmplx_div(double %z1.coerce0, double %z1.coerce1, double %z2.coerce0, double %z2.coerce1) #5 !dbg !1322 {
entry:
  %retval = alloca %struct.dcomplex, align 8
  %z1 = alloca %struct.dcomplex, align 8
  %z2 = alloca %struct.dcomplex, align 8
  %a = alloca double, align 8
  %b = alloca double, align 8
  %c = alloca double, align 8
  %d = alloca double, align 8
  %divisor = alloca double, align 8
  %real4 = alloca double, align 8
  %imag8 = alloca double, align 8
  %result = alloca %struct.dcomplex, align 8
  %0 = bitcast %struct.dcomplex* %z1 to { double, double }*
  %1 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 0
  %2 = ptrtoint double* %1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store double %z1.coerce0, double* %1, align 8
  %3 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 1
  %4 = ptrtoint double* %3 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store double %z1.coerce1, double* %3, align 8
  %5 = bitcast %struct.dcomplex* %z2 to { double, double }*
  %6 = getelementptr inbounds { double, double }, { double, double }* %5, i32 0, i32 0
  %7 = ptrtoint double* %6 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %7)
  store double %z2.coerce0, double* %6, align 8
  %8 = getelementptr inbounds { double, double }, { double, double }* %5, i32 0, i32 1
  %9 = ptrtoint double* %8 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %9)
  store double %z2.coerce1, double* %8, align 8
  call void @llvm.dbg.declare(metadata %struct.dcomplex* %z1, metadata !1325, metadata !98), !dbg !1326
  call void @llvm.dbg.declare(metadata %struct.dcomplex* %z2, metadata !1327, metadata !98), !dbg !1328
  call void @llvm.dbg.declare(metadata double* %a, metadata !1329, metadata !98), !dbg !1330
  %real = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %z1, i32 0, i32 0, !dbg !1331
  %10 = ptrtoint double* %real to i64
  call void @__DiscoPoPOpenMPRead(i64 %10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.318, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %11 = load double, double* %real, align 8, !dbg !1331
  %12 = ptrtoint double* %a to i64
  call void @__DiscoPoPOpenMPWrite(i64 %12)
  store double %11, double* %a, align 8, !dbg !1330
  call void @llvm.dbg.declare(metadata double* %b, metadata !1332, metadata !98), !dbg !1333
  %imag = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %z1, i32 0, i32 1, !dbg !1334
  %13 = ptrtoint double* %imag to i64
  call void @__DiscoPoPOpenMPRead(i64 %13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.319, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %14 = load double, double* %imag, align 8, !dbg !1334
  %15 = ptrtoint double* %b to i64
  call void @__DiscoPoPOpenMPWrite(i64 %15)
  store double %14, double* %b, align 8, !dbg !1333
  call void @llvm.dbg.declare(metadata double* %c, metadata !1335, metadata !98), !dbg !1336
  %real1 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %z2, i32 0, i32 0, !dbg !1337
  %16 = ptrtoint double* %real1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.320, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %17 = load double, double* %real1, align 8, !dbg !1337
  %18 = ptrtoint double* %c to i64
  call void @__DiscoPoPOpenMPWrite(i64 %18)
  store double %17, double* %c, align 8, !dbg !1336
  call void @llvm.dbg.declare(metadata double* %d, metadata !1338, metadata !98), !dbg !1339
  %imag2 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %z2, i32 0, i32 1, !dbg !1340
  %19 = ptrtoint double* %imag2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %19, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.321, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %20 = load double, double* %imag2, align 8, !dbg !1340
  %21 = ptrtoint double* %d to i64
  call void @__DiscoPoPOpenMPWrite(i64 %21)
  store double %20, double* %d, align 8, !dbg !1339
  call void @llvm.dbg.declare(metadata double* %divisor, metadata !1341, metadata !98), !dbg !1342
  %22 = ptrtoint double* %c to i64
  call void @__DiscoPoPOpenMPRead(i64 %22, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.322, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %23 = load double, double* %c, align 8, !dbg !1343
  %24 = ptrtoint double* %c to i64
  call void @__DiscoPoPOpenMPRead(i64 %24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.323, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %25 = load double, double* %c, align 8, !dbg !1344
  %mul = fmul double %23, %25, !dbg !1345
  %26 = ptrtoint double* %d to i64
  call void @__DiscoPoPOpenMPRead(i64 %26, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.324, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %27 = load double, double* %d, align 8, !dbg !1346
  %28 = ptrtoint double* %d to i64
  call void @__DiscoPoPOpenMPRead(i64 %28, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.325, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %29 = load double, double* %d, align 8, !dbg !1347
  %mul3 = fmul double %27, %29, !dbg !1348
  %add = fadd double %mul, %mul3, !dbg !1349
  %30 = ptrtoint double* %divisor to i64
  call void @__DiscoPoPOpenMPWrite(i64 %30)
  store double %add, double* %divisor, align 8, !dbg !1342
  call void @llvm.dbg.declare(metadata double* %real4, metadata !1350, metadata !98), !dbg !1351
  %31 = ptrtoint double* %a to i64
  call void @__DiscoPoPOpenMPRead(i64 %31, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.326, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %32 = load double, double* %a, align 8, !dbg !1352
  %33 = ptrtoint double* %c to i64
  call void @__DiscoPoPOpenMPRead(i64 %33, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.327, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %34 = load double, double* %c, align 8, !dbg !1353
  %mul5 = fmul double %32, %34, !dbg !1354
  %35 = ptrtoint double* %b to i64
  call void @__DiscoPoPOpenMPRead(i64 %35, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.328, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %36 = load double, double* %b, align 8, !dbg !1355
  %37 = ptrtoint double* %d to i64
  call void @__DiscoPoPOpenMPRead(i64 %37, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.329, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %38 = load double, double* %d, align 8, !dbg !1356
  %mul6 = fmul double %36, %38, !dbg !1357
  %add7 = fadd double %mul5, %mul6, !dbg !1358
  %39 = ptrtoint double* %divisor to i64
  call void @__DiscoPoPOpenMPRead(i64 %39, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.330, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %40 = load double, double* %divisor, align 8, !dbg !1359
  %div = fdiv double %add7, %40, !dbg !1360
  %41 = ptrtoint double* %real4 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %41)
  store double %div, double* %real4, align 8, !dbg !1351
  call void @llvm.dbg.declare(metadata double* %imag8, metadata !1361, metadata !98), !dbg !1362
  %42 = ptrtoint double* %b to i64
  call void @__DiscoPoPOpenMPRead(i64 %42, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.331, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %43 = load double, double* %b, align 8, !dbg !1363
  %44 = ptrtoint double* %c to i64
  call void @__DiscoPoPOpenMPRead(i64 %44, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.332, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %45 = load double, double* %c, align 8, !dbg !1364
  %mul9 = fmul double %43, %45, !dbg !1365
  %46 = ptrtoint double* %a to i64
  call void @__DiscoPoPOpenMPRead(i64 %46, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.333, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %47 = load double, double* %a, align 8, !dbg !1366
  %48 = ptrtoint double* %d to i64
  call void @__DiscoPoPOpenMPRead(i64 %48, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.334, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %49 = load double, double* %d, align 8, !dbg !1367
  %mul10 = fmul double %47, %49, !dbg !1368
  %sub = fsub double %mul9, %mul10, !dbg !1369
  %50 = ptrtoint double* %divisor to i64
  call void @__DiscoPoPOpenMPRead(i64 %50, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.335, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %51 = load double, double* %divisor, align 8, !dbg !1370
  %div11 = fdiv double %sub, %51, !dbg !1371
  %52 = ptrtoint double* %imag8 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %52)
  store double %div11, double* %imag8, align 8, !dbg !1362
  call void @llvm.dbg.declare(metadata %struct.dcomplex* %result, metadata !1372, metadata !98), !dbg !1373
  %real12 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %result, i32 0, i32 0, !dbg !1374
  %53 = ptrtoint double* %real4 to i64
  call void @__DiscoPoPOpenMPRead(i64 %53, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.336, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %54 = load double, double* %real4, align 8, !dbg !1375
  %55 = ptrtoint double* %real12 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %55)
  store double %54, double* %real12, align 8, !dbg !1374
  %imag13 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %result, i32 0, i32 1, !dbg !1374
  %56 = ptrtoint double* %imag8 to i64
  call void @__DiscoPoPOpenMPRead(i64 %56, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.337, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %57 = load double, double* %imag8, align 8, !dbg !1376
  %58 = ptrtoint double* %imag13 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %58)
  store double %57, double* %imag13, align 8, !dbg !1374
  %59 = bitcast %struct.dcomplex* %retval to i8*, !dbg !1377
  %60 = bitcast %struct.dcomplex* %result to i8*, !dbg !1377
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* %60, i64 16, i32 8, i1 false), !dbg !1377
  %61 = bitcast %struct.dcomplex* %retval to { double, double }*, !dbg !1378
  %62 = ptrtoint { double, double }* %61 to i64
  call void @__DiscoPoPOpenMPRead(i64 %62, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.338, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %63 = load { double, double }, { double, double }* %61, align 8, !dbg !1378
  ret { double, double } %63, !dbg !1378
}

; Function Attrs: nounwind
declare double @sqrt(double) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal void @.omp_outlined..31(i32* noalias %.global_tid., i32* noalias %.bound_tid., i32* dereferenceable(4) %j, i64 %vla, i64 %vla1, %struct.dcomplex* %u1, %struct.dcomplex* dereferenceable(16) %chk) #0 !dbg !1379 !omp.region.ID !1389 {
entry:
  %.global_tid..addr = alloca i32*, align 8
  %.bound_tid..addr = alloca i32*, align 8
  %j.addr = alloca i32*, align 8
  %vla.addr = alloca i64, align 8
  %vla.addr2 = alloca i64, align 8
  %u1.addr = alloca %struct.dcomplex*, align 8
  %chk.addr = alloca %struct.dcomplex*, align 8
  %i = alloca i32, align 4
  %q = alloca i32, align 4
  %r = alloca i32, align 4
  %s = alloca i32, align 4
  %my_chk = alloca %struct.dcomplex, align 8
  %.omp.iv = alloca i32, align 4
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %j3 = alloca i32, align 4
  %.kmpc_loc.addr = alloca %ident_t, align 8
  %0 = bitcast %ident_t* %.kmpc_loc.addr to i8*
  %1 = bitcast %ident_t* @0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 24, i32 8, i1 false)
  %.compoundliteral = alloca %struct.dcomplex, align 8
  %.compoundliteral26 = alloca %struct.dcomplex, align 8
  %2 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store i32* %.global_tid., i32** %.global_tid..addr, align 8
  call void @llvm.dbg.declare(metadata i32** %.global_tid..addr, metadata !1390, metadata !98), !dbg !1391
  %3 = ptrtoint i32** %.bound_tid..addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store i32* %.bound_tid., i32** %.bound_tid..addr, align 8
  call void @llvm.dbg.declare(metadata i32** %.bound_tid..addr, metadata !1392, metadata !98), !dbg !1391
  %4 = ptrtoint i32** %j.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store i32* %j, i32** %j.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %j.addr, metadata !1393, metadata !98), !dbg !1391
  %5 = ptrtoint i64* %vla.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store i64 %vla, i64* %vla.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr, metadata !1394, metadata !98), !dbg !1391
  %6 = ptrtoint i64* %vla.addr2 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %6)
  store i64 %vla1, i64* %vla.addr2, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr2, metadata !1395, metadata !98), !dbg !1391
  %7 = ptrtoint %struct.dcomplex** %u1.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %7)
  store %struct.dcomplex* %u1, %struct.dcomplex** %u1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %u1.addr, metadata !1396, metadata !98), !dbg !1391
  %8 = ptrtoint %struct.dcomplex** %chk.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %8)
  store %struct.dcomplex* %chk, %struct.dcomplex** %chk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %chk.addr, metadata !1397, metadata !98), !dbg !1391
  %9 = ptrtoint i32** %j.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %9, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.339, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %10 = load i32*, i32** %j.addr, align 8, !dbg !1398
  %11 = ptrtoint i64* %vla.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @22, i32 0, i32 0), i32 100, i32 -1, i32 8)
  %12 = load i64, i64* %vla.addr, align 8, !dbg !1398
  %13 = ptrtoint i64* %vla.addr2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @23, i32 0, i32 0), i32 100, i32 -1, i32 8)
  %14 = load i64, i64* %vla.addr2, align 8, !dbg !1398
  %15 = ptrtoint %struct.dcomplex** %chk.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @24, i32 0, i32 0), i32 100, i32 -1, i32 8)
  %16 = load %struct.dcomplex*, %struct.dcomplex** %chk.addr, align 8, !dbg !1398
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1399, metadata !98), !dbg !1391
  call void @llvm.dbg.declare(metadata i32* %q, metadata !1400, metadata !98), !dbg !1391
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1401, metadata !98), !dbg !1391
  call void @llvm.dbg.declare(metadata i32* %s, metadata !1402, metadata !98), !dbg !1391
  call void @llvm.dbg.declare(metadata %struct.dcomplex* %my_chk, metadata !1403, metadata !98), !dbg !1405
  %17 = bitcast %struct.dcomplex* %my_chk to i8*, !dbg !1405
  call void @llvm.memset.p0i8.i64(i8* %17, i8 0, i64 16, i32 8, i1 false), !dbg !1405
  call void @llvm.dbg.declare(metadata i32* %.omp.iv, metadata !1406, metadata !98), !dbg !1408
  call void @llvm.dbg.declare(metadata i32* %.omp.lb, metadata !1409, metadata !98), !dbg !1408
  %18 = ptrtoint i32* %.omp.lb to i64
  call void @__DiscoPoPOpenMPWrite(i64 %18)
  store i32 0, i32* %.omp.lb, align 4, !dbg !1410
  call void @llvm.dbg.declare(metadata i32* %.omp.ub, metadata !1411, metadata !98), !dbg !1408
  %19 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPWrite(i64 %19)
  store i32 1023, i32* %.omp.ub, align 4, !dbg !1410
  call void @llvm.dbg.declare(metadata i32* %.omp.stride, metadata !1412, metadata !98), !dbg !1408
  %20 = ptrtoint i32* %.omp.stride to i64
  call void @__DiscoPoPOpenMPWrite(i64 %20)
  store i32 1, i32* %.omp.stride, align 4, !dbg !1410
  call void @llvm.dbg.declare(metadata i32* %.omp.is_last, metadata !1413, metadata !98), !dbg !1408
  %21 = ptrtoint i32* %.omp.is_last to i64
  call void @__DiscoPoPOpenMPWrite(i64 %21)
  store i32 0, i32* %.omp.is_last, align 4, !dbg !1410
  call void @llvm.dbg.declare(metadata i32* %j3, metadata !1414, metadata !98), !dbg !1408
  %22 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !1415
  %23 = ptrtoint i8** %22 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %23)
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @2, i32 0, i32 0), i8** %22, align 8, !dbg !1415
  %24 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @25, i32 0, i32 0), i32 100, i32 -1, i32 8)
  %25 = load i32*, i32** %.global_tid..addr, align 8, !dbg !1415
  %26 = ptrtoint i32* %25 to i64
  call void @__DiscoPoPOpenMPRead(i64 %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @26, i32 0, i32 0), i32 100, i32 -1, i32 4)
  %27 = load i32, i32* %25, align 4, !dbg !1415
  call void @__kmpc_for_static_init_4(%ident_t* %.kmpc_loc.addr, i32 %27, i32 34, i32* %.omp.is_last, i32* %.omp.lb, i32* %.omp.ub, i32* %.omp.stride, i32 1, i32 1), !dbg !1415
  %28 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @27, i32 0, i32 0), i32 100, i32 -1, i32 4)
  %29 = load i32, i32* %.omp.ub, align 4, !dbg !1410
  %cmp = icmp sgt i32 %29, 1023, !dbg !1410
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !1410

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !1416

cond.false:                                       ; preds = %entry
  %30 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @28, i32 0, i32 0), i32 100, i32 -1, i32 4)
  %31 = load i32, i32* %.omp.ub, align 4, !dbg !1418
  br label %cond.end, !dbg !1418

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1023, %cond.true ], [ %31, %cond.false ], !dbg !1420
  %32 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPWrite(i64 %32)
  store i32 %cond, i32* %.omp.ub, align 4, !dbg !1420
  %33 = ptrtoint i32* %.omp.lb to i64
  call void @__DiscoPoPOpenMPRead(i64 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @29, i32 0, i32 0), i32 100, i32 -1, i32 4)
  %34 = load i32, i32* %.omp.lb, align 4, !dbg !1420
  %35 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPWrite(i64 %35)
  store i32 %34, i32* %.omp.iv, align 4, !dbg !1420
  br label %omp.inner.for.cond, !dbg !1422

omp.inner.for.cond:                               ; preds = %omp.inner.for.inc, %cond.end
  %36 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPRead(i64 %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @30, i32 0, i32 0), i32 100, i32 -1, i32 4)
  %37 = load i32, i32* %.omp.iv, align 4, !dbg !1424
  %38 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %38, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @31, i32 0, i32 0), i32 100, i32 -1, i32 4)
  %39 = load i32, i32* %.omp.ub, align 4, !dbg !1424
  %cmp4 = icmp sle i32 %37, %39, !dbg !1408
  br i1 %cmp4, label %omp.inner.for.body, label %omp.inner.for.end, !dbg !1426

omp.inner.for.body:                               ; preds = %omp.inner.for.cond
  %40 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPRead(i64 %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @32, i32 0, i32 0), i32 100, i32 -1, i32 4)
  %41 = load i32, i32* %.omp.iv, align 4, !dbg !1428
  %mul = mul nsw i32 %41, 1, !dbg !1430
  %add = add nsw i32 1, %mul, !dbg !1430
  %42 = ptrtoint i32* %j3 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %42)
  store i32 %add, i32* %j3, align 4, !dbg !1430
  %43 = ptrtoint i32* %j3 to i64
  call void @__DiscoPoPOpenMPRead(i64 %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @33, i32 0, i32 0), i32 100, i32 -1, i32 4)
  %44 = load i32, i32* %j3, align 4, !dbg !1431
  %rem = srem i32 %44, 64, !dbg !1433
  %45 = ptrtoint i32* %q to i64
  call void @__DiscoPoPOpenMPWrite(i64 %45)
  store i32 %rem, i32* %q, align 4, !dbg !1434
  %46 = ptrtoint i32* %j3 to i64
  call void @__DiscoPoPOpenMPRead(i64 %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @34, i32 0, i32 0), i32 100, i32 -1, i32 4)
  %47 = load i32, i32* %j3, align 4, !dbg !1435
  %mul5 = mul nsw i32 3, %47, !dbg !1436
  %rem6 = srem i32 %mul5, 64, !dbg !1437
  %48 = ptrtoint i32* %r to i64
  call void @__DiscoPoPOpenMPWrite(i64 %48)
  store i32 %rem6, i32* %r, align 4, !dbg !1438
  %49 = ptrtoint i32* %j3 to i64
  call void @__DiscoPoPOpenMPRead(i64 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @35, i32 0, i32 0), i32 100, i32 -1, i32 4)
  %50 = load i32, i32* %j3, align 4, !dbg !1439
  %mul7 = mul nsw i32 5, %50, !dbg !1440
  %rem8 = srem i32 %mul7, 64, !dbg !1441
  %51 = ptrtoint i32* %s to i64
  call void @__DiscoPoPOpenMPWrite(i64 %51)
  store i32 %rem8, i32* %s, align 4, !dbg !1442
  %real = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral, i32 0, i32 0, !dbg !1443
  %real9 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %my_chk, i32 0, i32 0, !dbg !1443
  %52 = ptrtoint double* %real9 to i64
  call void @__DiscoPoPOpenMPRead(i64 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @36, i32 0, i32 0), i32 100, i32 -1, i32 8)
  %53 = load double, double* %real9, align 8, !dbg !1443
  %54 = ptrtoint i32* %q to i64
  call void @__DiscoPoPOpenMPRead(i64 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @37, i32 0, i32 0), i32 100, i32 -1, i32 4)
  %55 = load i32, i32* %q, align 4, !dbg !1443
  %idxprom = sext i32 %55 to i64, !dbg !1443
  %56 = ptrtoint i32* %r to i64
  call void @__DiscoPoPOpenMPRead(i64 %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @38, i32 0, i32 0), i32 100, i32 -1, i32 4)
  %57 = load i32, i32* %r, align 4, !dbg !1443
  %idxprom10 = sext i32 %57 to i64, !dbg !1443
  %58 = ptrtoint i32* %s to i64
  call void @__DiscoPoPOpenMPRead(i64 %58, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @39, i32 0, i32 0), i32 100, i32 -1, i32 4)
  %59 = load i32, i32* %s, align 4, !dbg !1443
  %idxprom11 = sext i32 %59 to i64, !dbg !1443
  %60 = ptrtoint %struct.dcomplex** %u1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %60, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @40, i32 0, i32 0), i32 100, i32 -1, i32 8)
  %61 = load %struct.dcomplex*, %struct.dcomplex** %u1.addr, align 8, !dbg !1443
  %62 = mul nuw i64 %12, %14, !dbg !1443
  %63 = mul nsw i64 %idxprom11, %62, !dbg !1443
  %arrayidx = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %61, i64 %63, !dbg !1443
  %64 = mul nsw i64 %idxprom10, %14, !dbg !1443
  %arrayidx12 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx, i64 %64, !dbg !1443
  %arrayidx13 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx12, i64 %idxprom, !dbg !1443
  %real14 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx13, i32 0, i32 0, !dbg !1443
  %65 = ptrtoint double* %real14 to i64
  call void @__DiscoPoPOpenMPRead(i64 %65, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @41, i32 0, i32 0), i32 100, i32 -1, i32 8)
  %66 = load double, double* %real14, align 8, !dbg !1443
  %add15 = fadd double %53, %66, !dbg !1443
  %67 = ptrtoint double* %real to i64
  call void @__DiscoPoPOpenMPWrite(i64 %67)
  store double %add15, double* %real, align 8, !dbg !1443
  %imag = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral, i32 0, i32 1, !dbg !1443
  %imag16 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %my_chk, i32 0, i32 1, !dbg !1443
  %68 = ptrtoint double* %imag16 to i64
  call void @__DiscoPoPOpenMPRead(i64 %68, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @42, i32 0, i32 0), i32 100, i32 -1, i32 8)
  %69 = load double, double* %imag16, align 8, !dbg !1443
  %70 = ptrtoint i32* %q to i64
  call void @__DiscoPoPOpenMPRead(i64 %70, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @43, i32 0, i32 0), i32 100, i32 -1, i32 4)
  %71 = load i32, i32* %q, align 4, !dbg !1443
  %idxprom17 = sext i32 %71 to i64, !dbg !1443
  %72 = ptrtoint i32* %r to i64
  call void @__DiscoPoPOpenMPRead(i64 %72, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @44, i32 0, i32 0), i32 100, i32 -1, i32 4)
  %73 = load i32, i32* %r, align 4, !dbg !1443
  %idxprom18 = sext i32 %73 to i64, !dbg !1443
  %74 = ptrtoint i32* %s to i64
  call void @__DiscoPoPOpenMPRead(i64 %74, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @45, i32 0, i32 0), i32 100, i32 -1, i32 4)
  %75 = load i32, i32* %s, align 4, !dbg !1443
  %idxprom19 = sext i32 %75 to i64, !dbg !1443
  %76 = ptrtoint %struct.dcomplex** %u1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %76, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @46, i32 0, i32 0), i32 100, i32 -1, i32 8)
  %77 = load %struct.dcomplex*, %struct.dcomplex** %u1.addr, align 8, !dbg !1443
  %78 = mul nuw i64 %12, %14, !dbg !1443
  %79 = mul nsw i64 %idxprom19, %78, !dbg !1443
  %arrayidx20 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %77, i64 %79, !dbg !1443
  %80 = mul nsw i64 %idxprom18, %14, !dbg !1443
  %arrayidx21 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx20, i64 %80, !dbg !1443
  %arrayidx22 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx21, i64 %idxprom17, !dbg !1443
  %imag23 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx22, i32 0, i32 1, !dbg !1443
  %81 = ptrtoint double* %imag23 to i64
  call void @__DiscoPoPOpenMPRead(i64 %81, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @47, i32 0, i32 0), i32 100, i32 -1, i32 8)
  %82 = load double, double* %imag23, align 8, !dbg !1443
  %add24 = fadd double %69, %82, !dbg !1443
  %83 = ptrtoint double* %imag to i64
  call void @__DiscoPoPOpenMPWrite(i64 %83)
  store double %add24, double* %imag, align 8, !dbg !1443
  %84 = bitcast %struct.dcomplex* %my_chk to i8*, !dbg !1443
  %85 = bitcast %struct.dcomplex* %.compoundliteral to i8*, !dbg !1443
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %85, i64 16, i32 8, i1 false), !dbg !1443
  br label %omp.body.continue, !dbg !1444

omp.body.continue:                                ; preds = %omp.inner.for.body
  br label %omp.inner.for.inc, !dbg !1445

omp.inner.for.inc:                                ; preds = %omp.body.continue
  %86 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPRead(i64 %86, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @48, i32 0, i32 0), i32 100, i32 -1, i32 4)
  %87 = load i32, i32* %.omp.iv, align 4, !dbg !1446
  %add25 = add nsw i32 %87, 1, !dbg !1448
  %88 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPWrite(i64 %88)
  store i32 %add25, i32* %.omp.iv, align 4, !dbg !1448
  br label %omp.inner.for.cond, !dbg !1449, !llvm.loop !1450

omp.inner.for.end:                                ; preds = %omp.inner.for.cond
  br label %omp.loop.exit, !dbg !1451

omp.loop.exit:                                    ; preds = %omp.inner.for.end
  %89 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !1452
  %90 = ptrtoint i8** %89 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %90)
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @3, i32 0, i32 0), i8** %89, align 8, !dbg !1452
  call void @__kmpc_for_static_fini(%ident_t* %.kmpc_loc.addr, i32 %27), !dbg !1452
  %91 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !1453
  %92 = ptrtoint i8** %91 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %92)
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @4, i32 0, i32 0), i8** %91, align 8, !dbg !1453
  call void @__kmpc_critical(%ident_t* %.kmpc_loc.addr, i32 %27, [8 x i32]* @.gomp_critical_user_.var), !dbg !1453
  %real27 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral26, i32 0, i32 0, !dbg !1454
  %real28 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %16, i32 0, i32 0, !dbg !1454
  %93 = ptrtoint double* %real28 to i64
  call void @__DiscoPoPOpenMPRead(i64 %93, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @49, i32 0, i32 0), i32 100, i32 -1, i32 8)
  %94 = load double, double* %real28, align 8, !dbg !1454
  %real29 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %my_chk, i32 0, i32 0, !dbg !1454
  %95 = ptrtoint double* %real29 to i64
  call void @__DiscoPoPOpenMPRead(i64 %95, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @50, i32 0, i32 0), i32 100, i32 -1, i32 8)
  %96 = load double, double* %real29, align 8, !dbg !1454
  %add30 = fadd double %94, %96, !dbg !1454
  %97 = ptrtoint double* %real27 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %97)
  store double %add30, double* %real27, align 8, !dbg !1454
  %imag31 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral26, i32 0, i32 1, !dbg !1454
  %imag32 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %16, i32 0, i32 1, !dbg !1454
  %98 = ptrtoint double* %imag32 to i64
  call void @__DiscoPoPOpenMPRead(i64 %98, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @51, i32 0, i32 0), i32 100, i32 -1, i32 8)
  %99 = load double, double* %imag32, align 8, !dbg !1454
  %imag33 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %my_chk, i32 0, i32 1, !dbg !1454
  %100 = ptrtoint double* %imag33 to i64
  call void @__DiscoPoPOpenMPRead(i64 %100, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @52, i32 0, i32 0), i32 100, i32 -1, i32 8)
  %101 = load double, double* %imag33, align 8, !dbg !1454
  %add34 = fadd double %99, %101, !dbg !1454
  %102 = ptrtoint double* %imag31 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %102)
  store double %add34, double* %imag31, align 8, !dbg !1454
  %103 = bitcast %struct.dcomplex* %16 to i8*, !dbg !1454
  %104 = bitcast %struct.dcomplex* %.compoundliteral26 to i8*, !dbg !1454
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %103, i8* %104, i64 16, i32 8, i1 false), !dbg !1454
  call void @__kmpc_end_critical(%ident_t* %.kmpc_loc.addr, i32 %27, [8 x i32]* @.gomp_critical_user_.var), !dbg !1457
  ret void, !dbg !1458
}

declare void @__kmpc_fork_call(%ident_t*, i32, void (i32*, i32*, ...)*, ...)

declare void @__kmpc_for_static_init_4(%ident_t*, i32, i32, i32*, i32*, i32*, i32*, i32, i32)

declare void @__kmpc_for_static_fini(%ident_t*, i32)

declare void @__kmpc_critical(%ident_t*, i32, [8 x i32]*)

declare void @__kmpc_end_critical(%ident_t*, i32, [8 x i32]*)

; Function Attrs: nounwind uwtable
define internal void @.omp_outlined..8(i32* noalias %.global_tid., i32* noalias %.bound_tid., i32* dereferenceable(4) %d3, i32* dereferenceable(4) %d2, i32* dereferenceable(4) %d1, i64 %vla, i64 %vla1, %struct.dcomplex* %u0, i64 %vla3, i64 %vla5, double* %twiddle, i64 %vla7, i64 %vla9, %struct.dcomplex* %u1) #0 !dbg !1459 !omp.region.ID !1462 {
entry:
  %.global_tid..addr = alloca i32*, align 8
  %.bound_tid..addr = alloca i32*, align 8
  %d3.addr = alloca i32*, align 8
  %d2.addr = alloca i32*, align 8
  %d1.addr = alloca i32*, align 8
  %vla.addr = alloca i64, align 8
  %vla.addr2 = alloca i64, align 8
  %u0.addr = alloca %struct.dcomplex*, align 8
  %vla.addr4 = alloca i64, align 8
  %vla.addr6 = alloca i64, align 8
  %twiddle.addr = alloca double*, align 8
  %vla.addr8 = alloca i64, align 8
  %vla.addr10 = alloca i64, align 8
  %u1.addr = alloca %struct.dcomplex*, align 8
  %.omp.iv = alloca i32, align 4
  %.capture_expr. = alloca i32, align 4
  %.capture_expr.11 = alloca i32, align 4
  %k = alloca i32, align 4
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k14 = alloca i32, align 4
  %.kmpc_loc.addr = alloca %ident_t, align 8
  %0 = bitcast %ident_t* %.kmpc_loc.addr to i8*
  %1 = bitcast %ident_t* @0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 24, i32 8, i1 false)
  %.compoundliteral = alloca %struct.dcomplex, align 8
  %2 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store i32* %.global_tid., i32** %.global_tid..addr, align 8
  call void @llvm.dbg.declare(metadata i32** %.global_tid..addr, metadata !1463, metadata !98), !dbg !1464
  %3 = ptrtoint i32** %.bound_tid..addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store i32* %.bound_tid., i32** %.bound_tid..addr, align 8
  call void @llvm.dbg.declare(metadata i32** %.bound_tid..addr, metadata !1465, metadata !98), !dbg !1464
  %4 = ptrtoint i32** %d3.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store i32* %d3, i32** %d3.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %d3.addr, metadata !1466, metadata !98), !dbg !1464
  %5 = ptrtoint i32** %d2.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store i32* %d2, i32** %d2.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %d2.addr, metadata !1467, metadata !98), !dbg !1464
  %6 = ptrtoint i32** %d1.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %6)
  store i32* %d1, i32** %d1.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %d1.addr, metadata !1468, metadata !98), !dbg !1464
  %7 = ptrtoint i64* %vla.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %7)
  store i64 %vla, i64* %vla.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr, metadata !1469, metadata !98), !dbg !1464
  %8 = ptrtoint i64* %vla.addr2 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %8)
  store i64 %vla1, i64* %vla.addr2, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr2, metadata !1470, metadata !98), !dbg !1464
  %9 = ptrtoint %struct.dcomplex** %u0.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %9)
  store %struct.dcomplex* %u0, %struct.dcomplex** %u0.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %u0.addr, metadata !1471, metadata !98), !dbg !1464
  %10 = ptrtoint i64* %vla.addr4 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %10)
  store i64 %vla3, i64* %vla.addr4, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr4, metadata !1472, metadata !98), !dbg !1464
  %11 = ptrtoint i64* %vla.addr6 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %11)
  store i64 %vla5, i64* %vla.addr6, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr6, metadata !1473, metadata !98), !dbg !1464
  %12 = ptrtoint double** %twiddle.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %12)
  store double* %twiddle, double** %twiddle.addr, align 8
  call void @llvm.dbg.declare(metadata double** %twiddle.addr, metadata !1474, metadata !98), !dbg !1464
  %13 = ptrtoint i64* %vla.addr8 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %13)
  store i64 %vla7, i64* %vla.addr8, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr8, metadata !1475, metadata !98), !dbg !1464
  %14 = ptrtoint i64* %vla.addr10 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %14)
  store i64 %vla9, i64* %vla.addr10, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr10, metadata !1476, metadata !98), !dbg !1464
  %15 = ptrtoint %struct.dcomplex** %u1.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %15)
  store %struct.dcomplex* %u1, %struct.dcomplex** %u1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %u1.addr, metadata !1477, metadata !98), !dbg !1464
  %16 = ptrtoint i32** %d3.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.371, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %17 = load i32*, i32** %d3.addr, align 8, !dbg !1478
  %18 = ptrtoint i32** %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @53, i32 0, i32 0), i32 101, i32 -1, i32 8)
  %19 = load i32*, i32** %d2.addr, align 8, !dbg !1478
  %20 = ptrtoint i32** %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @54, i32 0, i32 0), i32 101, i32 -1, i32 8)
  %21 = load i32*, i32** %d1.addr, align 8, !dbg !1478
  %22 = ptrtoint i64* %vla.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @55, i32 0, i32 0), i32 101, i32 -1, i32 8)
  %23 = load i64, i64* %vla.addr, align 8, !dbg !1478
  %24 = ptrtoint i64* %vla.addr2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @56, i32 0, i32 0), i32 101, i32 -1, i32 8)
  %25 = load i64, i64* %vla.addr2, align 8, !dbg !1478
  %26 = ptrtoint i64* %vla.addr4 to i64
  call void @__DiscoPoPOpenMPRead(i64 %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @57, i32 0, i32 0), i32 101, i32 -1, i32 8)
  %27 = load i64, i64* %vla.addr4, align 8, !dbg !1478
  %28 = ptrtoint i64* %vla.addr6 to i64
  call void @__DiscoPoPOpenMPRead(i64 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @58, i32 0, i32 0), i32 101, i32 -1, i32 8)
  %29 = load i64, i64* %vla.addr6, align 8, !dbg !1478
  %30 = ptrtoint i64* %vla.addr8 to i64
  call void @__DiscoPoPOpenMPRead(i64 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @59, i32 0, i32 0), i32 101, i32 -1, i32 8)
  %31 = load i64, i64* %vla.addr8, align 8, !dbg !1478
  %32 = ptrtoint i64* %vla.addr10 to i64
  call void @__DiscoPoPOpenMPRead(i64 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @60, i32 0, i32 0), i32 101, i32 -1, i32 8)
  %33 = load i64, i64* %vla.addr10, align 8, !dbg !1478
  call void @llvm.dbg.declare(metadata i32* %.omp.iv, metadata !1479, metadata !98), !dbg !1464
  call void @llvm.dbg.declare(metadata i32* %.capture_expr., metadata !1480, metadata !98), !dbg !1464
  %34 = ptrtoint i32* %17 to i64
  call void @__DiscoPoPOpenMPRead(i64 %34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %35 = load i32, i32* %17, align 4, !dbg !1481
  %36 = ptrtoint i32* %.capture_expr. to i64
  call void @__DiscoPoPOpenMPWrite(i64 %36)
  store i32 %35, i32* %.capture_expr., align 4, !dbg !1464
  call void @llvm.dbg.declare(metadata i32* %.capture_expr.11, metadata !1480, metadata !98), !dbg !1464
  %37 = ptrtoint i32* %.capture_expr. to i64
  call void @__DiscoPoPOpenMPRead(i64 %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @62, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %38 = load i32, i32* %.capture_expr., align 4, !dbg !1481
  %sub = sub nsw i32 %38, 0, !dbg !1478
  %sub12 = sub nsw i32 %sub, 1, !dbg !1478
  %add = add nsw i32 %sub12, 1, !dbg !1478
  %div = sdiv i32 %add, 1, !dbg !1478
  %sub13 = sub nsw i32 %div, 1, !dbg !1464
  %39 = ptrtoint i32* %.capture_expr.11 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %39)
  store i32 %sub13, i32* %.capture_expr.11, align 4, !dbg !1464
  call void @llvm.dbg.declare(metadata i32* %k, metadata !1482, metadata !98), !dbg !1464
  %40 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPWrite(i64 %40)
  store i32 0, i32* %k, align 4, !dbg !1483
  %41 = ptrtoint i32* %.capture_expr. to i64
  call void @__DiscoPoPOpenMPRead(i64 %41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @63, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %42 = load i32, i32* %.capture_expr., align 4, !dbg !1481
  %cmp = icmp slt i32 0, %42, !dbg !1478
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end, !dbg !1478

omp.precond.then:                                 ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %.omp.lb, metadata !1484, metadata !98), !dbg !1464
  %43 = ptrtoint i32* %.omp.lb to i64
  call void @__DiscoPoPOpenMPWrite(i64 %43)
  store i32 0, i32* %.omp.lb, align 4, !dbg !1485
  call void @llvm.dbg.declare(metadata i32* %.omp.ub, metadata !1487, metadata !98), !dbg !1464
  %44 = ptrtoint i32* %.capture_expr.11 to i64
  call void @__DiscoPoPOpenMPRead(i64 %44, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @64, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %45 = load i32, i32* %.capture_expr.11, align 4, !dbg !1488
  %46 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPWrite(i64 %46)
  store i32 %45, i32* %.omp.ub, align 4, !dbg !1485
  call void @llvm.dbg.declare(metadata i32* %.omp.stride, metadata !1489, metadata !98), !dbg !1464
  %47 = ptrtoint i32* %.omp.stride to i64
  call void @__DiscoPoPOpenMPWrite(i64 %47)
  store i32 1, i32* %.omp.stride, align 4, !dbg !1485
  call void @llvm.dbg.declare(metadata i32* %.omp.is_last, metadata !1490, metadata !98), !dbg !1464
  %48 = ptrtoint i32* %.omp.is_last to i64
  call void @__DiscoPoPOpenMPWrite(i64 %48)
  store i32 0, i32* %.omp.is_last, align 4, !dbg !1485
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1491, metadata !98), !dbg !1464
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1492, metadata !98), !dbg !1464
  call void @llvm.dbg.declare(metadata i32* %k14, metadata !1482, metadata !98), !dbg !1464
  %49 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !1493
  %50 = ptrtoint i8** %49 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %50)
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @5, i32 0, i32 0), i8** %49, align 8, !dbg !1493
  %51 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @65, i32 0, i32 0), i32 101, i32 -1, i32 8)
  %52 = load i32*, i32** %.global_tid..addr, align 8, !dbg !1493
  %53 = ptrtoint i32* %52 to i64
  call void @__DiscoPoPOpenMPRead(i64 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @66, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %54 = load i32, i32* %52, align 4, !dbg !1493
  call void @__kmpc_for_static_init_4(%ident_t* %.kmpc_loc.addr, i32 %54, i32 34, i32* %.omp.is_last, i32* %.omp.lb, i32* %.omp.ub, i32* %.omp.stride, i32 1, i32 1), !dbg !1493
  %55 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @67, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %56 = load i32, i32* %.omp.ub, align 4, !dbg !1485
  %57 = ptrtoint i32* %.capture_expr.11 to i64
  call void @__DiscoPoPOpenMPRead(i64 %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @68, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %58 = load i32, i32* %.capture_expr.11, align 4, !dbg !1488
  %cmp15 = icmp sgt i32 %56, %58, !dbg !1485
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !1485

cond.true:                                        ; preds = %omp.precond.then
  %59 = ptrtoint i32* %.capture_expr.11 to i64
  call void @__DiscoPoPOpenMPRead(i64 %59, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @69, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %60 = load i32, i32* %.capture_expr.11, align 4, !dbg !1494
  br label %cond.end, !dbg !1496

cond.false:                                       ; preds = %omp.precond.then
  %61 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %61, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @70, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %62 = load i32, i32* %.omp.ub, align 4, !dbg !1497
  br label %cond.end, !dbg !1497

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %60, %cond.true ], [ %62, %cond.false ], !dbg !1499
  %63 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPWrite(i64 %63)
  store i32 %cond, i32* %.omp.ub, align 4, !dbg !1499
  %64 = ptrtoint i32* %.omp.lb to i64
  call void @__DiscoPoPOpenMPRead(i64 %64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @71, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %65 = load i32, i32* %.omp.lb, align 4, !dbg !1499
  %66 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPWrite(i64 %66)
  store i32 %65, i32* %.omp.iv, align 4, !dbg !1499
  br label %omp.inner.for.cond, !dbg !1501

omp.inner.for.cond:                               ; preds = %omp.inner.for.inc, %cond.end
  %67 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPRead(i64 %67, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @72, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %68 = load i32, i32* %.omp.iv, align 4, !dbg !1502
  %69 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %69, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @73, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %70 = load i32, i32* %.omp.ub, align 4, !dbg !1502
  %cmp16 = icmp sle i32 %68, %70, !dbg !1504
  br i1 %cmp16, label %omp.inner.for.body, label %omp.inner.for.end, !dbg !1505

omp.inner.for.body:                               ; preds = %omp.inner.for.cond
  %71 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPRead(i64 %71, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @74, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %72 = load i32, i32* %.omp.iv, align 4, !dbg !1506
  %mul = mul nsw i32 %72, 1, !dbg !1508
  %add17 = add nsw i32 0, %mul, !dbg !1508
  %73 = ptrtoint i32* %k14 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %73)
  store i32 %add17, i32* %k14, align 4, !dbg !1508
  %74 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPWrite(i64 %74)
  store i32 0, i32* %j, align 4, !dbg !1509
  br label %for.cond, !dbg !1512

for.cond:                                         ; preds = %for.inc66, %omp.inner.for.body
  %75 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %75, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @75, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %76 = load i32, i32* %j, align 4, !dbg !1513
  %77 = ptrtoint i32* %19 to i64
  call void @__DiscoPoPOpenMPRead(i64 %77, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @76, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %78 = load i32, i32* %19, align 4, !dbg !1516
  %cmp18 = icmp slt i32 %76, %78, !dbg !1517
  br i1 %cmp18, label %for.body, label %for.end68, !dbg !1518

for.body:                                         ; preds = %for.cond
  %79 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %79)
  store i32 0, i32* %i, align 4, !dbg !1519
  br label %for.cond19, !dbg !1522

for.cond19:                                       ; preds = %for.inc, %for.body
  %80 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %80, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @77, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %81 = load i32, i32* %i, align 4, !dbg !1523
  %82 = ptrtoint i32* %21 to i64
  call void @__DiscoPoPOpenMPRead(i64 %82, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @78, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %83 = load i32, i32* %21, align 4, !dbg !1526
  %cmp20 = icmp slt i32 %81, %83, !dbg !1527
  br i1 %cmp20, label %for.body21, label %for.end, !dbg !1528

for.body21:                                       ; preds = %for.cond19
  %84 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %84, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @79, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %85 = load i32, i32* %i, align 4, !dbg !1529
  %idxprom = sext i32 %85 to i64, !dbg !1531
  %86 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %86, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @80, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %87 = load i32, i32* %j, align 4, !dbg !1532
  %idxprom22 = sext i32 %87 to i64, !dbg !1531
  %88 = ptrtoint i32* %k14 to i64
  call void @__DiscoPoPOpenMPRead(i64 %88, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @81, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %89 = load i32, i32* %k14, align 4, !dbg !1533
  %idxprom23 = sext i32 %89 to i64, !dbg !1531
  %90 = ptrtoint %struct.dcomplex** %u0.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %90, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @82, i32 0, i32 0), i32 101, i32 -1, i32 8)
  %91 = load %struct.dcomplex*, %struct.dcomplex** %u0.addr, align 8, !dbg !1531
  %92 = mul nuw i64 %23, %25, !dbg !1531
  %93 = mul nsw i64 %idxprom23, %92, !dbg !1531
  %arrayidx = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %91, i64 %93, !dbg !1531
  %94 = mul nsw i64 %idxprom22, %25, !dbg !1531
  %arrayidx24 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx, i64 %94, !dbg !1531
  %arrayidx25 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx24, i64 %idxprom, !dbg !1531
  %real = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral, i32 0, i32 0, !dbg !1534
  %95 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %95, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @83, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %96 = load i32, i32* %i, align 4, !dbg !1534
  %idxprom26 = sext i32 %96 to i64, !dbg !1534
  %97 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %97, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @84, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %98 = load i32, i32* %j, align 4, !dbg !1534
  %idxprom27 = sext i32 %98 to i64, !dbg !1534
  %99 = ptrtoint i32* %k14 to i64
  call void @__DiscoPoPOpenMPRead(i64 %99, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @85, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %100 = load i32, i32* %k14, align 4, !dbg !1534
  %idxprom28 = sext i32 %100 to i64, !dbg !1534
  %101 = ptrtoint %struct.dcomplex** %u0.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %101, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @86, i32 0, i32 0), i32 101, i32 -1, i32 8)
  %102 = load %struct.dcomplex*, %struct.dcomplex** %u0.addr, align 8, !dbg !1534
  %103 = mul nuw i64 %23, %25, !dbg !1534
  %104 = mul nsw i64 %idxprom28, %103, !dbg !1534
  %arrayidx29 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %102, i64 %104, !dbg !1534
  %105 = mul nsw i64 %idxprom27, %25, !dbg !1534
  %arrayidx30 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx29, i64 %105, !dbg !1534
  %arrayidx31 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx30, i64 %idxprom26, !dbg !1534
  %real32 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx31, i32 0, i32 0, !dbg !1534
  %106 = ptrtoint double* %real32 to i64
  call void @__DiscoPoPOpenMPRead(i64 %106, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @87, i32 0, i32 0), i32 101, i32 -1, i32 8)
  %107 = load double, double* %real32, align 8, !dbg !1534
  %108 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %108, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @88, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %109 = load i32, i32* %i, align 4, !dbg !1534
  %idxprom33 = sext i32 %109 to i64, !dbg !1534
  %110 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %110, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @89, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %111 = load i32, i32* %j, align 4, !dbg !1534
  %idxprom34 = sext i32 %111 to i64, !dbg !1534
  %112 = ptrtoint i32* %k14 to i64
  call void @__DiscoPoPOpenMPRead(i64 %112, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @90, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %113 = load i32, i32* %k14, align 4, !dbg !1534
  %idxprom35 = sext i32 %113 to i64, !dbg !1534
  %114 = ptrtoint double** %twiddle.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %114, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @91, i32 0, i32 0), i32 101, i32 -1, i32 8)
  %115 = load double*, double** %twiddle.addr, align 8, !dbg !1534
  %116 = mul nuw i64 %27, %29, !dbg !1534
  %117 = mul nsw i64 %idxprom35, %116, !dbg !1534
  %arrayidx36 = getelementptr inbounds double, double* %115, i64 %117, !dbg !1534
  %118 = mul nsw i64 %idxprom34, %29, !dbg !1534
  %arrayidx37 = getelementptr inbounds double, double* %arrayidx36, i64 %118, !dbg !1534
  %arrayidx38 = getelementptr inbounds double, double* %arrayidx37, i64 %idxprom33, !dbg !1534
  %119 = ptrtoint double* %arrayidx38 to i64
  call void @__DiscoPoPOpenMPRead(i64 %119, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @92, i32 0, i32 0), i32 101, i32 -1, i32 8)
  %120 = load double, double* %arrayidx38, align 8, !dbg !1534
  %mul39 = fmul double %107, %120, !dbg !1534
  %121 = ptrtoint double* %real to i64
  call void @__DiscoPoPOpenMPWrite(i64 %121)
  store double %mul39, double* %real, align 8, !dbg !1534
  %imag = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral, i32 0, i32 1, !dbg !1534
  %122 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %122, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @93, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %123 = load i32, i32* %i, align 4, !dbg !1534
  %idxprom40 = sext i32 %123 to i64, !dbg !1534
  %124 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %124, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @94, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %125 = load i32, i32* %j, align 4, !dbg !1534
  %idxprom41 = sext i32 %125 to i64, !dbg !1534
  %126 = ptrtoint i32* %k14 to i64
  call void @__DiscoPoPOpenMPRead(i64 %126, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @95, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %127 = load i32, i32* %k14, align 4, !dbg !1534
  %idxprom42 = sext i32 %127 to i64, !dbg !1534
  %128 = ptrtoint %struct.dcomplex** %u0.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @96, i32 0, i32 0), i32 101, i32 -1, i32 8)
  %129 = load %struct.dcomplex*, %struct.dcomplex** %u0.addr, align 8, !dbg !1534
  %130 = mul nuw i64 %23, %25, !dbg !1534
  %131 = mul nsw i64 %idxprom42, %130, !dbg !1534
  %arrayidx43 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %129, i64 %131, !dbg !1534
  %132 = mul nsw i64 %idxprom41, %25, !dbg !1534
  %arrayidx44 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx43, i64 %132, !dbg !1534
  %arrayidx45 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx44, i64 %idxprom40, !dbg !1534
  %imag46 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx45, i32 0, i32 1, !dbg !1534
  %133 = ptrtoint double* %imag46 to i64
  call void @__DiscoPoPOpenMPRead(i64 %133, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @97, i32 0, i32 0), i32 101, i32 -1, i32 8)
  %134 = load double, double* %imag46, align 8, !dbg !1534
  %135 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %135, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @98, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %136 = load i32, i32* %i, align 4, !dbg !1534
  %idxprom47 = sext i32 %136 to i64, !dbg !1534
  %137 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %137, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @99, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %138 = load i32, i32* %j, align 4, !dbg !1534
  %idxprom48 = sext i32 %138 to i64, !dbg !1534
  %139 = ptrtoint i32* %k14 to i64
  call void @__DiscoPoPOpenMPRead(i64 %139, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @100, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %140 = load i32, i32* %k14, align 4, !dbg !1534
  %idxprom49 = sext i32 %140 to i64, !dbg !1534
  %141 = ptrtoint double** %twiddle.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %141, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @101, i32 0, i32 0), i32 101, i32 -1, i32 8)
  %142 = load double*, double** %twiddle.addr, align 8, !dbg !1534
  %143 = mul nuw i64 %27, %29, !dbg !1534
  %144 = mul nsw i64 %idxprom49, %143, !dbg !1534
  %arrayidx50 = getelementptr inbounds double, double* %142, i64 %144, !dbg !1534
  %145 = mul nsw i64 %idxprom48, %29, !dbg !1534
  %arrayidx51 = getelementptr inbounds double, double* %arrayidx50, i64 %145, !dbg !1534
  %arrayidx52 = getelementptr inbounds double, double* %arrayidx51, i64 %idxprom47, !dbg !1534
  %146 = ptrtoint double* %arrayidx52 to i64
  call void @__DiscoPoPOpenMPRead(i64 %146, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @102, i32 0, i32 0), i32 101, i32 -1, i32 8)
  %147 = load double, double* %arrayidx52, align 8, !dbg !1534
  %mul53 = fmul double %134, %147, !dbg !1534
  %148 = ptrtoint double* %imag to i64
  call void @__DiscoPoPOpenMPWrite(i64 %148)
  store double %mul53, double* %imag, align 8, !dbg !1534
  %149 = bitcast %struct.dcomplex* %arrayidx25 to i8*, !dbg !1534
  %150 = bitcast %struct.dcomplex* %.compoundliteral to i8*, !dbg !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %149, i8* %150, i64 16, i32 8, i1 false), !dbg !1534
  %151 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %151, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @103, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %152 = load i32, i32* %i, align 4, !dbg !1535
  %idxprom54 = sext i32 %152 to i64, !dbg !1536
  %153 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %153, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @104, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %154 = load i32, i32* %j, align 4, !dbg !1537
  %idxprom55 = sext i32 %154 to i64, !dbg !1536
  %155 = ptrtoint i32* %k14 to i64
  call void @__DiscoPoPOpenMPRead(i64 %155, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @105, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %156 = load i32, i32* %k14, align 4, !dbg !1538
  %idxprom56 = sext i32 %156 to i64, !dbg !1536
  %157 = ptrtoint %struct.dcomplex** %u1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %157, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @106, i32 0, i32 0), i32 101, i32 -1, i32 8)
  %158 = load %struct.dcomplex*, %struct.dcomplex** %u1.addr, align 8, !dbg !1536
  %159 = mul nuw i64 %31, %33, !dbg !1536
  %160 = mul nsw i64 %idxprom56, %159, !dbg !1536
  %arrayidx57 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %158, i64 %160, !dbg !1536
  %161 = mul nsw i64 %idxprom55, %33, !dbg !1536
  %arrayidx58 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx57, i64 %161, !dbg !1536
  %arrayidx59 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx58, i64 %idxprom54, !dbg !1536
  %162 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %162, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @107, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %163 = load i32, i32* %i, align 4, !dbg !1539
  %idxprom60 = sext i32 %163 to i64, !dbg !1540
  %164 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %164, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @108, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %165 = load i32, i32* %j, align 4, !dbg !1541
  %idxprom61 = sext i32 %165 to i64, !dbg !1540
  %166 = ptrtoint i32* %k14 to i64
  call void @__DiscoPoPOpenMPRead(i64 %166, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @109, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %167 = load i32, i32* %k14, align 4, !dbg !1542
  %idxprom62 = sext i32 %167 to i64, !dbg !1540
  %168 = ptrtoint %struct.dcomplex** %u0.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %168, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @110, i32 0, i32 0), i32 101, i32 -1, i32 8)
  %169 = load %struct.dcomplex*, %struct.dcomplex** %u0.addr, align 8, !dbg !1540
  %170 = mul nuw i64 %23, %25, !dbg !1540
  %171 = mul nsw i64 %idxprom62, %170, !dbg !1540
  %arrayidx63 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %169, i64 %171, !dbg !1540
  %172 = mul nsw i64 %idxprom61, %25, !dbg !1540
  %arrayidx64 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx63, i64 %172, !dbg !1540
  %arrayidx65 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx64, i64 %idxprom60, !dbg !1540
  %173 = bitcast %struct.dcomplex* %arrayidx59 to i8*, !dbg !1540
  %174 = bitcast %struct.dcomplex* %arrayidx65 to i8*, !dbg !1540
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %173, i8* %174, i64 16, i32 8, i1 false), !dbg !1540
  br label %for.inc, !dbg !1543

for.inc:                                          ; preds = %for.body21
  %175 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %175, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @111, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %176 = load i32, i32* %i, align 4, !dbg !1544
  %inc = add nsw i32 %176, 1, !dbg !1544
  %177 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %177)
  store i32 %inc, i32* %i, align 4, !dbg !1544
  br label %for.cond19, !dbg !1546, !llvm.loop !1547

for.end:                                          ; preds = %for.cond19
  br label %for.inc66, !dbg !1549

for.inc66:                                        ; preds = %for.end
  %178 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %178, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @112, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %179 = load i32, i32* %j, align 4, !dbg !1550
  %inc67 = add nsw i32 %179, 1, !dbg !1550
  %180 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPWrite(i64 %180)
  store i32 %inc67, i32* %j, align 4, !dbg !1550
  br label %for.cond, !dbg !1552, !llvm.loop !1553

for.end68:                                        ; preds = %for.cond
  br label %omp.body.continue, !dbg !1555

omp.body.continue:                                ; preds = %for.end68
  br label %omp.inner.for.inc, !dbg !1556

omp.inner.for.inc:                                ; preds = %omp.body.continue
  %181 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPRead(i64 %181, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @113, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %182 = load i32, i32* %.omp.iv, align 4, !dbg !1557
  %add69 = add nsw i32 %182, 1, !dbg !1559
  %183 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPWrite(i64 %183)
  store i32 %add69, i32* %.omp.iv, align 4, !dbg !1559
  br label %omp.inner.for.cond, !dbg !1560, !llvm.loop !1561

omp.inner.for.end:                                ; preds = %omp.inner.for.cond
  br label %omp.loop.exit, !dbg !1562

omp.loop.exit:                                    ; preds = %omp.inner.for.end
  %184 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !1563
  %185 = ptrtoint i8** %184 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %185)
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @6, i32 0, i32 0), i8** %184, align 8, !dbg !1563
  %186 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %186, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @114, i32 0, i32 0), i32 101, i32 -1, i32 8)
  %187 = load i32*, i32** %.global_tid..addr, align 8, !dbg !1563
  %188 = ptrtoint i32* %187 to i64
  call void @__DiscoPoPOpenMPRead(i64 %188, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @115, i32 0, i32 0), i32 101, i32 -1, i32 4)
  %189 = load i32, i32* %187, align 4, !dbg !1563
  call void @__kmpc_for_static_fini(%ident_t* %.kmpc_loc.addr, i32 %189), !dbg !1563
  br label %omp.precond.end, !dbg !1563

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void, !dbg !1564
}

; Function Attrs: nounwind uwtable
define internal void @cffts1(i32 %is, i32 %d1, i32 %d2, i32 %d3, i8* %ox, i8* %oxout) #0 !dbg !1565 {
entry:
  %is.addr = alloca i32, align 4
  %d1.addr = alloca i32, align 4
  %d2.addr = alloca i32, align 4
  %d3.addr = alloca i32, align 4
  %ox.addr = alloca i8*, align 8
  %oxout.addr = alloca i8*, align 8
  %x = alloca %struct.dcomplex*, align 8
  %xout = alloca %struct.dcomplex*, align 8
  %logd1 = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %jj = alloca i32, align 4
  %.kmpc_loc.addr = alloca %ident_t, align 8
  %0 = bitcast %ident_t* %.kmpc_loc.addr to i8*
  %1 = bitcast %ident_t* @0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 24, i32 8, i1 false)
  %2 = ptrtoint i32* %is.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store i32 %is, i32* %is.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is.addr, metadata !1568, metadata !98), !dbg !1569
  %3 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store i32 %d1, i32* %d1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d1.addr, metadata !1570, metadata !98), !dbg !1571
  %4 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store i32 %d2, i32* %d2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d2.addr, metadata !1572, metadata !98), !dbg !1573
  %5 = ptrtoint i32* %d3.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store i32 %d3, i32* %d3.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d3.addr, metadata !1574, metadata !98), !dbg !1575
  %6 = ptrtoint i8** %ox.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %6)
  store i8* %ox, i8** %ox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ox.addr, metadata !1576, metadata !98), !dbg !1577
  %7 = ptrtoint i8** %oxout.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %7)
  store i8* %oxout, i8** %oxout.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %oxout.addr, metadata !1578, metadata !98), !dbg !1579
  %8 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.435, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %9 = load i32, i32* %d2.addr, align 4, !dbg !1580
  %10 = zext i32 %9 to i64, !dbg !1581
  %11 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.436, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %12 = load i32, i32* %d1.addr, align 4, !dbg !1582
  %add = add nsw i32 %12, 1, !dbg !1583
  %13 = zext i32 %add to i64, !dbg !1581
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %x, metadata !1584, metadata !98), !dbg !1585
  %14 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.437, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %15 = load i32, i32* %d2.addr, align 4, !dbg !1586
  %16 = zext i32 %15 to i64, !dbg !1587
  %17 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.438, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %18 = load i32, i32* %d1.addr, align 4, !dbg !1588
  %add1 = add nsw i32 %18, 1, !dbg !1589
  %19 = zext i32 %add1 to i64, !dbg !1587
  %20 = ptrtoint i8** %ox.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %20, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.439, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %21 = load i8*, i8** %ox.addr, align 8, !dbg !1590
  %22 = bitcast i8* %21 to %struct.dcomplex*, !dbg !1587
  %23 = ptrtoint %struct.dcomplex** %x to i64
  call void @__DiscoPoPOpenMPWrite(i64 %23)
  store %struct.dcomplex* %22, %struct.dcomplex** %x, align 8, !dbg !1585
  %24 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.440, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %25 = load i32, i32* %d2.addr, align 4, !dbg !1591
  %26 = zext i32 %25 to i64, !dbg !1592
  %27 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.441, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %28 = load i32, i32* %d1.addr, align 4, !dbg !1593
  %add2 = add nsw i32 %28, 1, !dbg !1594
  %29 = zext i32 %add2 to i64, !dbg !1592
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %xout, metadata !1595, metadata !98), !dbg !1596
  %30 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %30, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.442, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %31 = load i32, i32* %d2.addr, align 4, !dbg !1597
  %32 = zext i32 %31 to i64, !dbg !1598
  %33 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %33, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.443, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %34 = load i32, i32* %d1.addr, align 4, !dbg !1599
  %add3 = add nsw i32 %34, 1, !dbg !1600
  %35 = zext i32 %add3 to i64, !dbg !1598
  %36 = ptrtoint i8** %oxout.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %36, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.444, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %37 = load i8*, i8** %oxout.addr, align 8, !dbg !1601
  %38 = bitcast i8* %37 to %struct.dcomplex*, !dbg !1598
  %39 = ptrtoint %struct.dcomplex** %xout to i64
  call void @__DiscoPoPOpenMPWrite(i64 %39)
  store %struct.dcomplex* %38, %struct.dcomplex** %xout, align 8, !dbg !1596
  call void @llvm.dbg.declare(metadata i32* %logd1, metadata !1602, metadata !98), !dbg !1603
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1604, metadata !98), !dbg !1605
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1606, metadata !98), !dbg !1607
  call void @llvm.dbg.declare(metadata i32* %k, metadata !1608, metadata !98), !dbg !1609
  call void @llvm.dbg.declare(metadata i32* %jj, metadata !1610, metadata !98), !dbg !1611
  %40 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %40, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.445, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %41 = load i32, i32* %d1.addr, align 4, !dbg !1612
  %call = call i32 @ilog2(i32 %41), !dbg !1613
  %42 = ptrtoint i32* %logd1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %42)
  store i32 %call, i32* %logd1, align 4, !dbg !1614
  %43 = ptrtoint i32* @timers_enabled to i64
  call void @__DiscoPoPOpenMPRead(i64 %43, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.446, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %44 = load i32, i32* @timers_enabled, align 4, !dbg !1615
  %tobool = icmp ne i32 %44, 0, !dbg !1615
  br i1 %tobool, label %if.then, label %if.end, !dbg !1617

if.then:                                          ; preds = %entry
  call void @timer_start(i32 6), !dbg !1618
  br label %if.end, !dbg !1618

if.end:                                           ; preds = %if.then, %entry
  %45 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !1620
  %46 = ptrtoint i8** %45 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %46)
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @11, i32 0, i32 0), i8** %45, align 8, !dbg !1620
  call void (%ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%ident_t* %.kmpc_loc.addr, i32 11, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i32*, i32*, i32*, i64, i64, %struct.dcomplex*, i32*, i32*, i64, i64, %struct.dcomplex*)* @.omp_outlined..27 to void (i32*, i32*, ...)*), i32* %d3.addr, i32* %d2.addr, i32* %d1.addr, i64 %10, i64 %13, %struct.dcomplex** %x, i32* %is.addr, i32* %logd1, i64 %26, i64 %29, %struct.dcomplex** %xout), !dbg !1620
  %47 = ptrtoint i32* @timers_enabled to i64
  call void @__DiscoPoPOpenMPRead(i64 %47, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.447, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %48 = load i32, i32* @timers_enabled, align 4, !dbg !1621
  %tobool4 = icmp ne i32 %48, 0, !dbg !1621
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !1623

if.then5:                                         ; preds = %if.end
  call void @timer_stop(i32 6), !dbg !1624
  br label %if.end6, !dbg !1624

if.end6:                                          ; preds = %if.then5, %if.end
  ret void, !dbg !1626
}

; Function Attrs: nounwind uwtable
define internal void @cffts2(i32 %is, i32 %d1, i32 %d2, i32 %d3, i8* %ox, i8* %oxout) #0 !dbg !1627 {
entry:
  %is.addr = alloca i32, align 4
  %d1.addr = alloca i32, align 4
  %d2.addr = alloca i32, align 4
  %d3.addr = alloca i32, align 4
  %ox.addr = alloca i8*, align 8
  %oxout.addr = alloca i8*, align 8
  %x = alloca %struct.dcomplex*, align 8
  %xout = alloca %struct.dcomplex*, align 8
  %logd2 = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %ii = alloca i32, align 4
  %.kmpc_loc.addr = alloca %ident_t, align 8
  %0 = bitcast %ident_t* %.kmpc_loc.addr to i8*
  %1 = bitcast %ident_t* @0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 24, i32 8, i1 false)
  %2 = ptrtoint i32* %is.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store i32 %is, i32* %is.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is.addr, metadata !1628, metadata !98), !dbg !1629
  %3 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store i32 %d1, i32* %d1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d1.addr, metadata !1630, metadata !98), !dbg !1631
  %4 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store i32 %d2, i32* %d2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d2.addr, metadata !1632, metadata !98), !dbg !1633
  %5 = ptrtoint i32* %d3.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store i32 %d3, i32* %d3.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d3.addr, metadata !1634, metadata !98), !dbg !1635
  %6 = ptrtoint i8** %ox.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %6)
  store i8* %ox, i8** %ox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ox.addr, metadata !1636, metadata !98), !dbg !1637
  %7 = ptrtoint i8** %oxout.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %7)
  store i8* %oxout, i8** %oxout.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %oxout.addr, metadata !1638, metadata !98), !dbg !1639
  %8 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.448, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %9 = load i32, i32* %d2.addr, align 4, !dbg !1640
  %10 = zext i32 %9 to i64, !dbg !1641
  %11 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.449, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %12 = load i32, i32* %d1.addr, align 4, !dbg !1642
  %add = add nsw i32 %12, 1, !dbg !1643
  %13 = zext i32 %add to i64, !dbg !1641
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %x, metadata !1644, metadata !98), !dbg !1645
  %14 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.450, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %15 = load i32, i32* %d2.addr, align 4, !dbg !1646
  %16 = zext i32 %15 to i64, !dbg !1647
  %17 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.451, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %18 = load i32, i32* %d1.addr, align 4, !dbg !1648
  %add1 = add nsw i32 %18, 1, !dbg !1649
  %19 = zext i32 %add1 to i64, !dbg !1647
  %20 = ptrtoint i8** %ox.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %20, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.452, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %21 = load i8*, i8** %ox.addr, align 8, !dbg !1650
  %22 = bitcast i8* %21 to %struct.dcomplex*, !dbg !1647
  %23 = ptrtoint %struct.dcomplex** %x to i64
  call void @__DiscoPoPOpenMPWrite(i64 %23)
  store %struct.dcomplex* %22, %struct.dcomplex** %x, align 8, !dbg !1645
  %24 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.453, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %25 = load i32, i32* %d2.addr, align 4, !dbg !1651
  %26 = zext i32 %25 to i64, !dbg !1652
  %27 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.454, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %28 = load i32, i32* %d1.addr, align 4, !dbg !1653
  %add2 = add nsw i32 %28, 1, !dbg !1654
  %29 = zext i32 %add2 to i64, !dbg !1652
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %xout, metadata !1655, metadata !98), !dbg !1656
  %30 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %30, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.455, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %31 = load i32, i32* %d2.addr, align 4, !dbg !1657
  %32 = zext i32 %31 to i64, !dbg !1658
  %33 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %33, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.456, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %34 = load i32, i32* %d1.addr, align 4, !dbg !1659
  %add3 = add nsw i32 %34, 1, !dbg !1660
  %35 = zext i32 %add3 to i64, !dbg !1658
  %36 = ptrtoint i8** %oxout.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %36, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.457, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %37 = load i8*, i8** %oxout.addr, align 8, !dbg !1661
  %38 = bitcast i8* %37 to %struct.dcomplex*, !dbg !1658
  %39 = ptrtoint %struct.dcomplex** %xout to i64
  call void @__DiscoPoPOpenMPWrite(i64 %39)
  store %struct.dcomplex* %38, %struct.dcomplex** %xout, align 8, !dbg !1656
  call void @llvm.dbg.declare(metadata i32* %logd2, metadata !1662, metadata !98), !dbg !1663
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1664, metadata !98), !dbg !1665
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1666, metadata !98), !dbg !1667
  call void @llvm.dbg.declare(metadata i32* %k, metadata !1668, metadata !98), !dbg !1669
  call void @llvm.dbg.declare(metadata i32* %ii, metadata !1670, metadata !98), !dbg !1671
  %40 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %40, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.458, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %41 = load i32, i32* %d2.addr, align 4, !dbg !1672
  %call = call i32 @ilog2(i32 %41), !dbg !1673
  %42 = ptrtoint i32* %logd2 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %42)
  store i32 %call, i32* %logd2, align 4, !dbg !1674
  %43 = ptrtoint i32* @timers_enabled to i64
  call void @__DiscoPoPOpenMPRead(i64 %43, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.459, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %44 = load i32, i32* @timers_enabled, align 4, !dbg !1675
  %tobool = icmp ne i32 %44, 0, !dbg !1675
  br i1 %tobool, label %if.then, label %if.end, !dbg !1677

if.then:                                          ; preds = %entry
  call void @timer_start(i32 7), !dbg !1678
  br label %if.end, !dbg !1678

if.end:                                           ; preds = %if.then, %entry
  %45 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !1680
  %46 = ptrtoint i8** %45 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %46)
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @9, i32 0, i32 0), i8** %45, align 8, !dbg !1680
  call void (%ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%ident_t* %.kmpc_loc.addr, i32 11, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i32*, i32*, i32*, i64, i64, %struct.dcomplex*, i32*, i32*, i64, i64, %struct.dcomplex*)* @.omp_outlined..29 to void (i32*, i32*, ...)*), i32* %d3.addr, i32* %d1.addr, i32* %d2.addr, i64 %10, i64 %13, %struct.dcomplex** %x, i32* %is.addr, i32* %logd2, i64 %26, i64 %29, %struct.dcomplex** %xout), !dbg !1680
  %47 = ptrtoint i32* @timers_enabled to i64
  call void @__DiscoPoPOpenMPRead(i64 %47, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.460, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %48 = load i32, i32* @timers_enabled, align 4, !dbg !1681
  %tobool4 = icmp ne i32 %48, 0, !dbg !1681
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !1683

if.then5:                                         ; preds = %if.end
  call void @timer_stop(i32 7), !dbg !1684
  br label %if.end6, !dbg !1684

if.end6:                                          ; preds = %if.then5, %if.end
  ret void, !dbg !1686
}

; Function Attrs: nounwind uwtable
define internal void @cffts3(i32 %is, i32 %d1, i32 %d2, i32 %d3, i8* %ox, i8* %oxout) #0 !dbg !1687 {
entry:
  %is.addr = alloca i32, align 4
  %d1.addr = alloca i32, align 4
  %d2.addr = alloca i32, align 4
  %d3.addr = alloca i32, align 4
  %ox.addr = alloca i8*, align 8
  %oxout.addr = alloca i8*, align 8
  %x = alloca %struct.dcomplex*, align 8
  %xout = alloca %struct.dcomplex*, align 8
  %logd3 = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %ii = alloca i32, align 4
  %.kmpc_loc.addr = alloca %ident_t, align 8
  %0 = bitcast %ident_t* %.kmpc_loc.addr to i8*
  %1 = bitcast %ident_t* @0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 24, i32 8, i1 false)
  %2 = ptrtoint i32* %is.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store i32 %is, i32* %is.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is.addr, metadata !1688, metadata !98), !dbg !1689
  %3 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store i32 %d1, i32* %d1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d1.addr, metadata !1690, metadata !98), !dbg !1691
  %4 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store i32 %d2, i32* %d2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d2.addr, metadata !1692, metadata !98), !dbg !1693
  %5 = ptrtoint i32* %d3.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store i32 %d3, i32* %d3.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d3.addr, metadata !1694, metadata !98), !dbg !1695
  %6 = ptrtoint i8** %ox.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %6)
  store i8* %ox, i8** %ox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ox.addr, metadata !1696, metadata !98), !dbg !1697
  %7 = ptrtoint i8** %oxout.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %7)
  store i8* %oxout, i8** %oxout.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %oxout.addr, metadata !1698, metadata !98), !dbg !1699
  %8 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.461, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %9 = load i32, i32* %d2.addr, align 4, !dbg !1700
  %10 = zext i32 %9 to i64, !dbg !1701
  %11 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.462, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %12 = load i32, i32* %d1.addr, align 4, !dbg !1702
  %add = add nsw i32 %12, 1, !dbg !1703
  %13 = zext i32 %add to i64, !dbg !1701
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %x, metadata !1704, metadata !98), !dbg !1705
  %14 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.463, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %15 = load i32, i32* %d2.addr, align 4, !dbg !1706
  %16 = zext i32 %15 to i64, !dbg !1707
  %17 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.464, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %18 = load i32, i32* %d1.addr, align 4, !dbg !1708
  %add1 = add nsw i32 %18, 1, !dbg !1709
  %19 = zext i32 %add1 to i64, !dbg !1707
  %20 = ptrtoint i8** %ox.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %20, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.465, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %21 = load i8*, i8** %ox.addr, align 8, !dbg !1710
  %22 = bitcast i8* %21 to %struct.dcomplex*, !dbg !1707
  %23 = ptrtoint %struct.dcomplex** %x to i64
  call void @__DiscoPoPOpenMPWrite(i64 %23)
  store %struct.dcomplex* %22, %struct.dcomplex** %x, align 8, !dbg !1705
  %24 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.466, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %25 = load i32, i32* %d2.addr, align 4, !dbg !1711
  %26 = zext i32 %25 to i64, !dbg !1712
  %27 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.467, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %28 = load i32, i32* %d1.addr, align 4, !dbg !1713
  %add2 = add nsw i32 %28, 1, !dbg !1714
  %29 = zext i32 %add2 to i64, !dbg !1712
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %xout, metadata !1715, metadata !98), !dbg !1716
  %30 = ptrtoint i32* %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %30, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.468, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %31 = load i32, i32* %d2.addr, align 4, !dbg !1717
  %32 = zext i32 %31 to i64, !dbg !1718
  %33 = ptrtoint i32* %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %33, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.469, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %34 = load i32, i32* %d1.addr, align 4, !dbg !1719
  %add3 = add nsw i32 %34, 1, !dbg !1720
  %35 = zext i32 %add3 to i64, !dbg !1718
  %36 = ptrtoint i8** %oxout.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %36, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.470, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %37 = load i8*, i8** %oxout.addr, align 8, !dbg !1721
  %38 = bitcast i8* %37 to %struct.dcomplex*, !dbg !1718
  %39 = ptrtoint %struct.dcomplex** %xout to i64
  call void @__DiscoPoPOpenMPWrite(i64 %39)
  store %struct.dcomplex* %38, %struct.dcomplex** %xout, align 8, !dbg !1716
  call void @llvm.dbg.declare(metadata i32* %logd3, metadata !1722, metadata !98), !dbg !1723
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1724, metadata !98), !dbg !1725
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1726, metadata !98), !dbg !1727
  call void @llvm.dbg.declare(metadata i32* %k, metadata !1728, metadata !98), !dbg !1729
  call void @llvm.dbg.declare(metadata i32* %ii, metadata !1730, metadata !98), !dbg !1731
  %40 = ptrtoint i32* %d3.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %40, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.471, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %41 = load i32, i32* %d3.addr, align 4, !dbg !1732
  %call = call i32 @ilog2(i32 %41), !dbg !1733
  %42 = ptrtoint i32* %logd3 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %42)
  store i32 %call, i32* %logd3, align 4, !dbg !1734
  %43 = ptrtoint i32* @timers_enabled to i64
  call void @__DiscoPoPOpenMPRead(i64 %43, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.472, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %44 = load i32, i32* @timers_enabled, align 4, !dbg !1735
  %tobool = icmp ne i32 %44, 0, !dbg !1735
  br i1 %tobool, label %if.then, label %if.end, !dbg !1737

if.then:                                          ; preds = %entry
  call void @timer_start(i32 8), !dbg !1738
  br label %if.end, !dbg !1738

if.end:                                           ; preds = %if.then, %entry
  %45 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !1740
  %46 = ptrtoint i8** %45 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %46)
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @7, i32 0, i32 0), i8** %45, align 8, !dbg !1740
  call void (%ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%ident_t* %.kmpc_loc.addr, i32 11, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i32*, i32*, i32*, i64, i64, %struct.dcomplex*, i32*, i32*, i64, i64, %struct.dcomplex*)* @.omp_outlined..30 to void (i32*, i32*, ...)*), i32* %d2.addr, i32* %d1.addr, i32* %d3.addr, i64 %10, i64 %13, %struct.dcomplex** %x, i32* %is.addr, i32* %logd3, i64 %26, i64 %29, %struct.dcomplex** %xout), !dbg !1740
  %47 = ptrtoint i32* @timers_enabled to i64
  call void @__DiscoPoPOpenMPRead(i64 %47, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.473, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %48 = load i32, i32* @timers_enabled, align 4, !dbg !1741
  %tobool4 = icmp ne i32 %48, 0, !dbg !1741
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !1743

if.then5:                                         ; preds = %if.end
  call void @timer_stop(i32 8), !dbg !1744
  br label %if.end6, !dbg !1744

if.end6:                                          ; preds = %if.then5, %if.end
  ret void, !dbg !1746
}

; Function Attrs: nounwind uwtable
define internal i32 @ilog2(i32 %n) #0 !dbg !1747 {
entry:
  %retval = alloca i32, align 4
  %n.addr = alloca i32, align 4
  %nn = alloca i32, align 4
  %lg = alloca i32, align 4
  %0 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0)
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !1750, metadata !98), !dbg !1751
  call void @llvm.dbg.declare(metadata i32* %nn, metadata !1752, metadata !98), !dbg !1753
  call void @llvm.dbg.declare(metadata i32* %lg, metadata !1754, metadata !98), !dbg !1755
  %1 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.474, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %2 = load i32, i32* %n.addr, align 4, !dbg !1756
  %cmp = icmp eq i32 %2, 1, !dbg !1758
  br i1 %cmp, label %if.then, label %if.end, !dbg !1759

if.then:                                          ; preds = %entry
  %3 = ptrtoint i32* %retval to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store i32 0, i32* %retval, align 4, !dbg !1760
  br label %return, !dbg !1760

if.end:                                           ; preds = %entry
  %4 = ptrtoint i32* %lg to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store i32 1, i32* %lg, align 4, !dbg !1762
  %5 = ptrtoint i32* %nn to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store i32 2, i32* %nn, align 4, !dbg !1763
  br label %while.cond, !dbg !1764

while.cond:                                       ; preds = %while.body, %if.end
  %6 = ptrtoint i32* %nn to i64
  call void @__DiscoPoPOpenMPRead(i64 %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.475, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %7 = load i32, i32* %nn, align 4, !dbg !1765
  %8 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.476, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %9 = load i32, i32* %n.addr, align 4, !dbg !1767
  %cmp1 = icmp slt i32 %7, %9, !dbg !1768
  br i1 %cmp1, label %while.body, label %while.end, !dbg !1769

while.body:                                       ; preds = %while.cond
  %10 = ptrtoint i32* %nn to i64
  call void @__DiscoPoPOpenMPRead(i64 %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.477, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %11 = load i32, i32* %nn, align 4, !dbg !1770
  %mul = mul nsw i32 %11, 2, !dbg !1772
  %12 = ptrtoint i32* %nn to i64
  call void @__DiscoPoPOpenMPWrite(i64 %12)
  store i32 %mul, i32* %nn, align 4, !dbg !1773
  %13 = ptrtoint i32* %lg to i64
  call void @__DiscoPoPOpenMPRead(i64 %13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.478, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %14 = load i32, i32* %lg, align 4, !dbg !1774
  %add = add nsw i32 %14, 1, !dbg !1775
  %15 = ptrtoint i32* %lg to i64
  call void @__DiscoPoPOpenMPWrite(i64 %15)
  store i32 %add, i32* %lg, align 4, !dbg !1776
  br label %while.cond, !dbg !1777, !llvm.loop !1779

while.end:                                        ; preds = %while.cond
  %16 = ptrtoint i32* %lg to i64
  call void @__DiscoPoPOpenMPRead(i64 %16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.479, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %17 = load i32, i32* %lg, align 4, !dbg !1780
  %18 = ptrtoint i32* %retval to i64
  call void @__DiscoPoPOpenMPWrite(i64 %18)
  store i32 %17, i32* %retval, align 4, !dbg !1781
  br label %return, !dbg !1781

return:                                           ; preds = %while.end, %if.then
  %19 = ptrtoint i32* %retval to i64
  call void @__DiscoPoPOpenMPRead(i64 %19, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.480, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %20 = load i32, i32* %retval, align 4, !dbg !1782
  ret i32 %20, !dbg !1782
}

; Function Attrs: nounwind uwtable
define internal void @.omp_outlined..30(i32* noalias %.global_tid., i32* noalias %.bound_tid., i32* dereferenceable(4) %d2, i32* dereferenceable(4) %d1, i32* dereferenceable(4) %d3, i64 %vla, i64 %vla1, %struct.dcomplex* %x, i32* dereferenceable(4) %is, i32* dereferenceable(4) %logd3, i64 %vla3, i64 %vla5, %struct.dcomplex* %xout) #0 !dbg !1783 !omp.region.ID !1786 {
entry:
  %.global_tid..addr = alloca i32*, align 8
  %.bound_tid..addr = alloca i32*, align 8
  %d2.addr = alloca i32*, align 8
  %d1.addr = alloca i32*, align 8
  %d3.addr = alloca i32*, align 8
  %vla.addr = alloca i64, align 8
  %vla.addr2 = alloca i64, align 8
  %x.addr = alloca %struct.dcomplex*, align 8
  %is.addr = alloca i32*, align 8
  %logd3.addr = alloca i32*, align 8
  %vla.addr4 = alloca i64, align 8
  %vla.addr6 = alloca i64, align 8
  %xout.addr = alloca %struct.dcomplex*, align 8
  %.omp.iv = alloca i32, align 4
  %.capture_expr. = alloca i32, align 4
  %.capture_expr.7 = alloca i32, align 4
  %j = alloca i32, align 4
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %i = alloca i32, align 4
  %j10 = alloca i32, align 4
  %k = alloca i32, align 4
  %ii = alloca i32, align 4
  %.kmpc_loc.addr = alloca %ident_t, align 8
  %0 = bitcast %ident_t* %.kmpc_loc.addr to i8*
  %1 = bitcast %ident_t* @0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 24, i32 8, i1 false)
  %2 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store i32* %.global_tid., i32** %.global_tid..addr, align 8
  call void @llvm.dbg.declare(metadata i32** %.global_tid..addr, metadata !1787, metadata !98), !dbg !1788
  %3 = ptrtoint i32** %.bound_tid..addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store i32* %.bound_tid., i32** %.bound_tid..addr, align 8
  call void @llvm.dbg.declare(metadata i32** %.bound_tid..addr, metadata !1789, metadata !98), !dbg !1788
  %4 = ptrtoint i32** %d2.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store i32* %d2, i32** %d2.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %d2.addr, metadata !1790, metadata !98), !dbg !1788
  %5 = ptrtoint i32** %d1.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store i32* %d1, i32** %d1.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %d1.addr, metadata !1791, metadata !98), !dbg !1788
  %6 = ptrtoint i32** %d3.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %6)
  store i32* %d3, i32** %d3.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %d3.addr, metadata !1792, metadata !98), !dbg !1788
  %7 = ptrtoint i64* %vla.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %7)
  store i64 %vla, i64* %vla.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr, metadata !1793, metadata !98), !dbg !1788
  %8 = ptrtoint i64* %vla.addr2 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %8)
  store i64 %vla1, i64* %vla.addr2, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr2, metadata !1794, metadata !98), !dbg !1788
  %9 = ptrtoint %struct.dcomplex** %x.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %9)
  store %struct.dcomplex* %x, %struct.dcomplex** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %x.addr, metadata !1795, metadata !98), !dbg !1788
  %10 = ptrtoint i32** %is.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %10)
  store i32* %is, i32** %is.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %is.addr, metadata !1796, metadata !98), !dbg !1788
  %11 = ptrtoint i32** %logd3.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %11)
  store i32* %logd3, i32** %logd3.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %logd3.addr, metadata !1797, metadata !98), !dbg !1788
  %12 = ptrtoint i64* %vla.addr4 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %12)
  store i64 %vla3, i64* %vla.addr4, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr4, metadata !1798, metadata !98), !dbg !1788
  %13 = ptrtoint i64* %vla.addr6 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %13)
  store i64 %vla5, i64* %vla.addr6, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr6, metadata !1799, metadata !98), !dbg !1788
  %14 = ptrtoint %struct.dcomplex** %xout.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %14)
  store %struct.dcomplex* %xout, %struct.dcomplex** %xout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %xout.addr, metadata !1800, metadata !98), !dbg !1788
  %15 = ptrtoint i32** %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %15, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.481, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %16 = load i32*, i32** %d2.addr, align 8, !dbg !1801
  %17 = ptrtoint i32** %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @116, i32 0, i32 0), i32 102, i32 -1, i32 8)
  %18 = load i32*, i32** %d1.addr, align 8, !dbg !1801
  %19 = ptrtoint i32** %d3.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @117, i32 0, i32 0), i32 102, i32 -1, i32 8)
  %20 = load i32*, i32** %d3.addr, align 8, !dbg !1801
  %21 = ptrtoint i64* %vla.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @118, i32 0, i32 0), i32 102, i32 -1, i32 8)
  %22 = load i64, i64* %vla.addr, align 8, !dbg !1801
  %23 = ptrtoint i64* %vla.addr2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @119, i32 0, i32 0), i32 102, i32 -1, i32 8)
  %24 = load i64, i64* %vla.addr2, align 8, !dbg !1801
  %25 = ptrtoint i32** %is.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @120, i32 0, i32 0), i32 102, i32 -1, i32 8)
  %26 = load i32*, i32** %is.addr, align 8, !dbg !1801
  %27 = ptrtoint i32** %logd3.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @121, i32 0, i32 0), i32 102, i32 -1, i32 8)
  %28 = load i32*, i32** %logd3.addr, align 8, !dbg !1801
  %29 = ptrtoint i64* %vla.addr4 to i64
  call void @__DiscoPoPOpenMPRead(i64 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @122, i32 0, i32 0), i32 102, i32 -1, i32 8)
  %30 = load i64, i64* %vla.addr4, align 8, !dbg !1801
  %31 = ptrtoint i64* %vla.addr6 to i64
  call void @__DiscoPoPOpenMPRead(i64 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @123, i32 0, i32 0), i32 102, i32 -1, i32 8)
  %32 = load i64, i64* %vla.addr6, align 8, !dbg !1801
  call void @llvm.dbg.declare(metadata i32* %.omp.iv, metadata !1802, metadata !98), !dbg !1788
  call void @llvm.dbg.declare(metadata i32* %.capture_expr., metadata !1803, metadata !98), !dbg !1788
  %33 = ptrtoint i32* %16 to i64
  call void @__DiscoPoPOpenMPRead(i64 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @124, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %34 = load i32, i32* %16, align 4, !dbg !1804
  %35 = ptrtoint i32* %.capture_expr. to i64
  call void @__DiscoPoPOpenMPWrite(i64 %35)
  store i32 %34, i32* %.capture_expr., align 4, !dbg !1788
  call void @llvm.dbg.declare(metadata i32* %.capture_expr.7, metadata !1803, metadata !98), !dbg !1788
  %36 = ptrtoint i32* %.capture_expr. to i64
  call void @__DiscoPoPOpenMPRead(i64 %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @125, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %37 = load i32, i32* %.capture_expr., align 4, !dbg !1804
  %sub = sub nsw i32 %37, 0, !dbg !1801
  %sub8 = sub nsw i32 %sub, 1, !dbg !1801
  %add = add nsw i32 %sub8, 1, !dbg !1801
  %div = sdiv i32 %add, 1, !dbg !1801
  %sub9 = sub nsw i32 %div, 1, !dbg !1788
  %38 = ptrtoint i32* %.capture_expr.7 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %38)
  store i32 %sub9, i32* %.capture_expr.7, align 4, !dbg !1788
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1805, metadata !98), !dbg !1788
  %39 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPWrite(i64 %39)
  store i32 0, i32* %j, align 4, !dbg !1806
  %40 = ptrtoint i32* %.capture_expr. to i64
  call void @__DiscoPoPOpenMPRead(i64 %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @126, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %41 = load i32, i32* %.capture_expr., align 4, !dbg !1804
  %cmp = icmp slt i32 0, %41, !dbg !1801
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end, !dbg !1801

omp.precond.then:                                 ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %.omp.lb, metadata !1807, metadata !98), !dbg !1788
  %42 = ptrtoint i32* %.omp.lb to i64
  call void @__DiscoPoPOpenMPWrite(i64 %42)
  store i32 0, i32* %.omp.lb, align 4, !dbg !1808
  call void @llvm.dbg.declare(metadata i32* %.omp.ub, metadata !1810, metadata !98), !dbg !1788
  %43 = ptrtoint i32* %.capture_expr.7 to i64
  call void @__DiscoPoPOpenMPRead(i64 %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @127, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %44 = load i32, i32* %.capture_expr.7, align 4, !dbg !1811
  %45 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPWrite(i64 %45)
  store i32 %44, i32* %.omp.ub, align 4, !dbg !1808
  call void @llvm.dbg.declare(metadata i32* %.omp.stride, metadata !1812, metadata !98), !dbg !1788
  %46 = ptrtoint i32* %.omp.stride to i64
  call void @__DiscoPoPOpenMPWrite(i64 %46)
  store i32 1, i32* %.omp.stride, align 4, !dbg !1808
  call void @llvm.dbg.declare(metadata i32* %.omp.is_last, metadata !1813, metadata !98), !dbg !1788
  %47 = ptrtoint i32* %.omp.is_last to i64
  call void @__DiscoPoPOpenMPWrite(i64 %47)
  store i32 0, i32* %.omp.is_last, align 4, !dbg !1808
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1814, metadata !98), !dbg !1788
  call void @llvm.dbg.declare(metadata i32* %j10, metadata !1805, metadata !98), !dbg !1788
  call void @llvm.dbg.declare(metadata i32* %k, metadata !1815, metadata !98), !dbg !1788
  call void @llvm.dbg.declare(metadata i32* %ii, metadata !1816, metadata !98), !dbg !1788
  %48 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !1817
  %49 = ptrtoint i8** %48 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %49)
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @7, i32 0, i32 0), i8** %48, align 8, !dbg !1817
  %50 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @128, i32 0, i32 0), i32 102, i32 -1, i32 8)
  %51 = load i32*, i32** %.global_tid..addr, align 8, !dbg !1817
  %52 = ptrtoint i32* %51 to i64
  call void @__DiscoPoPOpenMPRead(i64 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @129, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %53 = load i32, i32* %51, align 4, !dbg !1817
  call void @__kmpc_for_static_init_4(%ident_t* %.kmpc_loc.addr, i32 %53, i32 34, i32* %.omp.is_last, i32* %.omp.lb, i32* %.omp.ub, i32* %.omp.stride, i32 1, i32 1), !dbg !1817
  %54 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @130, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %55 = load i32, i32* %.omp.ub, align 4, !dbg !1808
  %56 = ptrtoint i32* %.capture_expr.7 to i64
  call void @__DiscoPoPOpenMPRead(i64 %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @131, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %57 = load i32, i32* %.capture_expr.7, align 4, !dbg !1811
  %cmp11 = icmp sgt i32 %55, %57, !dbg !1808
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !1808

cond.true:                                        ; preds = %omp.precond.then
  %58 = ptrtoint i32* %.capture_expr.7 to i64
  call void @__DiscoPoPOpenMPRead(i64 %58, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @132, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %59 = load i32, i32* %.capture_expr.7, align 4, !dbg !1818
  br label %cond.end, !dbg !1820

cond.false:                                       ; preds = %omp.precond.then
  %60 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %60, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @133, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %61 = load i32, i32* %.omp.ub, align 4, !dbg !1821
  br label %cond.end, !dbg !1821

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %59, %cond.true ], [ %61, %cond.false ], !dbg !1823
  %62 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPWrite(i64 %62)
  store i32 %cond, i32* %.omp.ub, align 4, !dbg !1823
  %63 = ptrtoint i32* %.omp.lb to i64
  call void @__DiscoPoPOpenMPRead(i64 %63, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @134, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %64 = load i32, i32* %.omp.lb, align 4, !dbg !1823
  %65 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPWrite(i64 %65)
  store i32 %64, i32* %.omp.iv, align 4, !dbg !1823
  br label %omp.inner.for.cond, !dbg !1825

omp.inner.for.cond:                               ; preds = %omp.inner.for.inc, %cond.end
  %66 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPRead(i64 %66, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @135, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %67 = load i32, i32* %.omp.iv, align 4, !dbg !1826
  %68 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %68, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @136, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %69 = load i32, i32* %.omp.ub, align 4, !dbg !1826
  %cmp12 = icmp sle i32 %67, %69, !dbg !1828
  br i1 %cmp12, label %omp.inner.for.body, label %omp.inner.for.end, !dbg !1829

omp.inner.for.body:                               ; preds = %omp.inner.for.cond
  %70 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPRead(i64 %70, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @137, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %71 = load i32, i32* %.omp.iv, align 4, !dbg !1830
  %mul = mul nsw i32 %71, 1, !dbg !1832
  %add13 = add nsw i32 0, %mul, !dbg !1832
  %72 = ptrtoint i32* %j10 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %72)
  store i32 %add13, i32* %j10, align 4, !dbg !1832
  %73 = ptrtoint i32* %ii to i64
  call void @__DiscoPoPOpenMPWrite(i64 %73)
  store i32 0, i32* %ii, align 4, !dbg !1833
  br label %for.cond, !dbg !1836

for.cond:                                         ; preds = %for.inc58, %omp.inner.for.body
  %74 = ptrtoint i32* %ii to i64
  call void @__DiscoPoPOpenMPRead(i64 %74, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @138, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %75 = load i32, i32* %ii, align 4, !dbg !1837
  %76 = ptrtoint i32* %18 to i64
  call void @__DiscoPoPOpenMPRead(i64 %76, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @139, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %77 = load i32, i32* %18, align 4, !dbg !1840
  %78 = ptrtoint i32* @fftblock to i64
  call void @__DiscoPoPOpenMPRead(i64 %78, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @140, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %79 = load i32, i32* @fftblock, align 4, !dbg !1841
  %sub14 = sub nsw i32 %77, %79, !dbg !1842
  %cmp15 = icmp sle i32 %75, %sub14, !dbg !1843
  br i1 %cmp15, label %for.body, label %for.end60, !dbg !1844

for.body:                                         ; preds = %for.cond
  %80 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPWrite(i64 %80)
  store i32 0, i32* %k, align 4, !dbg !1845
  br label %for.cond16, !dbg !1848

for.cond16:                                       ; preds = %for.inc31, %for.body
  %81 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPRead(i64 %81, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @141, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %82 = load i32, i32* %k, align 4, !dbg !1849
  %83 = ptrtoint i32* %20 to i64
  call void @__DiscoPoPOpenMPRead(i64 %83, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @142, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %84 = load i32, i32* %20, align 4, !dbg !1852
  %cmp17 = icmp slt i32 %82, %84, !dbg !1853
  br i1 %cmp17, label %for.body18, label %for.end33, !dbg !1854

for.body18:                                       ; preds = %for.cond16
  %85 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %85)
  store i32 0, i32* %i, align 4, !dbg !1855
  br label %for.cond19, !dbg !1858

for.cond19:                                       ; preds = %for.inc, %for.body18
  %86 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %86, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @143, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %87 = load i32, i32* %i, align 4, !dbg !1859
  %88 = ptrtoint i32* @fftblock to i64
  call void @__DiscoPoPOpenMPRead(i64 %88, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @144, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %89 = load i32, i32* @fftblock, align 4, !dbg !1862
  %cmp20 = icmp slt i32 %87, %89, !dbg !1863
  br i1 %cmp20, label %for.body21, label %for.end, !dbg !1864

for.body21:                                       ; preds = %for.cond19
  %90 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %90, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @145, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %91 = load i32, i32* %i, align 4, !dbg !1865
  %idxprom = sext i32 %91 to i64, !dbg !1867
  %92 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPRead(i64 %92, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @146, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %93 = load i32, i32* %k, align 4, !dbg !1868
  %idxprom22 = sext i32 %93 to i64, !dbg !1867
  %94 = call [64 x [33 x %struct.dcomplex]]* @_ZTWL3ty1(), !dbg !1867
  %arrayidx = getelementptr inbounds [64 x [33 x %struct.dcomplex]], [64 x [33 x %struct.dcomplex]]* %94, i64 0, i64 %idxprom22, !dbg !1867
  %arrayidx23 = getelementptr inbounds [33 x %struct.dcomplex], [33 x %struct.dcomplex]* %arrayidx, i64 0, i64 %idxprom, !dbg !1867
  %95 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %95, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @147, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %96 = load i32, i32* %i, align 4, !dbg !1869
  %97 = ptrtoint i32* %ii to i64
  call void @__DiscoPoPOpenMPRead(i64 %97, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @148, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %98 = load i32, i32* %ii, align 4, !dbg !1870
  %add24 = add nsw i32 %96, %98, !dbg !1871
  %idxprom25 = sext i32 %add24 to i64, !dbg !1872
  %99 = ptrtoint i32* %j10 to i64
  call void @__DiscoPoPOpenMPRead(i64 %99, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @149, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %100 = load i32, i32* %j10, align 4, !dbg !1873
  %idxprom26 = sext i32 %100 to i64, !dbg !1872
  %101 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPRead(i64 %101, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @150, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %102 = load i32, i32* %k, align 4, !dbg !1874
  %idxprom27 = sext i32 %102 to i64, !dbg !1872
  %103 = ptrtoint %struct.dcomplex** %x.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %103, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @151, i32 0, i32 0), i32 102, i32 -1, i32 8)
  %104 = load %struct.dcomplex*, %struct.dcomplex** %x.addr, align 8, !dbg !1872
  %105 = mul nuw i64 %22, %24, !dbg !1872
  %106 = mul nsw i64 %idxprom27, %105, !dbg !1872
  %arrayidx28 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %104, i64 %106, !dbg !1872
  %107 = mul nsw i64 %idxprom26, %24, !dbg !1872
  %arrayidx29 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx28, i64 %107, !dbg !1872
  %arrayidx30 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx29, i64 %idxprom25, !dbg !1872
  %108 = bitcast %struct.dcomplex* %arrayidx23 to i8*, !dbg !1872
  %109 = bitcast %struct.dcomplex* %arrayidx30 to i8*, !dbg !1872
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %108, i8* %109, i64 16, i32 8, i1 false), !dbg !1875
  br label %for.inc, !dbg !1877

for.inc:                                          ; preds = %for.body21
  %110 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %110, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @152, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %111 = load i32, i32* %i, align 4, !dbg !1878
  %inc = add nsw i32 %111, 1, !dbg !1878
  %112 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %112)
  store i32 %inc, i32* %i, align 4, !dbg !1878
  br label %for.cond19, !dbg !1880, !llvm.loop !1881

for.end:                                          ; preds = %for.cond19
  br label %for.inc31, !dbg !1883

for.inc31:                                        ; preds = %for.end
  %113 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPRead(i64 %113, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @153, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %114 = load i32, i32* %k, align 4, !dbg !1884
  %inc32 = add nsw i32 %114, 1, !dbg !1884
  %115 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPWrite(i64 %115)
  store i32 %inc32, i32* %k, align 4, !dbg !1884
  br label %for.cond16, !dbg !1886, !llvm.loop !1887

for.end33:                                        ; preds = %for.cond16
  %116 = ptrtoint i32* %26 to i64
  call void @__DiscoPoPOpenMPRead(i64 %116, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @154, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %117 = load i32, i32* %26, align 4, !dbg !1889
  %118 = ptrtoint i32* %28 to i64
  call void @__DiscoPoPOpenMPRead(i64 %118, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @155, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %119 = load i32, i32* %28, align 4, !dbg !1890
  %120 = ptrtoint i32* %20 to i64
  call void @__DiscoPoPOpenMPRead(i64 %120, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @156, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %121 = load i32, i32* %20, align 4, !dbg !1891
  %122 = call [64 x [33 x %struct.dcomplex]]* @_ZTWL3ty1(), !dbg !1892
  %arraydecay = getelementptr inbounds [64 x [33 x %struct.dcomplex]], [64 x [33 x %struct.dcomplex]]* %122, i32 0, i32 0, !dbg !1892
  %123 = bitcast [33 x %struct.dcomplex]* %arraydecay to %struct.dcomplex*, !dbg !1892
  %124 = call [64 x [33 x %struct.dcomplex]]* @_ZTWL3ty2(), !dbg !1893
  %arraydecay34 = getelementptr inbounds [64 x [33 x %struct.dcomplex]], [64 x [33 x %struct.dcomplex]]* %124, i32 0, i32 0, !dbg !1895
  %125 = bitcast [33 x %struct.dcomplex]* %arraydecay34 to %struct.dcomplex*, !dbg !1895
  call void @cfftz(i32 %117, i32 %119, i32 %121, %struct.dcomplex* %123, %struct.dcomplex* %125), !dbg !1896
  %126 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPWrite(i64 %126)
  store i32 0, i32* %k, align 4, !dbg !1898
  br label %for.cond35, !dbg !1900

for.cond35:                                       ; preds = %for.inc55, %for.end33
  %127 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPRead(i64 %127, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @157, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %128 = load i32, i32* %k, align 4, !dbg !1901
  %129 = ptrtoint i32* %20 to i64
  call void @__DiscoPoPOpenMPRead(i64 %129, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @158, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %130 = load i32, i32* %20, align 4, !dbg !1904
  %cmp36 = icmp slt i32 %128, %130, !dbg !1905
  br i1 %cmp36, label %for.body37, label %for.end57, !dbg !1906

for.body37:                                       ; preds = %for.cond35
  %131 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %131)
  store i32 0, i32* %i, align 4, !dbg !1907
  br label %for.cond38, !dbg !1910

for.cond38:                                       ; preds = %for.inc52, %for.body37
  %132 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %132, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @159, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %133 = load i32, i32* %i, align 4, !dbg !1911
  %134 = ptrtoint i32* @fftblock to i64
  call void @__DiscoPoPOpenMPRead(i64 %134, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @160, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %135 = load i32, i32* @fftblock, align 4, !dbg !1914
  %cmp39 = icmp slt i32 %133, %135, !dbg !1915
  br i1 %cmp39, label %for.body40, label %for.end54, !dbg !1916

for.body40:                                       ; preds = %for.cond38
  %136 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %136, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @161, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %137 = load i32, i32* %i, align 4, !dbg !1917
  %138 = ptrtoint i32* %ii to i64
  call void @__DiscoPoPOpenMPRead(i64 %138, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @162, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %139 = load i32, i32* %ii, align 4, !dbg !1919
  %add41 = add nsw i32 %137, %139, !dbg !1920
  %idxprom42 = sext i32 %add41 to i64, !dbg !1921
  %140 = ptrtoint i32* %j10 to i64
  call void @__DiscoPoPOpenMPRead(i64 %140, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @163, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %141 = load i32, i32* %j10, align 4, !dbg !1922
  %idxprom43 = sext i32 %141 to i64, !dbg !1921
  %142 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPRead(i64 %142, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @164, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %143 = load i32, i32* %k, align 4, !dbg !1923
  %idxprom44 = sext i32 %143 to i64, !dbg !1921
  %144 = ptrtoint %struct.dcomplex** %xout.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %144, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @165, i32 0, i32 0), i32 102, i32 -1, i32 8)
  %145 = load %struct.dcomplex*, %struct.dcomplex** %xout.addr, align 8, !dbg !1921
  %146 = mul nuw i64 %30, %32, !dbg !1921
  %147 = mul nsw i64 %idxprom44, %146, !dbg !1921
  %arrayidx45 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %145, i64 %147, !dbg !1921
  %148 = mul nsw i64 %idxprom43, %32, !dbg !1921
  %arrayidx46 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx45, i64 %148, !dbg !1921
  %arrayidx47 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx46, i64 %idxprom42, !dbg !1921
  %149 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %149, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @166, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %150 = load i32, i32* %i, align 4, !dbg !1924
  %idxprom48 = sext i32 %150 to i64, !dbg !1925
  %151 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPRead(i64 %151, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @167, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %152 = load i32, i32* %k, align 4, !dbg !1926
  %idxprom49 = sext i32 %152 to i64, !dbg !1925
  %153 = call [64 x [33 x %struct.dcomplex]]* @_ZTWL3ty1(), !dbg !1925
  %arrayidx50 = getelementptr inbounds [64 x [33 x %struct.dcomplex]], [64 x [33 x %struct.dcomplex]]* %153, i64 0, i64 %idxprom49, !dbg !1925
  %arrayidx51 = getelementptr inbounds [33 x %struct.dcomplex], [33 x %struct.dcomplex]* %arrayidx50, i64 0, i64 %idxprom48, !dbg !1925
  %154 = bitcast %struct.dcomplex* %arrayidx47 to i8*, !dbg !1925
  %155 = bitcast %struct.dcomplex* %arrayidx51 to i8*, !dbg !1925
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %154, i8* %155, i64 16, i32 8, i1 false), !dbg !1927
  br label %for.inc52, !dbg !1929

for.inc52:                                        ; preds = %for.body40
  %156 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %156, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @168, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %157 = load i32, i32* %i, align 4, !dbg !1930
  %inc53 = add nsw i32 %157, 1, !dbg !1930
  %158 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %158)
  store i32 %inc53, i32* %i, align 4, !dbg !1930
  br label %for.cond38, !dbg !1932, !llvm.loop !1933

for.end54:                                        ; preds = %for.cond38
  br label %for.inc55, !dbg !1935

for.inc55:                                        ; preds = %for.end54
  %159 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPRead(i64 %159, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @169, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %160 = load i32, i32* %k, align 4, !dbg !1936
  %inc56 = add nsw i32 %160, 1, !dbg !1936
  %161 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPWrite(i64 %161)
  store i32 %inc56, i32* %k, align 4, !dbg !1936
  br label %for.cond35, !dbg !1938, !llvm.loop !1939

for.end57:                                        ; preds = %for.cond35
  br label %for.inc58, !dbg !1941

for.inc58:                                        ; preds = %for.end57
  %162 = ptrtoint i32* @fftblock to i64
  call void @__DiscoPoPOpenMPRead(i64 %162, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @170, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %163 = load i32, i32* @fftblock, align 4, !dbg !1942
  %164 = ptrtoint i32* %ii to i64
  call void @__DiscoPoPOpenMPRead(i64 %164, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @171, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %165 = load i32, i32* %ii, align 4, !dbg !1944
  %add59 = add nsw i32 %165, %163, !dbg !1944
  %166 = ptrtoint i32* %ii to i64
  call void @__DiscoPoPOpenMPWrite(i64 %166)
  store i32 %add59, i32* %ii, align 4, !dbg !1944
  br label %for.cond, !dbg !1945, !llvm.loop !1946

for.end60:                                        ; preds = %for.cond
  br label %omp.body.continue, !dbg !1948

omp.body.continue:                                ; preds = %for.end60
  br label %omp.inner.for.inc, !dbg !1949

omp.inner.for.inc:                                ; preds = %omp.body.continue
  %167 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPRead(i64 %167, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @172, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %168 = load i32, i32* %.omp.iv, align 4, !dbg !1950
  %add61 = add nsw i32 %168, 1, !dbg !1952
  %169 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPWrite(i64 %169)
  store i32 %add61, i32* %.omp.iv, align 4, !dbg !1952
  br label %omp.inner.for.cond, !dbg !1953, !llvm.loop !1954

omp.inner.for.end:                                ; preds = %omp.inner.for.cond
  br label %omp.loop.exit, !dbg !1955

omp.loop.exit:                                    ; preds = %omp.inner.for.end
  %170 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !1956
  %171 = ptrtoint i8** %170 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %171)
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @8, i32 0, i32 0), i8** %170, align 8, !dbg !1956
  %172 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %172, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @173, i32 0, i32 0), i32 102, i32 -1, i32 8)
  %173 = load i32*, i32** %.global_tid..addr, align 8, !dbg !1956
  %174 = ptrtoint i32* %173 to i64
  call void @__DiscoPoPOpenMPRead(i64 %174, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @174, i32 0, i32 0), i32 102, i32 -1, i32 4)
  %175 = load i32, i32* %173, align 4, !dbg !1956
  call void @__kmpc_for_static_fini(%ident_t* %.kmpc_loc.addr, i32 %175), !dbg !1956
  br label %omp.precond.end, !dbg !1956

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void, !dbg !1957
}

; Function Attrs: nounwind uwtable
define internal [64 x [33 x %struct.dcomplex]]* @_ZTWL3ty1() #6 {
  ret [64 x [33 x %struct.dcomplex]]* @ty1
}

; Function Attrs: nounwind uwtable
define internal [64 x [33 x %struct.dcomplex]]* @_ZTWL3ty2() #6 {
  ret [64 x [33 x %struct.dcomplex]]* @ty2
}

; Function Attrs: nounwind uwtable
define internal void @cfftz(i32 %is, i32 %m, i32 %n, %struct.dcomplex* %x, %struct.dcomplex* %y) #0 !dbg !1958 {
entry:
  %is.addr = alloca i32, align 4
  %m.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  %x.addr = alloca %struct.dcomplex*, align 8
  %y.addr = alloca %struct.dcomplex*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %l = alloca i32, align 4
  %mx = alloca i32, align 4
  %0 = ptrtoint i32* %is.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0)
  store i32 %is, i32* %is.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is.addr, metadata !1964, metadata !98), !dbg !1965
  %1 = ptrtoint i32* %m.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %1)
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !1966, metadata !98), !dbg !1967
  %2 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !1968, metadata !98), !dbg !1969
  %3 = ptrtoint %struct.dcomplex** %x.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store %struct.dcomplex* %x, %struct.dcomplex** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %x.addr, metadata !1970, metadata !98), !dbg !1971
  %4 = ptrtoint %struct.dcomplex** %y.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store %struct.dcomplex* %y, %struct.dcomplex** %y.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %y.addr, metadata !1972, metadata !98), !dbg !1973
  %5 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.541, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %6 = load i32, i32* %n.addr, align 4, !dbg !1974
  %7 = zext i32 %6 to i64
  %8 = ptrtoint i32* @fftblockpad to i64
  call void @__DiscoPoPOpenMPRead(i64 %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.542, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %9 = load i32, i32* @fftblockpad, align 4, !dbg !1975
  %10 = zext i32 %9 to i64
  %11 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.543, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %12 = load i32, i32* %n.addr, align 4, !dbg !1976
  %13 = zext i32 %12 to i64
  %14 = ptrtoint i32* @fftblockpad to i64
  call void @__DiscoPoPOpenMPRead(i64 %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.544, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %15 = load i32, i32* @fftblockpad, align 4, !dbg !1977
  %16 = zext i32 %15 to i64
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1978, metadata !98), !dbg !1979
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1980, metadata !98), !dbg !1981
  call void @llvm.dbg.declare(metadata i32* %l, metadata !1982, metadata !98), !dbg !1983
  call void @llvm.dbg.declare(metadata i32* %mx, metadata !1984, metadata !98), !dbg !1985
  %17 = ptrtoint double* getelementptr inbounds ([65 x %struct.dcomplex], [65 x %struct.dcomplex]* @u, i64 0, i64 0, i32 0) to i64
  call void @__DiscoPoPOpenMPRead(i64 %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.545, i32 0, i32 0), i32 0, i32 -1, i32 16)
  %18 = load double, double* getelementptr inbounds ([65 x %struct.dcomplex], [65 x %struct.dcomplex]* @u, i64 0, i64 0, i32 0), align 16, !dbg !1986
  %conv = fptosi double %18 to i32, !dbg !1987
  %19 = ptrtoint i32* %mx to i64
  call void @__DiscoPoPOpenMPWrite(i64 %19)
  store i32 %conv, i32* %mx, align 4, !dbg !1988
  %20 = ptrtoint i32* %is.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %20, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.546, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %21 = load i32, i32* %is.addr, align 4, !dbg !1989
  %cmp = icmp ne i32 %21, 1, !dbg !1991
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !1992

land.lhs.true:                                    ; preds = %entry
  %22 = ptrtoint i32* %is.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %22, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.547, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %23 = load i32, i32* %is.addr, align 4, !dbg !1993
  %cmp2 = icmp ne i32 %23, -1, !dbg !1995
  br i1 %cmp2, label %if.then, label %lor.lhs.false, !dbg !1996

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %24 = ptrtoint i32* %m.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %24, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.548, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %25 = load i32, i32* %m.addr, align 4, !dbg !1997
  %cmp4 = icmp slt i32 %25, 1, !dbg !1999
  br i1 %cmp4, label %if.then, label %lor.lhs.false6, !dbg !2000

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %26 = ptrtoint i32* %m.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %26, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.549, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %27 = load i32, i32* %m.addr, align 4, !dbg !2001
  %28 = ptrtoint i32* %mx to i64
  call void @__DiscoPoPOpenMPRead(i64 %28, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.550, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %29 = load i32, i32* %mx, align 4, !dbg !2003
  %cmp7 = icmp sgt i32 %27, %29, !dbg !2004
  br i1 %cmp7, label %if.then, label %if.end, !dbg !2005

if.then:                                          ; preds = %lor.lhs.false6, %lor.lhs.false, %land.lhs.true
  %30 = ptrtoint i32* %is.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %30, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.551, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %31 = load i32, i32* %is.addr, align 4, !dbg !2006
  %32 = ptrtoint i32* %m.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.552, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %33 = load i32, i32* %m.addr, align 4, !dbg !2008
  %34 = ptrtoint i32* %mx to i64
  call void @__DiscoPoPOpenMPRead(i64 %34, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.553, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %35 = load i32, i32* %mx, align 4, !dbg !2009
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.28, i32 0, i32 0), i32 %31, i32 %33, i32 %35), !dbg !2010
  call void @exit(i32 1) #9, !dbg !2011
  unreachable, !dbg !2011

if.end:                                           ; preds = %lor.lhs.false6
  %36 = ptrtoint i32* %l to i64
  call void @__DiscoPoPOpenMPWrite(i64 %36)
  store i32 1, i32* %l, align 4, !dbg !2012
  br label %for.cond, !dbg !2014

for.cond:                                         ; preds = %for.inc32, %if.end
  %37 = ptrtoint i32* %l to i64
  call void @__DiscoPoPOpenMPRead(i64 %37, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.554, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %38 = load i32, i32* %l, align 4, !dbg !2015
  %39 = ptrtoint i32* %m.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %39, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.555, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %40 = load i32, i32* %m.addr, align 4, !dbg !2018
  %cmp9 = icmp sle i32 %38, %40, !dbg !2019
  br i1 %cmp9, label %for.body, label %for.end34, !dbg !2020

for.body:                                         ; preds = %for.cond
  %41 = ptrtoint i32* %is.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %41, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.556, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %42 = load i32, i32* %is.addr, align 4, !dbg !2021
  %43 = ptrtoint i32* %l to i64
  call void @__DiscoPoPOpenMPRead(i64 %43, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.557, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %44 = load i32, i32* %l, align 4, !dbg !2023
  %45 = ptrtoint i32* %m.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %45, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.558, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %46 = load i32, i32* %m.addr, align 4, !dbg !2024
  %47 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %47, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.559, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %48 = load i32, i32* %n.addr, align 4, !dbg !2025
  %49 = ptrtoint i32* @fftblock to i64
  call void @__DiscoPoPOpenMPRead(i64 %49, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.560, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %50 = load i32, i32* @fftblock, align 4, !dbg !2026
  %51 = ptrtoint i32* @fftblockpad to i64
  call void @__DiscoPoPOpenMPRead(i64 %51, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.561, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %52 = load i32, i32* @fftblockpad, align 4, !dbg !2027
  %53 = ptrtoint %struct.dcomplex** %x.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %53, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.562, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %54 = load %struct.dcomplex*, %struct.dcomplex** %x.addr, align 8, !dbg !2028
  %55 = ptrtoint %struct.dcomplex** %y.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %55, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.563, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %56 = load %struct.dcomplex*, %struct.dcomplex** %y.addr, align 8, !dbg !2029
  call void @fftz2(i32 %42, i32 %44, i32 %46, i32 %48, i32 %50, i32 %52, %struct.dcomplex* getelementptr inbounds ([65 x %struct.dcomplex], [65 x %struct.dcomplex]* @u, i32 0, i32 0), %struct.dcomplex* %54, %struct.dcomplex* %56), !dbg !2030
  %57 = ptrtoint i32* %l to i64
  call void @__DiscoPoPOpenMPRead(i64 %57, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.564, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %58 = load i32, i32* %l, align 4, !dbg !2031
  %59 = ptrtoint i32* %m.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %59, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.565, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %60 = load i32, i32* %m.addr, align 4, !dbg !2033
  %cmp11 = icmp eq i32 %58, %60, !dbg !2034
  br i1 %cmp11, label %if.then13, label %if.end31, !dbg !2035

if.then13:                                        ; preds = %for.body
  %61 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPWrite(i64 %61)
  store i32 0, i32* %j, align 4, !dbg !2036
  br label %for.cond14, !dbg !2039

for.cond14:                                       ; preds = %for.inc28, %if.then13
  %62 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %62, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.566, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %63 = load i32, i32* %j, align 4, !dbg !2040
  %64 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %64, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.567, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %65 = load i32, i32* %n.addr, align 4, !dbg !2043
  %cmp15 = icmp slt i32 %63, %65, !dbg !2044
  br i1 %cmp15, label %for.body17, label %for.end30, !dbg !2045

for.body17:                                       ; preds = %for.cond14
  %66 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %66)
  store i32 0, i32* %i, align 4, !dbg !2046
  br label %for.cond18, !dbg !2049

for.cond18:                                       ; preds = %for.inc, %for.body17
  %67 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %67, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.568, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %68 = load i32, i32* %i, align 4, !dbg !2050
  %69 = ptrtoint i32* @fftblock to i64
  call void @__DiscoPoPOpenMPRead(i64 %69, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.569, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %70 = load i32, i32* @fftblock, align 4, !dbg !2053
  %cmp19 = icmp slt i32 %68, %70, !dbg !2054
  br i1 %cmp19, label %for.body21, label %for.end, !dbg !2055

for.body21:                                       ; preds = %for.cond18
  %71 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %71, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.570, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %72 = load i32, i32* %i, align 4, !dbg !2056
  %idxprom = sext i32 %72 to i64, !dbg !2058
  %73 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %73, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.571, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %74 = load i32, i32* %j, align 4, !dbg !2059
  %idxprom22 = sext i32 %74 to i64, !dbg !2058
  %75 = ptrtoint %struct.dcomplex** %x.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %75, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.572, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %76 = load %struct.dcomplex*, %struct.dcomplex** %x.addr, align 8, !dbg !2058
  %77 = mul nsw i64 %idxprom22, %10, !dbg !2058
  %arrayidx = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %76, i64 %77, !dbg !2058
  %arrayidx23 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx, i64 %idxprom, !dbg !2058
  %78 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %78, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.573, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %79 = load i32, i32* %i, align 4, !dbg !2060
  %idxprom24 = sext i32 %79 to i64, !dbg !2061
  %80 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %80, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.574, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %81 = load i32, i32* %j, align 4, !dbg !2062
  %idxprom25 = sext i32 %81 to i64, !dbg !2061
  %82 = ptrtoint %struct.dcomplex** %y.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %82, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.575, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %83 = load %struct.dcomplex*, %struct.dcomplex** %y.addr, align 8, !dbg !2061
  %84 = mul nsw i64 %idxprom25, %16, !dbg !2061
  %arrayidx26 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %83, i64 %84, !dbg !2061
  %arrayidx27 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx26, i64 %idxprom24, !dbg !2061
  %85 = bitcast %struct.dcomplex* %arrayidx23 to i8*, !dbg !2061
  %86 = bitcast %struct.dcomplex* %arrayidx27 to i8*, !dbg !2061
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 16, i32 8, i1 false), !dbg !2061
  br label %for.inc, !dbg !2063

for.inc:                                          ; preds = %for.body21
  %87 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %87, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.576, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %88 = load i32, i32* %i, align 4, !dbg !2064
  %inc = add nsw i32 %88, 1, !dbg !2064
  %89 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %89)
  store i32 %inc, i32* %i, align 4, !dbg !2064
  br label %for.cond18, !dbg !2066, !llvm.loop !2067

for.end:                                          ; preds = %for.cond18
  br label %for.inc28, !dbg !2069

for.inc28:                                        ; preds = %for.end
  %90 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %90, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.577, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %91 = load i32, i32* %j, align 4, !dbg !2070
  %inc29 = add nsw i32 %91, 1, !dbg !2070
  %92 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPWrite(i64 %92)
  store i32 %inc29, i32* %j, align 4, !dbg !2070
  br label %for.cond14, !dbg !2072, !llvm.loop !2073

for.end30:                                        ; preds = %for.cond14
  br label %for.end34, !dbg !2075

if.end31:                                         ; preds = %for.body
  %93 = ptrtoint i32* %is.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %93, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.578, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %94 = load i32, i32* %is.addr, align 4, !dbg !2076
  %95 = ptrtoint i32* %l to i64
  call void @__DiscoPoPOpenMPRead(i64 %95, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.579, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %96 = load i32, i32* %l, align 4, !dbg !2077
  %add = add nsw i32 %96, 1, !dbg !2078
  %97 = ptrtoint i32* %m.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %97, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.580, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %98 = load i32, i32* %m.addr, align 4, !dbg !2079
  %99 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %99, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.581, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %100 = load i32, i32* %n.addr, align 4, !dbg !2080
  %101 = ptrtoint i32* @fftblock to i64
  call void @__DiscoPoPOpenMPRead(i64 %101, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.582, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %102 = load i32, i32* @fftblock, align 4, !dbg !2081
  %103 = ptrtoint i32* @fftblockpad to i64
  call void @__DiscoPoPOpenMPRead(i64 %103, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.583, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %104 = load i32, i32* @fftblockpad, align 4, !dbg !2082
  %105 = ptrtoint %struct.dcomplex** %y.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %105, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.584, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %106 = load %struct.dcomplex*, %struct.dcomplex** %y.addr, align 8, !dbg !2083
  %107 = ptrtoint %struct.dcomplex** %x.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %107, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.585, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %108 = load %struct.dcomplex*, %struct.dcomplex** %x.addr, align 8, !dbg !2084
  call void @fftz2(i32 %94, i32 %add, i32 %98, i32 %100, i32 %102, i32 %104, %struct.dcomplex* getelementptr inbounds ([65 x %struct.dcomplex], [65 x %struct.dcomplex]* @u, i32 0, i32 0), %struct.dcomplex* %106, %struct.dcomplex* %108), !dbg !2085
  br label %for.inc32, !dbg !2086

for.inc32:                                        ; preds = %if.end31
  %109 = ptrtoint i32* %l to i64
  call void @__DiscoPoPOpenMPRead(i64 %109, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.586, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %110 = load i32, i32* %l, align 4, !dbg !2087
  %add33 = add nsw i32 %110, 2, !dbg !2087
  %111 = ptrtoint i32* %l to i64
  call void @__DiscoPoPOpenMPWrite(i64 %111)
  store i32 %add33, i32* %l, align 4, !dbg !2087
  br label %for.cond, !dbg !2089, !llvm.loop !2090

for.end34:                                        ; preds = %for.end30, %for.cond
  ret void, !dbg !2092
}

; Function Attrs: noreturn nounwind
declare void @exit(i32) #7

; Function Attrs: nounwind uwtable
define internal void @fftz2(i32 %is, i32 %l, i32 %m, i32 %n, i32 %ny, i32 %ny1, %struct.dcomplex* %u, %struct.dcomplex* %x, %struct.dcomplex* %y) #0 !dbg !2093 {
entry:
  %is.addr = alloca i32, align 4
  %l.addr = alloca i32, align 4
  %m.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  %ny.addr = alloca i32, align 4
  %ny1.addr = alloca i32, align 4
  %u.addr = alloca %struct.dcomplex*, align 8
  %x.addr = alloca %struct.dcomplex*, align 8
  %y.addr = alloca %struct.dcomplex*, align 8
  %k = alloca i32, align 4
  %n1 = alloca i32, align 4
  %li = alloca i32, align 4
  %lj = alloca i32, align 4
  %lk = alloca i32, align 4
  %ku = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %i11 = alloca i32, align 4
  %i12 = alloca i32, align 4
  %i21 = alloca i32, align 4
  %i22 = alloca i32, align 4
  %u1 = alloca %struct.dcomplex, align 8
  %x11 = alloca %struct.dcomplex, align 8
  %x21 = alloca %struct.dcomplex, align 8
  %.compoundliteral = alloca %struct.dcomplex, align 8
  %.compoundliteral40 = alloca %struct.dcomplex, align 8
  %.compoundliteral54 = alloca %struct.dcomplex, align 8
  %.compoundliteral57 = alloca %struct.dcomplex, align 8
  %.compoundliteral69 = alloca %struct.dcomplex, align 8
  %.compoundliteral83 = alloca %struct.dcomplex, align 8
  %.compoundliteral95 = alloca %struct.dcomplex, align 8
  %0 = ptrtoint i32* %is.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0)
  store i32 %is, i32* %is.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is.addr, metadata !2096, metadata !98), !dbg !2097
  %1 = ptrtoint i32* %l.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %1)
  store i32 %l, i32* %l.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %l.addr, metadata !2098, metadata !98), !dbg !2099
  %2 = ptrtoint i32* %m.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !2100, metadata !98), !dbg !2101
  %3 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !2102, metadata !98), !dbg !2103
  %4 = ptrtoint i32* %ny.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store i32 %ny, i32* %ny.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ny.addr, metadata !2104, metadata !98), !dbg !2105
  %5 = ptrtoint i32* %ny1.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store i32 %ny1, i32* %ny1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ny1.addr, metadata !2106, metadata !98), !dbg !2107
  %6 = ptrtoint %struct.dcomplex** %u.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %6)
  store %struct.dcomplex* %u, %struct.dcomplex** %u.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %u.addr, metadata !2108, metadata !98), !dbg !2109
  %7 = ptrtoint %struct.dcomplex** %x.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %7)
  store %struct.dcomplex* %x, %struct.dcomplex** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %x.addr, metadata !2110, metadata !98), !dbg !2111
  %8 = ptrtoint %struct.dcomplex** %y.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %8)
  store %struct.dcomplex* %y, %struct.dcomplex** %y.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %y.addr, metadata !2112, metadata !98), !dbg !2113
  %9 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.587, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %10 = load i32, i32* %n.addr, align 4, !dbg !2114
  %11 = zext i32 %10 to i64
  %12 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.588, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %13 = load i32, i32* %n.addr, align 4, !dbg !2115
  %14 = zext i32 %13 to i64
  %15 = ptrtoint i32* %ny1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.589, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %16 = load i32, i32* %ny1.addr, align 4, !dbg !2116
  %17 = zext i32 %16 to i64
  %18 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.590, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %19 = load i32, i32* %n.addr, align 4, !dbg !2117
  %20 = zext i32 %19 to i64
  %21 = ptrtoint i32* %ny1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %21, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.591, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %22 = load i32, i32* %ny1.addr, align 4, !dbg !2118
  %23 = zext i32 %22 to i64
  call void @llvm.dbg.declare(metadata i32* %k, metadata !2119, metadata !98), !dbg !2120
  call void @llvm.dbg.declare(metadata i32* %n1, metadata !2121, metadata !98), !dbg !2122
  call void @llvm.dbg.declare(metadata i32* %li, metadata !2123, metadata !98), !dbg !2124
  call void @llvm.dbg.declare(metadata i32* %lj, metadata !2125, metadata !98), !dbg !2126
  call void @llvm.dbg.declare(metadata i32* %lk, metadata !2127, metadata !98), !dbg !2128
  call void @llvm.dbg.declare(metadata i32* %ku, metadata !2129, metadata !98), !dbg !2130
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2131, metadata !98), !dbg !2132
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2133, metadata !98), !dbg !2134
  call void @llvm.dbg.declare(metadata i32* %i11, metadata !2135, metadata !98), !dbg !2136
  call void @llvm.dbg.declare(metadata i32* %i12, metadata !2137, metadata !98), !dbg !2138
  call void @llvm.dbg.declare(metadata i32* %i21, metadata !2139, metadata !98), !dbg !2140
  call void @llvm.dbg.declare(metadata i32* %i22, metadata !2141, metadata !98), !dbg !2142
  call void @llvm.dbg.declare(metadata %struct.dcomplex* %u1, metadata !2143, metadata !98), !dbg !2144
  call void @llvm.dbg.declare(metadata %struct.dcomplex* %x11, metadata !2145, metadata !98), !dbg !2146
  call void @llvm.dbg.declare(metadata %struct.dcomplex* %x21, metadata !2147, metadata !98), !dbg !2148
  %24 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %24, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.592, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %25 = load i32, i32* %n.addr, align 4, !dbg !2149
  %div = sdiv i32 %25, 2, !dbg !2150
  %26 = ptrtoint i32* %n1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %26)
  store i32 %div, i32* %n1, align 4, !dbg !2151
  %27 = ptrtoint i32* %l.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %27, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.593, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %28 = load i32, i32* %l.addr, align 4, !dbg !2152
  %sub = sub nsw i32 %28, 1, !dbg !2153
  %shl = shl i32 1, %sub, !dbg !2154
  %29 = ptrtoint i32* %lk to i64
  call void @__DiscoPoPOpenMPWrite(i64 %29)
  store i32 %shl, i32* %lk, align 4, !dbg !2155
  %30 = ptrtoint i32* %m.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %30, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.594, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %31 = load i32, i32* %m.addr, align 4, !dbg !2156
  %32 = ptrtoint i32* %l.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.595, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %33 = load i32, i32* %l.addr, align 4, !dbg !2157
  %sub1 = sub nsw i32 %31, %33, !dbg !2158
  %shl2 = shl i32 1, %sub1, !dbg !2159
  %34 = ptrtoint i32* %li to i64
  call void @__DiscoPoPOpenMPWrite(i64 %34)
  store i32 %shl2, i32* %li, align 4, !dbg !2160
  %35 = ptrtoint i32* %lk to i64
  call void @__DiscoPoPOpenMPRead(i64 %35, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.596, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %36 = load i32, i32* %lk, align 4, !dbg !2161
  %mul = mul nsw i32 2, %36, !dbg !2162
  %37 = ptrtoint i32* %lj to i64
  call void @__DiscoPoPOpenMPWrite(i64 %37)
  store i32 %mul, i32* %lj, align 4, !dbg !2163
  %38 = ptrtoint i32* %li to i64
  call void @__DiscoPoPOpenMPRead(i64 %38, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.597, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %39 = load i32, i32* %li, align 4, !dbg !2164
  %40 = ptrtoint i32* %ku to i64
  call void @__DiscoPoPOpenMPWrite(i64 %40)
  store i32 %39, i32* %ku, align 4, !dbg !2165
  %41 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %41)
  store i32 0, i32* %i, align 4, !dbg !2166
  br label %for.cond, !dbg !2168

for.cond:                                         ; preds = %for.inc110, %entry
  %42 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %42, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.598, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %43 = load i32, i32* %i, align 4, !dbg !2169
  %44 = ptrtoint i32* %li to i64
  call void @__DiscoPoPOpenMPRead(i64 %44, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.599, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %45 = load i32, i32* %li, align 4, !dbg !2172
  %sub3 = sub nsw i32 %45, 1, !dbg !2173
  %cmp = icmp sle i32 %43, %sub3, !dbg !2174
  br i1 %cmp, label %for.body, label %for.end112, !dbg !2175

for.body:                                         ; preds = %for.cond
  %46 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %46, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.600, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %47 = load i32, i32* %i, align 4, !dbg !2176
  %48 = ptrtoint i32* %lk to i64
  call void @__DiscoPoPOpenMPRead(i64 %48, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.601, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %49 = load i32, i32* %lk, align 4, !dbg !2178
  %mul4 = mul nsw i32 %47, %49, !dbg !2179
  %50 = ptrtoint i32* %i11 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %50)
  store i32 %mul4, i32* %i11, align 4, !dbg !2180
  %51 = ptrtoint i32* %i11 to i64
  call void @__DiscoPoPOpenMPRead(i64 %51, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.602, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %52 = load i32, i32* %i11, align 4, !dbg !2181
  %53 = ptrtoint i32* %n1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %53, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.603, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %54 = load i32, i32* %n1, align 4, !dbg !2182
  %add = add nsw i32 %52, %54, !dbg !2183
  %55 = ptrtoint i32* %i12 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %55)
  store i32 %add, i32* %i12, align 4, !dbg !2184
  %56 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.604, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %57 = load i32, i32* %i, align 4, !dbg !2185
  %58 = ptrtoint i32* %lj to i64
  call void @__DiscoPoPOpenMPRead(i64 %58, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.605, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %59 = load i32, i32* %lj, align 4, !dbg !2186
  %mul5 = mul nsw i32 %57, %59, !dbg !2187
  %60 = ptrtoint i32* %i21 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %60)
  store i32 %mul5, i32* %i21, align 4, !dbg !2188
  %61 = ptrtoint i32* %i21 to i64
  call void @__DiscoPoPOpenMPRead(i64 %61, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.606, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %62 = load i32, i32* %i21, align 4, !dbg !2189
  %63 = ptrtoint i32* %lk to i64
  call void @__DiscoPoPOpenMPRead(i64 %63, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.607, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %64 = load i32, i32* %lk, align 4, !dbg !2190
  %add6 = add nsw i32 %62, %64, !dbg !2191
  %65 = ptrtoint i32* %i22 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %65)
  store i32 %add6, i32* %i22, align 4, !dbg !2192
  %66 = ptrtoint i32* %is.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %66, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.608, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %67 = load i32, i32* %is.addr, align 4, !dbg !2193
  %cmp7 = icmp sge i32 %67, 1, !dbg !2195
  br i1 %cmp7, label %if.then, label %if.else, !dbg !2196

if.then:                                          ; preds = %for.body
  %68 = ptrtoint i32* %ku to i64
  call void @__DiscoPoPOpenMPRead(i64 %68, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.609, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %69 = load i32, i32* %ku, align 4, !dbg !2197
  %70 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %70, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.610, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %71 = load i32, i32* %i, align 4, !dbg !2199
  %add8 = add nsw i32 %69, %71, !dbg !2200
  %idxprom = sext i32 %add8 to i64, !dbg !2201
  %72 = ptrtoint %struct.dcomplex** %u.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %72, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.611, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %73 = load %struct.dcomplex*, %struct.dcomplex** %u.addr, align 8, !dbg !2201
  %arrayidx = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %73, i64 %idxprom, !dbg !2201
  %74 = bitcast %struct.dcomplex* %u1 to i8*, !dbg !2201
  %75 = bitcast %struct.dcomplex* %arrayidx to i8*, !dbg !2201
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %75, i64 16, i32 8, i1 false), !dbg !2201
  br label %if.end, !dbg !2202

if.else:                                          ; preds = %for.body
  %real = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral, i32 0, i32 0, !dbg !2203
  %76 = ptrtoint i32* %ku to i64
  call void @__DiscoPoPOpenMPRead(i64 %76, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.612, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %77 = load i32, i32* %ku, align 4, !dbg !2203
  %78 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %78, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.613, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %79 = load i32, i32* %i, align 4, !dbg !2203
  %add9 = add nsw i32 %77, %79, !dbg !2203
  %idxprom10 = sext i32 %add9 to i64, !dbg !2203
  %80 = ptrtoint %struct.dcomplex** %u.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %80, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.614, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %81 = load %struct.dcomplex*, %struct.dcomplex** %u.addr, align 8, !dbg !2203
  %arrayidx11 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %81, i64 %idxprom10, !dbg !2203
  %real12 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx11, i32 0, i32 0, !dbg !2203
  %82 = ptrtoint double* %real12 to i64
  call void @__DiscoPoPOpenMPRead(i64 %82, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.615, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %83 = load double, double* %real12, align 8, !dbg !2203
  %84 = ptrtoint double* %real to i64
  call void @__DiscoPoPOpenMPWrite(i64 %84)
  store double %83, double* %real, align 8, !dbg !2203
  %imag = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral, i32 0, i32 1, !dbg !2203
  %85 = ptrtoint i32* %ku to i64
  call void @__DiscoPoPOpenMPRead(i64 %85, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.616, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %86 = load i32, i32* %ku, align 4, !dbg !2203
  %87 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %87, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.617, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %88 = load i32, i32* %i, align 4, !dbg !2203
  %add13 = add nsw i32 %86, %88, !dbg !2203
  %idxprom14 = sext i32 %add13 to i64, !dbg !2203
  %89 = ptrtoint %struct.dcomplex** %u.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %89, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.618, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %90 = load %struct.dcomplex*, %struct.dcomplex** %u.addr, align 8, !dbg !2203
  %arrayidx15 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %90, i64 %idxprom14, !dbg !2203
  %imag16 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx15, i32 0, i32 1, !dbg !2203
  %91 = ptrtoint double* %imag16 to i64
  call void @__DiscoPoPOpenMPRead(i64 %91, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.619, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %92 = load double, double* %imag16, align 8, !dbg !2203
  %mul17 = fmul double -1.000000e+00, %92, !dbg !2203
  %93 = ptrtoint double* %imag to i64
  call void @__DiscoPoPOpenMPWrite(i64 %93)
  store double %mul17, double* %imag, align 8, !dbg !2203
  %94 = bitcast %struct.dcomplex* %u1 to i8*, !dbg !2203
  %95 = bitcast %struct.dcomplex* %.compoundliteral to i8*, !dbg !2203
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %94, i8* %95, i64 16, i32 8, i1 false), !dbg !2203
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %96 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPWrite(i64 %96)
  store i32 0, i32* %k, align 4, !dbg !2205
  br label %for.cond18, !dbg !2207

for.cond18:                                       ; preds = %for.inc107, %if.end
  %97 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPRead(i64 %97, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.620, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %98 = load i32, i32* %k, align 4, !dbg !2208
  %99 = ptrtoint i32* %lk to i64
  call void @__DiscoPoPOpenMPRead(i64 %99, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.621, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %100 = load i32, i32* %lk, align 4, !dbg !2211
  %sub19 = sub nsw i32 %100, 1, !dbg !2212
  %cmp20 = icmp sle i32 %98, %sub19, !dbg !2213
  br i1 %cmp20, label %for.body21, label %for.end109, !dbg !2214

for.body21:                                       ; preds = %for.cond18
  %101 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPWrite(i64 %101)
  store i32 0, i32* %j, align 4, !dbg !2215
  br label %for.cond22, !dbg !2218

for.cond22:                                       ; preds = %for.inc, %for.body21
  %102 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %102, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.622, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %103 = load i32, i32* %j, align 4, !dbg !2219
  %104 = ptrtoint i32* %ny.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %104, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.623, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %105 = load i32, i32* %ny.addr, align 4, !dbg !2222
  %cmp23 = icmp slt i32 %103, %105, !dbg !2223
  br i1 %cmp23, label %for.body24, label %for.end, !dbg !2224

for.body24:                                       ; preds = %for.cond22
  %106 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %106, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.624, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %107 = load i32, i32* %j, align 4, !dbg !2225
  %idxprom25 = sext i32 %107 to i64, !dbg !2227
  %108 = ptrtoint i32* %i11 to i64
  call void @__DiscoPoPOpenMPRead(i64 %108, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.625, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %109 = load i32, i32* %i11, align 4, !dbg !2228
  %110 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPRead(i64 %110, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.626, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %111 = load i32, i32* %k, align 4, !dbg !2229
  %add26 = add nsw i32 %109, %111, !dbg !2230
  %idxprom27 = sext i32 %add26 to i64, !dbg !2227
  %112 = ptrtoint %struct.dcomplex** %x.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %112, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.627, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %113 = load %struct.dcomplex*, %struct.dcomplex** %x.addr, align 8, !dbg !2227
  %114 = mul nsw i64 %idxprom27, %17, !dbg !2227
  %arrayidx28 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %113, i64 %114, !dbg !2227
  %arrayidx29 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx28, i64 %idxprom25, !dbg !2227
  %115 = bitcast %struct.dcomplex* %x11 to i8*, !dbg !2227
  %116 = bitcast %struct.dcomplex* %arrayidx29 to i8*, !dbg !2227
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %115, i8* %116, i64 16, i32 8, i1 false), !dbg !2227
  %117 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %117, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.628, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %118 = load i32, i32* %j, align 4, !dbg !2231
  %idxprom30 = sext i32 %118 to i64, !dbg !2232
  %119 = ptrtoint i32* %i12 to i64
  call void @__DiscoPoPOpenMPRead(i64 %119, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.629, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %120 = load i32, i32* %i12, align 4, !dbg !2233
  %121 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPRead(i64 %121, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.630, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %122 = load i32, i32* %k, align 4, !dbg !2234
  %add31 = add nsw i32 %120, %122, !dbg !2235
  %idxprom32 = sext i32 %add31 to i64, !dbg !2232
  %123 = ptrtoint %struct.dcomplex** %x.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %123, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.631, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %124 = load %struct.dcomplex*, %struct.dcomplex** %x.addr, align 8, !dbg !2232
  %125 = mul nsw i64 %idxprom32, %17, !dbg !2232
  %arrayidx33 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %124, i64 %125, !dbg !2232
  %arrayidx34 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx33, i64 %idxprom30, !dbg !2232
  %126 = bitcast %struct.dcomplex* %x21 to i8*, !dbg !2232
  %127 = bitcast %struct.dcomplex* %arrayidx34 to i8*, !dbg !2232
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %126, i8* %127, i64 16, i32 8, i1 false), !dbg !2232
  %128 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.632, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %129 = load i32, i32* %j, align 4, !dbg !2236
  %idxprom35 = sext i32 %129 to i64, !dbg !2237
  %130 = ptrtoint i32* %i21 to i64
  call void @__DiscoPoPOpenMPRead(i64 %130, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.633, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %131 = load i32, i32* %i21, align 4, !dbg !2238
  %132 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPRead(i64 %132, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.634, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %133 = load i32, i32* %k, align 4, !dbg !2239
  %add36 = add nsw i32 %131, %133, !dbg !2240
  %idxprom37 = sext i32 %add36 to i64, !dbg !2237
  %134 = ptrtoint %struct.dcomplex** %y.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %134, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.635, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %135 = load %struct.dcomplex*, %struct.dcomplex** %y.addr, align 8, !dbg !2237
  %136 = mul nsw i64 %idxprom37, %23, !dbg !2237
  %arrayidx38 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %135, i64 %136, !dbg !2237
  %arrayidx39 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx38, i64 %idxprom35, !dbg !2237
  %real41 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral40, i32 0, i32 0, !dbg !2241
  %real42 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %x11, i32 0, i32 0, !dbg !2241
  %137 = ptrtoint double* %real42 to i64
  call void @__DiscoPoPOpenMPRead(i64 %137, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.636, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %138 = load double, double* %real42, align 8, !dbg !2241
  %real43 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %x21, i32 0, i32 0, !dbg !2241
  %139 = ptrtoint double* %real43 to i64
  call void @__DiscoPoPOpenMPRead(i64 %139, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.637, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %140 = load double, double* %real43, align 8, !dbg !2241
  %add44 = fadd double %138, %140, !dbg !2241
  %141 = ptrtoint double* %real41 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %141)
  store double %add44, double* %real41, align 8, !dbg !2241
  %imag45 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral40, i32 0, i32 1, !dbg !2241
  %imag46 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %x11, i32 0, i32 1, !dbg !2241
  %142 = ptrtoint double* %imag46 to i64
  call void @__DiscoPoPOpenMPRead(i64 %142, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.638, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %143 = load double, double* %imag46, align 8, !dbg !2241
  %imag47 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %x21, i32 0, i32 1, !dbg !2241
  %144 = ptrtoint double* %imag47 to i64
  call void @__DiscoPoPOpenMPRead(i64 %144, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.639, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %145 = load double, double* %imag47, align 8, !dbg !2241
  %add48 = fadd double %143, %145, !dbg !2241
  %146 = ptrtoint double* %imag45 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %146)
  store double %add48, double* %imag45, align 8, !dbg !2241
  %147 = bitcast %struct.dcomplex* %arrayidx39 to i8*, !dbg !2241
  %148 = bitcast %struct.dcomplex* %.compoundliteral40 to i8*, !dbg !2241
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %147, i8* %148, i64 16, i32 8, i1 false), !dbg !2241
  %149 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %149, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.640, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %150 = load i32, i32* %j, align 4, !dbg !2242
  %idxprom49 = sext i32 %150 to i64, !dbg !2243
  %151 = ptrtoint i32* %i22 to i64
  call void @__DiscoPoPOpenMPRead(i64 %151, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.641, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %152 = load i32, i32* %i22, align 4, !dbg !2244
  %153 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPRead(i64 %153, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.642, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %154 = load i32, i32* %k, align 4, !dbg !2245
  %add50 = add nsw i32 %152, %154, !dbg !2246
  %idxprom51 = sext i32 %add50 to i64, !dbg !2243
  %155 = ptrtoint %struct.dcomplex** %y.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %155, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.643, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %156 = load %struct.dcomplex*, %struct.dcomplex** %y.addr, align 8, !dbg !2243
  %157 = mul nsw i64 %idxprom51, %23, !dbg !2243
  %arrayidx52 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %156, i64 %157, !dbg !2243
  %arrayidx53 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx52, i64 %idxprom49, !dbg !2243
  %real55 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral54, i32 0, i32 0, !dbg !2247
  %real56 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %u1, i32 0, i32 0, !dbg !2247
  %158 = ptrtoint double* %real56 to i64
  call void @__DiscoPoPOpenMPRead(i64 %158, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.644, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %159 = load double, double* %real56, align 8, !dbg !2247
  %real58 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral57, i32 0, i32 0, !dbg !2247
  %real59 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %x11, i32 0, i32 0, !dbg !2247
  %160 = ptrtoint double* %real59 to i64
  call void @__DiscoPoPOpenMPRead(i64 %160, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.645, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %161 = load double, double* %real59, align 8, !dbg !2247
  %real60 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %x21, i32 0, i32 0, !dbg !2247
  %162 = ptrtoint double* %real60 to i64
  call void @__DiscoPoPOpenMPRead(i64 %162, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.646, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %163 = load double, double* %real60, align 8, !dbg !2247
  %sub61 = fsub double %161, %163, !dbg !2247
  %164 = ptrtoint double* %real58 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %164)
  store double %sub61, double* %real58, align 8, !dbg !2247
  %imag62 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral57, i32 0, i32 1, !dbg !2247
  %imag63 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %x11, i32 0, i32 1, !dbg !2247
  %165 = ptrtoint double* %imag63 to i64
  call void @__DiscoPoPOpenMPRead(i64 %165, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.647, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %166 = load double, double* %imag63, align 8, !dbg !2247
  %imag64 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %x21, i32 0, i32 1, !dbg !2247
  %167 = ptrtoint double* %imag64 to i64
  call void @__DiscoPoPOpenMPRead(i64 %167, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.648, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %168 = load double, double* %imag64, align 8, !dbg !2247
  %sub65 = fsub double %166, %168, !dbg !2247
  %169 = ptrtoint double* %imag62 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %169)
  store double %sub65, double* %imag62, align 8, !dbg !2247
  %real66 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral57, i32 0, i32 0, !dbg !2247
  %170 = ptrtoint double* %real66 to i64
  call void @__DiscoPoPOpenMPRead(i64 %170, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.649, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %171 = load double, double* %real66, align 8, !dbg !2247
  %mul67 = fmul double %159, %171, !dbg !2247
  %imag68 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %u1, i32 0, i32 1, !dbg !2247
  %172 = ptrtoint double* %imag68 to i64
  call void @__DiscoPoPOpenMPRead(i64 %172, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.650, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %173 = load double, double* %imag68, align 8, !dbg !2247
  %real70 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral69, i32 0, i32 0, !dbg !2247
  %real71 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %x11, i32 0, i32 0, !dbg !2247
  %174 = ptrtoint double* %real71 to i64
  call void @__DiscoPoPOpenMPRead(i64 %174, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.651, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %175 = load double, double* %real71, align 8, !dbg !2247
  %real72 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %x21, i32 0, i32 0, !dbg !2247
  %176 = ptrtoint double* %real72 to i64
  call void @__DiscoPoPOpenMPRead(i64 %176, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.652, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %177 = load double, double* %real72, align 8, !dbg !2247
  %sub73 = fsub double %175, %177, !dbg !2247
  %178 = ptrtoint double* %real70 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %178)
  store double %sub73, double* %real70, align 8, !dbg !2247
  %imag74 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral69, i32 0, i32 1, !dbg !2247
  %imag75 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %x11, i32 0, i32 1, !dbg !2247
  %179 = ptrtoint double* %imag75 to i64
  call void @__DiscoPoPOpenMPRead(i64 %179, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.653, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %180 = load double, double* %imag75, align 8, !dbg !2247
  %imag76 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %x21, i32 0, i32 1, !dbg !2247
  %181 = ptrtoint double* %imag76 to i64
  call void @__DiscoPoPOpenMPRead(i64 %181, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.654, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %182 = load double, double* %imag76, align 8, !dbg !2247
  %sub77 = fsub double %180, %182, !dbg !2247
  %183 = ptrtoint double* %imag74 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %183)
  store double %sub77, double* %imag74, align 8, !dbg !2247
  %imag78 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral69, i32 0, i32 1, !dbg !2247
  %184 = ptrtoint double* %imag78 to i64
  call void @__DiscoPoPOpenMPRead(i64 %184, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.655, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %185 = load double, double* %imag78, align 8, !dbg !2247
  %mul79 = fmul double %173, %185, !dbg !2247
  %sub80 = fsub double %mul67, %mul79, !dbg !2247
  %186 = ptrtoint double* %real55 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %186)
  store double %sub80, double* %real55, align 8, !dbg !2247
  %imag81 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral54, i32 0, i32 1, !dbg !2247
  %real82 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %u1, i32 0, i32 0, !dbg !2247
  %187 = ptrtoint double* %real82 to i64
  call void @__DiscoPoPOpenMPRead(i64 %187, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.656, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %188 = load double, double* %real82, align 8, !dbg !2247
  %real84 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral83, i32 0, i32 0, !dbg !2247
  %real85 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %x11, i32 0, i32 0, !dbg !2247
  %189 = ptrtoint double* %real85 to i64
  call void @__DiscoPoPOpenMPRead(i64 %189, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.657, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %190 = load double, double* %real85, align 8, !dbg !2247
  %real86 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %x21, i32 0, i32 0, !dbg !2247
  %191 = ptrtoint double* %real86 to i64
  call void @__DiscoPoPOpenMPRead(i64 %191, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.658, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %192 = load double, double* %real86, align 8, !dbg !2247
  %sub87 = fsub double %190, %192, !dbg !2247
  %193 = ptrtoint double* %real84 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %193)
  store double %sub87, double* %real84, align 8, !dbg !2247
  %imag88 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral83, i32 0, i32 1, !dbg !2247
  %imag89 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %x11, i32 0, i32 1, !dbg !2247
  %194 = ptrtoint double* %imag89 to i64
  call void @__DiscoPoPOpenMPRead(i64 %194, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.659, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %195 = load double, double* %imag89, align 8, !dbg !2247
  %imag90 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %x21, i32 0, i32 1, !dbg !2247
  %196 = ptrtoint double* %imag90 to i64
  call void @__DiscoPoPOpenMPRead(i64 %196, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.660, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %197 = load double, double* %imag90, align 8, !dbg !2247
  %sub91 = fsub double %195, %197, !dbg !2247
  %198 = ptrtoint double* %imag88 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %198)
  store double %sub91, double* %imag88, align 8, !dbg !2247
  %imag92 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral83, i32 0, i32 1, !dbg !2247
  %199 = ptrtoint double* %imag92 to i64
  call void @__DiscoPoPOpenMPRead(i64 %199, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.661, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %200 = load double, double* %imag92, align 8, !dbg !2247
  %mul93 = fmul double %188, %200, !dbg !2247
  %imag94 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %u1, i32 0, i32 1, !dbg !2247
  %201 = ptrtoint double* %imag94 to i64
  call void @__DiscoPoPOpenMPRead(i64 %201, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.662, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %202 = load double, double* %imag94, align 8, !dbg !2247
  %real96 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral95, i32 0, i32 0, !dbg !2247
  %real97 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %x11, i32 0, i32 0, !dbg !2247
  %203 = ptrtoint double* %real97 to i64
  call void @__DiscoPoPOpenMPRead(i64 %203, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.663, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %204 = load double, double* %real97, align 8, !dbg !2247
  %real98 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %x21, i32 0, i32 0, !dbg !2247
  %205 = ptrtoint double* %real98 to i64
  call void @__DiscoPoPOpenMPRead(i64 %205, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.664, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %206 = load double, double* %real98, align 8, !dbg !2247
  %sub99 = fsub double %204, %206, !dbg !2247
  %207 = ptrtoint double* %real96 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %207)
  store double %sub99, double* %real96, align 8, !dbg !2247
  %imag100 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral95, i32 0, i32 1, !dbg !2247
  %imag101 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %x11, i32 0, i32 1, !dbg !2247
  %208 = ptrtoint double* %imag101 to i64
  call void @__DiscoPoPOpenMPRead(i64 %208, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.665, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %209 = load double, double* %imag101, align 8, !dbg !2247
  %imag102 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %x21, i32 0, i32 1, !dbg !2247
  %210 = ptrtoint double* %imag102 to i64
  call void @__DiscoPoPOpenMPRead(i64 %210, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.666, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %211 = load double, double* %imag102, align 8, !dbg !2247
  %sub103 = fsub double %209, %211, !dbg !2247
  %212 = ptrtoint double* %imag100 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %212)
  store double %sub103, double* %imag100, align 8, !dbg !2247
  %real104 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral95, i32 0, i32 0, !dbg !2247
  %213 = ptrtoint double* %real104 to i64
  call void @__DiscoPoPOpenMPRead(i64 %213, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.667, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %214 = load double, double* %real104, align 8, !dbg !2247
  %mul105 = fmul double %202, %214, !dbg !2247
  %add106 = fadd double %mul93, %mul105, !dbg !2247
  %215 = ptrtoint double* %imag81 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %215)
  store double %add106, double* %imag81, align 8, !dbg !2247
  %216 = bitcast %struct.dcomplex* %arrayidx53 to i8*, !dbg !2247
  %217 = bitcast %struct.dcomplex* %.compoundliteral54 to i8*, !dbg !2247
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %216, i8* %217, i64 16, i32 8, i1 false), !dbg !2247
  br label %for.inc, !dbg !2248

for.inc:                                          ; preds = %for.body24
  %218 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %218, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.668, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %219 = load i32, i32* %j, align 4, !dbg !2249
  %inc = add nsw i32 %219, 1, !dbg !2249
  %220 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPWrite(i64 %220)
  store i32 %inc, i32* %j, align 4, !dbg !2249
  br label %for.cond22, !dbg !2251, !llvm.loop !2252

for.end:                                          ; preds = %for.cond22
  br label %for.inc107, !dbg !2254

for.inc107:                                       ; preds = %for.end
  %221 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPRead(i64 %221, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.669, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %222 = load i32, i32* %k, align 4, !dbg !2255
  %inc108 = add nsw i32 %222, 1, !dbg !2255
  %223 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPWrite(i64 %223)
  store i32 %inc108, i32* %k, align 4, !dbg !2255
  br label %for.cond18, !dbg !2257, !llvm.loop !2258

for.end109:                                       ; preds = %for.cond18
  br label %for.inc110, !dbg !2260

for.inc110:                                       ; preds = %for.end109
  %224 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %224, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.670, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %225 = load i32, i32* %i, align 4, !dbg !2261
  %inc111 = add nsw i32 %225, 1, !dbg !2261
  %226 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %226)
  store i32 %inc111, i32* %i, align 4, !dbg !2261
  br label %for.cond, !dbg !2263, !llvm.loop !2264

for.end112:                                       ; preds = %for.cond
  ret void, !dbg !2266
}

; Function Attrs: nounwind uwtable
define internal void @.omp_outlined..29(i32* noalias %.global_tid., i32* noalias %.bound_tid., i32* dereferenceable(4) %d3, i32* dereferenceable(4) %d1, i32* dereferenceable(4) %d2, i64 %vla, i64 %vla1, %struct.dcomplex* %x, i32* dereferenceable(4) %is, i32* dereferenceable(4) %logd2, i64 %vla3, i64 %vla5, %struct.dcomplex* %xout) #0 !dbg !2267 !omp.region.ID !2268 {
entry:
  %.global_tid..addr = alloca i32*, align 8
  %.bound_tid..addr = alloca i32*, align 8
  %d3.addr = alloca i32*, align 8
  %d1.addr = alloca i32*, align 8
  %d2.addr = alloca i32*, align 8
  %vla.addr = alloca i64, align 8
  %vla.addr2 = alloca i64, align 8
  %x.addr = alloca %struct.dcomplex*, align 8
  %is.addr = alloca i32*, align 8
  %logd2.addr = alloca i32*, align 8
  %vla.addr4 = alloca i64, align 8
  %vla.addr6 = alloca i64, align 8
  %xout.addr = alloca %struct.dcomplex*, align 8
  %.omp.iv = alloca i32, align 4
  %.capture_expr. = alloca i32, align 4
  %.capture_expr.7 = alloca i32, align 4
  %k = alloca i32, align 4
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k10 = alloca i32, align 4
  %ii = alloca i32, align 4
  %.kmpc_loc.addr = alloca %ident_t, align 8
  %0 = bitcast %ident_t* %.kmpc_loc.addr to i8*
  %1 = bitcast %ident_t* @0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 24, i32 8, i1 false)
  %2 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store i32* %.global_tid., i32** %.global_tid..addr, align 8
  call void @llvm.dbg.declare(metadata i32** %.global_tid..addr, metadata !2269, metadata !98), !dbg !2270
  %3 = ptrtoint i32** %.bound_tid..addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store i32* %.bound_tid., i32** %.bound_tid..addr, align 8
  call void @llvm.dbg.declare(metadata i32** %.bound_tid..addr, metadata !2271, metadata !98), !dbg !2270
  %4 = ptrtoint i32** %d3.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store i32* %d3, i32** %d3.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %d3.addr, metadata !2272, metadata !98), !dbg !2270
  %5 = ptrtoint i32** %d1.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store i32* %d1, i32** %d1.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %d1.addr, metadata !2273, metadata !98), !dbg !2270
  %6 = ptrtoint i32** %d2.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %6)
  store i32* %d2, i32** %d2.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %d2.addr, metadata !2274, metadata !98), !dbg !2270
  %7 = ptrtoint i64* %vla.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %7)
  store i64 %vla, i64* %vla.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr, metadata !2275, metadata !98), !dbg !2270
  %8 = ptrtoint i64* %vla.addr2 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %8)
  store i64 %vla1, i64* %vla.addr2, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr2, metadata !2276, metadata !98), !dbg !2270
  %9 = ptrtoint %struct.dcomplex** %x.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %9)
  store %struct.dcomplex* %x, %struct.dcomplex** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %x.addr, metadata !2277, metadata !98), !dbg !2270
  %10 = ptrtoint i32** %is.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %10)
  store i32* %is, i32** %is.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %is.addr, metadata !2278, metadata !98), !dbg !2270
  %11 = ptrtoint i32** %logd2.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %11)
  store i32* %logd2, i32** %logd2.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %logd2.addr, metadata !2279, metadata !98), !dbg !2270
  %12 = ptrtoint i64* %vla.addr4 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %12)
  store i64 %vla3, i64* %vla.addr4, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr4, metadata !2280, metadata !98), !dbg !2270
  %13 = ptrtoint i64* %vla.addr6 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %13)
  store i64 %vla5, i64* %vla.addr6, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr6, metadata !2281, metadata !98), !dbg !2270
  %14 = ptrtoint %struct.dcomplex** %xout.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %14)
  store %struct.dcomplex* %xout, %struct.dcomplex** %xout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %xout.addr, metadata !2282, metadata !98), !dbg !2270
  %15 = ptrtoint i32** %d3.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %15, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.671, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %16 = load i32*, i32** %d3.addr, align 8, !dbg !2283
  %17 = ptrtoint i32** %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @175, i32 0, i32 0), i32 103, i32 -1, i32 8)
  %18 = load i32*, i32** %d1.addr, align 8, !dbg !2283
  %19 = ptrtoint i32** %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @176, i32 0, i32 0), i32 103, i32 -1, i32 8)
  %20 = load i32*, i32** %d2.addr, align 8, !dbg !2283
  %21 = ptrtoint i64* %vla.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @177, i32 0, i32 0), i32 103, i32 -1, i32 8)
  %22 = load i64, i64* %vla.addr, align 8, !dbg !2283
  %23 = ptrtoint i64* %vla.addr2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @178, i32 0, i32 0), i32 103, i32 -1, i32 8)
  %24 = load i64, i64* %vla.addr2, align 8, !dbg !2283
  %25 = ptrtoint i32** %is.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @179, i32 0, i32 0), i32 103, i32 -1, i32 8)
  %26 = load i32*, i32** %is.addr, align 8, !dbg !2283
  %27 = ptrtoint i32** %logd2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @180, i32 0, i32 0), i32 103, i32 -1, i32 8)
  %28 = load i32*, i32** %logd2.addr, align 8, !dbg !2283
  %29 = ptrtoint i64* %vla.addr4 to i64
  call void @__DiscoPoPOpenMPRead(i64 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @181, i32 0, i32 0), i32 103, i32 -1, i32 8)
  %30 = load i64, i64* %vla.addr4, align 8, !dbg !2283
  %31 = ptrtoint i64* %vla.addr6 to i64
  call void @__DiscoPoPOpenMPRead(i64 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @182, i32 0, i32 0), i32 103, i32 -1, i32 8)
  %32 = load i64, i64* %vla.addr6, align 8, !dbg !2283
  call void @llvm.dbg.declare(metadata i32* %.omp.iv, metadata !2284, metadata !98), !dbg !2270
  call void @llvm.dbg.declare(metadata i32* %.capture_expr., metadata !2285, metadata !98), !dbg !2270
  %33 = ptrtoint i32* %16 to i64
  call void @__DiscoPoPOpenMPRead(i64 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @183, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %34 = load i32, i32* %16, align 4, !dbg !2286
  %35 = ptrtoint i32* %.capture_expr. to i64
  call void @__DiscoPoPOpenMPWrite(i64 %35)
  store i32 %34, i32* %.capture_expr., align 4, !dbg !2270
  call void @llvm.dbg.declare(metadata i32* %.capture_expr.7, metadata !2285, metadata !98), !dbg !2270
  %36 = ptrtoint i32* %.capture_expr. to i64
  call void @__DiscoPoPOpenMPRead(i64 %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @184, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %37 = load i32, i32* %.capture_expr., align 4, !dbg !2286
  %sub = sub nsw i32 %37, 0, !dbg !2283
  %sub8 = sub nsw i32 %sub, 1, !dbg !2283
  %add = add nsw i32 %sub8, 1, !dbg !2283
  %div = sdiv i32 %add, 1, !dbg !2283
  %sub9 = sub nsw i32 %div, 1, !dbg !2270
  %38 = ptrtoint i32* %.capture_expr.7 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %38)
  store i32 %sub9, i32* %.capture_expr.7, align 4, !dbg !2270
  call void @llvm.dbg.declare(metadata i32* %k, metadata !2287, metadata !98), !dbg !2270
  %39 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPWrite(i64 %39)
  store i32 0, i32* %k, align 4, !dbg !2288
  %40 = ptrtoint i32* %.capture_expr. to i64
  call void @__DiscoPoPOpenMPRead(i64 %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @185, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %41 = load i32, i32* %.capture_expr., align 4, !dbg !2286
  %cmp = icmp slt i32 0, %41, !dbg !2283
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end, !dbg !2283

omp.precond.then:                                 ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %.omp.lb, metadata !2289, metadata !98), !dbg !2270
  %42 = ptrtoint i32* %.omp.lb to i64
  call void @__DiscoPoPOpenMPWrite(i64 %42)
  store i32 0, i32* %.omp.lb, align 4, !dbg !2290
  call void @llvm.dbg.declare(metadata i32* %.omp.ub, metadata !2292, metadata !98), !dbg !2270
  %43 = ptrtoint i32* %.capture_expr.7 to i64
  call void @__DiscoPoPOpenMPRead(i64 %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @186, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %44 = load i32, i32* %.capture_expr.7, align 4, !dbg !2293
  %45 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPWrite(i64 %45)
  store i32 %44, i32* %.omp.ub, align 4, !dbg !2290
  call void @llvm.dbg.declare(metadata i32* %.omp.stride, metadata !2294, metadata !98), !dbg !2270
  %46 = ptrtoint i32* %.omp.stride to i64
  call void @__DiscoPoPOpenMPWrite(i64 %46)
  store i32 1, i32* %.omp.stride, align 4, !dbg !2290
  call void @llvm.dbg.declare(metadata i32* %.omp.is_last, metadata !2295, metadata !98), !dbg !2270
  %47 = ptrtoint i32* %.omp.is_last to i64
  call void @__DiscoPoPOpenMPWrite(i64 %47)
  store i32 0, i32* %.omp.is_last, align 4, !dbg !2290
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2296, metadata !98), !dbg !2270
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2297, metadata !98), !dbg !2270
  call void @llvm.dbg.declare(metadata i32* %k10, metadata !2287, metadata !98), !dbg !2270
  call void @llvm.dbg.declare(metadata i32* %ii, metadata !2298, metadata !98), !dbg !2270
  %48 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !2299
  %49 = ptrtoint i8** %48 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %49)
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @9, i32 0, i32 0), i8** %48, align 8, !dbg !2299
  %50 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @187, i32 0, i32 0), i32 103, i32 -1, i32 8)
  %51 = load i32*, i32** %.global_tid..addr, align 8, !dbg !2299
  %52 = ptrtoint i32* %51 to i64
  call void @__DiscoPoPOpenMPRead(i64 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @188, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %53 = load i32, i32* %51, align 4, !dbg !2299
  call void @__kmpc_for_static_init_4(%ident_t* %.kmpc_loc.addr, i32 %53, i32 34, i32* %.omp.is_last, i32* %.omp.lb, i32* %.omp.ub, i32* %.omp.stride, i32 1, i32 1), !dbg !2299
  %54 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @189, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %55 = load i32, i32* %.omp.ub, align 4, !dbg !2290
  %56 = ptrtoint i32* %.capture_expr.7 to i64
  call void @__DiscoPoPOpenMPRead(i64 %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @190, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %57 = load i32, i32* %.capture_expr.7, align 4, !dbg !2293
  %cmp11 = icmp sgt i32 %55, %57, !dbg !2290
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !2290

cond.true:                                        ; preds = %omp.precond.then
  %58 = ptrtoint i32* %.capture_expr.7 to i64
  call void @__DiscoPoPOpenMPRead(i64 %58, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @191, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %59 = load i32, i32* %.capture_expr.7, align 4, !dbg !2300
  br label %cond.end, !dbg !2302

cond.false:                                       ; preds = %omp.precond.then
  %60 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %60, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @192, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %61 = load i32, i32* %.omp.ub, align 4, !dbg !2303
  br label %cond.end, !dbg !2303

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %59, %cond.true ], [ %61, %cond.false ], !dbg !2305
  %62 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPWrite(i64 %62)
  store i32 %cond, i32* %.omp.ub, align 4, !dbg !2305
  %63 = ptrtoint i32* %.omp.lb to i64
  call void @__DiscoPoPOpenMPRead(i64 %63, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @193, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %64 = load i32, i32* %.omp.lb, align 4, !dbg !2305
  %65 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPWrite(i64 %65)
  store i32 %64, i32* %.omp.iv, align 4, !dbg !2305
  br label %omp.inner.for.cond, !dbg !2307

omp.inner.for.cond:                               ; preds = %omp.inner.for.inc, %cond.end
  %66 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPRead(i64 %66, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @194, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %67 = load i32, i32* %.omp.iv, align 4, !dbg !2308
  %68 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %68, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @195, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %69 = load i32, i32* %.omp.ub, align 4, !dbg !2308
  %cmp12 = icmp sle i32 %67, %69, !dbg !2310
  br i1 %cmp12, label %omp.inner.for.body, label %omp.inner.for.end, !dbg !2311

omp.inner.for.body:                               ; preds = %omp.inner.for.cond
  %70 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPRead(i64 %70, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @196, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %71 = load i32, i32* %.omp.iv, align 4, !dbg !2312
  %mul = mul nsw i32 %71, 1, !dbg !2314
  %add13 = add nsw i32 0, %mul, !dbg !2314
  %72 = ptrtoint i32* %k10 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %72)
  store i32 %add13, i32* %k10, align 4, !dbg !2314
  %73 = ptrtoint i32* %ii to i64
  call void @__DiscoPoPOpenMPWrite(i64 %73)
  store i32 0, i32* %ii, align 4, !dbg !2315
  br label %for.cond, !dbg !2318

for.cond:                                         ; preds = %for.inc58, %omp.inner.for.body
  %74 = ptrtoint i32* %ii to i64
  call void @__DiscoPoPOpenMPRead(i64 %74, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @197, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %75 = load i32, i32* %ii, align 4, !dbg !2319
  %76 = ptrtoint i32* %18 to i64
  call void @__DiscoPoPOpenMPRead(i64 %76, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @198, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %77 = load i32, i32* %18, align 4, !dbg !2322
  %78 = ptrtoint i32* @fftblock to i64
  call void @__DiscoPoPOpenMPRead(i64 %78, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @199, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %79 = load i32, i32* @fftblock, align 4, !dbg !2323
  %sub14 = sub nsw i32 %77, %79, !dbg !2324
  %cmp15 = icmp sle i32 %75, %sub14, !dbg !2325
  br i1 %cmp15, label %for.body, label %for.end60, !dbg !2326

for.body:                                         ; preds = %for.cond
  %80 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPWrite(i64 %80)
  store i32 0, i32* %j, align 4, !dbg !2327
  br label %for.cond16, !dbg !2330

for.cond16:                                       ; preds = %for.inc31, %for.body
  %81 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %81, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @200, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %82 = load i32, i32* %j, align 4, !dbg !2331
  %83 = ptrtoint i32* %20 to i64
  call void @__DiscoPoPOpenMPRead(i64 %83, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @201, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %84 = load i32, i32* %20, align 4, !dbg !2334
  %cmp17 = icmp slt i32 %82, %84, !dbg !2335
  br i1 %cmp17, label %for.body18, label %for.end33, !dbg !2336

for.body18:                                       ; preds = %for.cond16
  %85 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %85)
  store i32 0, i32* %i, align 4, !dbg !2337
  br label %for.cond19, !dbg !2340

for.cond19:                                       ; preds = %for.inc, %for.body18
  %86 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %86, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @202, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %87 = load i32, i32* %i, align 4, !dbg !2341
  %88 = ptrtoint i32* @fftblock to i64
  call void @__DiscoPoPOpenMPRead(i64 %88, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @203, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %89 = load i32, i32* @fftblock, align 4, !dbg !2344
  %cmp20 = icmp slt i32 %87, %89, !dbg !2345
  br i1 %cmp20, label %for.body21, label %for.end, !dbg !2346

for.body21:                                       ; preds = %for.cond19
  %90 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %90, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @204, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %91 = load i32, i32* %i, align 4, !dbg !2347
  %idxprom = sext i32 %91 to i64, !dbg !2349
  %92 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %92, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @205, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %93 = load i32, i32* %j, align 4, !dbg !2350
  %idxprom22 = sext i32 %93 to i64, !dbg !2349
  %94 = call [64 x [33 x %struct.dcomplex]]* @_ZTWL3ty1(), !dbg !2349
  %arrayidx = getelementptr inbounds [64 x [33 x %struct.dcomplex]], [64 x [33 x %struct.dcomplex]]* %94, i64 0, i64 %idxprom22, !dbg !2349
  %arrayidx23 = getelementptr inbounds [33 x %struct.dcomplex], [33 x %struct.dcomplex]* %arrayidx, i64 0, i64 %idxprom, !dbg !2349
  %95 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %95, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @206, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %96 = load i32, i32* %i, align 4, !dbg !2351
  %97 = ptrtoint i32* %ii to i64
  call void @__DiscoPoPOpenMPRead(i64 %97, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @207, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %98 = load i32, i32* %ii, align 4, !dbg !2352
  %add24 = add nsw i32 %96, %98, !dbg !2353
  %idxprom25 = sext i32 %add24 to i64, !dbg !2354
  %99 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %99, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @208, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %100 = load i32, i32* %j, align 4, !dbg !2355
  %idxprom26 = sext i32 %100 to i64, !dbg !2354
  %101 = ptrtoint i32* %k10 to i64
  call void @__DiscoPoPOpenMPRead(i64 %101, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @209, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %102 = load i32, i32* %k10, align 4, !dbg !2356
  %idxprom27 = sext i32 %102 to i64, !dbg !2354
  %103 = ptrtoint %struct.dcomplex** %x.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %103, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @210, i32 0, i32 0), i32 103, i32 -1, i32 8)
  %104 = load %struct.dcomplex*, %struct.dcomplex** %x.addr, align 8, !dbg !2354
  %105 = mul nuw i64 %22, %24, !dbg !2354
  %106 = mul nsw i64 %idxprom27, %105, !dbg !2354
  %arrayidx28 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %104, i64 %106, !dbg !2354
  %107 = mul nsw i64 %idxprom26, %24, !dbg !2354
  %arrayidx29 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx28, i64 %107, !dbg !2354
  %arrayidx30 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx29, i64 %idxprom25, !dbg !2354
  %108 = bitcast %struct.dcomplex* %arrayidx23 to i8*, !dbg !2354
  %109 = bitcast %struct.dcomplex* %arrayidx30 to i8*, !dbg !2354
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %108, i8* %109, i64 16, i32 8, i1 false), !dbg !2357
  br label %for.inc, !dbg !2359

for.inc:                                          ; preds = %for.body21
  %110 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %110, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @211, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %111 = load i32, i32* %i, align 4, !dbg !2360
  %inc = add nsw i32 %111, 1, !dbg !2360
  %112 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %112)
  store i32 %inc, i32* %i, align 4, !dbg !2360
  br label %for.cond19, !dbg !2362, !llvm.loop !2363

for.end:                                          ; preds = %for.cond19
  br label %for.inc31, !dbg !2365

for.inc31:                                        ; preds = %for.end
  %113 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %113, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @212, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %114 = load i32, i32* %j, align 4, !dbg !2366
  %inc32 = add nsw i32 %114, 1, !dbg !2366
  %115 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPWrite(i64 %115)
  store i32 %inc32, i32* %j, align 4, !dbg !2366
  br label %for.cond16, !dbg !2368, !llvm.loop !2369

for.end33:                                        ; preds = %for.cond16
  %116 = ptrtoint i32* %26 to i64
  call void @__DiscoPoPOpenMPRead(i64 %116, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @213, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %117 = load i32, i32* %26, align 4, !dbg !2371
  %118 = ptrtoint i32* %28 to i64
  call void @__DiscoPoPOpenMPRead(i64 %118, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @214, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %119 = load i32, i32* %28, align 4, !dbg !2372
  %120 = ptrtoint i32* %20 to i64
  call void @__DiscoPoPOpenMPRead(i64 %120, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @215, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %121 = load i32, i32* %20, align 4, !dbg !2373
  %122 = call [64 x [33 x %struct.dcomplex]]* @_ZTWL3ty1(), !dbg !2374
  %arraydecay = getelementptr inbounds [64 x [33 x %struct.dcomplex]], [64 x [33 x %struct.dcomplex]]* %122, i32 0, i32 0, !dbg !2374
  %123 = bitcast [33 x %struct.dcomplex]* %arraydecay to %struct.dcomplex*, !dbg !2374
  %124 = call [64 x [33 x %struct.dcomplex]]* @_ZTWL3ty2(), !dbg !2375
  %arraydecay34 = getelementptr inbounds [64 x [33 x %struct.dcomplex]], [64 x [33 x %struct.dcomplex]]* %124, i32 0, i32 0, !dbg !2377
  %125 = bitcast [33 x %struct.dcomplex]* %arraydecay34 to %struct.dcomplex*, !dbg !2377
  call void @cfftz(i32 %117, i32 %119, i32 %121, %struct.dcomplex* %123, %struct.dcomplex* %125), !dbg !2378
  %126 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPWrite(i64 %126)
  store i32 0, i32* %j, align 4, !dbg !2380
  br label %for.cond35, !dbg !2382

for.cond35:                                       ; preds = %for.inc55, %for.end33
  %127 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %127, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @216, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %128 = load i32, i32* %j, align 4, !dbg !2383
  %129 = ptrtoint i32* %20 to i64
  call void @__DiscoPoPOpenMPRead(i64 %129, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @217, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %130 = load i32, i32* %20, align 4, !dbg !2386
  %cmp36 = icmp slt i32 %128, %130, !dbg !2387
  br i1 %cmp36, label %for.body37, label %for.end57, !dbg !2388

for.body37:                                       ; preds = %for.cond35
  %131 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %131)
  store i32 0, i32* %i, align 4, !dbg !2389
  br label %for.cond38, !dbg !2392

for.cond38:                                       ; preds = %for.inc52, %for.body37
  %132 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %132, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @218, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %133 = load i32, i32* %i, align 4, !dbg !2393
  %134 = ptrtoint i32* @fftblock to i64
  call void @__DiscoPoPOpenMPRead(i64 %134, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @219, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %135 = load i32, i32* @fftblock, align 4, !dbg !2396
  %cmp39 = icmp slt i32 %133, %135, !dbg !2397
  br i1 %cmp39, label %for.body40, label %for.end54, !dbg !2398

for.body40:                                       ; preds = %for.cond38
  %136 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %136, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @220, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %137 = load i32, i32* %i, align 4, !dbg !2399
  %138 = ptrtoint i32* %ii to i64
  call void @__DiscoPoPOpenMPRead(i64 %138, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @221, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %139 = load i32, i32* %ii, align 4, !dbg !2401
  %add41 = add nsw i32 %137, %139, !dbg !2402
  %idxprom42 = sext i32 %add41 to i64, !dbg !2403
  %140 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %140, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @222, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %141 = load i32, i32* %j, align 4, !dbg !2404
  %idxprom43 = sext i32 %141 to i64, !dbg !2403
  %142 = ptrtoint i32* %k10 to i64
  call void @__DiscoPoPOpenMPRead(i64 %142, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @223, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %143 = load i32, i32* %k10, align 4, !dbg !2405
  %idxprom44 = sext i32 %143 to i64, !dbg !2403
  %144 = ptrtoint %struct.dcomplex** %xout.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %144, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @224, i32 0, i32 0), i32 103, i32 -1, i32 8)
  %145 = load %struct.dcomplex*, %struct.dcomplex** %xout.addr, align 8, !dbg !2403
  %146 = mul nuw i64 %30, %32, !dbg !2403
  %147 = mul nsw i64 %idxprom44, %146, !dbg !2403
  %arrayidx45 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %145, i64 %147, !dbg !2403
  %148 = mul nsw i64 %idxprom43, %32, !dbg !2403
  %arrayidx46 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx45, i64 %148, !dbg !2403
  %arrayidx47 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx46, i64 %idxprom42, !dbg !2403
  %149 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %149, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @225, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %150 = load i32, i32* %i, align 4, !dbg !2406
  %idxprom48 = sext i32 %150 to i64, !dbg !2407
  %151 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %151, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @226, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %152 = load i32, i32* %j, align 4, !dbg !2408
  %idxprom49 = sext i32 %152 to i64, !dbg !2407
  %153 = call [64 x [33 x %struct.dcomplex]]* @_ZTWL3ty1(), !dbg !2407
  %arrayidx50 = getelementptr inbounds [64 x [33 x %struct.dcomplex]], [64 x [33 x %struct.dcomplex]]* %153, i64 0, i64 %idxprom49, !dbg !2407
  %arrayidx51 = getelementptr inbounds [33 x %struct.dcomplex], [33 x %struct.dcomplex]* %arrayidx50, i64 0, i64 %idxprom48, !dbg !2407
  %154 = bitcast %struct.dcomplex* %arrayidx47 to i8*, !dbg !2407
  %155 = bitcast %struct.dcomplex* %arrayidx51 to i8*, !dbg !2407
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %154, i8* %155, i64 16, i32 8, i1 false), !dbg !2409
  br label %for.inc52, !dbg !2411

for.inc52:                                        ; preds = %for.body40
  %156 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %156, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @227, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %157 = load i32, i32* %i, align 4, !dbg !2412
  %inc53 = add nsw i32 %157, 1, !dbg !2412
  %158 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %158)
  store i32 %inc53, i32* %i, align 4, !dbg !2412
  br label %for.cond38, !dbg !2414, !llvm.loop !2415

for.end54:                                        ; preds = %for.cond38
  br label %for.inc55, !dbg !2417

for.inc55:                                        ; preds = %for.end54
  %159 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %159, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @228, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %160 = load i32, i32* %j, align 4, !dbg !2418
  %inc56 = add nsw i32 %160, 1, !dbg !2418
  %161 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPWrite(i64 %161)
  store i32 %inc56, i32* %j, align 4, !dbg !2418
  br label %for.cond35, !dbg !2420, !llvm.loop !2421

for.end57:                                        ; preds = %for.cond35
  br label %for.inc58, !dbg !2423

for.inc58:                                        ; preds = %for.end57
  %162 = ptrtoint i32* @fftblock to i64
  call void @__DiscoPoPOpenMPRead(i64 %162, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @229, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %163 = load i32, i32* @fftblock, align 4, !dbg !2424
  %164 = ptrtoint i32* %ii to i64
  call void @__DiscoPoPOpenMPRead(i64 %164, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @230, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %165 = load i32, i32* %ii, align 4, !dbg !2426
  %add59 = add nsw i32 %165, %163, !dbg !2426
  %166 = ptrtoint i32* %ii to i64
  call void @__DiscoPoPOpenMPWrite(i64 %166)
  store i32 %add59, i32* %ii, align 4, !dbg !2426
  br label %for.cond, !dbg !2427, !llvm.loop !2428

for.end60:                                        ; preds = %for.cond
  br label %omp.body.continue, !dbg !2430

omp.body.continue:                                ; preds = %for.end60
  br label %omp.inner.for.inc, !dbg !2431

omp.inner.for.inc:                                ; preds = %omp.body.continue
  %167 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPRead(i64 %167, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @231, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %168 = load i32, i32* %.omp.iv, align 4, !dbg !2432
  %add61 = add nsw i32 %168, 1, !dbg !2434
  %169 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPWrite(i64 %169)
  store i32 %add61, i32* %.omp.iv, align 4, !dbg !2434
  br label %omp.inner.for.cond, !dbg !2435, !llvm.loop !2436

omp.inner.for.end:                                ; preds = %omp.inner.for.cond
  br label %omp.loop.exit, !dbg !2437

omp.loop.exit:                                    ; preds = %omp.inner.for.end
  %170 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !2438
  %171 = ptrtoint i8** %170 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %171)
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @10, i32 0, i32 0), i8** %170, align 8, !dbg !2438
  %172 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %172, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @232, i32 0, i32 0), i32 103, i32 -1, i32 8)
  %173 = load i32*, i32** %.global_tid..addr, align 8, !dbg !2438
  %174 = ptrtoint i32* %173 to i64
  call void @__DiscoPoPOpenMPRead(i64 %174, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @233, i32 0, i32 0), i32 103, i32 -1, i32 4)
  %175 = load i32, i32* %173, align 4, !dbg !2438
  call void @__kmpc_for_static_fini(%ident_t* %.kmpc_loc.addr, i32 %175), !dbg !2438
  br label %omp.precond.end, !dbg !2438

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void, !dbg !2439
}

; Function Attrs: nounwind uwtable
define internal void @.omp_outlined..27(i32* noalias %.global_tid., i32* noalias %.bound_tid., i32* dereferenceable(4) %d3, i32* dereferenceable(4) %d2, i32* dereferenceable(4) %d1, i64 %vla, i64 %vla1, %struct.dcomplex* %x, i32* dereferenceable(4) %is, i32* dereferenceable(4) %logd1, i64 %vla3, i64 %vla5, %struct.dcomplex* %xout) #0 !dbg !2440 !omp.region.ID !2441 {
entry:
  %.global_tid..addr = alloca i32*, align 8
  %.bound_tid..addr = alloca i32*, align 8
  %d3.addr = alloca i32*, align 8
  %d2.addr = alloca i32*, align 8
  %d1.addr = alloca i32*, align 8
  %vla.addr = alloca i64, align 8
  %vla.addr2 = alloca i64, align 8
  %x.addr = alloca %struct.dcomplex*, align 8
  %is.addr = alloca i32*, align 8
  %logd1.addr = alloca i32*, align 8
  %vla.addr4 = alloca i64, align 8
  %vla.addr6 = alloca i64, align 8
  %xout.addr = alloca %struct.dcomplex*, align 8
  %.omp.iv = alloca i32, align 4
  %.capture_expr. = alloca i32, align 4
  %.capture_expr.7 = alloca i32, align 4
  %k = alloca i32, align 4
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k10 = alloca i32, align 4
  %jj = alloca i32, align 4
  %.kmpc_loc.addr = alloca %ident_t, align 8
  %0 = bitcast %ident_t* %.kmpc_loc.addr to i8*
  %1 = bitcast %ident_t* @0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 24, i32 8, i1 false)
  %2 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store i32* %.global_tid., i32** %.global_tid..addr, align 8
  call void @llvm.dbg.declare(metadata i32** %.global_tid..addr, metadata !2442, metadata !98), !dbg !2443
  %3 = ptrtoint i32** %.bound_tid..addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store i32* %.bound_tid., i32** %.bound_tid..addr, align 8
  call void @llvm.dbg.declare(metadata i32** %.bound_tid..addr, metadata !2444, metadata !98), !dbg !2443
  %4 = ptrtoint i32** %d3.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store i32* %d3, i32** %d3.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %d3.addr, metadata !2445, metadata !98), !dbg !2443
  %5 = ptrtoint i32** %d2.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store i32* %d2, i32** %d2.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %d2.addr, metadata !2446, metadata !98), !dbg !2443
  %6 = ptrtoint i32** %d1.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %6)
  store i32* %d1, i32** %d1.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %d1.addr, metadata !2447, metadata !98), !dbg !2443
  %7 = ptrtoint i64* %vla.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %7)
  store i64 %vla, i64* %vla.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr, metadata !2448, metadata !98), !dbg !2443
  %8 = ptrtoint i64* %vla.addr2 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %8)
  store i64 %vla1, i64* %vla.addr2, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr2, metadata !2449, metadata !98), !dbg !2443
  %9 = ptrtoint %struct.dcomplex** %x.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %9)
  store %struct.dcomplex* %x, %struct.dcomplex** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %x.addr, metadata !2450, metadata !98), !dbg !2443
  %10 = ptrtoint i32** %is.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %10)
  store i32* %is, i32** %is.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %is.addr, metadata !2451, metadata !98), !dbg !2443
  %11 = ptrtoint i32** %logd1.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %11)
  store i32* %logd1, i32** %logd1.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %logd1.addr, metadata !2452, metadata !98), !dbg !2443
  %12 = ptrtoint i64* %vla.addr4 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %12)
  store i64 %vla3, i64* %vla.addr4, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr4, metadata !2453, metadata !98), !dbg !2443
  %13 = ptrtoint i64* %vla.addr6 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %13)
  store i64 %vla5, i64* %vla.addr6, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr6, metadata !2454, metadata !98), !dbg !2443
  %14 = ptrtoint %struct.dcomplex** %xout.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %14)
  store %struct.dcomplex* %xout, %struct.dcomplex** %xout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %xout.addr, metadata !2455, metadata !98), !dbg !2443
  %15 = ptrtoint i32** %d3.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %15, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.731, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %16 = load i32*, i32** %d3.addr, align 8, !dbg !2456
  %17 = ptrtoint i32** %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @234, i32 0, i32 0), i32 104, i32 -1, i32 8)
  %18 = load i32*, i32** %d2.addr, align 8, !dbg !2456
  %19 = ptrtoint i32** %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @235, i32 0, i32 0), i32 104, i32 -1, i32 8)
  %20 = load i32*, i32** %d1.addr, align 8, !dbg !2456
  %21 = ptrtoint i64* %vla.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @236, i32 0, i32 0), i32 104, i32 -1, i32 8)
  %22 = load i64, i64* %vla.addr, align 8, !dbg !2456
  %23 = ptrtoint i64* %vla.addr2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @237, i32 0, i32 0), i32 104, i32 -1, i32 8)
  %24 = load i64, i64* %vla.addr2, align 8, !dbg !2456
  %25 = ptrtoint i32** %is.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @238, i32 0, i32 0), i32 104, i32 -1, i32 8)
  %26 = load i32*, i32** %is.addr, align 8, !dbg !2456
  %27 = ptrtoint i32** %logd1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @239, i32 0, i32 0), i32 104, i32 -1, i32 8)
  %28 = load i32*, i32** %logd1.addr, align 8, !dbg !2456
  %29 = ptrtoint i64* %vla.addr4 to i64
  call void @__DiscoPoPOpenMPRead(i64 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @240, i32 0, i32 0), i32 104, i32 -1, i32 8)
  %30 = load i64, i64* %vla.addr4, align 8, !dbg !2456
  %31 = ptrtoint i64* %vla.addr6 to i64
  call void @__DiscoPoPOpenMPRead(i64 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @241, i32 0, i32 0), i32 104, i32 -1, i32 8)
  %32 = load i64, i64* %vla.addr6, align 8, !dbg !2456
  call void @llvm.dbg.declare(metadata i32* %.omp.iv, metadata !2457, metadata !98), !dbg !2443
  call void @llvm.dbg.declare(metadata i32* %.capture_expr., metadata !2458, metadata !98), !dbg !2443
  %33 = ptrtoint i32* %16 to i64
  call void @__DiscoPoPOpenMPRead(i64 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @242, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %34 = load i32, i32* %16, align 4, !dbg !2459
  %35 = ptrtoint i32* %.capture_expr. to i64
  call void @__DiscoPoPOpenMPWrite(i64 %35)
  store i32 %34, i32* %.capture_expr., align 4, !dbg !2443
  call void @llvm.dbg.declare(metadata i32* %.capture_expr.7, metadata !2458, metadata !98), !dbg !2443
  %36 = ptrtoint i32* %.capture_expr. to i64
  call void @__DiscoPoPOpenMPRead(i64 %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @243, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %37 = load i32, i32* %.capture_expr., align 4, !dbg !2459
  %sub = sub nsw i32 %37, 0, !dbg !2456
  %sub8 = sub nsw i32 %sub, 1, !dbg !2456
  %add = add nsw i32 %sub8, 1, !dbg !2456
  %div = sdiv i32 %add, 1, !dbg !2456
  %sub9 = sub nsw i32 %div, 1, !dbg !2443
  %38 = ptrtoint i32* %.capture_expr.7 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %38)
  store i32 %sub9, i32* %.capture_expr.7, align 4, !dbg !2443
  call void @llvm.dbg.declare(metadata i32* %k, metadata !2460, metadata !98), !dbg !2443
  %39 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPWrite(i64 %39)
  store i32 0, i32* %k, align 4, !dbg !2461
  %40 = ptrtoint i32* %.capture_expr. to i64
  call void @__DiscoPoPOpenMPRead(i64 %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @244, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %41 = load i32, i32* %.capture_expr., align 4, !dbg !2459
  %cmp = icmp slt i32 0, %41, !dbg !2456
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end, !dbg !2456

omp.precond.then:                                 ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %.omp.lb, metadata !2462, metadata !98), !dbg !2443
  %42 = ptrtoint i32* %.omp.lb to i64
  call void @__DiscoPoPOpenMPWrite(i64 %42)
  store i32 0, i32* %.omp.lb, align 4, !dbg !2463
  call void @llvm.dbg.declare(metadata i32* %.omp.ub, metadata !2465, metadata !98), !dbg !2443
  %43 = ptrtoint i32* %.capture_expr.7 to i64
  call void @__DiscoPoPOpenMPRead(i64 %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @245, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %44 = load i32, i32* %.capture_expr.7, align 4, !dbg !2466
  %45 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPWrite(i64 %45)
  store i32 %44, i32* %.omp.ub, align 4, !dbg !2463
  call void @llvm.dbg.declare(metadata i32* %.omp.stride, metadata !2467, metadata !98), !dbg !2443
  %46 = ptrtoint i32* %.omp.stride to i64
  call void @__DiscoPoPOpenMPWrite(i64 %46)
  store i32 1, i32* %.omp.stride, align 4, !dbg !2463
  call void @llvm.dbg.declare(metadata i32* %.omp.is_last, metadata !2468, metadata !98), !dbg !2443
  %47 = ptrtoint i32* %.omp.is_last to i64
  call void @__DiscoPoPOpenMPWrite(i64 %47)
  store i32 0, i32* %.omp.is_last, align 4, !dbg !2463
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2469, metadata !98), !dbg !2443
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2470, metadata !98), !dbg !2443
  call void @llvm.dbg.declare(metadata i32* %k10, metadata !2460, metadata !98), !dbg !2443
  call void @llvm.dbg.declare(metadata i32* %jj, metadata !2471, metadata !98), !dbg !2443
  %48 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !2472
  %49 = ptrtoint i8** %48 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %49)
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @11, i32 0, i32 0), i8** %48, align 8, !dbg !2472
  %50 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @246, i32 0, i32 0), i32 104, i32 -1, i32 8)
  %51 = load i32*, i32** %.global_tid..addr, align 8, !dbg !2472
  %52 = ptrtoint i32* %51 to i64
  call void @__DiscoPoPOpenMPRead(i64 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @247, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %53 = load i32, i32* %51, align 4, !dbg !2472
  call void @__kmpc_for_static_init_4(%ident_t* %.kmpc_loc.addr, i32 %53, i32 34, i32* %.omp.is_last, i32* %.omp.lb, i32* %.omp.ub, i32* %.omp.stride, i32 1, i32 1), !dbg !2472
  %54 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @248, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %55 = load i32, i32* %.omp.ub, align 4, !dbg !2463
  %56 = ptrtoint i32* %.capture_expr.7 to i64
  call void @__DiscoPoPOpenMPRead(i64 %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @249, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %57 = load i32, i32* %.capture_expr.7, align 4, !dbg !2466
  %cmp11 = icmp sgt i32 %55, %57, !dbg !2463
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !2463

cond.true:                                        ; preds = %omp.precond.then
  %58 = ptrtoint i32* %.capture_expr.7 to i64
  call void @__DiscoPoPOpenMPRead(i64 %58, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @250, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %59 = load i32, i32* %.capture_expr.7, align 4, !dbg !2473
  br label %cond.end, !dbg !2475

cond.false:                                       ; preds = %omp.precond.then
  %60 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %60, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @251, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %61 = load i32, i32* %.omp.ub, align 4, !dbg !2476
  br label %cond.end, !dbg !2476

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %59, %cond.true ], [ %61, %cond.false ], !dbg !2478
  %62 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPWrite(i64 %62)
  store i32 %cond, i32* %.omp.ub, align 4, !dbg !2478
  %63 = ptrtoint i32* %.omp.lb to i64
  call void @__DiscoPoPOpenMPRead(i64 %63, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @252, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %64 = load i32, i32* %.omp.lb, align 4, !dbg !2478
  %65 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPWrite(i64 %65)
  store i32 %64, i32* %.omp.iv, align 4, !dbg !2478
  br label %omp.inner.for.cond, !dbg !2480

omp.inner.for.cond:                               ; preds = %omp.inner.for.inc, %cond.end
  %66 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPRead(i64 %66, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @253, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %67 = load i32, i32* %.omp.iv, align 4, !dbg !2481
  %68 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %68, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @254, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %69 = load i32, i32* %.omp.ub, align 4, !dbg !2481
  %cmp12 = icmp sle i32 %67, %69, !dbg !2483
  br i1 %cmp12, label %omp.inner.for.body, label %omp.inner.for.end, !dbg !2484

omp.inner.for.body:                               ; preds = %omp.inner.for.cond
  %70 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPRead(i64 %70, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @255, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %71 = load i32, i32* %.omp.iv, align 4, !dbg !2485
  %mul = mul nsw i32 %71, 1, !dbg !2487
  %add13 = add nsw i32 0, %mul, !dbg !2487
  %72 = ptrtoint i32* %k10 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %72)
  store i32 %add13, i32* %k10, align 4, !dbg !2487
  %73 = ptrtoint i32* %jj to i64
  call void @__DiscoPoPOpenMPWrite(i64 %73)
  store i32 0, i32* %jj, align 4, !dbg !2488
  br label %for.cond, !dbg !2491

for.cond:                                         ; preds = %for.inc58, %omp.inner.for.body
  %74 = ptrtoint i32* %jj to i64
  call void @__DiscoPoPOpenMPRead(i64 %74, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @256, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %75 = load i32, i32* %jj, align 4, !dbg !2492
  %76 = ptrtoint i32* %18 to i64
  call void @__DiscoPoPOpenMPRead(i64 %76, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @257, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %77 = load i32, i32* %18, align 4, !dbg !2495
  %78 = ptrtoint i32* @fftblock to i64
  call void @__DiscoPoPOpenMPRead(i64 %78, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @258, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %79 = load i32, i32* @fftblock, align 4, !dbg !2496
  %sub14 = sub nsw i32 %77, %79, !dbg !2497
  %cmp15 = icmp sle i32 %75, %sub14, !dbg !2498
  br i1 %cmp15, label %for.body, label %for.end60, !dbg !2499

for.body:                                         ; preds = %for.cond
  %80 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPWrite(i64 %80)
  store i32 0, i32* %j, align 4, !dbg !2500
  br label %for.cond16, !dbg !2503

for.cond16:                                       ; preds = %for.inc31, %for.body
  %81 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %81, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @259, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %82 = load i32, i32* %j, align 4, !dbg !2504
  %83 = ptrtoint i32* @fftblock to i64
  call void @__DiscoPoPOpenMPRead(i64 %83, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @260, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %84 = load i32, i32* @fftblock, align 4, !dbg !2507
  %cmp17 = icmp slt i32 %82, %84, !dbg !2508
  br i1 %cmp17, label %for.body18, label %for.end33, !dbg !2509

for.body18:                                       ; preds = %for.cond16
  %85 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %85)
  store i32 0, i32* %i, align 4, !dbg !2510
  br label %for.cond19, !dbg !2513

for.cond19:                                       ; preds = %for.inc, %for.body18
  %86 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %86, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @261, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %87 = load i32, i32* %i, align 4, !dbg !2514
  %88 = ptrtoint i32* %20 to i64
  call void @__DiscoPoPOpenMPRead(i64 %88, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @262, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %89 = load i32, i32* %20, align 4, !dbg !2517
  %cmp20 = icmp slt i32 %87, %89, !dbg !2518
  br i1 %cmp20, label %for.body21, label %for.end, !dbg !2519

for.body21:                                       ; preds = %for.cond19
  %90 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %90, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @263, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %91 = load i32, i32* %j, align 4, !dbg !2520
  %idxprom = sext i32 %91 to i64, !dbg !2522
  %92 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %92, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @264, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %93 = load i32, i32* %i, align 4, !dbg !2523
  %idxprom22 = sext i32 %93 to i64, !dbg !2522
  %94 = call [64 x [33 x %struct.dcomplex]]* @_ZTWL3ty1(), !dbg !2522
  %arrayidx = getelementptr inbounds [64 x [33 x %struct.dcomplex]], [64 x [33 x %struct.dcomplex]]* %94, i64 0, i64 %idxprom22, !dbg !2522
  %arrayidx23 = getelementptr inbounds [33 x %struct.dcomplex], [33 x %struct.dcomplex]* %arrayidx, i64 0, i64 %idxprom, !dbg !2522
  %95 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %95, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @265, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %96 = load i32, i32* %i, align 4, !dbg !2524
  %idxprom24 = sext i32 %96 to i64, !dbg !2525
  %97 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %97, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @266, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %98 = load i32, i32* %j, align 4, !dbg !2526
  %99 = ptrtoint i32* %jj to i64
  call void @__DiscoPoPOpenMPRead(i64 %99, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @267, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %100 = load i32, i32* %jj, align 4, !dbg !2527
  %add25 = add nsw i32 %98, %100, !dbg !2528
  %idxprom26 = sext i32 %add25 to i64, !dbg !2525
  %101 = ptrtoint i32* %k10 to i64
  call void @__DiscoPoPOpenMPRead(i64 %101, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @268, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %102 = load i32, i32* %k10, align 4, !dbg !2529
  %idxprom27 = sext i32 %102 to i64, !dbg !2525
  %103 = ptrtoint %struct.dcomplex** %x.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %103, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @269, i32 0, i32 0), i32 104, i32 -1, i32 8)
  %104 = load %struct.dcomplex*, %struct.dcomplex** %x.addr, align 8, !dbg !2525
  %105 = mul nuw i64 %22, %24, !dbg !2525
  %106 = mul nsw i64 %idxprom27, %105, !dbg !2525
  %arrayidx28 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %104, i64 %106, !dbg !2525
  %107 = mul nsw i64 %idxprom26, %24, !dbg !2525
  %arrayidx29 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx28, i64 %107, !dbg !2525
  %arrayidx30 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx29, i64 %idxprom24, !dbg !2525
  %108 = bitcast %struct.dcomplex* %arrayidx23 to i8*, !dbg !2525
  %109 = bitcast %struct.dcomplex* %arrayidx30 to i8*, !dbg !2525
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %108, i8* %109, i64 16, i32 8, i1 false), !dbg !2530
  br label %for.inc, !dbg !2532

for.inc:                                          ; preds = %for.body21
  %110 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %110, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @270, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %111 = load i32, i32* %i, align 4, !dbg !2533
  %inc = add nsw i32 %111, 1, !dbg !2533
  %112 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %112)
  store i32 %inc, i32* %i, align 4, !dbg !2533
  br label %for.cond19, !dbg !2535, !llvm.loop !2536

for.end:                                          ; preds = %for.cond19
  br label %for.inc31, !dbg !2538

for.inc31:                                        ; preds = %for.end
  %113 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %113, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @271, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %114 = load i32, i32* %j, align 4, !dbg !2539
  %inc32 = add nsw i32 %114, 1, !dbg !2539
  %115 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPWrite(i64 %115)
  store i32 %inc32, i32* %j, align 4, !dbg !2539
  br label %for.cond16, !dbg !2541, !llvm.loop !2542

for.end33:                                        ; preds = %for.cond16
  %116 = ptrtoint i32* %26 to i64
  call void @__DiscoPoPOpenMPRead(i64 %116, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @272, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %117 = load i32, i32* %26, align 4, !dbg !2544
  %118 = ptrtoint i32* %28 to i64
  call void @__DiscoPoPOpenMPRead(i64 %118, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @273, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %119 = load i32, i32* %28, align 4, !dbg !2545
  %120 = ptrtoint i32* %20 to i64
  call void @__DiscoPoPOpenMPRead(i64 %120, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @274, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %121 = load i32, i32* %20, align 4, !dbg !2546
  %122 = call [64 x [33 x %struct.dcomplex]]* @_ZTWL3ty1(), !dbg !2547
  %arraydecay = getelementptr inbounds [64 x [33 x %struct.dcomplex]], [64 x [33 x %struct.dcomplex]]* %122, i32 0, i32 0, !dbg !2547
  %123 = bitcast [33 x %struct.dcomplex]* %arraydecay to %struct.dcomplex*, !dbg !2547
  %124 = call [64 x [33 x %struct.dcomplex]]* @_ZTWL3ty2(), !dbg !2548
  %arraydecay34 = getelementptr inbounds [64 x [33 x %struct.dcomplex]], [64 x [33 x %struct.dcomplex]]* %124, i32 0, i32 0, !dbg !2550
  %125 = bitcast [33 x %struct.dcomplex]* %arraydecay34 to %struct.dcomplex*, !dbg !2550
  call void @cfftz(i32 %117, i32 %119, i32 %121, %struct.dcomplex* %123, %struct.dcomplex* %125), !dbg !2551
  %126 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPWrite(i64 %126)
  store i32 0, i32* %j, align 4, !dbg !2553
  br label %for.cond35, !dbg !2555

for.cond35:                                       ; preds = %for.inc55, %for.end33
  %127 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %127, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @275, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %128 = load i32, i32* %j, align 4, !dbg !2556
  %129 = ptrtoint i32* @fftblock to i64
  call void @__DiscoPoPOpenMPRead(i64 %129, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @276, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %130 = load i32, i32* @fftblock, align 4, !dbg !2559
  %cmp36 = icmp slt i32 %128, %130, !dbg !2560
  br i1 %cmp36, label %for.body37, label %for.end57, !dbg !2561

for.body37:                                       ; preds = %for.cond35
  %131 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %131)
  store i32 0, i32* %i, align 4, !dbg !2562
  br label %for.cond38, !dbg !2565

for.cond38:                                       ; preds = %for.inc52, %for.body37
  %132 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %132, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @277, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %133 = load i32, i32* %i, align 4, !dbg !2566
  %134 = ptrtoint i32* %20 to i64
  call void @__DiscoPoPOpenMPRead(i64 %134, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @278, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %135 = load i32, i32* %20, align 4, !dbg !2569
  %cmp39 = icmp slt i32 %133, %135, !dbg !2570
  br i1 %cmp39, label %for.body40, label %for.end54, !dbg !2571

for.body40:                                       ; preds = %for.cond38
  %136 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %136, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @279, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %137 = load i32, i32* %i, align 4, !dbg !2572
  %idxprom41 = sext i32 %137 to i64, !dbg !2574
  %138 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %138, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @280, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %139 = load i32, i32* %j, align 4, !dbg !2575
  %140 = ptrtoint i32* %jj to i64
  call void @__DiscoPoPOpenMPRead(i64 %140, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @281, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %141 = load i32, i32* %jj, align 4, !dbg !2576
  %add42 = add nsw i32 %139, %141, !dbg !2577
  %idxprom43 = sext i32 %add42 to i64, !dbg !2574
  %142 = ptrtoint i32* %k10 to i64
  call void @__DiscoPoPOpenMPRead(i64 %142, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @282, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %143 = load i32, i32* %k10, align 4, !dbg !2578
  %idxprom44 = sext i32 %143 to i64, !dbg !2574
  %144 = ptrtoint %struct.dcomplex** %xout.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %144, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @283, i32 0, i32 0), i32 104, i32 -1, i32 8)
  %145 = load %struct.dcomplex*, %struct.dcomplex** %xout.addr, align 8, !dbg !2574
  %146 = mul nuw i64 %30, %32, !dbg !2574
  %147 = mul nsw i64 %idxprom44, %146, !dbg !2574
  %arrayidx45 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %145, i64 %147, !dbg !2574
  %148 = mul nsw i64 %idxprom43, %32, !dbg !2574
  %arrayidx46 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx45, i64 %148, !dbg !2574
  %arrayidx47 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx46, i64 %idxprom41, !dbg !2574
  %149 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %149, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @284, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %150 = load i32, i32* %j, align 4, !dbg !2579
  %idxprom48 = sext i32 %150 to i64, !dbg !2580
  %151 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %151, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @285, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %152 = load i32, i32* %i, align 4, !dbg !2581
  %idxprom49 = sext i32 %152 to i64, !dbg !2580
  %153 = call [64 x [33 x %struct.dcomplex]]* @_ZTWL3ty1(), !dbg !2580
  %arrayidx50 = getelementptr inbounds [64 x [33 x %struct.dcomplex]], [64 x [33 x %struct.dcomplex]]* %153, i64 0, i64 %idxprom49, !dbg !2580
  %arrayidx51 = getelementptr inbounds [33 x %struct.dcomplex], [33 x %struct.dcomplex]* %arrayidx50, i64 0, i64 %idxprom48, !dbg !2580
  %154 = bitcast %struct.dcomplex* %arrayidx47 to i8*, !dbg !2580
  %155 = bitcast %struct.dcomplex* %arrayidx51 to i8*, !dbg !2580
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %154, i8* %155, i64 16, i32 8, i1 false), !dbg !2582
  br label %for.inc52, !dbg !2584

for.inc52:                                        ; preds = %for.body40
  %156 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %156, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @286, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %157 = load i32, i32* %i, align 4, !dbg !2585
  %inc53 = add nsw i32 %157, 1, !dbg !2585
  %158 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %158)
  store i32 %inc53, i32* %i, align 4, !dbg !2585
  br label %for.cond38, !dbg !2587, !llvm.loop !2588

for.end54:                                        ; preds = %for.cond38
  br label %for.inc55, !dbg !2590

for.inc55:                                        ; preds = %for.end54
  %159 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %159, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @287, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %160 = load i32, i32* %j, align 4, !dbg !2591
  %inc56 = add nsw i32 %160, 1, !dbg !2591
  %161 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPWrite(i64 %161)
  store i32 %inc56, i32* %j, align 4, !dbg !2591
  br label %for.cond35, !dbg !2593, !llvm.loop !2594

for.end57:                                        ; preds = %for.cond35
  br label %for.inc58, !dbg !2596

for.inc58:                                        ; preds = %for.end57
  %162 = ptrtoint i32* @fftblock to i64
  call void @__DiscoPoPOpenMPRead(i64 %162, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @288, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %163 = load i32, i32* @fftblock, align 4, !dbg !2597
  %164 = ptrtoint i32* %jj to i64
  call void @__DiscoPoPOpenMPRead(i64 %164, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @289, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %165 = load i32, i32* %jj, align 4, !dbg !2599
  %add59 = add nsw i32 %165, %163, !dbg !2599
  %166 = ptrtoint i32* %jj to i64
  call void @__DiscoPoPOpenMPWrite(i64 %166)
  store i32 %add59, i32* %jj, align 4, !dbg !2599
  br label %for.cond, !dbg !2600, !llvm.loop !2601

for.end60:                                        ; preds = %for.cond
  br label %omp.body.continue, !dbg !2603

omp.body.continue:                                ; preds = %for.end60
  br label %omp.inner.for.inc, !dbg !2604

omp.inner.for.inc:                                ; preds = %omp.body.continue
  %167 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPRead(i64 %167, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @290, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %168 = load i32, i32* %.omp.iv, align 4, !dbg !2605
  %add61 = add nsw i32 %168, 1, !dbg !2607
  %169 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPWrite(i64 %169)
  store i32 %add61, i32* %.omp.iv, align 4, !dbg !2607
  br label %omp.inner.for.cond, !dbg !2608, !llvm.loop !2609

omp.inner.for.end:                                ; preds = %omp.inner.for.cond
  br label %omp.loop.exit, !dbg !2610

omp.loop.exit:                                    ; preds = %omp.inner.for.end
  %170 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !2611
  %171 = ptrtoint i8** %170 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %171)
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @12, i32 0, i32 0), i8** %170, align 8, !dbg !2611
  %172 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %172, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @291, i32 0, i32 0), i32 104, i32 -1, i32 8)
  %173 = load i32*, i32** %.global_tid..addr, align 8, !dbg !2611
  %174 = ptrtoint i32* %173 to i64
  call void @__DiscoPoPOpenMPRead(i64 %174, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @292, i32 0, i32 0), i32 104, i32 -1, i32 4)
  %175 = load i32, i32* %173, align 4, !dbg !2611
  call void @__kmpc_for_static_fini(%ident_t* %.kmpc_loc.addr, i32 %175), !dbg !2611
  br label %omp.precond.end, !dbg !2611

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void, !dbg !2612
}

; Function Attrs: nounwind
declare double @cos(double) #2

; Function Attrs: nounwind
declare double @sin(double) #2

; Function Attrs: nounwind uwtable
define internal double @ipow46(double %a, i32 %exponent) #0 !dbg !2613 {
entry:
  %retval = alloca double, align 8
  %a.addr = alloca double, align 8
  %exponent.addr = alloca i32, align 4
  %result = alloca double, align 8
  %dummy = alloca double, align 8
  %q = alloca double, align 8
  %r = alloca double, align 8
  %n = alloca i32, align 4
  %n2 = alloca i32, align 4
  %0 = ptrtoint double* %a.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0)
  store double %a, double* %a.addr, align 8
  call void @llvm.dbg.declare(metadata double* %a.addr, metadata !2616, metadata !98), !dbg !2617
  %1 = ptrtoint i32* %exponent.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %1)
  store i32 %exponent, i32* %exponent.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %exponent.addr, metadata !2618, metadata !98), !dbg !2619
  call void @llvm.dbg.declare(metadata double* %result, metadata !2620, metadata !98), !dbg !2621
  call void @llvm.dbg.declare(metadata double* %dummy, metadata !2622, metadata !98), !dbg !2623
  call void @llvm.dbg.declare(metadata double* %q, metadata !2624, metadata !98), !dbg !2625
  call void @llvm.dbg.declare(metadata double* %r, metadata !2626, metadata !98), !dbg !2627
  call void @llvm.dbg.declare(metadata i32* %n, metadata !2628, metadata !98), !dbg !2629
  call void @llvm.dbg.declare(metadata i32* %n2, metadata !2630, metadata !98), !dbg !2631
  %2 = ptrtoint double* %result to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store double 1.000000e+00, double* %result, align 8, !dbg !2632
  %3 = ptrtoint i32* %exponent.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.791, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %4 = load i32, i32* %exponent.addr, align 4, !dbg !2633
  %cmp = icmp eq i32 %4, 0, !dbg !2635
  br i1 %cmp, label %if.then, label %if.end, !dbg !2636

if.then:                                          ; preds = %entry
  %5 = ptrtoint double* %result to i64
  call void @__DiscoPoPOpenMPRead(i64 %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.792, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %6 = load double, double* %result, align 8, !dbg !2637
  %7 = ptrtoint double* %retval to i64
  call void @__DiscoPoPOpenMPWrite(i64 %7)
  store double %6, double* %retval, align 8, !dbg !2639
  br label %return, !dbg !2639

if.end:                                           ; preds = %entry
  %8 = ptrtoint double* %a.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.793, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %9 = load double, double* %a.addr, align 8, !dbg !2640
  %10 = ptrtoint double* %q to i64
  call void @__DiscoPoPOpenMPWrite(i64 %10)
  store double %9, double* %q, align 8, !dbg !2641
  %11 = ptrtoint double* %r to i64
  call void @__DiscoPoPOpenMPWrite(i64 %11)
  store double 1.000000e+00, double* %r, align 8, !dbg !2642
  %12 = ptrtoint i32* %exponent.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.794, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %13 = load i32, i32* %exponent.addr, align 4, !dbg !2643
  %14 = ptrtoint i32* %n to i64
  call void @__DiscoPoPOpenMPWrite(i64 %14)
  store i32 %13, i32* %n, align 4, !dbg !2644
  br label %while.cond, !dbg !2645

while.cond:                                       ; preds = %if.end5, %if.end
  %15 = ptrtoint i32* %n to i64
  call void @__DiscoPoPOpenMPRead(i64 %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.795, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %16 = load i32, i32* %n, align 4, !dbg !2646
  %cmp1 = icmp sgt i32 %16, 1, !dbg !2648
  br i1 %cmp1, label %while.body, label %while.end, !dbg !2649

while.body:                                       ; preds = %while.cond
  %17 = ptrtoint i32* %n to i64
  call void @__DiscoPoPOpenMPRead(i64 %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.796, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %18 = load i32, i32* %n, align 4, !dbg !2650
  %div = sdiv i32 %18, 2, !dbg !2652
  %19 = ptrtoint i32* %n2 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %19)
  store i32 %div, i32* %n2, align 4, !dbg !2653
  %20 = ptrtoint i32* %n2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %20, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.797, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %21 = load i32, i32* %n2, align 4, !dbg !2654
  %mul = mul nsw i32 %21, 2, !dbg !2656
  %22 = ptrtoint i32* %n to i64
  call void @__DiscoPoPOpenMPRead(i64 %22, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.798, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %23 = load i32, i32* %n, align 4, !dbg !2657
  %cmp2 = icmp eq i32 %mul, %23, !dbg !2658
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !2659

if.then3:                                         ; preds = %while.body
  %24 = ptrtoint double* %q to i64
  call void @__DiscoPoPOpenMPRead(i64 %24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.799, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %25 = load double, double* %q, align 8, !dbg !2660
  %call = call double @randlc(double* %q, double %25), !dbg !2662
  %26 = ptrtoint double* %dummy to i64
  call void @__DiscoPoPOpenMPWrite(i64 %26)
  store double %call, double* %dummy, align 8, !dbg !2663
  %27 = ptrtoint i32* %n2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.800, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %28 = load i32, i32* %n2, align 4, !dbg !2664
  %29 = ptrtoint i32* %n to i64
  call void @__DiscoPoPOpenMPWrite(i64 %29)
  store i32 %28, i32* %n, align 4, !dbg !2665
  br label %if.end5, !dbg !2666

if.else:                                          ; preds = %while.body
  %30 = ptrtoint double* %q to i64
  call void @__DiscoPoPOpenMPRead(i64 %30, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.801, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %31 = load double, double* %q, align 8, !dbg !2667
  %call4 = call double @randlc(double* %r, double %31), !dbg !2669
  %32 = ptrtoint double* %dummy to i64
  call void @__DiscoPoPOpenMPWrite(i64 %32)
  store double %call4, double* %dummy, align 8, !dbg !2670
  %33 = ptrtoint i32* %n to i64
  call void @__DiscoPoPOpenMPRead(i64 %33, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.802, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %34 = load i32, i32* %n, align 4, !dbg !2671
  %sub = sub nsw i32 %34, 1, !dbg !2672
  %35 = ptrtoint i32* %n to i64
  call void @__DiscoPoPOpenMPWrite(i64 %35)
  store i32 %sub, i32* %n, align 4, !dbg !2673
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then3
  br label %while.cond, !dbg !2674, !llvm.loop !2676

while.end:                                        ; preds = %while.cond
  %36 = ptrtoint double* %q to i64
  call void @__DiscoPoPOpenMPRead(i64 %36, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.803, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %37 = load double, double* %q, align 8, !dbg !2677
  %call6 = call double @randlc(double* %r, double %37), !dbg !2678
  %38 = ptrtoint double* %dummy to i64
  call void @__DiscoPoPOpenMPWrite(i64 %38)
  store double %call6, double* %dummy, align 8, !dbg !2679
  %39 = ptrtoint double* %r to i64
  call void @__DiscoPoPOpenMPRead(i64 %39, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.804, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %40 = load double, double* %r, align 8, !dbg !2680
  %41 = ptrtoint double* %result to i64
  call void @__DiscoPoPOpenMPWrite(i64 %41)
  store double %40, double* %result, align 8, !dbg !2681
  %42 = ptrtoint double* %result to i64
  call void @__DiscoPoPOpenMPRead(i64 %42, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.805, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %43 = load double, double* %result, align 8, !dbg !2682
  %44 = ptrtoint double* %retval to i64
  call void @__DiscoPoPOpenMPWrite(i64 %44)
  store double %43, double* %retval, align 8, !dbg !2683
  br label %return, !dbg !2683

return:                                           ; preds = %while.end, %if.then
  %45 = ptrtoint double* %retval to i64
  call void @__DiscoPoPOpenMPRead(i64 %45, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.806, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %46 = load double, double* %retval, align 8, !dbg !2684
  ret double %46, !dbg !2684
}

; Function Attrs: nounwind uwtable
define internal void @.omp_outlined..9(i32* noalias %.global_tid., i32* noalias %.bound_tid., [64 x double]* dereferenceable(512) %starts, i64 %vla, i64 %vla1, %struct.dcomplex* %u0) #0 !dbg !2685 !omp.region.ID !2689 {
entry:
  %.global_tid..addr = alloca i32*, align 8
  %.bound_tid..addr = alloca i32*, align 8
  %starts.addr = alloca [64 x double]*, align 8
  %vla.addr = alloca i64, align 8
  %vla.addr2 = alloca i64, align 8
  %u0.addr = alloca %struct.dcomplex*, align 8
  %.omp.iv = alloca i32, align 4
  %.capture_expr. = alloca i32, align 4
  %.capture_expr.3 = alloca i32, align 4
  %k = alloca i32, align 4
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %k6 = alloca i32, align 4
  %j = alloca i32, align 4
  %x0 = alloca double, align 8
  %.kmpc_loc.addr = alloca %ident_t, align 8
  %0 = bitcast %ident_t* %.kmpc_loc.addr to i8*
  %1 = bitcast %ident_t* @0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 24, i32 8, i1 false)
  %2 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store i32* %.global_tid., i32** %.global_tid..addr, align 8
  call void @llvm.dbg.declare(metadata i32** %.global_tid..addr, metadata !2690, metadata !98), !dbg !2691
  %3 = ptrtoint i32** %.bound_tid..addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store i32* %.bound_tid., i32** %.bound_tid..addr, align 8
  call void @llvm.dbg.declare(metadata i32** %.bound_tid..addr, metadata !2692, metadata !98), !dbg !2691
  %4 = ptrtoint [64 x double]** %starts.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store [64 x double]* %starts, [64 x double]** %starts.addr, align 8
  call void @llvm.dbg.declare(metadata [64 x double]** %starts.addr, metadata !2693, metadata !98), !dbg !2691
  %5 = ptrtoint i64* %vla.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store i64 %vla, i64* %vla.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr, metadata !2694, metadata !98), !dbg !2691
  %6 = ptrtoint i64* %vla.addr2 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %6)
  store i64 %vla1, i64* %vla.addr2, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr2, metadata !2695, metadata !98), !dbg !2691
  %7 = ptrtoint %struct.dcomplex** %u0.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %7)
  store %struct.dcomplex* %u0, %struct.dcomplex** %u0.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %u0.addr, metadata !2696, metadata !98), !dbg !2691
  %8 = ptrtoint [64 x double]** %starts.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %8, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.807, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %9 = load [64 x double]*, [64 x double]** %starts.addr, align 8, !dbg !2697
  %10 = ptrtoint i64* %vla.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @293, i32 0, i32 0), i32 105, i32 -1, i32 8)
  %11 = load i64, i64* %vla.addr, align 8, !dbg !2697
  %12 = ptrtoint i64* %vla.addr2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @294, i32 0, i32 0), i32 105, i32 -1, i32 8)
  %13 = load i64, i64* %vla.addr2, align 8, !dbg !2697
  call void @llvm.dbg.declare(metadata i32* %.omp.iv, metadata !2698, metadata !98), !dbg !2691
  call void @llvm.dbg.declare(metadata i32* %.capture_expr., metadata !2699, metadata !98), !dbg !2691
  %14 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2) to i64
  call void @__DiscoPoPOpenMPRead(i64 %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @295, i32 0, i32 0), i32 105, i32 -1, i32 4)
  %15 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2), align 4, !dbg !2700
  %16 = ptrtoint i32* %.capture_expr. to i64
  call void @__DiscoPoPOpenMPWrite(i64 %16)
  store i32 %15, i32* %.capture_expr., align 4, !dbg !2691
  call void @llvm.dbg.declare(metadata i32* %.capture_expr.3, metadata !2699, metadata !98), !dbg !2691
  %17 = ptrtoint i32* %.capture_expr. to i64
  call void @__DiscoPoPOpenMPRead(i64 %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @296, i32 0, i32 0), i32 105, i32 -1, i32 4)
  %18 = load i32, i32* %.capture_expr., align 4, !dbg !2700
  %sub = sub nsw i32 %18, 0, !dbg !2697
  %sub4 = sub nsw i32 %sub, 1, !dbg !2697
  %add = add nsw i32 %sub4, 1, !dbg !2697
  %div = sdiv i32 %add, 1, !dbg !2697
  %sub5 = sub nsw i32 %div, 1, !dbg !2691
  %19 = ptrtoint i32* %.capture_expr.3 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %19)
  store i32 %sub5, i32* %.capture_expr.3, align 4, !dbg !2691
  call void @llvm.dbg.declare(metadata i32* %k, metadata !2701, metadata !98), !dbg !2691
  %20 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPWrite(i64 %20)
  store i32 0, i32* %k, align 4, !dbg !2702
  %21 = ptrtoint i32* %.capture_expr. to i64
  call void @__DiscoPoPOpenMPRead(i64 %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @297, i32 0, i32 0), i32 105, i32 -1, i32 4)
  %22 = load i32, i32* %.capture_expr., align 4, !dbg !2700
  %cmp = icmp slt i32 0, %22, !dbg !2697
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end, !dbg !2697

omp.precond.then:                                 ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %.omp.lb, metadata !2703, metadata !98), !dbg !2691
  %23 = ptrtoint i32* %.omp.lb to i64
  call void @__DiscoPoPOpenMPWrite(i64 %23)
  store i32 0, i32* %.omp.lb, align 4, !dbg !2704
  call void @llvm.dbg.declare(metadata i32* %.omp.ub, metadata !2706, metadata !98), !dbg !2691
  %24 = ptrtoint i32* %.capture_expr.3 to i64
  call void @__DiscoPoPOpenMPRead(i64 %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @298, i32 0, i32 0), i32 105, i32 -1, i32 4)
  %25 = load i32, i32* %.capture_expr.3, align 4, !dbg !2707
  %26 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPWrite(i64 %26)
  store i32 %25, i32* %.omp.ub, align 4, !dbg !2704
  call void @llvm.dbg.declare(metadata i32* %.omp.stride, metadata !2708, metadata !98), !dbg !2691
  %27 = ptrtoint i32* %.omp.stride to i64
  call void @__DiscoPoPOpenMPWrite(i64 %27)
  store i32 1, i32* %.omp.stride, align 4, !dbg !2704
  call void @llvm.dbg.declare(metadata i32* %.omp.is_last, metadata !2709, metadata !98), !dbg !2691
  %28 = ptrtoint i32* %.omp.is_last to i64
  call void @__DiscoPoPOpenMPWrite(i64 %28)
  store i32 0, i32* %.omp.is_last, align 4, !dbg !2704
  call void @llvm.dbg.declare(metadata i32* %k6, metadata !2701, metadata !98), !dbg !2691
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2710, metadata !98), !dbg !2691
  call void @llvm.dbg.declare(metadata double* %x0, metadata !2711, metadata !98), !dbg !2691
  %29 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !2712
  %30 = ptrtoint i8** %29 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %30)
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @13, i32 0, i32 0), i8** %29, align 8, !dbg !2712
  %31 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @299, i32 0, i32 0), i32 105, i32 -1, i32 8)
  %32 = load i32*, i32** %.global_tid..addr, align 8, !dbg !2712
  %33 = ptrtoint i32* %32 to i64
  call void @__DiscoPoPOpenMPRead(i64 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @300, i32 0, i32 0), i32 105, i32 -1, i32 4)
  %34 = load i32, i32* %32, align 4, !dbg !2712
  call void @__kmpc_for_static_init_4(%ident_t* %.kmpc_loc.addr, i32 %34, i32 34, i32* %.omp.is_last, i32* %.omp.lb, i32* %.omp.ub, i32* %.omp.stride, i32 1, i32 1), !dbg !2712
  %35 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @301, i32 0, i32 0), i32 105, i32 -1, i32 4)
  %36 = load i32, i32* %.omp.ub, align 4, !dbg !2704
  %37 = ptrtoint i32* %.capture_expr.3 to i64
  call void @__DiscoPoPOpenMPRead(i64 %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @302, i32 0, i32 0), i32 105, i32 -1, i32 4)
  %38 = load i32, i32* %.capture_expr.3, align 4, !dbg !2707
  %cmp7 = icmp sgt i32 %36, %38, !dbg !2704
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !2704

cond.true:                                        ; preds = %omp.precond.then
  %39 = ptrtoint i32* %.capture_expr.3 to i64
  call void @__DiscoPoPOpenMPRead(i64 %39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @303, i32 0, i32 0), i32 105, i32 -1, i32 4)
  %40 = load i32, i32* %.capture_expr.3, align 4, !dbg !2713
  br label %cond.end, !dbg !2715

cond.false:                                       ; preds = %omp.precond.then
  %41 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @304, i32 0, i32 0), i32 105, i32 -1, i32 4)
  %42 = load i32, i32* %.omp.ub, align 4, !dbg !2716
  br label %cond.end, !dbg !2716

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %40, %cond.true ], [ %42, %cond.false ], !dbg !2718
  %43 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPWrite(i64 %43)
  store i32 %cond, i32* %.omp.ub, align 4, !dbg !2718
  %44 = ptrtoint i32* %.omp.lb to i64
  call void @__DiscoPoPOpenMPRead(i64 %44, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @305, i32 0, i32 0), i32 105, i32 -1, i32 4)
  %45 = load i32, i32* %.omp.lb, align 4, !dbg !2718
  %46 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPWrite(i64 %46)
  store i32 %45, i32* %.omp.iv, align 4, !dbg !2718
  br label %omp.inner.for.cond, !dbg !2720

omp.inner.for.cond:                               ; preds = %omp.inner.for.inc, %cond.end
  %47 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPRead(i64 %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @306, i32 0, i32 0), i32 105, i32 -1, i32 4)
  %48 = load i32, i32* %.omp.iv, align 4, !dbg !2721
  %49 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @307, i32 0, i32 0), i32 105, i32 -1, i32 4)
  %50 = load i32, i32* %.omp.ub, align 4, !dbg !2721
  %cmp8 = icmp sle i32 %48, %50, !dbg !2723
  br i1 %cmp8, label %omp.inner.for.body, label %omp.inner.for.end, !dbg !2724

omp.inner.for.body:                               ; preds = %omp.inner.for.cond
  %51 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPRead(i64 %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @308, i32 0, i32 0), i32 105, i32 -1, i32 4)
  %52 = load i32, i32* %.omp.iv, align 4, !dbg !2725
  %mul = mul nsw i32 %52, 1, !dbg !2727
  %add9 = add nsw i32 0, %mul, !dbg !2727
  %53 = ptrtoint i32* %k6 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %53)
  store i32 %add9, i32* %k6, align 4, !dbg !2727
  %54 = ptrtoint i32* %k6 to i64
  call void @__DiscoPoPOpenMPRead(i64 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @309, i32 0, i32 0), i32 105, i32 -1, i32 4)
  %55 = load i32, i32* %k6, align 4, !dbg !2728
  %idxprom = sext i32 %55 to i64, !dbg !2730
  %arrayidx = getelementptr inbounds [64 x double], [64 x double]* %9, i64 0, i64 %idxprom, !dbg !2730
  %56 = ptrtoint double* %arrayidx to i64
  call void @__DiscoPoPOpenMPRead(i64 %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @310, i32 0, i32 0), i32 105, i32 -1, i32 8)
  %57 = load double, double* %arrayidx, align 8, !dbg !2730
  %58 = ptrtoint double* %x0 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %58)
  store double %57, double* %x0, align 8, !dbg !2731
  %59 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPWrite(i64 %59)
  store i32 0, i32* %j, align 4, !dbg !2732
  br label %for.cond, !dbg !2734

for.cond:                                         ; preds = %for.inc, %omp.inner.for.body
  %60 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %60, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @311, i32 0, i32 0), i32 105, i32 -1, i32 4)
  %61 = load i32, i32* %j, align 4, !dbg !2735
  %62 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1) to i64
  call void @__DiscoPoPOpenMPRead(i64 %62, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @312, i32 0, i32 0), i32 105, i32 -1, i32 4)
  %63 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1), align 4, !dbg !2738
  %cmp10 = icmp slt i32 %61, %63, !dbg !2739
  br i1 %cmp10, label %for.body, label %for.end, !dbg !2740

for.body:                                         ; preds = %for.cond
  %64 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @313, i32 0, i32 0), i32 105, i32 -1, i32 4)
  %65 = load i32, i32* %j, align 4, !dbg !2741
  %idxprom11 = sext i32 %65 to i64, !dbg !2743
  %66 = ptrtoint i32* %k6 to i64
  call void @__DiscoPoPOpenMPRead(i64 %66, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @314, i32 0, i32 0), i32 105, i32 -1, i32 4)
  %67 = load i32, i32* %k6, align 4, !dbg !2744
  %idxprom12 = sext i32 %67 to i64, !dbg !2743
  %68 = ptrtoint %struct.dcomplex** %u0.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %68, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @315, i32 0, i32 0), i32 105, i32 -1, i32 8)
  %69 = load %struct.dcomplex*, %struct.dcomplex** %u0.addr, align 8, !dbg !2743
  %70 = mul nuw i64 %11, %13, !dbg !2743
  %71 = mul nsw i64 %idxprom12, %70, !dbg !2743
  %arrayidx13 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %69, i64 %71, !dbg !2743
  %72 = mul nsw i64 %idxprom11, %13, !dbg !2743
  %arrayidx14 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx13, i64 %72, !dbg !2743
  %arrayidx15 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx14, i64 0, !dbg !2743
  %73 = bitcast %struct.dcomplex* %arrayidx15 to double*, !dbg !2745
  call void @vranlc(i32 128, double* %x0, double 0x41D2309CE5400000, double* %73), !dbg !2746
  br label %for.inc, !dbg !2747

for.inc:                                          ; preds = %for.body
  %74 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %74, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @316, i32 0, i32 0), i32 105, i32 -1, i32 4)
  %75 = load i32, i32* %j, align 4, !dbg !2748
  %inc = add nsw i32 %75, 1, !dbg !2748
  %76 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPWrite(i64 %76)
  store i32 %inc, i32* %j, align 4, !dbg !2748
  br label %for.cond, !dbg !2750, !llvm.loop !2751

for.end:                                          ; preds = %for.cond
  br label %omp.body.continue, !dbg !2753

omp.body.continue:                                ; preds = %for.end
  br label %omp.inner.for.inc, !dbg !2754

omp.inner.for.inc:                                ; preds = %omp.body.continue
  %77 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPRead(i64 %77, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @317, i32 0, i32 0), i32 105, i32 -1, i32 4)
  %78 = load i32, i32* %.omp.iv, align 4, !dbg !2755
  %add16 = add nsw i32 %78, 1, !dbg !2757
  %79 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPWrite(i64 %79)
  store i32 %add16, i32* %.omp.iv, align 4, !dbg !2757
  br label %omp.inner.for.cond, !dbg !2758, !llvm.loop !2759

omp.inner.for.end:                                ; preds = %omp.inner.for.cond
  br label %omp.loop.exit, !dbg !2760

omp.loop.exit:                                    ; preds = %omp.inner.for.end
  %80 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !2761
  %81 = ptrtoint i8** %80 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %81)
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @14, i32 0, i32 0), i8** %80, align 8, !dbg !2761
  %82 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %82, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @318, i32 0, i32 0), i32 105, i32 -1, i32 8)
  %83 = load i32*, i32** %.global_tid..addr, align 8, !dbg !2761
  %84 = ptrtoint i32* %83 to i64
  call void @__DiscoPoPOpenMPRead(i64 %84, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @319, i32 0, i32 0), i32 105, i32 -1, i32 4)
  %85 = load i32, i32* %83, align 4, !dbg !2761
  call void @__kmpc_for_static_fini(%ident_t* %.kmpc_loc.addr, i32 %85), !dbg !2761
  br label %omp.precond.end, !dbg !2761

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void, !dbg !2762
}

; Function Attrs: nounwind uwtable
define internal void @.omp_outlined..17(i32* noalias %.global_tid., i32* noalias %.bound_tid., i64 %vla, i64 %vla1, double* %twiddle, double* dereferenceable(8) %ap) #0 !dbg !2763 !omp.region.ID !2767 {
entry:
  %.global_tid..addr = alloca i32*, align 8
  %.bound_tid..addr = alloca i32*, align 8
  %vla.addr = alloca i64, align 8
  %vla.addr2 = alloca i64, align 8
  %twiddle.addr = alloca double*, align 8
  %ap.addr = alloca double*, align 8
  %.omp.iv = alloca i32, align 4
  %.capture_expr. = alloca i32, align 4
  %.capture_expr.3 = alloca i32, align 4
  %k = alloca i32, align 4
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k6 = alloca i32, align 4
  %kk = alloca i32, align 4
  %kk2 = alloca i32, align 4
  %jj = alloca i32, align 4
  %kj2 = alloca i32, align 4
  %ii = alloca i32, align 4
  %.kmpc_loc.addr = alloca %ident_t, align 8
  %0 = bitcast %ident_t* %.kmpc_loc.addr to i8*
  %1 = bitcast %ident_t* @0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 24, i32 8, i1 false)
  %2 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store i32* %.global_tid., i32** %.global_tid..addr, align 8
  call void @llvm.dbg.declare(metadata i32** %.global_tid..addr, metadata !2768, metadata !98), !dbg !2769
  %3 = ptrtoint i32** %.bound_tid..addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store i32* %.bound_tid., i32** %.bound_tid..addr, align 8
  call void @llvm.dbg.declare(metadata i32** %.bound_tid..addr, metadata !2770, metadata !98), !dbg !2769
  %4 = ptrtoint i64* %vla.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store i64 %vla, i64* %vla.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr, metadata !2771, metadata !98), !dbg !2769
  %5 = ptrtoint i64* %vla.addr2 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store i64 %vla1, i64* %vla.addr2, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr2, metadata !2772, metadata !98), !dbg !2769
  %6 = ptrtoint double** %twiddle.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %6)
  store double* %twiddle, double** %twiddle.addr, align 8
  call void @llvm.dbg.declare(metadata double** %twiddle.addr, metadata !2773, metadata !98), !dbg !2769
  %7 = ptrtoint double** %ap.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %7)
  store double* %ap, double** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata double** %ap.addr, metadata !2774, metadata !98), !dbg !2769
  %8 = ptrtoint i64* %vla.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.835, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %9 = load i64, i64* %vla.addr, align 8, !dbg !2775
  %10 = ptrtoint i64* %vla.addr2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @320, i32 0, i32 0), i32 106, i32 -1, i32 8)
  %11 = load i64, i64* %vla.addr2, align 8, !dbg !2775
  %12 = ptrtoint double** %ap.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @321, i32 0, i32 0), i32 106, i32 -1, i32 8)
  %13 = load double*, double** %ap.addr, align 8, !dbg !2775
  call void @llvm.dbg.declare(metadata i32* %.omp.iv, metadata !2776, metadata !98), !dbg !2769
  call void @llvm.dbg.declare(metadata i32* %.capture_expr., metadata !2777, metadata !98), !dbg !2769
  %14 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2) to i64
  call void @__DiscoPoPOpenMPRead(i64 %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @322, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %15 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 2), align 4, !dbg !2778
  %16 = ptrtoint i32* %.capture_expr. to i64
  call void @__DiscoPoPOpenMPWrite(i64 %16)
  store i32 %15, i32* %.capture_expr., align 4, !dbg !2769
  call void @llvm.dbg.declare(metadata i32* %.capture_expr.3, metadata !2777, metadata !98), !dbg !2769
  %17 = ptrtoint i32* %.capture_expr. to i64
  call void @__DiscoPoPOpenMPRead(i64 %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @323, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %18 = load i32, i32* %.capture_expr., align 4, !dbg !2778
  %sub = sub nsw i32 %18, 0, !dbg !2775
  %sub4 = sub nsw i32 %sub, 1, !dbg !2775
  %add = add nsw i32 %sub4, 1, !dbg !2775
  %div = sdiv i32 %add, 1, !dbg !2775
  %sub5 = sub nsw i32 %div, 1, !dbg !2769
  %19 = ptrtoint i32* %.capture_expr.3 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %19)
  store i32 %sub5, i32* %.capture_expr.3, align 4, !dbg !2769
  call void @llvm.dbg.declare(metadata i32* %k, metadata !2779, metadata !98), !dbg !2769
  %20 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPWrite(i64 %20)
  store i32 0, i32* %k, align 4, !dbg !2780
  %21 = ptrtoint i32* %.capture_expr. to i64
  call void @__DiscoPoPOpenMPRead(i64 %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @324, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %22 = load i32, i32* %.capture_expr., align 4, !dbg !2778
  %cmp = icmp slt i32 0, %22, !dbg !2775
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end, !dbg !2775

omp.precond.then:                                 ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %.omp.lb, metadata !2781, metadata !98), !dbg !2769
  %23 = ptrtoint i32* %.omp.lb to i64
  call void @__DiscoPoPOpenMPWrite(i64 %23)
  store i32 0, i32* %.omp.lb, align 4, !dbg !2782
  call void @llvm.dbg.declare(metadata i32* %.omp.ub, metadata !2784, metadata !98), !dbg !2769
  %24 = ptrtoint i32* %.capture_expr.3 to i64
  call void @__DiscoPoPOpenMPRead(i64 %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @325, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %25 = load i32, i32* %.capture_expr.3, align 4, !dbg !2785
  %26 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPWrite(i64 %26)
  store i32 %25, i32* %.omp.ub, align 4, !dbg !2782
  call void @llvm.dbg.declare(metadata i32* %.omp.stride, metadata !2786, metadata !98), !dbg !2769
  %27 = ptrtoint i32* %.omp.stride to i64
  call void @__DiscoPoPOpenMPWrite(i64 %27)
  store i32 1, i32* %.omp.stride, align 4, !dbg !2782
  call void @llvm.dbg.declare(metadata i32* %.omp.is_last, metadata !2787, metadata !98), !dbg !2769
  %28 = ptrtoint i32* %.omp.is_last to i64
  call void @__DiscoPoPOpenMPWrite(i64 %28)
  store i32 0, i32* %.omp.is_last, align 4, !dbg !2782
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2788, metadata !98), !dbg !2769
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2789, metadata !98), !dbg !2769
  call void @llvm.dbg.declare(metadata i32* %k6, metadata !2779, metadata !98), !dbg !2769
  call void @llvm.dbg.declare(metadata i32* %kk, metadata !2790, metadata !98), !dbg !2769
  call void @llvm.dbg.declare(metadata i32* %kk2, metadata !2791, metadata !98), !dbg !2769
  call void @llvm.dbg.declare(metadata i32* %jj, metadata !2792, metadata !98), !dbg !2769
  call void @llvm.dbg.declare(metadata i32* %kj2, metadata !2793, metadata !98), !dbg !2769
  call void @llvm.dbg.declare(metadata i32* %ii, metadata !2794, metadata !98), !dbg !2769
  %29 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !2795
  %30 = ptrtoint i8** %29 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %30)
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @15, i32 0, i32 0), i8** %29, align 8, !dbg !2795
  %31 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @326, i32 0, i32 0), i32 106, i32 -1, i32 8)
  %32 = load i32*, i32** %.global_tid..addr, align 8, !dbg !2795
  %33 = ptrtoint i32* %32 to i64
  call void @__DiscoPoPOpenMPRead(i64 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @327, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %34 = load i32, i32* %32, align 4, !dbg !2795
  call void @__kmpc_for_static_init_4(%ident_t* %.kmpc_loc.addr, i32 %34, i32 34, i32* %.omp.is_last, i32* %.omp.lb, i32* %.omp.ub, i32* %.omp.stride, i32 1, i32 1), !dbg !2795
  %35 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @328, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %36 = load i32, i32* %.omp.ub, align 4, !dbg !2782
  %37 = ptrtoint i32* %.capture_expr.3 to i64
  call void @__DiscoPoPOpenMPRead(i64 %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @329, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %38 = load i32, i32* %.capture_expr.3, align 4, !dbg !2785
  %cmp7 = icmp sgt i32 %36, %38, !dbg !2782
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !2782

cond.true:                                        ; preds = %omp.precond.then
  %39 = ptrtoint i32* %.capture_expr.3 to i64
  call void @__DiscoPoPOpenMPRead(i64 %39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @330, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %40 = load i32, i32* %.capture_expr.3, align 4, !dbg !2796
  br label %cond.end, !dbg !2798

cond.false:                                       ; preds = %omp.precond.then
  %41 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @331, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %42 = load i32, i32* %.omp.ub, align 4, !dbg !2799
  br label %cond.end, !dbg !2799

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %40, %cond.true ], [ %42, %cond.false ], !dbg !2801
  %43 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPWrite(i64 %43)
  store i32 %cond, i32* %.omp.ub, align 4, !dbg !2801
  %44 = ptrtoint i32* %.omp.lb to i64
  call void @__DiscoPoPOpenMPRead(i64 %44, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @332, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %45 = load i32, i32* %.omp.lb, align 4, !dbg !2801
  %46 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPWrite(i64 %46)
  store i32 %45, i32* %.omp.iv, align 4, !dbg !2801
  br label %omp.inner.for.cond, !dbg !2803

omp.inner.for.cond:                               ; preds = %omp.inner.for.inc, %cond.end
  %47 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPRead(i64 %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @333, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %48 = load i32, i32* %.omp.iv, align 4, !dbg !2804
  %49 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @334, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %50 = load i32, i32* %.omp.ub, align 4, !dbg !2804
  %cmp8 = icmp sle i32 %48, %50, !dbg !2806
  br i1 %cmp8, label %omp.inner.for.body, label %omp.inner.for.end, !dbg !2807

omp.inner.for.body:                               ; preds = %omp.inner.for.cond
  %51 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPRead(i64 %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @335, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %52 = load i32, i32* %.omp.iv, align 4, !dbg !2808
  %mul = mul nsw i32 %52, 1, !dbg !2810
  %add9 = add nsw i32 0, %mul, !dbg !2810
  %53 = ptrtoint i32* %k6 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %53)
  store i32 %add9, i32* %k6, align 4, !dbg !2810
  %54 = ptrtoint i32* %k6 to i64
  call void @__DiscoPoPOpenMPRead(i64 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @336, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %55 = load i32, i32* %k6, align 4, !dbg !2811
  %add10 = add nsw i32 %55, 32, !dbg !2813
  %rem = srem i32 %add10, 64, !dbg !2814
  %sub11 = sub nsw i32 %rem, 32, !dbg !2815
  %56 = ptrtoint i32* %kk to i64
  call void @__DiscoPoPOpenMPWrite(i64 %56)
  store i32 %sub11, i32* %kk, align 4, !dbg !2816
  %57 = ptrtoint i32* %kk to i64
  call void @__DiscoPoPOpenMPRead(i64 %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @337, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %58 = load i32, i32* %kk, align 4, !dbg !2817
  %59 = ptrtoint i32* %kk to i64
  call void @__DiscoPoPOpenMPRead(i64 %59, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @338, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %60 = load i32, i32* %kk, align 4, !dbg !2818
  %mul12 = mul nsw i32 %58, %60, !dbg !2819
  %61 = ptrtoint i32* %kk2 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %61)
  store i32 %mul12, i32* %kk2, align 4, !dbg !2820
  %62 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPWrite(i64 %62)
  store i32 0, i32* %j, align 4, !dbg !2821
  br label %for.cond, !dbg !2823

for.cond:                                         ; preds = %for.inc32, %omp.inner.for.body
  %63 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %63, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @339, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %64 = load i32, i32* %j, align 4, !dbg !2824
  %65 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1) to i64
  call void @__DiscoPoPOpenMPRead(i64 %65, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @340, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %66 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 1), align 4, !dbg !2827
  %cmp13 = icmp slt i32 %64, %66, !dbg !2828
  br i1 %cmp13, label %for.body, label %for.end34, !dbg !2829

for.body:                                         ; preds = %for.cond
  %67 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %67, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @341, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %68 = load i32, i32* %j, align 4, !dbg !2830
  %add14 = add nsw i32 %68, 32, !dbg !2832
  %rem15 = srem i32 %add14, 64, !dbg !2833
  %sub16 = sub nsw i32 %rem15, 32, !dbg !2834
  %69 = ptrtoint i32* %jj to i64
  call void @__DiscoPoPOpenMPWrite(i64 %69)
  store i32 %sub16, i32* %jj, align 4, !dbg !2835
  %70 = ptrtoint i32* %jj to i64
  call void @__DiscoPoPOpenMPRead(i64 %70, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @342, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %71 = load i32, i32* %jj, align 4, !dbg !2836
  %72 = ptrtoint i32* %jj to i64
  call void @__DiscoPoPOpenMPRead(i64 %72, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @343, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %73 = load i32, i32* %jj, align 4, !dbg !2837
  %mul17 = mul nsw i32 %71, %73, !dbg !2838
  %74 = ptrtoint i32* %kk2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %74, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @344, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %75 = load i32, i32* %kk2, align 4, !dbg !2839
  %add18 = add nsw i32 %mul17, %75, !dbg !2840
  %76 = ptrtoint i32* %kj2 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %76)
  store i32 %add18, i32* %kj2, align 4, !dbg !2841
  %77 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %77)
  store i32 0, i32* %i, align 4, !dbg !2842
  br label %for.cond19, !dbg !2844

for.cond19:                                       ; preds = %for.inc, %for.body
  %78 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %78, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @345, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %79 = load i32, i32* %i, align 4, !dbg !2845
  %80 = ptrtoint i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0) to i64
  call void @__DiscoPoPOpenMPRead(i64 %80, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @346, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %81 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @dims, i64 0, i64 0), align 4, !dbg !2848
  %cmp20 = icmp slt i32 %79, %81, !dbg !2849
  br i1 %cmp20, label %for.body21, label %for.end, !dbg !2850

for.body21:                                       ; preds = %for.cond19
  %82 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %82, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @347, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %83 = load i32, i32* %i, align 4, !dbg !2851
  %add22 = add nsw i32 %83, 32, !dbg !2853
  %rem23 = srem i32 %add22, 64, !dbg !2854
  %sub24 = sub nsw i32 %rem23, 32, !dbg !2855
  %84 = ptrtoint i32* %ii to i64
  call void @__DiscoPoPOpenMPWrite(i64 %84)
  store i32 %sub24, i32* %ii, align 4, !dbg !2856
  %85 = ptrtoint double* %13 to i64
  call void @__DiscoPoPOpenMPRead(i64 %85, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @348, i32 0, i32 0), i32 106, i32 -1, i32 8)
  %86 = load double, double* %13, align 8, !dbg !2857
  %87 = ptrtoint i32* %ii to i64
  call void @__DiscoPoPOpenMPRead(i64 %87, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @349, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %88 = load i32, i32* %ii, align 4, !dbg !2858
  %89 = ptrtoint i32* %ii to i64
  call void @__DiscoPoPOpenMPRead(i64 %89, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @350, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %90 = load i32, i32* %ii, align 4, !dbg !2859
  %mul25 = mul nsw i32 %88, %90, !dbg !2860
  %91 = ptrtoint i32* %kj2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %91, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @351, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %92 = load i32, i32* %kj2, align 4, !dbg !2861
  %add26 = add nsw i32 %mul25, %92, !dbg !2862
  %conv = sitofp i32 %add26 to double, !dbg !2863
  %mul27 = fmul double %86, %conv, !dbg !2864
  %call = call double @exp(double %mul27) #8, !dbg !2865
  %93 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %93, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @352, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %94 = load i32, i32* %i, align 4, !dbg !2866
  %idxprom = sext i32 %94 to i64, !dbg !2867
  %95 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %95, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @353, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %96 = load i32, i32* %j, align 4, !dbg !2868
  %idxprom28 = sext i32 %96 to i64, !dbg !2867
  %97 = ptrtoint i32* %k6 to i64
  call void @__DiscoPoPOpenMPRead(i64 %97, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @354, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %98 = load i32, i32* %k6, align 4, !dbg !2869
  %idxprom29 = sext i32 %98 to i64, !dbg !2867
  %99 = ptrtoint double** %twiddle.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %99, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @355, i32 0, i32 0), i32 106, i32 -1, i32 8)
  %100 = load double*, double** %twiddle.addr, align 8, !dbg !2867
  %101 = mul nuw i64 %9, %11, !dbg !2867
  %102 = mul nsw i64 %idxprom29, %101, !dbg !2867
  %arrayidx = getelementptr inbounds double, double* %100, i64 %102, !dbg !2867
  %103 = mul nsw i64 %idxprom28, %11, !dbg !2867
  %arrayidx30 = getelementptr inbounds double, double* %arrayidx, i64 %103, !dbg !2867
  %arrayidx31 = getelementptr inbounds double, double* %arrayidx30, i64 %idxprom, !dbg !2867
  %104 = ptrtoint double* %arrayidx31 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %104)
  store double %call, double* %arrayidx31, align 8, !dbg !2870
  br label %for.inc, !dbg !2871

for.inc:                                          ; preds = %for.body21
  %105 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %105, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @356, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %106 = load i32, i32* %i, align 4, !dbg !2872
  %inc = add nsw i32 %106, 1, !dbg !2872
  %107 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %107)
  store i32 %inc, i32* %i, align 4, !dbg !2872
  br label %for.cond19, !dbg !2874, !llvm.loop !2875

for.end:                                          ; preds = %for.cond19
  br label %for.inc32, !dbg !2877

for.inc32:                                        ; preds = %for.end
  %108 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %108, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @357, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %109 = load i32, i32* %j, align 4, !dbg !2878
  %inc33 = add nsw i32 %109, 1, !dbg !2878
  %110 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPWrite(i64 %110)
  store i32 %inc33, i32* %j, align 4, !dbg !2878
  br label %for.cond, !dbg !2880, !llvm.loop !2881

for.end34:                                        ; preds = %for.cond
  br label %omp.body.continue, !dbg !2883

omp.body.continue:                                ; preds = %for.end34
  br label %omp.inner.for.inc, !dbg !2884

omp.inner.for.inc:                                ; preds = %omp.body.continue
  %111 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPRead(i64 %111, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @358, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %112 = load i32, i32* %.omp.iv, align 4, !dbg !2885
  %add35 = add nsw i32 %112, 1, !dbg !2887
  %113 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPWrite(i64 %113)
  store i32 %add35, i32* %.omp.iv, align 4, !dbg !2887
  br label %omp.inner.for.cond, !dbg !2888, !llvm.loop !2889

omp.inner.for.end:                                ; preds = %omp.inner.for.cond
  br label %omp.loop.exit, !dbg !2890

omp.loop.exit:                                    ; preds = %omp.inner.for.end
  %114 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !2891
  %115 = ptrtoint i8** %114 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %115)
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @16, i32 0, i32 0), i8** %114, align 8, !dbg !2891
  %116 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %116, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @359, i32 0, i32 0), i32 106, i32 -1, i32 8)
  %117 = load i32*, i32** %.global_tid..addr, align 8, !dbg !2891
  %118 = ptrtoint i32* %117 to i64
  call void @__DiscoPoPOpenMPRead(i64 %118, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @360, i32 0, i32 0), i32 106, i32 -1, i32 4)
  %119 = load i32, i32* %117, align 4, !dbg !2891
  call void @__kmpc_for_static_fini(%ident_t* %.kmpc_loc.addr, i32 %119), !dbg !2891
  br label %omp.precond.end, !dbg !2891

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void, !dbg !2892
}

; Function Attrs: nounwind
declare double @exp(double) #2

; Function Attrs: nounwind uwtable
define internal void @.omp_outlined.(i32* noalias %.global_tid., i32* noalias %.bound_tid., i32* dereferenceable(4) %d3, i32* dereferenceable(4) %d2, i32* dereferenceable(4) %d1, i64 %vla, i64 %vla1, %struct.dcomplex* %u0, i64 %vla3, i64 %vla5, %struct.dcomplex* %u1, i64 %vla7, i64 %vla9, double* %twiddle) #0 !dbg !2893 {
entry:
  %.global_tid..addr = alloca i32*, align 8
  %.bound_tid..addr = alloca i32*, align 8
  %d3.addr = alloca i32*, align 8
  %d2.addr = alloca i32*, align 8
  %d1.addr = alloca i32*, align 8
  %vla.addr = alloca i64, align 8
  %vla.addr2 = alloca i64, align 8
  %u0.addr = alloca %struct.dcomplex*, align 8
  %vla.addr4 = alloca i64, align 8
  %vla.addr6 = alloca i64, align 8
  %u1.addr = alloca %struct.dcomplex*, align 8
  %vla.addr8 = alloca i64, align 8
  %vla.addr10 = alloca i64, align 8
  %twiddle.addr = alloca double*, align 8
  %.omp.iv = alloca i32, align 4
  %.capture_expr. = alloca i32, align 4
  %.capture_expr.11 = alloca i32, align 4
  %k = alloca i32, align 4
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k14 = alloca i32, align 4
  %.kmpc_loc.addr = alloca %ident_t, align 8
  %0 = bitcast %ident_t* %.kmpc_loc.addr to i8*
  %1 = bitcast %ident_t* @0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 24, i32 8, i1 false)
  %.compoundliteral = alloca %struct.dcomplex, align 8
  %.compoundliteral32 = alloca %struct.dcomplex, align 8
  %2 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store i32* %.global_tid., i32** %.global_tid..addr, align 8
  call void @llvm.dbg.declare(metadata i32** %.global_tid..addr, metadata !2896, metadata !98), !dbg !2897
  %3 = ptrtoint i32** %.bound_tid..addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store i32* %.bound_tid., i32** %.bound_tid..addr, align 8
  call void @llvm.dbg.declare(metadata i32** %.bound_tid..addr, metadata !2898, metadata !98), !dbg !2897
  %4 = ptrtoint i32** %d3.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store i32* %d3, i32** %d3.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %d3.addr, metadata !2899, metadata !98), !dbg !2897
  %5 = ptrtoint i32** %d2.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store i32* %d2, i32** %d2.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %d2.addr, metadata !2900, metadata !98), !dbg !2897
  %6 = ptrtoint i32** %d1.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %6)
  store i32* %d1, i32** %d1.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %d1.addr, metadata !2901, metadata !98), !dbg !2897
  %7 = ptrtoint i64* %vla.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %7)
  store i64 %vla, i64* %vla.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr, metadata !2902, metadata !98), !dbg !2897
  %8 = ptrtoint i64* %vla.addr2 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %8)
  store i64 %vla1, i64* %vla.addr2, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr2, metadata !2903, metadata !98), !dbg !2897
  %9 = ptrtoint %struct.dcomplex** %u0.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %9)
  store %struct.dcomplex* %u0, %struct.dcomplex** %u0.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %u0.addr, metadata !2904, metadata !98), !dbg !2897
  %10 = ptrtoint i64* %vla.addr4 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %10)
  store i64 %vla3, i64* %vla.addr4, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr4, metadata !2905, metadata !98), !dbg !2897
  %11 = ptrtoint i64* %vla.addr6 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %11)
  store i64 %vla5, i64* %vla.addr6, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr6, metadata !2906, metadata !98), !dbg !2897
  %12 = ptrtoint %struct.dcomplex** %u1.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %12)
  store %struct.dcomplex* %u1, %struct.dcomplex** %u1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dcomplex** %u1.addr, metadata !2907, metadata !98), !dbg !2897
  %13 = ptrtoint i64* %vla.addr8 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %13)
  store i64 %vla7, i64* %vla.addr8, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr8, metadata !2908, metadata !98), !dbg !2897
  %14 = ptrtoint i64* %vla.addr10 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %14)
  store i64 %vla9, i64* %vla.addr10, align 8
  call void @llvm.dbg.declare(metadata i64* %vla.addr10, metadata !2909, metadata !98), !dbg !2897
  %15 = ptrtoint double** %twiddle.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %15)
  store double* %twiddle, double** %twiddle.addr, align 8
  call void @llvm.dbg.declare(metadata double** %twiddle.addr, metadata !2910, metadata !98), !dbg !2897
  %16 = ptrtoint i32** %d3.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %16, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.877, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %17 = load i32*, i32** %d3.addr, align 8, !dbg !2911
  %18 = ptrtoint i32** %d2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.878, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %19 = load i32*, i32** %d2.addr, align 8, !dbg !2911
  %20 = ptrtoint i32** %d1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.879, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %21 = load i32*, i32** %d1.addr, align 8, !dbg !2911
  %22 = ptrtoint i64* %vla.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %22, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.880, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %23 = load i64, i64* %vla.addr, align 8, !dbg !2911
  %24 = ptrtoint i64* %vla.addr2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %24, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.881, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %25 = load i64, i64* %vla.addr2, align 8, !dbg !2911
  %26 = ptrtoint i64* %vla.addr4 to i64
  call void @__DiscoPoPOpenMPRead(i64 %26, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.882, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %27 = load i64, i64* %vla.addr4, align 8, !dbg !2911
  %28 = ptrtoint i64* %vla.addr6 to i64
  call void @__DiscoPoPOpenMPRead(i64 %28, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.883, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %29 = load i64, i64* %vla.addr6, align 8, !dbg !2911
  %30 = ptrtoint i64* %vla.addr8 to i64
  call void @__DiscoPoPOpenMPRead(i64 %30, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.884, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %31 = load i64, i64* %vla.addr8, align 8, !dbg !2911
  %32 = ptrtoint i64* %vla.addr10 to i64
  call void @__DiscoPoPOpenMPRead(i64 %32, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.885, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %33 = load i64, i64* %vla.addr10, align 8, !dbg !2911
  call void @llvm.dbg.declare(metadata i32* %.omp.iv, metadata !2912, metadata !98), !dbg !2897
  call void @llvm.dbg.declare(metadata i32* %.capture_expr., metadata !2913, metadata !98), !dbg !2897
  %34 = ptrtoint i32* %17 to i64
  call void @__DiscoPoPOpenMPRead(i64 %34, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.886, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %35 = load i32, i32* %17, align 4, !dbg !2914
  %36 = ptrtoint i32* %.capture_expr. to i64
  call void @__DiscoPoPOpenMPWrite(i64 %36)
  store i32 %35, i32* %.capture_expr., align 4, !dbg !2897
  call void @llvm.dbg.declare(metadata i32* %.capture_expr.11, metadata !2913, metadata !98), !dbg !2897
  %37 = ptrtoint i32* %.capture_expr. to i64
  call void @__DiscoPoPOpenMPRead(i64 %37, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.887, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %38 = load i32, i32* %.capture_expr., align 4, !dbg !2914
  %sub = sub nsw i32 %38, 0, !dbg !2911
  %sub12 = sub nsw i32 %sub, 1, !dbg !2911
  %add = add nsw i32 %sub12, 1, !dbg !2911
  %div = sdiv i32 %add, 1, !dbg !2911
  %sub13 = sub nsw i32 %div, 1, !dbg !2897
  %39 = ptrtoint i32* %.capture_expr.11 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %39)
  store i32 %sub13, i32* %.capture_expr.11, align 4, !dbg !2897
  call void @llvm.dbg.declare(metadata i32* %k, metadata !2915, metadata !98), !dbg !2897
  %40 = ptrtoint i32* %k to i64
  call void @__DiscoPoPOpenMPWrite(i64 %40)
  store i32 0, i32* %k, align 4, !dbg !2916
  %41 = ptrtoint i32* %.capture_expr. to i64
  call void @__DiscoPoPOpenMPRead(i64 %41, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.888, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %42 = load i32, i32* %.capture_expr., align 4, !dbg !2914
  %cmp = icmp slt i32 0, %42, !dbg !2911
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end, !dbg !2911

omp.precond.then:                                 ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %.omp.lb, metadata !2917, metadata !98), !dbg !2897
  %43 = ptrtoint i32* %.omp.lb to i64
  call void @__DiscoPoPOpenMPWrite(i64 %43)
  store i32 0, i32* %.omp.lb, align 4, !dbg !2918
  call void @llvm.dbg.declare(metadata i32* %.omp.ub, metadata !2920, metadata !98), !dbg !2897
  %44 = ptrtoint i32* %.capture_expr.11 to i64
  call void @__DiscoPoPOpenMPRead(i64 %44, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.889, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %45 = load i32, i32* %.capture_expr.11, align 4, !dbg !2921
  %46 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPWrite(i64 %46)
  store i32 %45, i32* %.omp.ub, align 4, !dbg !2918
  call void @llvm.dbg.declare(metadata i32* %.omp.stride, metadata !2922, metadata !98), !dbg !2897
  %47 = ptrtoint i32* %.omp.stride to i64
  call void @__DiscoPoPOpenMPWrite(i64 %47)
  store i32 1, i32* %.omp.stride, align 4, !dbg !2918
  call void @llvm.dbg.declare(metadata i32* %.omp.is_last, metadata !2923, metadata !98), !dbg !2897
  %48 = ptrtoint i32* %.omp.is_last to i64
  call void @__DiscoPoPOpenMPWrite(i64 %48)
  store i32 0, i32* %.omp.is_last, align 4, !dbg !2918
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2924, metadata !98), !dbg !2897
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2925, metadata !98), !dbg !2897
  call void @llvm.dbg.declare(metadata i32* %k14, metadata !2915, metadata !98), !dbg !2897
  %49 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !2926
  %50 = ptrtoint i8** %49 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %50)
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @17, i32 0, i32 0), i8** %49, align 8, !dbg !2926
  %51 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %51, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.890, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %52 = load i32*, i32** %.global_tid..addr, align 8, !dbg !2926
  %53 = ptrtoint i32* %52 to i64
  call void @__DiscoPoPOpenMPRead(i64 %53, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.891, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %54 = load i32, i32* %52, align 4, !dbg !2926
  call void @__kmpc_for_static_init_4(%ident_t* %.kmpc_loc.addr, i32 %54, i32 34, i32* %.omp.is_last, i32* %.omp.lb, i32* %.omp.ub, i32* %.omp.stride, i32 1, i32 1), !dbg !2926
  %55 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %55, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.892, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %56 = load i32, i32* %.omp.ub, align 4, !dbg !2918
  %57 = ptrtoint i32* %.capture_expr.11 to i64
  call void @__DiscoPoPOpenMPRead(i64 %57, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.893, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %58 = load i32, i32* %.capture_expr.11, align 4, !dbg !2921
  %cmp15 = icmp sgt i32 %56, %58, !dbg !2918
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !2918

cond.true:                                        ; preds = %omp.precond.then
  %59 = ptrtoint i32* %.capture_expr.11 to i64
  call void @__DiscoPoPOpenMPRead(i64 %59, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.894, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %60 = load i32, i32* %.capture_expr.11, align 4, !dbg !2927
  br label %cond.end, !dbg !2929

cond.false:                                       ; preds = %omp.precond.then
  %61 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %61, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.895, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %62 = load i32, i32* %.omp.ub, align 4, !dbg !2930
  br label %cond.end, !dbg !2930

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %60, %cond.true ], [ %62, %cond.false ], !dbg !2932
  %63 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPWrite(i64 %63)
  store i32 %cond, i32* %.omp.ub, align 4, !dbg !2932
  %64 = ptrtoint i32* %.omp.lb to i64
  call void @__DiscoPoPOpenMPRead(i64 %64, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.896, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %65 = load i32, i32* %.omp.lb, align 4, !dbg !2932
  %66 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPWrite(i64 %66)
  store i32 %65, i32* %.omp.iv, align 4, !dbg !2932
  br label %omp.inner.for.cond, !dbg !2934

omp.inner.for.cond:                               ; preds = %omp.inner.for.inc, %cond.end
  %67 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPRead(i64 %67, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.897, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %68 = load i32, i32* %.omp.iv, align 4, !dbg !2935
  %69 = ptrtoint i32* %.omp.ub to i64
  call void @__DiscoPoPOpenMPRead(i64 %69, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.898, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %70 = load i32, i32* %.omp.ub, align 4, !dbg !2935
  %cmp16 = icmp sle i32 %68, %70, !dbg !2937
  br i1 %cmp16, label %omp.inner.for.body, label %omp.inner.for.end, !dbg !2938

omp.inner.for.body:                               ; preds = %omp.inner.for.cond
  %71 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPRead(i64 %71, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.899, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %72 = load i32, i32* %.omp.iv, align 4, !dbg !2939
  %mul = mul nsw i32 %72, 1, !dbg !2941
  %add17 = add nsw i32 0, %mul, !dbg !2941
  %73 = ptrtoint i32* %k14 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %73)
  store i32 %add17, i32* %k14, align 4, !dbg !2941
  %74 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPWrite(i64 %74)
  store i32 0, i32* %j, align 4, !dbg !2942
  br label %for.cond, !dbg !2945

for.cond:                                         ; preds = %for.inc41, %omp.inner.for.body
  %75 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %75, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.900, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %76 = load i32, i32* %j, align 4, !dbg !2946
  %77 = ptrtoint i32* %19 to i64
  call void @__DiscoPoPOpenMPRead(i64 %77, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.901, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %78 = load i32, i32* %19, align 4, !dbg !2949
  %cmp18 = icmp slt i32 %76, %78, !dbg !2950
  br i1 %cmp18, label %for.body, label %for.end43, !dbg !2951

for.body:                                         ; preds = %for.cond
  %79 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %79)
  store i32 0, i32* %i, align 4, !dbg !2952
  br label %for.cond19, !dbg !2955

for.cond19:                                       ; preds = %for.inc, %for.body
  %80 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %80, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.902, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %81 = load i32, i32* %i, align 4, !dbg !2956
  %82 = ptrtoint i32* %21 to i64
  call void @__DiscoPoPOpenMPRead(i64 %82, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.903, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %83 = load i32, i32* %21, align 4, !dbg !2959
  %cmp20 = icmp slt i32 %81, %83, !dbg !2960
  br i1 %cmp20, label %for.body21, label %for.end, !dbg !2961

for.body21:                                       ; preds = %for.cond19
  %84 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %84, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.904, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %85 = load i32, i32* %i, align 4, !dbg !2962
  %idxprom = sext i32 %85 to i64, !dbg !2964
  %86 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %86, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.905, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %87 = load i32, i32* %j, align 4, !dbg !2965
  %idxprom22 = sext i32 %87 to i64, !dbg !2964
  %88 = ptrtoint i32* %k14 to i64
  call void @__DiscoPoPOpenMPRead(i64 %88, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.906, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %89 = load i32, i32* %k14, align 4, !dbg !2966
  %idxprom23 = sext i32 %89 to i64, !dbg !2964
  %90 = ptrtoint %struct.dcomplex** %u0.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %90, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.907, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %91 = load %struct.dcomplex*, %struct.dcomplex** %u0.addr, align 8, !dbg !2964
  %92 = mul nuw i64 %23, %25, !dbg !2964
  %93 = mul nsw i64 %idxprom23, %92, !dbg !2964
  %arrayidx = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %91, i64 %93, !dbg !2964
  %94 = mul nsw i64 %idxprom22, %25, !dbg !2964
  %arrayidx24 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx, i64 %94, !dbg !2964
  %arrayidx25 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx24, i64 %idxprom, !dbg !2964
  %real = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral, i32 0, i32 0, !dbg !2967
  %95 = ptrtoint double* %real to i64
  call void @__DiscoPoPOpenMPWrite(i64 %95)
  store double 0.000000e+00, double* %real, align 8, !dbg !2967
  %imag = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral, i32 0, i32 1, !dbg !2967
  %96 = ptrtoint double* %imag to i64
  call void @__DiscoPoPOpenMPWrite(i64 %96)
  store double 0.000000e+00, double* %imag, align 8, !dbg !2967
  %97 = bitcast %struct.dcomplex* %arrayidx25 to i8*, !dbg !2967
  %98 = bitcast %struct.dcomplex* %.compoundliteral to i8*, !dbg !2967
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %98, i64 16, i32 8, i1 false), !dbg !2967
  %99 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %99, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.908, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %100 = load i32, i32* %i, align 4, !dbg !2968
  %idxprom26 = sext i32 %100 to i64, !dbg !2969
  %101 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %101, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.909, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %102 = load i32, i32* %j, align 4, !dbg !2970
  %idxprom27 = sext i32 %102 to i64, !dbg !2969
  %103 = ptrtoint i32* %k14 to i64
  call void @__DiscoPoPOpenMPRead(i64 %103, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.910, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %104 = load i32, i32* %k14, align 4, !dbg !2971
  %idxprom28 = sext i32 %104 to i64, !dbg !2969
  %105 = ptrtoint %struct.dcomplex** %u1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %105, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.911, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %106 = load %struct.dcomplex*, %struct.dcomplex** %u1.addr, align 8, !dbg !2969
  %107 = mul nuw i64 %27, %29, !dbg !2969
  %108 = mul nsw i64 %idxprom28, %107, !dbg !2969
  %arrayidx29 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %106, i64 %108, !dbg !2969
  %109 = mul nsw i64 %idxprom27, %29, !dbg !2969
  %arrayidx30 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx29, i64 %109, !dbg !2969
  %arrayidx31 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %arrayidx30, i64 %idxprom26, !dbg !2969
  %real33 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral32, i32 0, i32 0, !dbg !2972
  %110 = ptrtoint double* %real33 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %110)
  store double 0.000000e+00, double* %real33, align 8, !dbg !2972
  %imag34 = getelementptr inbounds %struct.dcomplex, %struct.dcomplex* %.compoundliteral32, i32 0, i32 1, !dbg !2972
  %111 = ptrtoint double* %imag34 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %111)
  store double 0.000000e+00, double* %imag34, align 8, !dbg !2972
  %112 = bitcast %struct.dcomplex* %arrayidx31 to i8*, !dbg !2972
  %113 = bitcast %struct.dcomplex* %.compoundliteral32 to i8*, !dbg !2972
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %112, i8* %113, i64 16, i32 8, i1 false), !dbg !2972
  %114 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %114, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.912, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %115 = load i32, i32* %i, align 4, !dbg !2973
  %idxprom35 = sext i32 %115 to i64, !dbg !2974
  %116 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %116, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.913, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %117 = load i32, i32* %j, align 4, !dbg !2975
  %idxprom36 = sext i32 %117 to i64, !dbg !2974
  %118 = ptrtoint i32* %k14 to i64
  call void @__DiscoPoPOpenMPRead(i64 %118, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.914, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %119 = load i32, i32* %k14, align 4, !dbg !2976
  %idxprom37 = sext i32 %119 to i64, !dbg !2974
  %120 = ptrtoint double** %twiddle.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %120, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.915, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %121 = load double*, double** %twiddle.addr, align 8, !dbg !2974
  %122 = mul nuw i64 %31, %33, !dbg !2974
  %123 = mul nsw i64 %idxprom37, %122, !dbg !2974
  %arrayidx38 = getelementptr inbounds double, double* %121, i64 %123, !dbg !2974
  %124 = mul nsw i64 %idxprom36, %33, !dbg !2974
  %arrayidx39 = getelementptr inbounds double, double* %arrayidx38, i64 %124, !dbg !2974
  %arrayidx40 = getelementptr inbounds double, double* %arrayidx39, i64 %idxprom35, !dbg !2974
  %125 = ptrtoint double* %arrayidx40 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %125)
  store double 0.000000e+00, double* %arrayidx40, align 8, !dbg !2977
  br label %for.inc, !dbg !2978

for.inc:                                          ; preds = %for.body21
  %126 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %126, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.916, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %127 = load i32, i32* %i, align 4, !dbg !2979
  %inc = add nsw i32 %127, 1, !dbg !2979
  %128 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %128)
  store i32 %inc, i32* %i, align 4, !dbg !2979
  br label %for.cond19, !dbg !2981, !llvm.loop !2982

for.end:                                          ; preds = %for.cond19
  br label %for.inc41, !dbg !2984

for.inc41:                                        ; preds = %for.end
  %129 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %129, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.917, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %130 = load i32, i32* %j, align 4, !dbg !2985
  %inc42 = add nsw i32 %130, 1, !dbg !2985
  %131 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPWrite(i64 %131)
  store i32 %inc42, i32* %j, align 4, !dbg !2985
  br label %for.cond, !dbg !2987, !llvm.loop !2988

for.end43:                                        ; preds = %for.cond
  br label %omp.body.continue, !dbg !2990

omp.body.continue:                                ; preds = %for.end43
  br label %omp.inner.for.inc, !dbg !2991

omp.inner.for.inc:                                ; preds = %omp.body.continue
  %132 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPRead(i64 %132, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.918, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %133 = load i32, i32* %.omp.iv, align 4, !dbg !2992
  %add44 = add nsw i32 %133, 1, !dbg !2994
  %134 = ptrtoint i32* %.omp.iv to i64
  call void @__DiscoPoPOpenMPWrite(i64 %134)
  store i32 %add44, i32* %.omp.iv, align 4, !dbg !2994
  br label %omp.inner.for.cond, !dbg !2995, !llvm.loop !2996

omp.inner.for.end:                                ; preds = %omp.inner.for.cond
  br label %omp.loop.exit, !dbg !2997

omp.loop.exit:                                    ; preds = %omp.inner.for.end
  %135 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !2998
  %136 = ptrtoint i8** %135 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %136)
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @18, i32 0, i32 0), i8** %135, align 8, !dbg !2998
  %137 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %137, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.919, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %138 = load i32*, i32** %.global_tid..addr, align 8, !dbg !2998
  %139 = ptrtoint i32* %138 to i64
  call void @__DiscoPoPOpenMPRead(i64 %139, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.920, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %140 = load i32, i32* %138, align 4, !dbg !2998
  call void @__kmpc_for_static_fini(%ident_t* %.kmpc_loc.addr, i32 %140), !dbg !2998
  br label %omp.precond.end, !dbg !2998

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void, !dbg !2999
}

declare %struct._IO_FILE* @fopen(i8*, i8*) #3

declare i32 @fclose(%struct._IO_FILE*) #3

declare i32 @omp_get_max_threads() #3

; Function Attrs: nounwind uwtable
define void @print_results(i8* %name, i8 signext %class, i32 %n1, i32 %n2, i32 %n3, i32 %niter, double %t, double %mops, i8* %optype, i32 %verified, i8* %npbversion, i8* %compiletime, i8* %cs1, i8* %cs2, i8* %cs3, i8* %cs4, i8* %cs5, i8* %cs6, i8* %cs7) #0 !dbg !3000 {
entry:
  %name.addr = alloca i8*, align 8
  %class.addr = alloca i8, align 1
  %n1.addr = alloca i32, align 4
  %n2.addr = alloca i32, align 4
  %n3.addr = alloca i32, align 4
  %niter.addr = alloca i32, align 4
  %t.addr = alloca double, align 8
  %mops.addr = alloca double, align 8
  %optype.addr = alloca i8*, align 8
  %verified.addr = alloca i32, align 4
  %npbversion.addr = alloca i8*, align 8
  %compiletime.addr = alloca i8*, align 8
  %cs1.addr = alloca i8*, align 8
  %cs2.addr = alloca i8*, align 8
  %cs3.addr = alloca i8*, align 8
  %cs4.addr = alloca i8*, align 8
  %cs5.addr = alloca i8*, align 8
  %cs6.addr = alloca i8*, align 8
  %cs7.addr = alloca i8*, align 8
  %size = alloca [16 x i8], align 16
  %j = alloca i32, align 4
  %num_threads = alloca i32, align 4
  %max_threads = alloca i32, align 4
  %.kmpc_loc.addr = alloca %ident_t, align 8
  %0 = bitcast %ident_t* %.kmpc_loc.addr to i8*
  %1 = bitcast %ident_t* @19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 24, i32 8, i1 false)
  %2 = ptrtoint i8** %name.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3005, metadata !98), !dbg !3006
  %3 = ptrtoint i8* %class.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store i8 %class, i8* %class.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %class.addr, metadata !3007, metadata !98), !dbg !3008
  %4 = ptrtoint i32* %n1.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store i32 %n1, i32* %n1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n1.addr, metadata !3009, metadata !98), !dbg !3010
  %5 = ptrtoint i32* %n2.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store i32 %n2, i32* %n2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n2.addr, metadata !3011, metadata !98), !dbg !3012
  %6 = ptrtoint i32* %n3.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %6)
  store i32 %n3, i32* %n3.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n3.addr, metadata !3013, metadata !98), !dbg !3014
  %7 = ptrtoint i32* %niter.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %7)
  store i32 %niter, i32* %niter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %niter.addr, metadata !3015, metadata !98), !dbg !3016
  %8 = ptrtoint double* %t.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %8)
  store double %t, double* %t.addr, align 8
  call void @llvm.dbg.declare(metadata double* %t.addr, metadata !3017, metadata !98), !dbg !3018
  %9 = ptrtoint double* %mops.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %9)
  store double %mops, double* %mops.addr, align 8
  call void @llvm.dbg.declare(metadata double* %mops.addr, metadata !3019, metadata !98), !dbg !3020
  %10 = ptrtoint i8** %optype.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %10)
  store i8* %optype, i8** %optype.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optype.addr, metadata !3021, metadata !98), !dbg !3022
  %11 = ptrtoint i32* %verified.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %11)
  store i32 %verified, i32* %verified.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verified.addr, metadata !3023, metadata !98), !dbg !3024
  %12 = ptrtoint i8** %npbversion.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %12)
  store i8* %npbversion, i8** %npbversion.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %npbversion.addr, metadata !3025, metadata !98), !dbg !3026
  %13 = ptrtoint i8** %compiletime.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %13)
  store i8* %compiletime, i8** %compiletime.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %compiletime.addr, metadata !3027, metadata !98), !dbg !3028
  %14 = ptrtoint i8** %cs1.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %14)
  store i8* %cs1, i8** %cs1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cs1.addr, metadata !3029, metadata !98), !dbg !3030
  %15 = ptrtoint i8** %cs2.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %15)
  store i8* %cs2, i8** %cs2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cs2.addr, metadata !3031, metadata !98), !dbg !3032
  %16 = ptrtoint i8** %cs3.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %16)
  store i8* %cs3, i8** %cs3.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cs3.addr, metadata !3033, metadata !98), !dbg !3034
  %17 = ptrtoint i8** %cs4.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %17)
  store i8* %cs4, i8** %cs4.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cs4.addr, metadata !3035, metadata !98), !dbg !3036
  %18 = ptrtoint i8** %cs5.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %18)
  store i8* %cs5, i8** %cs5.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cs5.addr, metadata !3037, metadata !98), !dbg !3038
  %19 = ptrtoint i8** %cs6.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %19)
  store i8* %cs6, i8** %cs6.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cs6.addr, metadata !3039, metadata !98), !dbg !3040
  %20 = ptrtoint i8** %cs7.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %20)
  store i8* %cs7, i8** %cs7.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cs7.addr, metadata !3041, metadata !98), !dbg !3042
  call void @llvm.dbg.declare(metadata [16 x i8]* %size, metadata !3043, metadata !98), !dbg !3047
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3048, metadata !98), !dbg !3049
  call void @llvm.dbg.declare(metadata i32* %num_threads, metadata !3050, metadata !98), !dbg !3051
  call void @llvm.dbg.declare(metadata i32* %max_threads, metadata !3052, metadata !98), !dbg !3053
  %21 = ptrtoint i32* %max_threads to i64
  call void @__DiscoPoPOpenMPWrite(i64 %21)
  store i32 1, i32* %max_threads, align 4, !dbg !3054
  %22 = ptrtoint i32* %num_threads to i64
  call void @__DiscoPoPOpenMPWrite(i64 %22)
  store i32 1, i32* %num_threads, align 4, !dbg !3055
  %call = call i32 @omp_get_max_threads(), !dbg !3056
  %23 = ptrtoint i32* %max_threads to i64
  call void @__DiscoPoPOpenMPWrite(i64 %23)
  store i32 %call, i32* %max_threads, align 4, !dbg !3057
  %24 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !3058
  %25 = ptrtoint i8** %24 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %25)
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @20, i32 0, i32 0), i8** %24, align 8, !dbg !3058
  call void (%ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%ident_t* %.kmpc_loc.addr, i32 1, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i32*)* @.omp_outlined..3 to void (i32*, i32*, ...)*), i32* %num_threads), !dbg !3058
  %26 = ptrtoint i8** %name.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %26, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.921, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %27 = load i8*, i8** %name.addr, align 8, !dbg !3059
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.4, i32 0, i32 0), i8* %27), !dbg !3060
  %28 = ptrtoint i8* %class.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %28, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.922, i32 0, i32 0), i32 0, i32 -1, i32 1)
  %29 = load i8, i8* %class.addr, align 1, !dbg !3061
  %conv = sext i8 %29 to i32, !dbg !3061
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.5, i32 0, i32 0), i32 %conv), !dbg !3062
  %30 = ptrtoint i32* %n2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %30, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.923, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %31 = load i32, i32* %n2.addr, align 4, !dbg !3063
  %cmp = icmp eq i32 %31, 0, !dbg !3065
  br i1 %cmp, label %land.lhs.true, label %if.else31, !dbg !3066

land.lhs.true:                                    ; preds = %entry
  %32 = ptrtoint i32* %n3.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %32, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.924, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %33 = load i32, i32* %n3.addr, align 4, !dbg !3067
  %cmp4 = icmp eq i32 %33, 0, !dbg !3069
  br i1 %cmp4, label %if.then, label %if.else31, !dbg !3070

if.then:                                          ; preds = %land.lhs.true
  %34 = ptrtoint i8** %name.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %34, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.925, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %35 = load i8*, i8** %name.addr, align 8, !dbg !3071
  %arrayidx = getelementptr inbounds i8, i8* %35, i64 0, !dbg !3071
  %36 = ptrtoint i8* %arrayidx to i64
  call void @__DiscoPoPOpenMPRead(i64 %36, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.926, i32 0, i32 0), i32 0, i32 -1, i32 1)
  %37 = load i8, i8* %arrayidx, align 1, !dbg !3071
  %conv6 = sext i8 %37 to i32, !dbg !3071
  %cmp7 = icmp eq i32 %conv6, 69, !dbg !3074
  br i1 %cmp7, label %land.lhs.true9, label %if.else, !dbg !3075

land.lhs.true9:                                   ; preds = %if.then
  %38 = ptrtoint i8** %name.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %38, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.927, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %39 = load i8*, i8** %name.addr, align 8, !dbg !3076
  %arrayidx10 = getelementptr inbounds i8, i8* %39, i64 1, !dbg !3076
  %40 = ptrtoint i8* %arrayidx10 to i64
  call void @__DiscoPoPOpenMPRead(i64 %40, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.928, i32 0, i32 0), i32 0, i32 -1, i32 1)
  %41 = load i8, i8* %arrayidx10, align 1, !dbg !3076
  %conv11 = sext i8 %41 to i32, !dbg !3076
  %cmp12 = icmp eq i32 %conv11, 80, !dbg !3078
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !3079

if.then14:                                        ; preds = %land.lhs.true9
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %size, i32 0, i32 0, !dbg !3080
  %42 = ptrtoint i32* %n1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %42, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.929, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %43 = load i32, i32* %n1.addr, align 4, !dbg !3082
  %conv15 = sitofp i32 %43 to double, !dbg !3082
  %call16 = call double @pow(double 2.000000e+00, double %conv15) #8, !dbg !3083
  %call17 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.6, i32 0, i32 0), double %call16) #8, !dbg !3084
  %44 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPWrite(i64 %44)
  store i32 14, i32* %j, align 4, !dbg !3086
  %45 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %45, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.930, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %46 = load i32, i32* %j, align 4, !dbg !3087
  %idxprom = sext i32 %46 to i64, !dbg !3089
  %arrayidx18 = getelementptr inbounds [16 x i8], [16 x i8]* %size, i64 0, i64 %idxprom, !dbg !3089
  %47 = ptrtoint i8* %arrayidx18 to i64
  call void @__DiscoPoPOpenMPRead(i64 %47, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.931, i32 0, i32 0), i32 0, i32 -1, i32 1)
  %48 = load i8, i8* %arrayidx18, align 1, !dbg !3089
  %conv19 = sext i8 %48 to i32, !dbg !3089
  %cmp20 = icmp eq i32 %conv19, 46, !dbg !3090
  br i1 %cmp20, label %if.then22, label %if.end, !dbg !3091

if.then22:                                        ; preds = %if.then14
  %49 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %49, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.932, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %50 = load i32, i32* %j, align 4, !dbg !3092
  %idxprom23 = sext i32 %50 to i64, !dbg !3094
  %arrayidx24 = getelementptr inbounds [16 x i8], [16 x i8]* %size, i64 0, i64 %idxprom23, !dbg !3094
  %51 = ptrtoint i8* %arrayidx24 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %51)
  store i8 32, i8* %arrayidx24, align 1, !dbg !3095
  %52 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %52, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.933, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %53 = load i32, i32* %j, align 4, !dbg !3096
  %dec = add nsw i32 %53, -1, !dbg !3096
  %54 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPWrite(i64 %54)
  store i32 %dec, i32* %j, align 4, !dbg !3096
  br label %if.end, !dbg !3097

if.end:                                           ; preds = %if.then22, %if.then14
  %55 = ptrtoint i32* %j to i64
  call void @__DiscoPoPOpenMPRead(i64 %55, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.934, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %56 = load i32, i32* %j, align 4, !dbg !3098
  %add = add nsw i32 %56, 1, !dbg !3099
  %idxprom25 = sext i32 %add to i64, !dbg !3100
  %arrayidx26 = getelementptr inbounds [16 x i8], [16 x i8]* %size, i64 0, i64 %idxprom25, !dbg !3100
  %57 = ptrtoint i8* %arrayidx26 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %57)
  store i8 0, i8* %arrayidx26, align 1, !dbg !3101
  %arraydecay27 = getelementptr inbounds [16 x i8], [16 x i8]* %size, i32 0, i32 0, !dbg !3102
  %call28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.7, i32 0, i32 0), i8* %arraydecay27), !dbg !3103
  br label %if.end30, !dbg !3104

if.else:                                          ; preds = %land.lhs.true9, %if.then
  %58 = ptrtoint i32* %n1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %58, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.935, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %59 = load i32, i32* %n1.addr, align 4, !dbg !3105
  %call29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5.8, i32 0, i32 0), i32 %59), !dbg !3107
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.end
  br label %if.end33, !dbg !3108

if.else31:                                        ; preds = %land.lhs.true, %entry
  %60 = ptrtoint i32* %n1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %60, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.936, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %61 = load i32, i32* %n1.addr, align 4, !dbg !3109
  %62 = ptrtoint i32* %n2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %62, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.937, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %63 = load i32, i32* %n2.addr, align 4, !dbg !3111
  %64 = ptrtoint i32* %n3.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %64, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.938, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %65 = load i32, i32* %n3.addr, align 4, !dbg !3112
  %call32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6.9, i32 0, i32 0), i32 %61, i32 %63, i32 %65), !dbg !3113
  br label %if.end33

if.end33:                                         ; preds = %if.else31, %if.end30
  %66 = ptrtoint i32* %niter.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %66, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.939, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %67 = load i32, i32* %niter.addr, align 4, !dbg !3114
  %call34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7.10, i32 0, i32 0), i32 %67), !dbg !3115
  %68 = ptrtoint double* %t.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %68, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.940, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %69 = load double, double* %t.addr, align 8, !dbg !3116
  %call35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8, i32 0, i32 0), double %69), !dbg !3117
  %70 = ptrtoint i32* %num_threads to i64
  call void @__DiscoPoPOpenMPRead(i64 %70, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.941, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %71 = load i32, i32* %num_threads, align 4, !dbg !3118
  %call36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0), i32 %71), !dbg !3119
  %72 = ptrtoint i32* %max_threads to i64
  call void @__DiscoPoPOpenMPRead(i64 %72, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.942, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %73 = load i32, i32* %max_threads, align 4, !dbg !3120
  %call37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10.11, i32 0, i32 0), i32 %73), !dbg !3121
  %74 = ptrtoint i32* %num_threads to i64
  call void @__DiscoPoPOpenMPRead(i64 %74, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.943, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %75 = load i32, i32* %num_threads, align 4, !dbg !3122
  %76 = ptrtoint i32* %max_threads to i64
  call void @__DiscoPoPOpenMPRead(i64 %76, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.944, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %77 = load i32, i32* %max_threads, align 4, !dbg !3124
  %cmp38 = icmp ne i32 %75, %77, !dbg !3125
  br i1 %cmp38, label %if.then40, label %if.end42, !dbg !3126

if.then40:                                        ; preds = %if.end33
  %call41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.11.12, i32 0, i32 0)), !dbg !3127
  br label %if.end42, !dbg !3127

if.end42:                                         ; preds = %if.then40, %if.end33
  %78 = ptrtoint double* %mops.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %78, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.945, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %79 = load double, double* %mops.addr, align 8, !dbg !3128
  %call43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.12.13, i32 0, i32 0), double %79), !dbg !3129
  %80 = ptrtoint double* %mops.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %80, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.946, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %81 = load double, double* %mops.addr, align 8, !dbg !3130
  %82 = ptrtoint i32* %num_threads to i64
  call void @__DiscoPoPOpenMPRead(i64 %82, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.947, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %83 = load i32, i32* %num_threads, align 4, !dbg !3131
  %conv44 = sitofp i32 %83 to double, !dbg !3132
  %div = fdiv double %81, %conv44, !dbg !3133
  %call45 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.13.14, i32 0, i32 0), double %div), !dbg !3134
  %84 = ptrtoint i8** %optype.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %84, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.948, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %85 = load i8*, i8** %optype.addr, align 8, !dbg !3135
  %call46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14.15, i32 0, i32 0), i8* %85), !dbg !3136
  %86 = ptrtoint i32* %verified.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %86, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.949, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %87 = load i32, i32* %verified.addr, align 4, !dbg !3137
  %tobool = icmp ne i32 %87, 0, !dbg !3137
  br i1 %tobool, label %if.then47, label %if.else49, !dbg !3139

if.then47:                                        ; preds = %if.end42
  %call48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15.16, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16.17, i32 0, i32 0)), !dbg !3140
  br label %if.end51, !dbg !3140

if.else49:                                        ; preds = %if.end42
  %call50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15.16, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i32 0, i32 0)), !dbg !3141
  br label %if.end51

if.end51:                                         ; preds = %if.else49, %if.then47
  %88 = ptrtoint i8** %npbversion.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %88, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.950, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %89 = load i8*, i8** %npbversion.addr, align 8, !dbg !3142
  %call52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.18.18, i32 0, i32 0), i8* %89), !dbg !3143
  %90 = ptrtoint i8** %compiletime.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %90, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.951, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %91 = load i8*, i8** %compiletime.addr, align 8, !dbg !3144
  %call53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.19.19, i32 0, i32 0), i8* %91), !dbg !3145
  %92 = ptrtoint i8** %cs1.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %92, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.952, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %93 = load i8*, i8** %cs1.addr, align 8, !dbg !3146
  %call54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.20.20, i32 0, i32 0), i8* %93), !dbg !3147
  %94 = ptrtoint i8** %cs2.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %94, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.953, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %95 = load i8*, i8** %cs2.addr, align 8, !dbg !3148
  %call55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21.21, i32 0, i32 0), i8* %95), !dbg !3149
  %96 = ptrtoint i8** %cs3.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %96, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.954, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %97 = load i8*, i8** %cs3.addr, align 8, !dbg !3150
  %call56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22.22, i32 0, i32 0), i8* %97), !dbg !3151
  %98 = ptrtoint i8** %cs4.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %98, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.955, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %99 = load i8*, i8** %cs4.addr, align 8, !dbg !3152
  %call57 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23.23, i32 0, i32 0), i8* %99), !dbg !3153
  %100 = ptrtoint i8** %cs5.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %100, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.956, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %101 = load i8*, i8** %cs5.addr, align 8, !dbg !3154
  %call58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24.24, i32 0, i32 0), i8* %101), !dbg !3155
  %102 = ptrtoint i8** %cs6.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %102, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.957, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %103 = load i8*, i8** %cs6.addr, align 8, !dbg !3156
  %call59 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25.25, i32 0, i32 0), i8* %103), !dbg !3157
  %104 = ptrtoint i8** %cs7.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %104, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.958, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %105 = load i8*, i8** %cs7.addr, align 8, !dbg !3158
  %call60 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26.26, i32 0, i32 0), i8* %105), !dbg !3159
  %call61 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([195 x i8], [195 x i8]* @.str.27, i32 0, i32 0)), !dbg !3160
  ret void, !dbg !3161
}

; Function Attrs: nounwind uwtable
define internal void @.omp_outlined..3(i32* noalias %.global_tid., i32* noalias %.bound_tid., i32* dereferenceable(4) %num_threads) #0 !dbg !3162 !omp.region.ID !3165 {
entry:
  %.global_tid..addr = alloca i32*, align 8
  %.bound_tid..addr = alloca i32*, align 8
  %num_threads.addr = alloca i32*, align 8
  %.kmpc_loc.addr = alloca %ident_t, align 8
  %0 = bitcast %ident_t* %.kmpc_loc.addr to i8*
  %1 = bitcast %ident_t* @19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 24, i32 8, i1 false)
  %2 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store i32* %.global_tid., i32** %.global_tid..addr, align 8
  call void @llvm.dbg.declare(metadata i32** %.global_tid..addr, metadata !3166, metadata !98), !dbg !3167
  %3 = ptrtoint i32** %.bound_tid..addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store i32* %.bound_tid., i32** %.bound_tid..addr, align 8
  call void @llvm.dbg.declare(metadata i32** %.bound_tid..addr, metadata !3168, metadata !98), !dbg !3167
  %4 = ptrtoint i32** %num_threads.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store i32* %num_threads, i32** %num_threads.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %num_threads.addr, metadata !3169, metadata !98), !dbg !3167
  %5 = ptrtoint i32** %num_threads.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.959, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %6 = load i32*, i32** %num_threads.addr, align 8, !dbg !3170
  %7 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !3172
  %8 = ptrtoint i8** %7 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %8)
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @21, i32 0, i32 0), i8** %7, align 8, !dbg !3172
  %9 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @361, i32 0, i32 0), i32 107, i32 -1, i32 8)
  %10 = load i32*, i32** %.global_tid..addr, align 8, !dbg !3172
  %11 = ptrtoint i32* %10 to i64
  call void @__DiscoPoPOpenMPRead(i64 %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @362, i32 0, i32 0), i32 107, i32 -1, i32 4)
  %12 = load i32, i32* %10, align 4, !dbg !3172
  %13 = call i32 @__kmpc_master(%ident_t* %.kmpc_loc.addr, i32 %12), !dbg !3172
  %14 = icmp ne i32 %13, 0, !dbg !3172
  br i1 %14, label %omp_if.then, label %omp_if.end, !dbg !3172

omp_if.then:                                      ; preds = %entry
  %call = call i32 @omp_get_num_threads(), !dbg !3174
  %15 = ptrtoint i32* %6 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %15)
  store i32 %call, i32* %6, align 4, !dbg !3176
  call void @__kmpc_end_master(%ident_t* %.kmpc_loc.addr, i32 %12), !dbg !3177
  br label %omp_if.end, !dbg !3179

omp_if.end:                                       ; preds = %omp_if.then, %entry
  ret void, !dbg !3180
}

; Function Attrs: nounwind
declare double @pow(double, double) #2

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #2

declare i32 @__kmpc_master(%ident_t*, i32)

declare i32 @omp_get_num_threads() #3

declare void @__kmpc_end_master(%ident_t*, i32)

; Function Attrs: nounwind uwtable
define double @randlc(double* %x, double %a) #0 !dbg !3181 {
entry:
  %x.addr = alloca double*, align 8
  %a.addr = alloca double, align 8
  %r23 = alloca double, align 8
  %r46 = alloca double, align 8
  %t23 = alloca double, align 8
  %t46 = alloca double, align 8
  %t1 = alloca double, align 8
  %t2 = alloca double, align 8
  %t3 = alloca double, align 8
  %t4 = alloca double, align 8
  %a1 = alloca double, align 8
  %a2 = alloca double, align 8
  %x1 = alloca double, align 8
  %x2 = alloca double, align 8
  %z = alloca double, align 8
  %r = alloca double, align 8
  %0 = ptrtoint double** %x.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0)
  store double* %x, double** %x.addr, align 8
  call void @llvm.dbg.declare(metadata double** %x.addr, metadata !3185, metadata !98), !dbg !3186
  %1 = ptrtoint double* %a.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %1)
  store double %a, double* %a.addr, align 8
  call void @llvm.dbg.declare(metadata double* %a.addr, metadata !3187, metadata !98), !dbg !3188
  call void @llvm.dbg.declare(metadata double* %r23, metadata !3189, metadata !98), !dbg !3191
  %2 = ptrtoint double* %r23 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store double 0x3E80000000000000, double* %r23, align 8, !dbg !3191
  call void @llvm.dbg.declare(metadata double* %r46, metadata !3192, metadata !98), !dbg !3193
  %3 = ptrtoint double* %r46 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store double 0x3D10000000000000, double* %r46, align 8, !dbg !3193
  call void @llvm.dbg.declare(metadata double* %t23, metadata !3194, metadata !98), !dbg !3195
  %4 = ptrtoint double* %t23 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store double 8.388608e+06, double* %t23, align 8, !dbg !3195
  call void @llvm.dbg.declare(metadata double* %t46, metadata !3196, metadata !98), !dbg !3197
  %5 = ptrtoint double* %t46 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store double 0x42D0000000000000, double* %t46, align 8, !dbg !3197
  call void @llvm.dbg.declare(metadata double* %t1, metadata !3198, metadata !98), !dbg !3199
  call void @llvm.dbg.declare(metadata double* %t2, metadata !3200, metadata !98), !dbg !3201
  call void @llvm.dbg.declare(metadata double* %t3, metadata !3202, metadata !98), !dbg !3203
  call void @llvm.dbg.declare(metadata double* %t4, metadata !3204, metadata !98), !dbg !3205
  call void @llvm.dbg.declare(metadata double* %a1, metadata !3206, metadata !98), !dbg !3207
  call void @llvm.dbg.declare(metadata double* %a2, metadata !3208, metadata !98), !dbg !3209
  call void @llvm.dbg.declare(metadata double* %x1, metadata !3210, metadata !98), !dbg !3211
  call void @llvm.dbg.declare(metadata double* %x2, metadata !3212, metadata !98), !dbg !3213
  call void @llvm.dbg.declare(metadata double* %z, metadata !3214, metadata !98), !dbg !3215
  call void @llvm.dbg.declare(metadata double* %r, metadata !3216, metadata !98), !dbg !3217
  %6 = ptrtoint double* %a.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.962, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %7 = load double, double* %a.addr, align 8, !dbg !3218
  %mul = fmul double 0x3E80000000000000, %7, !dbg !3219
  %8 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %8)
  store double %mul, double* %t1, align 8, !dbg !3220
  %9 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.963, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %10 = load double, double* %t1, align 8, !dbg !3221
  %conv = fptosi double %10 to i32, !dbg !3222
  %conv1 = sitofp i32 %conv to double, !dbg !3222
  %11 = ptrtoint double* %a1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %11)
  store double %conv1, double* %a1, align 8, !dbg !3223
  %12 = ptrtoint double* %a.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.964, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %13 = load double, double* %a.addr, align 8, !dbg !3224
  %14 = ptrtoint double* %a1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.965, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %15 = load double, double* %a1, align 8, !dbg !3225
  %mul2 = fmul double 8.388608e+06, %15, !dbg !3226
  %sub = fsub double %13, %mul2, !dbg !3227
  %16 = ptrtoint double* %a2 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %16)
  store double %sub, double* %a2, align 8, !dbg !3228
  %17 = ptrtoint double** %x.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.966, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %18 = load double*, double** %x.addr, align 8, !dbg !3229
  %19 = ptrtoint double* %18 to i64
  call void @__DiscoPoPOpenMPRead(i64 %19, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.967, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %20 = load double, double* %18, align 8, !dbg !3230
  %mul3 = fmul double 0x3E80000000000000, %20, !dbg !3231
  %21 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %21)
  store double %mul3, double* %t1, align 8, !dbg !3232
  %22 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %22, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.968, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %23 = load double, double* %t1, align 8, !dbg !3233
  %conv4 = fptosi double %23 to i32, !dbg !3234
  %conv5 = sitofp i32 %conv4 to double, !dbg !3234
  %24 = ptrtoint double* %x1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %24)
  store double %conv5, double* %x1, align 8, !dbg !3235
  %25 = ptrtoint double** %x.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %25, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.969, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %26 = load double*, double** %x.addr, align 8, !dbg !3236
  %27 = ptrtoint double* %26 to i64
  call void @__DiscoPoPOpenMPRead(i64 %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.970, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %28 = load double, double* %26, align 8, !dbg !3237
  %29 = ptrtoint double* %x1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %29, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.971, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %30 = load double, double* %x1, align 8, !dbg !3238
  %mul6 = fmul double 8.388608e+06, %30, !dbg !3239
  %sub7 = fsub double %28, %mul6, !dbg !3240
  %31 = ptrtoint double* %x2 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %31)
  store double %sub7, double* %x2, align 8, !dbg !3241
  %32 = ptrtoint double* %a1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.972, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %33 = load double, double* %a1, align 8, !dbg !3242
  %34 = ptrtoint double* %x2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %34, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.973, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %35 = load double, double* %x2, align 8, !dbg !3243
  %mul8 = fmul double %33, %35, !dbg !3244
  %36 = ptrtoint double* %a2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %36, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.974, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %37 = load double, double* %a2, align 8, !dbg !3245
  %38 = ptrtoint double* %x1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %38, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.975, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %39 = load double, double* %x1, align 8, !dbg !3246
  %mul9 = fmul double %37, %39, !dbg !3247
  %add = fadd double %mul8, %mul9, !dbg !3248
  %40 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %40)
  store double %add, double* %t1, align 8, !dbg !3249
  %41 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %41, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.976, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %42 = load double, double* %t1, align 8, !dbg !3250
  %mul10 = fmul double 0x3E80000000000000, %42, !dbg !3251
  %conv11 = fptosi double %mul10 to i32, !dbg !3252
  %conv12 = sitofp i32 %conv11 to double, !dbg !3252
  %43 = ptrtoint double* %t2 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %43)
  store double %conv12, double* %t2, align 8, !dbg !3253
  %44 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %44, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.977, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %45 = load double, double* %t1, align 8, !dbg !3254
  %46 = ptrtoint double* %t2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %46, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.978, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %47 = load double, double* %t2, align 8, !dbg !3255
  %mul13 = fmul double 8.388608e+06, %47, !dbg !3256
  %sub14 = fsub double %45, %mul13, !dbg !3257
  %48 = ptrtoint double* %z to i64
  call void @__DiscoPoPOpenMPWrite(i64 %48)
  store double %sub14, double* %z, align 8, !dbg !3258
  %49 = ptrtoint double* %z to i64
  call void @__DiscoPoPOpenMPRead(i64 %49, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.979, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %50 = load double, double* %z, align 8, !dbg !3259
  %mul15 = fmul double 8.388608e+06, %50, !dbg !3260
  %51 = ptrtoint double* %a2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %51, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.980, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %52 = load double, double* %a2, align 8, !dbg !3261
  %53 = ptrtoint double* %x2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %53, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.981, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %54 = load double, double* %x2, align 8, !dbg !3262
  %mul16 = fmul double %52, %54, !dbg !3263
  %add17 = fadd double %mul15, %mul16, !dbg !3264
  %55 = ptrtoint double* %t3 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %55)
  store double %add17, double* %t3, align 8, !dbg !3265
  %56 = ptrtoint double* %t3 to i64
  call void @__DiscoPoPOpenMPRead(i64 %56, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.982, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %57 = load double, double* %t3, align 8, !dbg !3266
  %mul18 = fmul double 0x3D10000000000000, %57, !dbg !3267
  %conv19 = fptosi double %mul18 to i32, !dbg !3268
  %conv20 = sitofp i32 %conv19 to double, !dbg !3268
  %58 = ptrtoint double* %t4 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %58)
  store double %conv20, double* %t4, align 8, !dbg !3269
  %59 = ptrtoint double* %t3 to i64
  call void @__DiscoPoPOpenMPRead(i64 %59, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.983, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %60 = load double, double* %t3, align 8, !dbg !3270
  %61 = ptrtoint double* %t4 to i64
  call void @__DiscoPoPOpenMPRead(i64 %61, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.984, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %62 = load double, double* %t4, align 8, !dbg !3271
  %mul21 = fmul double 0x42D0000000000000, %62, !dbg !3272
  %sub22 = fsub double %60, %mul21, !dbg !3273
  %63 = ptrtoint double** %x.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %63, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.985, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %64 = load double*, double** %x.addr, align 8, !dbg !3274
  %65 = ptrtoint double* %64 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %65)
  store double %sub22, double* %64, align 8, !dbg !3275
  %66 = ptrtoint double** %x.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %66, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.986, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %67 = load double*, double** %x.addr, align 8, !dbg !3276
  %68 = ptrtoint double* %67 to i64
  call void @__DiscoPoPOpenMPRead(i64 %68, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.987, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %69 = load double, double* %67, align 8, !dbg !3277
  %mul23 = fmul double 0x3D10000000000000, %69, !dbg !3278
  %70 = ptrtoint double* %r to i64
  call void @__DiscoPoPOpenMPWrite(i64 %70)
  store double %mul23, double* %r, align 8, !dbg !3279
  %71 = ptrtoint double* %r to i64
  call void @__DiscoPoPOpenMPRead(i64 %71, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.988, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %72 = load double, double* %r, align 8, !dbg !3280
  ret double %72, !dbg !3281
}

; Function Attrs: nounwind uwtable
define void @vranlc(i32 %n, double* %x, double %a, double* %y) #0 !dbg !3282 {
entry:
  %n.addr = alloca i32, align 4
  %x.addr = alloca double*, align 8
  %a.addr = alloca double, align 8
  %y.addr = alloca double*, align 8
  %r23 = alloca double, align 8
  %r46 = alloca double, align 8
  %t23 = alloca double, align 8
  %t46 = alloca double, align 8
  %t1 = alloca double, align 8
  %t2 = alloca double, align 8
  %t3 = alloca double, align 8
  %t4 = alloca double, align 8
  %a1 = alloca double, align 8
  %a2 = alloca double, align 8
  %x1 = alloca double, align 8
  %x2 = alloca double, align 8
  %z = alloca double, align 8
  %i = alloca i32, align 4
  %0 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0)
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3285, metadata !98), !dbg !3286
  %1 = ptrtoint double** %x.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %1)
  store double* %x, double** %x.addr, align 8
  call void @llvm.dbg.declare(metadata double** %x.addr, metadata !3287, metadata !98), !dbg !3288
  %2 = ptrtoint double* %a.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2)
  store double %a, double* %a.addr, align 8
  call void @llvm.dbg.declare(metadata double* %a.addr, metadata !3289, metadata !98), !dbg !3290
  %3 = ptrtoint double** %y.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3)
  store double* %y, double** %y.addr, align 8
  call void @llvm.dbg.declare(metadata double** %y.addr, metadata !3291, metadata !98), !dbg !3292
  call void @llvm.dbg.declare(metadata double* %r23, metadata !3293, metadata !98), !dbg !3294
  %4 = ptrtoint double* %r23 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store double 0x3E80000000000000, double* %r23, align 8, !dbg !3294
  call void @llvm.dbg.declare(metadata double* %r46, metadata !3295, metadata !98), !dbg !3296
  %5 = ptrtoint double* %r46 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store double 0x3D10000000000000, double* %r46, align 8, !dbg !3296
  call void @llvm.dbg.declare(metadata double* %t23, metadata !3297, metadata !98), !dbg !3298
  %6 = ptrtoint double* %t23 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %6)
  store double 8.388608e+06, double* %t23, align 8, !dbg !3298
  call void @llvm.dbg.declare(metadata double* %t46, metadata !3299, metadata !98), !dbg !3300
  %7 = ptrtoint double* %t46 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %7)
  store double 0x42D0000000000000, double* %t46, align 8, !dbg !3300
  call void @llvm.dbg.declare(metadata double* %t1, metadata !3301, metadata !98), !dbg !3302
  call void @llvm.dbg.declare(metadata double* %t2, metadata !3303, metadata !98), !dbg !3304
  call void @llvm.dbg.declare(metadata double* %t3, metadata !3305, metadata !98), !dbg !3306
  call void @llvm.dbg.declare(metadata double* %t4, metadata !3307, metadata !98), !dbg !3308
  call void @llvm.dbg.declare(metadata double* %a1, metadata !3309, metadata !98), !dbg !3310
  call void @llvm.dbg.declare(metadata double* %a2, metadata !3311, metadata !98), !dbg !3312
  call void @llvm.dbg.declare(metadata double* %x1, metadata !3313, metadata !98), !dbg !3314
  call void @llvm.dbg.declare(metadata double* %x2, metadata !3315, metadata !98), !dbg !3316
  call void @llvm.dbg.declare(metadata double* %z, metadata !3317, metadata !98), !dbg !3318
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3319, metadata !98), !dbg !3320
  %8 = ptrtoint double* %a.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.989, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %9 = load double, double* %a.addr, align 8, !dbg !3321
  %mul = fmul double 0x3E80000000000000, %9, !dbg !3322
  %10 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %10)
  store double %mul, double* %t1, align 8, !dbg !3323
  %11 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.990, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %12 = load double, double* %t1, align 8, !dbg !3324
  %conv = fptosi double %12 to i32, !dbg !3325
  %conv1 = sitofp i32 %conv to double, !dbg !3325
  %13 = ptrtoint double* %a1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %13)
  store double %conv1, double* %a1, align 8, !dbg !3326
  %14 = ptrtoint double* %a.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.991, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %15 = load double, double* %a.addr, align 8, !dbg !3327
  %16 = ptrtoint double* %a1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %16, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.992, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %17 = load double, double* %a1, align 8, !dbg !3328
  %mul2 = fmul double 8.388608e+06, %17, !dbg !3329
  %sub = fsub double %15, %mul2, !dbg !3330
  %18 = ptrtoint double* %a2 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %18)
  store double %sub, double* %a2, align 8, !dbg !3331
  %19 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %19)
  store i32 0, i32* %i, align 4, !dbg !3332
  br label %for.cond, !dbg !3334

for.cond:                                         ; preds = %for.inc, %entry
  %20 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %20, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.993, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %21 = load i32, i32* %i, align 4, !dbg !3335
  %22 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %22, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.994, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %23 = load i32, i32* %n.addr, align 4, !dbg !3338
  %cmp = icmp slt i32 %21, %23, !dbg !3339
  br i1 %cmp, label %for.body, label %for.end, !dbg !3340

for.body:                                         ; preds = %for.cond
  %24 = ptrtoint double** %x.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.995, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %25 = load double*, double** %x.addr, align 8, !dbg !3341
  %26 = ptrtoint double* %25 to i64
  call void @__DiscoPoPOpenMPRead(i64 %26, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.996, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %27 = load double, double* %25, align 8, !dbg !3343
  %mul4 = fmul double 0x3E80000000000000, %27, !dbg !3344
  %28 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %28)
  store double %mul4, double* %t1, align 8, !dbg !3345
  %29 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %29, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.997, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %30 = load double, double* %t1, align 8, !dbg !3346
  %conv5 = fptosi double %30 to i32, !dbg !3347
  %conv6 = sitofp i32 %conv5 to double, !dbg !3347
  %31 = ptrtoint double* %x1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %31)
  store double %conv6, double* %x1, align 8, !dbg !3348
  %32 = ptrtoint double** %x.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.998, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %33 = load double*, double** %x.addr, align 8, !dbg !3349
  %34 = ptrtoint double* %33 to i64
  call void @__DiscoPoPOpenMPRead(i64 %34, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.999, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %35 = load double, double* %33, align 8, !dbg !3350
  %36 = ptrtoint double* %x1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %36, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1000, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %37 = load double, double* %x1, align 8, !dbg !3351
  %mul7 = fmul double 8.388608e+06, %37, !dbg !3352
  %sub8 = fsub double %35, %mul7, !dbg !3353
  %38 = ptrtoint double* %x2 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %38)
  store double %sub8, double* %x2, align 8, !dbg !3354
  %39 = ptrtoint double* %a1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %39, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1001, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %40 = load double, double* %a1, align 8, !dbg !3355
  %41 = ptrtoint double* %x2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %41, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1002, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %42 = load double, double* %x2, align 8, !dbg !3356
  %mul9 = fmul double %40, %42, !dbg !3357
  %43 = ptrtoint double* %a2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %43, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1003, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %44 = load double, double* %a2, align 8, !dbg !3358
  %45 = ptrtoint double* %x1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %45, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1004, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %46 = load double, double* %x1, align 8, !dbg !3359
  %mul10 = fmul double %44, %46, !dbg !3360
  %add = fadd double %mul9, %mul10, !dbg !3361
  %47 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %47)
  store double %add, double* %t1, align 8, !dbg !3362
  %48 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %48, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1005, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %49 = load double, double* %t1, align 8, !dbg !3363
  %mul11 = fmul double 0x3E80000000000000, %49, !dbg !3364
  %conv12 = fptosi double %mul11 to i32, !dbg !3365
  %conv13 = sitofp i32 %conv12 to double, !dbg !3365
  %50 = ptrtoint double* %t2 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %50)
  store double %conv13, double* %t2, align 8, !dbg !3366
  %51 = ptrtoint double* %t1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %51, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1006, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %52 = load double, double* %t1, align 8, !dbg !3367
  %53 = ptrtoint double* %t2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %53, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1007, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %54 = load double, double* %t2, align 8, !dbg !3368
  %mul14 = fmul double 8.388608e+06, %54, !dbg !3369
  %sub15 = fsub double %52, %mul14, !dbg !3370
  %55 = ptrtoint double* %z to i64
  call void @__DiscoPoPOpenMPWrite(i64 %55)
  store double %sub15, double* %z, align 8, !dbg !3371
  %56 = ptrtoint double* %z to i64
  call void @__DiscoPoPOpenMPRead(i64 %56, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1008, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %57 = load double, double* %z, align 8, !dbg !3372
  %mul16 = fmul double 8.388608e+06, %57, !dbg !3373
  %58 = ptrtoint double* %a2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %58, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1009, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %59 = load double, double* %a2, align 8, !dbg !3374
  %60 = ptrtoint double* %x2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %60, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1010, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %61 = load double, double* %x2, align 8, !dbg !3375
  %mul17 = fmul double %59, %61, !dbg !3376
  %add18 = fadd double %mul16, %mul17, !dbg !3377
  %62 = ptrtoint double* %t3 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %62)
  store double %add18, double* %t3, align 8, !dbg !3378
  %63 = ptrtoint double* %t3 to i64
  call void @__DiscoPoPOpenMPRead(i64 %63, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1011, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %64 = load double, double* %t3, align 8, !dbg !3379
  %mul19 = fmul double 0x3D10000000000000, %64, !dbg !3380
  %conv20 = fptosi double %mul19 to i32, !dbg !3381
  %conv21 = sitofp i32 %conv20 to double, !dbg !3381
  %65 = ptrtoint double* %t4 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %65)
  store double %conv21, double* %t4, align 8, !dbg !3382
  %66 = ptrtoint double* %t3 to i64
  call void @__DiscoPoPOpenMPRead(i64 %66, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1012, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %67 = load double, double* %t3, align 8, !dbg !3383
  %68 = ptrtoint double* %t4 to i64
  call void @__DiscoPoPOpenMPRead(i64 %68, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1013, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %69 = load double, double* %t4, align 8, !dbg !3384
  %mul22 = fmul double 0x42D0000000000000, %69, !dbg !3385
  %sub23 = fsub double %67, %mul22, !dbg !3386
  %70 = ptrtoint double** %x.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %70, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1014, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %71 = load double*, double** %x.addr, align 8, !dbg !3387
  %72 = ptrtoint double* %71 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %72)
  store double %sub23, double* %71, align 8, !dbg !3388
  %73 = ptrtoint double** %x.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %73, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1015, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %74 = load double*, double** %x.addr, align 8, !dbg !3389
  %75 = ptrtoint double* %74 to i64
  call void @__DiscoPoPOpenMPRead(i64 %75, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1016, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %76 = load double, double* %74, align 8, !dbg !3390
  %mul24 = fmul double 0x3D10000000000000, %76, !dbg !3391
  %77 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %77, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1017, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %78 = load i32, i32* %i, align 4, !dbg !3392
  %idxprom = sext i32 %78 to i64, !dbg !3393
  %79 = ptrtoint double** %y.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %79, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1018, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %80 = load double*, double** %y.addr, align 8, !dbg !3393
  %arrayidx = getelementptr inbounds double, double* %80, i64 %idxprom, !dbg !3393
  %81 = ptrtoint double* %arrayidx to i64
  call void @__DiscoPoPOpenMPWrite(i64 %81)
  store double %mul24, double* %arrayidx, align 8, !dbg !3394
  br label %for.inc, !dbg !3395

for.inc:                                          ; preds = %for.body
  %82 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %82, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1019, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %83 = load i32, i32* %i, align 4, !dbg !3396
  %inc = add nsw i32 %83, 1, !dbg !3396
  %84 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %84)
  store i32 %inc, i32* %i, align 4, !dbg !3396
  br label %for.cond, !dbg !3398, !llvm.loop !3399

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3401
}

; Function Attrs: nounwind uwtable
define void @timer_clear(i32 %n) #0 !dbg !3402 {
entry:
  %n.addr = alloca i32, align 4
  %0 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0)
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3403, metadata !98), !dbg !3404
  %1 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1020, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %2 = load i32, i32* %n.addr, align 4, !dbg !3405
  %idxprom = sext i32 %2 to i64, !dbg !3406
  %3 = call [64 x double]* @_ZTWL7elapsed(), !dbg !3406
  %arrayidx = getelementptr inbounds [64 x double], [64 x double]* %3, i64 0, i64 %idxprom, !dbg !3406
  %4 = ptrtoint double* %arrayidx to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store double 0.000000e+00, double* %arrayidx, align 8, !dbg !3407
  %5 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1021, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %6 = load i32, i32* %n.addr, align 4, !dbg !3408
  %idxprom1 = sext i32 %6 to i64, !dbg !3409
  %7 = call [64 x i32]* @_ZTWL5count(), !dbg !3409
  %arrayidx2 = getelementptr inbounds [64 x i32], [64 x i32]* %7, i64 0, i64 %idxprom1, !dbg !3409
  %8 = ptrtoint i32* %arrayidx2 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %8)
  store i32 0, i32* %arrayidx2, align 4, !dbg !3410
  ret void, !dbg !3411
}

; Function Attrs: nounwind uwtable
define internal [64 x double]* @_ZTWL7elapsed() #6 {
  ret [64 x double]* @elapsed
}

; Function Attrs: nounwind uwtable
define internal [64 x i32]* @_ZTWL5count() #6 {
  ret [64 x i32]* @count
}

; Function Attrs: nounwind uwtable
define void @timer_start(i32 %n) #0 !dbg !3412 {
entry:
  %n.addr = alloca i32, align 4
  %0 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0)
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3413, metadata !98), !dbg !3414
  %call = call double @elapsed_time(), !dbg !3415
  %1 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1022, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %2 = load i32, i32* %n.addr, align 4, !dbg !3416
  %idxprom = sext i32 %2 to i64, !dbg !3417
  %3 = call [64 x double]* @_ZTWL5start(), !dbg !3418
  %arrayidx = getelementptr inbounds [64 x double], [64 x double]* %3, i64 0, i64 %idxprom, !dbg !3417
  %4 = ptrtoint double* %arrayidx to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4)
  store double %call, double* %arrayidx, align 8, !dbg !3420
  ret void, !dbg !3421
}

; Function Attrs: nounwind uwtable
define internal double @elapsed_time() #0 !dbg !3422 {
entry:
  %t = alloca double, align 8
  call void @llvm.dbg.declare(metadata double* %t, metadata !3424, metadata !98), !dbg !3425
  %call = call double @omp_get_wtime(), !dbg !3426
  %0 = ptrtoint double* %t to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0)
  store double %call, double* %t, align 8, !dbg !3427
  %1 = ptrtoint double* %t to i64
  call void @__DiscoPoPOpenMPRead(i64 %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1023, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %2 = load double, double* %t, align 8, !dbg !3428
  ret double %2, !dbg !3429
}

; Function Attrs: nounwind uwtable
define internal [64 x double]* @_ZTWL5start() #6 {
  ret [64 x double]* @start
}

declare double @omp_get_wtime() #3

; Function Attrs: nounwind uwtable
define void @timer_stop(i32 %n) #0 !dbg !3430 {
entry:
  %n.addr = alloca i32, align 4
  %t = alloca double, align 8
  %now = alloca double, align 8
  %0 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0)
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3431, metadata !98), !dbg !3432
  call void @llvm.dbg.declare(metadata double* %t, metadata !3433, metadata !98), !dbg !3434
  call void @llvm.dbg.declare(metadata double* %now, metadata !3435, metadata !98), !dbg !3436
  %call = call double @elapsed_time(), !dbg !3437
  %1 = ptrtoint double* %now to i64
  call void @__DiscoPoPOpenMPWrite(i64 %1)
  store double %call, double* %now, align 8, !dbg !3438
  %2 = ptrtoint double* %now to i64
  call void @__DiscoPoPOpenMPRead(i64 %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1024, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %3 = load double, double* %now, align 8, !dbg !3439
  %4 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1025, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %5 = load i32, i32* %n.addr, align 4, !dbg !3440
  %idxprom = sext i32 %5 to i64, !dbg !3441
  %6 = call [64 x double]* @_ZTWL5start(), !dbg !3441
  %arrayidx = getelementptr inbounds [64 x double], [64 x double]* %6, i64 0, i64 %idxprom, !dbg !3441
  %7 = ptrtoint double* %arrayidx to i64
  call void @__DiscoPoPOpenMPRead(i64 %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1026, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %8 = load double, double* %arrayidx, align 8, !dbg !3441
  %sub = fsub double %3, %8, !dbg !3442
  %9 = ptrtoint double* %t to i64
  call void @__DiscoPoPOpenMPWrite(i64 %9)
  store double %sub, double* %t, align 8, !dbg !3443
  %10 = ptrtoint double* %t to i64
  call void @__DiscoPoPOpenMPRead(i64 %10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1027, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %11 = load double, double* %t, align 8, !dbg !3444
  %12 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %12, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1028, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %13 = load i32, i32* %n.addr, align 4, !dbg !3445
  %idxprom1 = sext i32 %13 to i64, !dbg !3446
  %14 = call [64 x double]* @_ZTWL7elapsed(), !dbg !3446
  %arrayidx2 = getelementptr inbounds [64 x double], [64 x double]* %14, i64 0, i64 %idxprom1, !dbg !3446
  %15 = ptrtoint double* %arrayidx2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %15, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1029, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %16 = load double, double* %arrayidx2, align 8, !dbg !3447
  %add = fadd double %16, %11, !dbg !3447
  %17 = ptrtoint double* %arrayidx2 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %17)
  store double %add, double* %arrayidx2, align 8, !dbg !3447
  %18 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %18, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1030, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %19 = load i32, i32* %n.addr, align 4, !dbg !3448
  %idxprom3 = sext i32 %19 to i64, !dbg !3449
  %20 = call [64 x i32]* @_ZTWL5count(), !dbg !3449
  %arrayidx4 = getelementptr inbounds [64 x i32], [64 x i32]* %20, i64 0, i64 %idxprom3, !dbg !3449
  %21 = ptrtoint i32* %arrayidx4 to i64
  call void @__DiscoPoPOpenMPRead(i64 %21, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1031, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %22 = load i32, i32* %arrayidx4, align 4, !dbg !3450
  %inc = add i32 %22, 1, !dbg !3450
  %23 = ptrtoint i32* %arrayidx4 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %23)
  store i32 %inc, i32* %arrayidx4, align 4, !dbg !3450
  ret void, !dbg !3451
}

; Function Attrs: nounwind uwtable
define double @timer_read(i32 %n) #0 !dbg !3452 {
entry:
  %n.addr = alloca i32, align 4
  %0 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0)
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3455, metadata !98), !dbg !3456
  %1 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1032, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %2 = load i32, i32* %n.addr, align 4, !dbg !3457
  %idxprom = sext i32 %2 to i64, !dbg !3458
  %3 = call [64 x double]* @_ZTWL7elapsed(), !dbg !3458
  %arrayidx = getelementptr inbounds [64 x double], [64 x double]* %3, i64 0, i64 %idxprom, !dbg !3458
  %4 = ptrtoint double* %arrayidx to i64
  call void @__DiscoPoPOpenMPRead(i64 %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1033, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %5 = load double, double* %arrayidx, align 8, !dbg !3458
  ret double %5, !dbg !3459
}

; Function Attrs: nounwind uwtable
define i32 @timer_count(i32 %n) #0 !dbg !3460 {
entry:
  %n.addr = alloca i32, align 4
  %0 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0)
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3463, metadata !98), !dbg !3464
  %1 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1034, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %2 = load i32, i32* %n.addr, align 4, !dbg !3465
  %idxprom = sext i32 %2 to i64, !dbg !3466
  %3 = call [64 x i32]* @_ZTWL5count(), !dbg !3466
  %arrayidx = getelementptr inbounds [64 x i32], [64 x i32]* %3, i64 0, i64 %idxprom, !dbg !3466
  %4 = ptrtoint i32* %arrayidx to i64
  call void @__DiscoPoPOpenMPRead(i64 %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1035, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %5 = load i32, i32* %arrayidx, align 4, !dbg !3466
  ret i32 %5, !dbg !3467
}

; Function Attrs: nounwind uwtable
define void @wtime_(double* %t) #0 !dbg !85 {
entry:
  %t.addr = alloca double*, align 8
  %tv = alloca %struct.timeval, align 8
  %0 = ptrtoint double** %t.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0)
  store double* %t, double** %t.addr, align 8
  call void @llvm.dbg.declare(metadata double** %t.addr, metadata !3468, metadata !98), !dbg !3469
  call void @llvm.dbg.declare(metadata %struct.timeval* %tv, metadata !3470, metadata !98), !dbg !3479
  %call = call i32 @gettimeofday(%struct.timeval* %tv, %struct.timezone* null) #8, !dbg !3480
  %1 = ptrtoint i32* @wtime_.sec to i64
  call void @__DiscoPoPOpenMPRead(i64 %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1036, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %2 = load i32, i32* @wtime_.sec, align 4, !dbg !3481
  %cmp = icmp slt i32 %2, 0, !dbg !3483
  br i1 %cmp, label %if.then, label %if.end, !dbg !3484

if.then:                                          ; preds = %entry
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %tv, i32 0, i32 0, !dbg !3485
  %3 = ptrtoint i64* %tv_sec to i64
  call void @__DiscoPoPOpenMPRead(i64 %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1037, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %4 = load i64, i64* %tv_sec, align 8, !dbg !3485
  %conv = trunc i64 %4 to i32, !dbg !3487
  %5 = ptrtoint i32* @wtime_.sec to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5)
  store i32 %conv, i32* @wtime_.sec, align 4, !dbg !3488
  br label %if.end, !dbg !3489

if.end:                                           ; preds = %if.then, %entry
  %tv_sec1 = getelementptr inbounds %struct.timeval, %struct.timeval* %tv, i32 0, i32 0, !dbg !3490
  %6 = ptrtoint i64* %tv_sec1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1038, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %7 = load i64, i64* %tv_sec1, align 8, !dbg !3490
  %8 = ptrtoint i32* @wtime_.sec to i64
  call void @__DiscoPoPOpenMPRead(i64 %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1039, i32 0, i32 0), i32 0, i32 -1, i32 4)
  %9 = load i32, i32* @wtime_.sec, align 4, !dbg !3491
  %conv2 = sext i32 %9 to i64, !dbg !3491
  %sub = sub nsw i64 %7, %conv2, !dbg !3492
  %conv3 = sitofp i64 %sub to double, !dbg !3493
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %tv, i32 0, i32 1, !dbg !3494
  %10 = ptrtoint i64* %tv_usec to i64
  call void @__DiscoPoPOpenMPRead(i64 %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1040, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %11 = load i64, i64* %tv_usec, align 8, !dbg !3494
  %conv4 = sitofp i64 %11 to double, !dbg !3495
  %mul = fmul double 1.000000e-06, %conv4, !dbg !3496
  %add = fadd double %conv3, %mul, !dbg !3497
  %12 = ptrtoint double** %t.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1041, i32 0, i32 0), i32 0, i32 -1, i32 8)
  %13 = load double*, double** %t.addr, align 8, !dbg !3498
  %14 = ptrtoint double* %13 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %14)
  store double %add, double* %13, align 8, !dbg !3499
  ret void, !dbg !3500
}

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval*, %struct.timezone*) #2

declare void @__DiscoPoPOpenMPInitialize()

declare void @__CollectThreadInfo()

declare void @__DiscoPoPOpenMPFinalize()

declare void @__DiscoPoPOpenMPRead(i64, i8*, i32, i32, i32)

declare void @__DiscoPoPOpenMPWrite(i64)

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.dbg.cu = !{!0, !60, !66, !70, !81}
!llvm.ident = !{!88, !88, !88, !88, !88}
!llvm.module.flags = !{!89, !90}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.1 (tags/RELEASE_391/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !8, globals: !24)
!1 = !DIFile(filename: "ft.c", directory: "/home/amiryousefi/llvmTemp/Codes/NAS/NPB3.3-OMP-C/FT")
!2 = !{!3}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 4, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "../common/type.h", directory: "/home/amiryousefi/llvmTemp/Codes/NAS/NPB3.3-OMP-C/FT")
!5 = !{!6, !7}
!6 = !DIEnumerator(name: "false", value: 0)
!7 = !DIEnumerator(name: "true", value: 1)
!8 = !{!9, !10, !19, !21, !22, !23}
!9 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64, align: 64)
!11 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, align: 64, elements: !17)
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "dcomplex", file: !4, line: 8, baseType: !13)
!13 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 5, size: 128, align: 64, elements: !14)
!14 = !{!15, !16}
!15 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !13, file: !4, line: 6, baseType: !9, size: 64, align: 64)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !13, file: !4, line: 7, baseType: !9, size: 64, align: 64, offset: 64)
!17 = !{!18, !18}
!18 = !DISubrange(count: -1)
!19 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64, align: 64)
!20 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, align: 64, elements: !17)
!21 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64, align: 64)
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!23 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!24 = !{!25, !30, !32, !33, !38, !39, !43, !45, !46, !47, !49, !50, !51, !52, !56}
!25 = distinct !DIGlobalVariable(name: "dims", scope: !0, file: !26, line: 86, type: !27, isLocal: true, isDefinition: true, variable: [3 x i32]* @dims)
!26 = !DIFile(filename: "./global.h", directory: "/home/amiryousefi/llvmTemp/Codes/NAS/NPB3.3-OMP-C/FT")
!27 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 96, align: 32, elements: !28)
!28 = !{!29}
!29 = !DISubrange(count: 3)
!30 = distinct !DIGlobalVariable(name: "timers_enabled", scope: !0, file: !26, line: 102, type: !31, isLocal: true, isDefinition: true, variable: i32* @timers_enabled)
!31 = !DIDerivedType(tag: DW_TAG_typedef, name: "logical", file: !4, line: 4, baseType: !3)
!32 = distinct !DIGlobalVariable(name: "niter", scope: !0, file: !26, line: 124, type: !23, isLocal: true, isDefinition: true, variable: i32* @niter)
!33 = distinct !DIGlobalVariable(name: "ty1", scope: !0, file: !1, line: 53, type: !34, isLocal: true, isDefinition: true, variable: [64 x [33 x %struct.dcomplex]]* @ty1)
!34 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 270336, align: 64, elements: !35)
!35 = !{!36, !37}
!36 = !DISubrange(count: 64)
!37 = !DISubrange(count: 33)
!38 = distinct !DIGlobalVariable(name: "ty2", scope: !0, file: !1, line: 54, type: !34, isLocal: true, isDefinition: true, variable: [64 x [33 x %struct.dcomplex]]* @ty2)
!39 = distinct !DIGlobalVariable(name: "u0", scope: !0, file: !1, line: 74, type: !40, isLocal: false, isDefinition: true, variable: [266240 x %struct.dcomplex]* @u0)
!40 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 34078720, align: 64, elements: !41)
!41 = !{!42}
!42 = !DISubrange(count: 266240)
!43 = distinct !DIGlobalVariable(name: "pad1", scope: !0, file: !1, line: 75, type: !44, isLocal: false, isDefinition: true, variable: [3 x %struct.dcomplex]* @pad1)
!44 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 384, align: 64, elements: !28)
!45 = distinct !DIGlobalVariable(name: "u1", scope: !0, file: !1, line: 76, type: !40, isLocal: false, isDefinition: true, variable: [266240 x %struct.dcomplex]* @u1)
!46 = distinct !DIGlobalVariable(name: "pad2", scope: !0, file: !1, line: 77, type: !44, isLocal: false, isDefinition: true, variable: [3 x %struct.dcomplex]* @pad2)
!47 = distinct !DIGlobalVariable(name: "twiddle", scope: !0, file: !1, line: 79, type: !48, isLocal: false, isDefinition: true, variable: [266240 x double]* @twiddle)
!48 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 17039360, align: 64, elements: !41)
!49 = distinct !DIGlobalVariable(name: "debug", scope: !0, file: !26, line: 103, type: !31, isLocal: true, isDefinition: true, variable: i32* @debug)
!50 = distinct !DIGlobalVariable(name: "fftblock", scope: !0, file: !26, line: 55, type: !23, isLocal: true, isDefinition: true, variable: i32* @fftblock)
!51 = distinct !DIGlobalVariable(name: "fftblockpad", scope: !0, file: !26, line: 55, type: !23, isLocal: true, isDefinition: true, variable: i32* @fftblockpad)
!52 = distinct !DIGlobalVariable(name: "u", scope: !0, file: !26, line: 115, type: !53, isLocal: true, isDefinition: true, variable: [65 x %struct.dcomplex]* @u)
!53 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 8320, align: 64, elements: !54)
!54 = !{!55}
!55 = !DISubrange(count: 65)
!56 = distinct !DIGlobalVariable(name: "sums", scope: !0, file: !26, line: 120, type: !57, isLocal: true, isDefinition: true, variable: [7 x %struct.dcomplex]* @sums)
!57 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 896, align: 64, elements: !58)
!58 = !{!59}
!59 = !DISubrange(count: 7)
!60 = distinct !DICompileUnit(language: DW_LANG_C99, file: !61, producer: "clang version 3.9.1 (tags/RELEASE_391/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !62, retainedTypes: !65)
!61 = !DIFile(filename: "../common/print_results.c", directory: "/home/amiryousefi/llvmTemp/Codes/NAS/NPB3.3-OMP-C/common")
!62 = !{!63}
!63 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !64, line: 4, size: 32, align: 32, elements: !5)
!64 = !DIFile(filename: "../common/type.h", directory: "/home/amiryousefi/llvmTemp/Codes/NAS/NPB3.3-OMP-C/common")
!65 = !{!9}
!66 = distinct !DICompileUnit(language: DW_LANG_C99, file: !67, producer: "clang version 3.9.1 (tags/RELEASE_391/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !68, retainedTypes: !69)
!67 = !DIFile(filename: "../common/randdp.c", directory: "/home/amiryousefi/llvmTemp/Codes/NAS/NPB3.3-OMP-C/common")
!68 = !{}
!69 = !{!23}
!70 = distinct !DICompileUnit(language: DW_LANG_C99, file: !71, producer: "clang version 3.9.1 (tags/RELEASE_391/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !68, globals: !72)
!71 = !DIFile(filename: "../common/c_timers.c", directory: "/home/amiryousefi/llvmTemp/Codes/NAS/NPB3.3-OMP-C/common")
!72 = !{!73, !77, !78}
!73 = distinct !DIGlobalVariable(name: "start", scope: !70, file: !74, line: 28, type: !75, isLocal: true, isDefinition: true, variable: [64 x double]* @start)
!74 = !DIFile(filename: "c_timers.c", directory: "/home/amiryousefi/llvmTemp/Codes/NAS/NPB3.3-OMP-C/common")
!75 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 4096, align: 64, elements: !76)
!76 = !{!36}
!77 = distinct !DIGlobalVariable(name: "elapsed", scope: !70, file: !74, line: 28, type: !75, isLocal: true, isDefinition: true, variable: [64 x double]* @elapsed)
!78 = distinct !DIGlobalVariable(name: "count", scope: !70, file: !74, line: 29, type: !79, isLocal: true, isDefinition: true, variable: [64 x i32]* @count)
!79 = !DICompositeType(tag: DW_TAG_array_type, baseType: !80, size: 2048, align: 32, elements: !76)
!80 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!81 = distinct !DICompileUnit(language: DW_LANG_C99, file: !82, producer: "clang version 3.9.1 (tags/RELEASE_391/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !68, globals: !83)
!82 = !DIFile(filename: "../common/wtime.c", directory: "/home/amiryousefi/llvmTemp/Codes/NAS/NPB3.3-OMP-C/common")
!83 = !{!84}
!84 = distinct !DIGlobalVariable(name: "sec", scope: !85, file: !82, line: 10, type: !23, isLocal: true, isDefinition: true, variable: i32* @wtime_.sec)
!85 = distinct !DISubprogram(name: "wtime_", scope: !82, file: !82, line: 7, type: !86, isLocal: false, isDefinition: true, scopeLine: 8, flags: DIFlagPrototyped, isOptimized: false, unit: !81, variables: !68)
!86 = !DISubroutineType(types: !87)
!87 = !{null, !21}
!88 = !{!"clang version 3.9.1 (tags/RELEASE_391/final)"}
!89 = !{i32 2, !"Dwarf Version", i32 4}
!90 = !{i32 2, !"Debug Info Version", i32 3}
!91 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 107, type: !92, isLocal: false, isDefinition: true, scopeLine: 108, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !68)
!92 = !DISubroutineType(types: !93)
!93 = !{!23, !23, !94}
!94 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 64, align: 64)
!95 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !96, size: 64, align: 64)
!96 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!97 = !DILocalVariable(name: "argc", arg: 1, scope: !91, file: !1, line: 107, type: !23)
!98 = !DIExpression()
!99 = !DILocation(line: 107, column: 14, scope: !91)
!100 = !DILocalVariable(name: "argv", arg: 2, scope: !91, file: !1, line: 107, type: !94)
!101 = !DILocation(line: 107, column: 26, scope: !91)
!102 = !DILocalVariable(name: "i", scope: !91, file: !1, line: 109, type: !23)
!103 = !DILocation(line: 109, column: 7, scope: !91)
!104 = !DILocalVariable(name: "iter", scope: !91, file: !1, line: 110, type: !23)
!105 = !DILocation(line: 110, column: 7, scope: !91)
!106 = !DILocalVariable(name: "total_time", scope: !91, file: !1, line: 111, type: !9)
!107 = !DILocation(line: 111, column: 10, scope: !91)
!108 = !DILocalVariable(name: "mflops", scope: !91, file: !1, line: 111, type: !9)
!109 = !DILocation(line: 111, column: 22, scope: !91)
!110 = !DILocalVariable(name: "verified", scope: !91, file: !1, line: 112, type: !31)
!111 = !DILocation(line: 112, column: 11, scope: !91)
!112 = !DILocalVariable(name: "Class", scope: !91, file: !1, line: 113, type: !96)
!113 = !DILocation(line: 113, column: 8, scope: !91)
!114 = !DILocation(line: 120, column: 10, scope: !115)
!115 = distinct !DILexicalBlock(scope: !91, file: !1, line: 120, column: 3)
!116 = !DILocation(line: 120, column: 8, scope: !115)
!117 = !DILocation(line: 120, column: 15, scope: !118)
!118 = !DILexicalBlockFile(scope: !119, file: !1, discriminator: 1)
!119 = distinct !DILexicalBlock(scope: !115, file: !1, line: 120, column: 3)
!120 = !DILocation(line: 120, column: 17, scope: !118)
!121 = !DILocation(line: 120, column: 3, scope: !118)
!122 = !DILocation(line: 121, column: 17, scope: !123)
!123 = distinct !DILexicalBlock(scope: !119, file: !1, line: 120, column: 32)
!124 = !DILocation(line: 121, column: 5, scope: !123)
!125 = !DILocation(line: 122, column: 3, scope: !123)
!126 = !DILocation(line: 120, column: 28, scope: !127)
!127 = !DILexicalBlockFile(scope: !119, file: !1, discriminator: 2)
!128 = !DILocation(line: 120, column: 3, scope: !127)
!129 = distinct !{!129, !130}
!130 = !DILocation(line: 120, column: 3, scope: !91)
!131 = !DILocation(line: 123, column: 3, scope: !91)
!132 = !DILocation(line: 124, column: 28, scope: !91)
!133 = !DILocation(line: 124, column: 37, scope: !91)
!134 = !DILocation(line: 124, column: 46, scope: !91)
!135 = !DILocation(line: 124, column: 3, scope: !91)
!136 = !DILocation(line: 125, column: 29, scope: !91)
!137 = !DILocation(line: 125, column: 38, scope: !91)
!138 = !DILocation(line: 125, column: 47, scope: !91)
!139 = !DILocation(line: 125, column: 3, scope: !91)
!140 = !DILocation(line: 126, column: 34, scope: !91)
!141 = !DILocation(line: 126, column: 43, scope: !91)
!142 = !DILocation(line: 126, column: 52, scope: !91)
!143 = !DILocation(line: 126, column: 3, scope: !91)
!144 = !DILocation(line: 127, column: 12, scope: !91)
!145 = !DILocation(line: 127, column: 3, scope: !91)
!146 = !DILocation(line: 128, column: 3, scope: !91)
!147 = !DILocation(line: 134, column: 10, scope: !148)
!148 = distinct !DILexicalBlock(scope: !91, file: !1, line: 134, column: 3)
!149 = !DILocation(line: 134, column: 8, scope: !148)
!150 = !DILocation(line: 134, column: 15, scope: !151)
!151 = !DILexicalBlockFile(scope: !152, file: !1, discriminator: 1)
!152 = distinct !DILexicalBlock(scope: !148, file: !1, line: 134, column: 3)
!153 = !DILocation(line: 134, column: 17, scope: !151)
!154 = !DILocation(line: 134, column: 3, scope: !151)
!155 = !DILocation(line: 135, column: 17, scope: !156)
!156 = distinct !DILexicalBlock(scope: !152, file: !1, line: 134, column: 32)
!157 = !DILocation(line: 135, column: 5, scope: !156)
!158 = !DILocation(line: 136, column: 3, scope: !156)
!159 = !DILocation(line: 134, column: 28, scope: !160)
!160 = !DILexicalBlockFile(scope: !152, file: !1, discriminator: 2)
!161 = !DILocation(line: 134, column: 3, scope: !160)
!162 = distinct !{!162, !163}
!163 = !DILocation(line: 134, column: 3, scope: !91)
!164 = !DILocation(line: 138, column: 3, scope: !91)
!165 = !DILocation(line: 139, column: 7, scope: !166)
!166 = distinct !DILexicalBlock(scope: !91, file: !1, line: 139, column: 7)
!167 = !DILocation(line: 139, column: 7, scope: !91)
!168 = !DILocation(line: 139, column: 23, scope: !169)
!169 = !DILexicalBlockFile(scope: !166, file: !1, discriminator: 1)
!170 = !DILocation(line: 141, column: 29, scope: !91)
!171 = !DILocation(line: 141, column: 38, scope: !91)
!172 = !DILocation(line: 141, column: 47, scope: !91)
!173 = !DILocation(line: 141, column: 3, scope: !91)
!174 = !DILocation(line: 143, column: 34, scope: !91)
!175 = !DILocation(line: 143, column: 43, scope: !91)
!176 = !DILocation(line: 143, column: 52, scope: !91)
!177 = !DILocation(line: 143, column: 3, scope: !91)
!178 = !DILocation(line: 145, column: 12, scope: !91)
!179 = !DILocation(line: 145, column: 3, scope: !91)
!180 = !DILocation(line: 147, column: 7, scope: !181)
!181 = distinct !DILexicalBlock(scope: !91, file: !1, line: 147, column: 7)
!182 = !DILocation(line: 147, column: 7, scope: !91)
!183 = !DILocation(line: 147, column: 23, scope: !184)
!184 = !DILexicalBlockFile(scope: !181, file: !1, discriminator: 1)
!185 = !DILocation(line: 148, column: 7, scope: !186)
!186 = distinct !DILexicalBlock(scope: !91, file: !1, line: 148, column: 7)
!187 = !DILocation(line: 148, column: 7, scope: !91)
!188 = !DILocation(line: 148, column: 23, scope: !189)
!189 = !DILexicalBlockFile(scope: !186, file: !1, discriminator: 1)
!190 = !DILocation(line: 149, column: 3, scope: !91)
!191 = !DILocation(line: 150, column: 7, scope: !192)
!192 = distinct !DILexicalBlock(scope: !91, file: !1, line: 150, column: 7)
!193 = !DILocation(line: 150, column: 7, scope: !91)
!194 = !DILocation(line: 150, column: 23, scope: !195)
!195 = !DILexicalBlockFile(scope: !192, file: !1, discriminator: 1)
!196 = !DILocation(line: 152, column: 13, scope: !197)
!197 = distinct !DILexicalBlock(scope: !91, file: !1, line: 152, column: 3)
!198 = !DILocation(line: 152, column: 8, scope: !197)
!199 = !DILocation(line: 152, column: 18, scope: !200)
!200 = !DILexicalBlockFile(scope: !201, file: !1, discriminator: 1)
!201 = distinct !DILexicalBlock(scope: !197, file: !1, line: 152, column: 3)
!202 = !DILocation(line: 152, column: 26, scope: !200)
!203 = !DILocation(line: 152, column: 23, scope: !200)
!204 = !DILocation(line: 152, column: 3, scope: !200)
!205 = !DILocation(line: 153, column: 9, scope: !206)
!206 = distinct !DILexicalBlock(scope: !207, file: !1, line: 153, column: 9)
!207 = distinct !DILexicalBlock(scope: !201, file: !1, line: 152, column: 41)
!208 = !DILocation(line: 153, column: 9, scope: !207)
!209 = !DILocation(line: 153, column: 25, scope: !210)
!210 = !DILexicalBlockFile(scope: !206, file: !1, discriminator: 1)
!211 = !DILocation(line: 154, column: 29, scope: !207)
!212 = !DILocation(line: 154, column: 38, scope: !207)
!213 = !DILocation(line: 154, column: 47, scope: !207)
!214 = !DILocation(line: 154, column: 5, scope: !207)
!215 = !DILocation(line: 155, column: 9, scope: !216)
!216 = distinct !DILexicalBlock(scope: !207, file: !1, line: 155, column: 9)
!217 = !DILocation(line: 155, column: 9, scope: !207)
!218 = !DILocation(line: 155, column: 25, scope: !219)
!219 = !DILexicalBlockFile(scope: !216, file: !1, discriminator: 1)
!220 = !DILocation(line: 156, column: 9, scope: !221)
!221 = distinct !DILexicalBlock(scope: !207, file: !1, line: 156, column: 9)
!222 = !DILocation(line: 156, column: 9, scope: !207)
!223 = !DILocation(line: 156, column: 25, scope: !224)
!224 = !DILexicalBlockFile(scope: !221, file: !1, discriminator: 1)
!225 = !DILocation(line: 158, column: 5, scope: !207)
!226 = !DILocation(line: 159, column: 9, scope: !227)
!227 = distinct !DILexicalBlock(scope: !207, file: !1, line: 159, column: 9)
!228 = !DILocation(line: 159, column: 9, scope: !207)
!229 = !DILocation(line: 159, column: 25, scope: !230)
!230 = !DILexicalBlockFile(scope: !227, file: !1, discriminator: 1)
!231 = !DILocation(line: 160, column: 9, scope: !232)
!232 = distinct !DILexicalBlock(scope: !207, file: !1, line: 160, column: 9)
!233 = !DILocation(line: 160, column: 9, scope: !207)
!234 = !DILocation(line: 160, column: 25, scope: !235)
!235 = !DILexicalBlockFile(scope: !232, file: !1, discriminator: 1)
!236 = !DILocation(line: 162, column: 14, scope: !207)
!237 = !DILocation(line: 162, column: 24, scope: !207)
!238 = !DILocation(line: 162, column: 33, scope: !207)
!239 = !DILocation(line: 162, column: 42, scope: !207)
!240 = !DILocation(line: 162, column: 5, scope: !207)
!241 = !DILocation(line: 163, column: 9, scope: !242)
!242 = distinct !DILexicalBlock(scope: !207, file: !1, line: 163, column: 9)
!243 = !DILocation(line: 163, column: 9, scope: !207)
!244 = !DILocation(line: 163, column: 25, scope: !245)
!245 = !DILexicalBlockFile(scope: !242, file: !1, discriminator: 1)
!246 = !DILocation(line: 164, column: 3, scope: !207)
!247 = !DILocation(line: 152, column: 37, scope: !248)
!248 = !DILexicalBlockFile(scope: !201, file: !1, discriminator: 2)
!249 = !DILocation(line: 152, column: 3, scope: !248)
!250 = distinct !{!250, !251}
!251 = !DILocation(line: 152, column: 3, scope: !91)
!252 = !DILocation(line: 166, column: 22, scope: !91)
!253 = !DILocation(line: 166, column: 3, scope: !91)
!254 = !DILocation(line: 168, column: 3, scope: !91)
!255 = !DILocation(line: 169, column: 16, scope: !91)
!256 = !DILocation(line: 169, column: 14, scope: !91)
!257 = !DILocation(line: 171, column: 7, scope: !258)
!258 = distinct !DILexicalBlock(scope: !91, file: !1, line: 171, column: 7)
!259 = !DILocation(line: 171, column: 18, scope: !258)
!260 = !DILocation(line: 171, column: 7, scope: !91)
!261 = !DILocation(line: 173, column: 34, scope: !262)
!262 = distinct !DILexicalBlock(scope: !258, file: !1, line: 171, column: 26)
!263 = !DILocation(line: 173, column: 32, scope: !262)
!264 = !DILocation(line: 173, column: 22, scope: !262)
!265 = !DILocation(line: 174, column: 36, scope: !262)
!266 = !DILocation(line: 174, column: 34, scope: !262)
!267 = !DILocation(line: 174, column: 24, scope: !262)
!268 = !DILocation(line: 174, column: 59, scope: !262)
!269 = !DILocation(line: 174, column: 57, scope: !262)
!270 = !DILocation(line: 174, column: 13, scope: !262)
!271 = !DILocation(line: 172, column: 38, scope: !262)
!272 = !DILocation(line: 175, column: 15, scope: !262)
!273 = !DILocation(line: 175, column: 13, scope: !262)
!274 = !DILocation(line: 172, column: 12, scope: !262)
!275 = !DILocation(line: 176, column: 3, scope: !262)
!276 = !DILocation(line: 177, column: 12, scope: !277)
!277 = distinct !DILexicalBlock(scope: !258, file: !1, line: 176, column: 10)
!278 = !DILocation(line: 179, column: 23, scope: !91)
!279 = !DILocation(line: 179, column: 42, scope: !91)
!280 = !DILocation(line: 180, column: 17, scope: !91)
!281 = !DILocation(line: 180, column: 29, scope: !91)
!282 = !DILocation(line: 180, column: 65, scope: !91)
!283 = !DILocation(line: 179, column: 3, scope: !91)
!284 = !DILocation(line: 182, column: 7, scope: !285)
!285 = distinct !DILexicalBlock(scope: !91, file: !1, line: 182, column: 7)
!286 = !DILocation(line: 182, column: 7, scope: !91)
!287 = !DILocation(line: 182, column: 23, scope: !288)
!288 = !DILexicalBlockFile(scope: !285, file: !1, discriminator: 1)
!289 = !DILocation(line: 184, column: 3, scope: !91)
!290 = distinct !DISubprogram(name: "setup", scope: !1, file: !1, line: 308, type: !291, isLocal: true, isDefinition: true, scopeLine: 309, isOptimized: false, unit: !0, variables: !68)
!291 = !DISubroutineType(types: !292)
!292 = !{null}
!293 = !DILocalVariable(name: "fp", scope: !290, file: !1, line: 310, type: !294)
!294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 64, align: 64)
!295 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !296, line: 48, baseType: !297)
!296 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/amiryousefi/llvmTemp/Codes/NAS/NPB3.3-OMP-C/FT")
!297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !298, line: 245, size: 1728, align: 64, elements: !299)
!298 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/amiryousefi/llvmTemp/Codes/NAS/NPB3.3-OMP-C/FT")
!299 = !{!300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !320, !321, !322, !323, !327, !329, !331, !335, !338, !340, !341, !342, !343, !344, !348, !349}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !297, file: !298, line: 246, baseType: !23, size: 32, align: 32)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !297, file: !298, line: 251, baseType: !95, size: 64, align: 64, offset: 64)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !297, file: !298, line: 252, baseType: !95, size: 64, align: 64, offset: 128)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !297, file: !298, line: 253, baseType: !95, size: 64, align: 64, offset: 192)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !297, file: !298, line: 254, baseType: !95, size: 64, align: 64, offset: 256)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !297, file: !298, line: 255, baseType: !95, size: 64, align: 64, offset: 320)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !297, file: !298, line: 256, baseType: !95, size: 64, align: 64, offset: 384)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !297, file: !298, line: 257, baseType: !95, size: 64, align: 64, offset: 448)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !297, file: !298, line: 258, baseType: !95, size: 64, align: 64, offset: 512)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !297, file: !298, line: 260, baseType: !95, size: 64, align: 64, offset: 576)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !297, file: !298, line: 261, baseType: !95, size: 64, align: 64, offset: 640)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !297, file: !298, line: 262, baseType: !95, size: 64, align: 64, offset: 704)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !297, file: !298, line: 264, baseType: !313, size: 64, align: 64, offset: 768)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64, align: 64)
!314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !298, line: 160, size: 192, align: 64, elements: !315)
!315 = !{!316, !317, !319}
!316 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !314, file: !298, line: 161, baseType: !313, size: 64, align: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !314, file: !298, line: 162, baseType: !318, size: 64, align: 64, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64, align: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !314, file: !298, line: 166, baseType: !23, size: 32, align: 32, offset: 128)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !297, file: !298, line: 266, baseType: !318, size: 64, align: 64, offset: 832)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !297, file: !298, line: 268, baseType: !23, size: 32, align: 32, offset: 896)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !297, file: !298, line: 272, baseType: !23, size: 32, align: 32, offset: 928)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !297, file: !298, line: 274, baseType: !324, size: 64, align: 64, offset: 960)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !325, line: 131, baseType: !326)
!325 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/amiryousefi/llvmTemp/Codes/NAS/NPB3.3-OMP-C/FT")
!326 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !297, file: !298, line: 278, baseType: !328, size: 16, align: 16, offset: 1024)
!328 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !297, file: !298, line: 279, baseType: !330, size: 8, align: 8, offset: 1040)
!330 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !297, file: !298, line: 280, baseType: !332, size: 8, align: 8, offset: 1048)
!332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 8, align: 8, elements: !333)
!333 = !{!334}
!334 = !DISubrange(count: 1)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !297, file: !298, line: 284, baseType: !336, size: 64, align: 64, offset: 1088)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64, align: 64)
!337 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !298, line: 154, baseType: null)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !297, file: !298, line: 293, baseType: !339, size: 64, align: 64, offset: 1152)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !325, line: 132, baseType: !326)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !297, file: !298, line: 302, baseType: !22, size: 64, align: 64, offset: 1216)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !297, file: !298, line: 303, baseType: !22, size: 64, align: 64, offset: 1280)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !297, file: !298, line: 304, baseType: !22, size: 64, align: 64, offset: 1344)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !297, file: !298, line: 305, baseType: !22, size: 64, align: 64, offset: 1408)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !297, file: !298, line: 306, baseType: !345, size: 64, align: 64, offset: 1472)
!345 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !346, line: 62, baseType: !347)
!346 = !DIFile(filename: "/home/amiryousefi/buildforinstm/bin/../lib/clang/3.9.1/include/stddef.h", directory: "/home/amiryousefi/llvmTemp/Codes/NAS/NPB3.3-OMP-C/FT")
!347 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !297, file: !298, line: 308, baseType: !23, size: 32, align: 32, offset: 1536)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !297, file: !298, line: 310, baseType: !350, size: 160, align: 8, offset: 1568)
!350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 160, align: 8, elements: !351)
!351 = !{!352}
!352 = !DISubrange(count: 20)
!353 = !DILocation(line: 310, column: 9, scope: !290)
!354 = !DILocation(line: 311, column: 9, scope: !290)
!355 = !DILocation(line: 313, column: 13, scope: !356)
!356 = distinct !DILexicalBlock(scope: !290, file: !1, line: 313, column: 7)
!357 = !DILocation(line: 313, column: 11, scope: !356)
!358 = !DILocation(line: 313, column: 39, scope: !356)
!359 = !DILocation(line: 313, column: 7, scope: !290)
!360 = !DILocation(line: 314, column: 20, scope: !361)
!361 = distinct !DILexicalBlock(scope: !356, file: !1, line: 313, column: 48)
!362 = !DILocation(line: 315, column: 12, scope: !361)
!363 = !DILocation(line: 315, column: 5, scope: !361)
!364 = !DILocation(line: 316, column: 3, scope: !361)
!365 = !DILocation(line: 317, column: 20, scope: !366)
!366 = distinct !DILexicalBlock(scope: !356, file: !1, line: 316, column: 10)
!367 = !DILocation(line: 320, column: 9, scope: !290)
!368 = !DILocation(line: 322, column: 3, scope: !290)
!369 = !DILocation(line: 323, column: 3, scope: !290)
!370 = !DILocation(line: 324, column: 49, scope: !290)
!371 = !DILocation(line: 324, column: 3, scope: !290)
!372 = !DILocation(line: 325, column: 49, scope: !290)
!373 = !DILocation(line: 325, column: 3, scope: !374)
!374 = !DILexicalBlockFile(scope: !290, file: !1, discriminator: 1)
!375 = !DILocation(line: 326, column: 3, scope: !290)
!376 = !DILocation(line: 328, column: 11, scope: !290)
!377 = !DILocation(line: 329, column: 11, scope: !290)
!378 = !DILocation(line: 330, column: 11, scope: !290)
!379 = !DILocation(line: 347, column: 12, scope: !290)
!380 = !DILocation(line: 348, column: 15, scope: !290)
!381 = !DILocation(line: 350, column: 7, scope: !382)
!382 = distinct !DILexicalBlock(scope: !290, file: !1, line: 350, column: 7)
!383 = !DILocation(line: 350, column: 16, scope: !382)
!384 = !DILocation(line: 350, column: 7, scope: !290)
!385 = !DILocation(line: 350, column: 51, scope: !386)
!386 = !DILexicalBlockFile(scope: !382, file: !1, discriminator: 1)
!387 = !DILocation(line: 350, column: 59, scope: !386)
!388 = !DILocation(line: 350, column: 49, scope: !386)
!389 = !DILocation(line: 350, column: 37, scope: !386)
!390 = !DILocation(line: 351, column: 1, scope: !290)
!391 = distinct !DISubprogram(name: "init_ui", scope: !1, file: !1, line: 191, type: !392, isLocal: true, isDefinition: true, scopeLine: 192, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !68)
!392 = !DISubroutineType(types: !393)
!393 = !{null, !22, !22, !22, !23, !23, !23}
!394 = !DILocalVariable(name: "ou0", arg: 1, scope: !391, file: !1, line: 191, type: !22)
!395 = !DILocation(line: 191, column: 27, scope: !391)
!396 = !DILocalVariable(name: "ou1", arg: 2, scope: !391, file: !1, line: 191, type: !22)
!397 = !DILocation(line: 191, column: 38, scope: !391)
!398 = !DILocalVariable(name: "ot", arg: 3, scope: !391, file: !1, line: 191, type: !22)
!399 = !DILocation(line: 191, column: 49, scope: !391)
!400 = !DILocalVariable(name: "d1", arg: 4, scope: !391, file: !1, line: 191, type: !23)
!401 = !DILocation(line: 191, column: 57, scope: !391)
!402 = !DILocalVariable(name: "d2", arg: 5, scope: !391, file: !1, line: 191, type: !23)
!403 = !DILocation(line: 191, column: 65, scope: !391)
!404 = !DILocalVariable(name: "d3", arg: 6, scope: !391, file: !1, line: 191, type: !23)
!405 = !DILocation(line: 191, column: 73, scope: !391)
!406 = !DILocation(line: 193, column: 18, scope: !391)
!407 = !DILocation(line: 193, column: 3, scope: !391)
!408 = !DILocation(line: 193, column: 22, scope: !391)
!409 = !DILocation(line: 193, column: 24, scope: !391)
!410 = !DILocalVariable(name: "u0", scope: !391, file: !1, line: 193, type: !10)
!411 = !DILocation(line: 193, column: 14, scope: !391)
!412 = !DILocation(line: 193, column: 44, scope: !391)
!413 = !DILocation(line: 193, column: 30, scope: !391)
!414 = !DILocation(line: 193, column: 48, scope: !391)
!415 = !DILocation(line: 193, column: 50, scope: !391)
!416 = !DILocation(line: 193, column: 54, scope: !391)
!417 = !DILocation(line: 194, column: 18, scope: !391)
!418 = !DILocation(line: 194, column: 3, scope: !391)
!419 = !DILocation(line: 194, column: 22, scope: !391)
!420 = !DILocation(line: 194, column: 24, scope: !391)
!421 = !DILocalVariable(name: "u1", scope: !391, file: !1, line: 194, type: !10)
!422 = !DILocation(line: 194, column: 14, scope: !391)
!423 = !DILocation(line: 194, column: 44, scope: !391)
!424 = !DILocation(line: 194, column: 30, scope: !391)
!425 = !DILocation(line: 194, column: 48, scope: !391)
!426 = !DILocation(line: 194, column: 50, scope: !391)
!427 = !DILocation(line: 194, column: 54, scope: !391)
!428 = !DILocation(line: 195, column: 21, scope: !391)
!429 = !DILocation(line: 195, column: 3, scope: !391)
!430 = !DILocation(line: 195, column: 25, scope: !391)
!431 = !DILocation(line: 195, column: 27, scope: !391)
!432 = !DILocalVariable(name: "twiddle", scope: !391, file: !1, line: 195, type: !19)
!433 = !DILocation(line: 195, column: 12, scope: !391)
!434 = !DILocation(line: 195, column: 45, scope: !391)
!435 = !DILocation(line: 195, column: 33, scope: !391)
!436 = !DILocation(line: 195, column: 49, scope: !391)
!437 = !DILocation(line: 195, column: 51, scope: !391)
!438 = !DILocation(line: 195, column: 55, scope: !391)
!439 = !DILocalVariable(name: "i", scope: !391, file: !1, line: 197, type: !23)
!440 = !DILocation(line: 197, column: 7, scope: !391)
!441 = !DILocalVariable(name: "j", scope: !391, file: !1, line: 197, type: !23)
!442 = !DILocation(line: 197, column: 10, scope: !391)
!443 = !DILocalVariable(name: "k", scope: !391, file: !1, line: 197, type: !23)
!444 = !DILocation(line: 197, column: 13, scope: !391)
!445 = !DILocation(line: 199, column: 11, scope: !391)
!446 = !DILocation(line: 209, column: 1, scope: !391)
!447 = distinct !DISubprogram(name: "compute_indexmap", scope: !1, file: !1, line: 358, type: !448, isLocal: true, isDefinition: true, scopeLine: 359, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !68)
!448 = !DISubroutineType(types: !449)
!449 = !{null, !22, !23, !23, !23}
!450 = !DILocalVariable(name: "ot", arg: 1, scope: !447, file: !1, line: 358, type: !22)
!451 = !DILocation(line: 358, column: 36, scope: !447)
!452 = !DILocalVariable(name: "d1", arg: 2, scope: !447, file: !1, line: 358, type: !23)
!453 = !DILocation(line: 358, column: 44, scope: !447)
!454 = !DILocalVariable(name: "d2", arg: 3, scope: !447, file: !1, line: 358, type: !23)
!455 = !DILocation(line: 358, column: 52, scope: !447)
!456 = !DILocalVariable(name: "d3", arg: 4, scope: !447, file: !1, line: 358, type: !23)
!457 = !DILocation(line: 358, column: 60, scope: !447)
!458 = !DILocation(line: 360, column: 21, scope: !447)
!459 = !DILocation(line: 360, column: 3, scope: !447)
!460 = !DILocation(line: 360, column: 25, scope: !447)
!461 = !DILocation(line: 360, column: 27, scope: !447)
!462 = !DILocalVariable(name: "twiddle", scope: !447, file: !1, line: 360, type: !19)
!463 = !DILocation(line: 360, column: 12, scope: !447)
!464 = !DILocation(line: 360, column: 45, scope: !447)
!465 = !DILocation(line: 360, column: 33, scope: !447)
!466 = !DILocation(line: 360, column: 49, scope: !447)
!467 = !DILocation(line: 360, column: 51, scope: !447)
!468 = !DILocation(line: 360, column: 55, scope: !447)
!469 = !DILocalVariable(name: "i", scope: !447, file: !1, line: 362, type: !23)
!470 = !DILocation(line: 362, column: 7, scope: !447)
!471 = !DILocalVariable(name: "j", scope: !447, file: !1, line: 362, type: !23)
!472 = !DILocation(line: 362, column: 10, scope: !447)
!473 = !DILocalVariable(name: "k", scope: !447, file: !1, line: 362, type: !23)
!474 = !DILocation(line: 362, column: 13, scope: !447)
!475 = !DILocalVariable(name: "kk", scope: !447, file: !1, line: 362, type: !23)
!476 = !DILocation(line: 362, column: 16, scope: !447)
!477 = !DILocalVariable(name: "kk2", scope: !447, file: !1, line: 362, type: !23)
!478 = !DILocation(line: 362, column: 20, scope: !447)
!479 = !DILocalVariable(name: "jj", scope: !447, file: !1, line: 362, type: !23)
!480 = !DILocation(line: 362, column: 25, scope: !447)
!481 = !DILocalVariable(name: "kj2", scope: !447, file: !1, line: 362, type: !23)
!482 = !DILocation(line: 362, column: 29, scope: !447)
!483 = !DILocalVariable(name: "ii", scope: !447, file: !1, line: 362, type: !23)
!484 = !DILocation(line: 362, column: 34, scope: !447)
!485 = !DILocalVariable(name: "ap", scope: !447, file: !1, line: 363, type: !9)
!486 = !DILocation(line: 363, column: 10, scope: !447)
!487 = !DILocation(line: 374, column: 6, scope: !447)
!488 = !DILocation(line: 376, column: 11, scope: !447)
!489 = !DILocation(line: 389, column: 1, scope: !447)
!490 = distinct !DISubprogram(name: "compute_initial_conditions", scope: !1, file: !1, line: 239, type: !448, isLocal: true, isDefinition: true, scopeLine: 240, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !68)
!491 = !DILocalVariable(name: "ou0", arg: 1, scope: !490, file: !1, line: 239, type: !22)
!492 = !DILocation(line: 239, column: 46, scope: !490)
!493 = !DILocalVariable(name: "d1", arg: 2, scope: !490, file: !1, line: 239, type: !23)
!494 = !DILocation(line: 239, column: 55, scope: !490)
!495 = !DILocalVariable(name: "d2", arg: 3, scope: !490, file: !1, line: 239, type: !23)
!496 = !DILocation(line: 239, column: 63, scope: !490)
!497 = !DILocalVariable(name: "d3", arg: 4, scope: !490, file: !1, line: 239, type: !23)
!498 = !DILocation(line: 239, column: 71, scope: !490)
!499 = !DILocation(line: 241, column: 18, scope: !490)
!500 = !DILocation(line: 241, column: 3, scope: !490)
!501 = !DILocation(line: 241, column: 22, scope: !490)
!502 = !DILocation(line: 241, column: 24, scope: !490)
!503 = !DILocalVariable(name: "u0", scope: !490, file: !1, line: 241, type: !10)
!504 = !DILocation(line: 241, column: 14, scope: !490)
!505 = !DILocation(line: 241, column: 44, scope: !490)
!506 = !DILocation(line: 241, column: 30, scope: !490)
!507 = !DILocation(line: 241, column: 48, scope: !490)
!508 = !DILocation(line: 241, column: 50, scope: !490)
!509 = !DILocation(line: 241, column: 54, scope: !490)
!510 = !DILocalVariable(name: "k", scope: !490, file: !1, line: 243, type: !23)
!511 = !DILocation(line: 243, column: 7, scope: !490)
!512 = !DILocalVariable(name: "j", scope: !490, file: !1, line: 243, type: !23)
!513 = !DILocation(line: 243, column: 10, scope: !490)
!514 = !DILocalVariable(name: "x0", scope: !490, file: !1, line: 244, type: !9)
!515 = !DILocation(line: 244, column: 10, scope: !490)
!516 = !DILocalVariable(name: "start", scope: !490, file: !1, line: 244, type: !9)
!517 = !DILocation(line: 244, column: 14, scope: !490)
!518 = !DILocalVariable(name: "an", scope: !490, file: !1, line: 244, type: !9)
!519 = !DILocation(line: 244, column: 21, scope: !490)
!520 = !DILocalVariable(name: "dummy", scope: !490, file: !1, line: 244, type: !9)
!521 = !DILocation(line: 244, column: 25, scope: !490)
!522 = !DILocalVariable(name: "starts", scope: !490, file: !1, line: 244, type: !75)
!523 = !DILocation(line: 244, column: 32, scope: !490)
!524 = !DILocation(line: 246, column: 9, scope: !490)
!525 = !DILocation(line: 250, column: 8, scope: !490)
!526 = !DILocation(line: 250, column: 6, scope: !490)
!527 = !DILocation(line: 251, column: 26, scope: !490)
!528 = !DILocation(line: 251, column: 11, scope: !490)
!529 = !DILocation(line: 251, column: 9, scope: !490)
!530 = !DILocation(line: 252, column: 8, scope: !490)
!531 = !DILocation(line: 252, column: 6, scope: !490)
!532 = !DILocation(line: 254, column: 15, scope: !490)
!533 = !DILocation(line: 254, column: 3, scope: !490)
!534 = !DILocation(line: 254, column: 13, scope: !490)
!535 = !DILocation(line: 255, column: 10, scope: !536)
!536 = distinct !DILexicalBlock(scope: !490, file: !1, line: 255, column: 3)
!537 = !DILocation(line: 255, column: 8, scope: !536)
!538 = !DILocation(line: 255, column: 15, scope: !539)
!539 = !DILexicalBlockFile(scope: !540, file: !1, discriminator: 1)
!540 = distinct !DILexicalBlock(scope: !536, file: !1, line: 255, column: 3)
!541 = !DILocation(line: 255, column: 19, scope: !539)
!542 = !DILocation(line: 255, column: 17, scope: !539)
!543 = !DILocation(line: 255, column: 3, scope: !539)
!544 = !DILocation(line: 256, column: 28, scope: !545)
!545 = distinct !DILexicalBlock(scope: !540, file: !1, line: 255, column: 33)
!546 = !DILocation(line: 256, column: 13, scope: !545)
!547 = !DILocation(line: 256, column: 11, scope: !545)
!548 = !DILocation(line: 257, column: 17, scope: !545)
!549 = !DILocation(line: 257, column: 12, scope: !545)
!550 = !DILocation(line: 257, column: 5, scope: !545)
!551 = !DILocation(line: 257, column: 15, scope: !545)
!552 = !DILocation(line: 258, column: 3, scope: !545)
!553 = !DILocation(line: 255, column: 29, scope: !554)
!554 = !DILexicalBlockFile(scope: !540, file: !1, discriminator: 2)
!555 = !DILocation(line: 255, column: 3, scope: !554)
!556 = distinct !{!556, !557}
!557 = !DILocation(line: 255, column: 3, scope: !490)
!558 = !DILocation(line: 263, column: 11, scope: !490)
!559 = !DILocation(line: 270, column: 1, scope: !490)
!560 = distinct !DISubprogram(name: "fft_init", scope: !1, file: !1, line: 538, type: !561, isLocal: true, isDefinition: true, scopeLine: 539, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !68)
!561 = !DISubroutineType(types: !562)
!562 = !{null, !23}
!563 = !DILocalVariable(name: "n", arg: 1, scope: !560, file: !1, line: 538, type: !23)
!564 = !DILocation(line: 538, column: 26, scope: !560)
!565 = !DILocalVariable(name: "m", scope: !560, file: !1, line: 540, type: !23)
!566 = !DILocation(line: 540, column: 7, scope: !560)
!567 = !DILocalVariable(name: "nu", scope: !560, file: !1, line: 540, type: !23)
!568 = !DILocation(line: 540, column: 10, scope: !560)
!569 = !DILocalVariable(name: "ku", scope: !560, file: !1, line: 540, type: !23)
!570 = !DILocation(line: 540, column: 14, scope: !560)
!571 = !DILocalVariable(name: "i", scope: !560, file: !1, line: 540, type: !23)
!572 = !DILocation(line: 540, column: 18, scope: !560)
!573 = !DILocalVariable(name: "j", scope: !560, file: !1, line: 540, type: !23)
!574 = !DILocation(line: 540, column: 21, scope: !560)
!575 = !DILocalVariable(name: "ln", scope: !560, file: !1, line: 540, type: !23)
!576 = !DILocation(line: 540, column: 24, scope: !560)
!577 = !DILocalVariable(name: "t", scope: !560, file: !1, line: 541, type: !9)
!578 = !DILocation(line: 541, column: 10, scope: !560)
!579 = !DILocalVariable(name: "ti", scope: !560, file: !1, line: 541, type: !9)
!580 = !DILocation(line: 541, column: 13, scope: !560)
!581 = !DILocation(line: 547, column: 8, scope: !560)
!582 = !DILocation(line: 547, column: 6, scope: !560)
!583 = !DILocation(line: 548, column: 13, scope: !560)
!584 = !DILocation(line: 548, column: 7, scope: !560)
!585 = !DILocation(line: 548, column: 5, scope: !560)
!586 = !DILocation(line: 549, column: 10, scope: !560)
!587 = !DILocation(line: 550, column: 6, scope: !560)
!588 = !DILocation(line: 551, column: 6, scope: !560)
!589 = !DILocation(line: 553, column: 10, scope: !590)
!590 = distinct !DILexicalBlock(scope: !560, file: !1, line: 553, column: 3)
!591 = !DILocation(line: 553, column: 8, scope: !590)
!592 = !DILocation(line: 553, column: 15, scope: !593)
!593 = !DILexicalBlockFile(scope: !594, file: !1, discriminator: 1)
!594 = distinct !DILexicalBlock(scope: !590, file: !1, line: 553, column: 3)
!595 = !DILocation(line: 553, column: 20, scope: !593)
!596 = !DILocation(line: 553, column: 17, scope: !593)
!597 = !DILocation(line: 553, column: 3, scope: !593)
!598 = !DILocation(line: 554, column: 14, scope: !599)
!599 = distinct !DILexicalBlock(scope: !594, file: !1, line: 553, column: 28)
!600 = !DILocation(line: 554, column: 12, scope: !599)
!601 = !DILocation(line: 554, column: 7, scope: !599)
!602 = !DILocation(line: 556, column: 12, scope: !603)
!603 = distinct !DILexicalBlock(scope: !599, file: !1, line: 556, column: 5)
!604 = !DILocation(line: 556, column: 10, scope: !603)
!605 = !DILocation(line: 556, column: 17, scope: !606)
!606 = !DILexicalBlockFile(scope: !607, file: !1, discriminator: 1)
!607 = distinct !DILexicalBlock(scope: !603, file: !1, line: 556, column: 5)
!608 = !DILocation(line: 556, column: 22, scope: !606)
!609 = !DILocation(line: 556, column: 25, scope: !606)
!610 = !DILocation(line: 556, column: 19, scope: !606)
!611 = !DILocation(line: 556, column: 5, scope: !606)
!612 = !DILocation(line: 557, column: 12, scope: !613)
!613 = distinct !DILexicalBlock(scope: !607, file: !1, line: 556, column: 35)
!614 = !DILocation(line: 557, column: 16, scope: !613)
!615 = !DILocation(line: 557, column: 14, scope: !613)
!616 = !DILocation(line: 557, column: 10, scope: !613)
!617 = !DILocation(line: 558, column: 9, scope: !613)
!618 = !DILocation(line: 558, column: 11, scope: !613)
!619 = !DILocation(line: 558, column: 10, scope: !613)
!620 = !DILocation(line: 558, column: 13, scope: !613)
!621 = !DILocation(line: 558, column: 7, scope: !613)
!622 = !DILocation(line: 558, column: 19, scope: !613)
!623 = !DILocation(line: 558, column: 19, scope: !624)
!624 = !DILexicalBlockFile(scope: !613, file: !1, discriminator: 1)
!625 = !DILocation(line: 558, column: 19, scope: !626)
!626 = !DILexicalBlockFile(scope: !613, file: !1, discriminator: 2)
!627 = !DILocation(line: 559, column: 5, scope: !613)
!628 = !DILocation(line: 556, column: 31, scope: !629)
!629 = !DILexicalBlockFile(scope: !607, file: !1, discriminator: 2)
!630 = !DILocation(line: 556, column: 5, scope: !629)
!631 = distinct !{!631, !632}
!632 = !DILocation(line: 556, column: 5, scope: !599)
!633 = !DILocation(line: 561, column: 10, scope: !599)
!634 = !DILocation(line: 561, column: 15, scope: !599)
!635 = !DILocation(line: 561, column: 13, scope: !599)
!636 = !DILocation(line: 561, column: 8, scope: !599)
!637 = !DILocation(line: 562, column: 14, scope: !599)
!638 = !DILocation(line: 562, column: 12, scope: !599)
!639 = !DILocation(line: 562, column: 8, scope: !599)
!640 = !DILocation(line: 563, column: 3, scope: !599)
!641 = !DILocation(line: 553, column: 24, scope: !642)
!642 = !DILexicalBlockFile(scope: !594, file: !1, discriminator: 2)
!643 = !DILocation(line: 553, column: 3, scope: !642)
!644 = distinct !{!644, !645}
!645 = !DILocation(line: 553, column: 3, scope: !560)
!646 = !DILocation(line: 564, column: 1, scope: !560)
!647 = distinct !DISubprogram(name: "fft", scope: !1, file: !1, line: 422, type: !648, isLocal: true, isDefinition: true, scopeLine: 423, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !68)
!648 = !DISubroutineType(types: !649)
!649 = !{null, !23, !650, !650}
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64, align: 64)
!651 = !DILocalVariable(name: "dir", arg: 1, scope: !647, file: !1, line: 422, type: !23)
!652 = !DILocation(line: 422, column: 21, scope: !647)
!653 = !DILocalVariable(name: "x1", arg: 2, scope: !647, file: !1, line: 422, type: !650)
!654 = !DILocation(line: 422, column: 35, scope: !647)
!655 = !DILocalVariable(name: "x2", arg: 3, scope: !647, file: !1, line: 422, type: !650)
!656 = !DILocation(line: 422, column: 57, scope: !647)
!657 = !DILocation(line: 424, column: 7, scope: !658)
!658 = distinct !DILexicalBlock(scope: !647, file: !1, line: 424, column: 7)
!659 = !DILocation(line: 424, column: 11, scope: !658)
!660 = !DILocation(line: 424, column: 7, scope: !647)
!661 = !DILocation(line: 425, column: 15, scope: !662)
!662 = distinct !DILexicalBlock(scope: !658, file: !1, line: 424, column: 17)
!663 = !DILocation(line: 425, column: 24, scope: !662)
!664 = !DILocation(line: 425, column: 33, scope: !662)
!665 = !DILocation(line: 425, column: 42, scope: !662)
!666 = !DILocation(line: 425, column: 46, scope: !662)
!667 = !DILocation(line: 425, column: 5, scope: !662)
!668 = !DILocation(line: 426, column: 15, scope: !662)
!669 = !DILocation(line: 426, column: 24, scope: !662)
!670 = !DILocation(line: 426, column: 33, scope: !662)
!671 = !DILocation(line: 426, column: 42, scope: !662)
!672 = !DILocation(line: 426, column: 46, scope: !662)
!673 = !DILocation(line: 426, column: 5, scope: !662)
!674 = !DILocation(line: 427, column: 15, scope: !662)
!675 = !DILocation(line: 427, column: 24, scope: !662)
!676 = !DILocation(line: 427, column: 33, scope: !662)
!677 = !DILocation(line: 427, column: 42, scope: !662)
!678 = !DILocation(line: 427, column: 46, scope: !662)
!679 = !DILocation(line: 427, column: 5, scope: !662)
!680 = !DILocation(line: 428, column: 3, scope: !662)
!681 = !DILocation(line: 429, column: 16, scope: !682)
!682 = distinct !DILexicalBlock(scope: !658, file: !1, line: 428, column: 10)
!683 = !DILocation(line: 429, column: 25, scope: !682)
!684 = !DILocation(line: 429, column: 34, scope: !682)
!685 = !DILocation(line: 429, column: 43, scope: !682)
!686 = !DILocation(line: 429, column: 47, scope: !682)
!687 = !DILocation(line: 429, column: 5, scope: !682)
!688 = !DILocation(line: 430, column: 16, scope: !682)
!689 = !DILocation(line: 430, column: 25, scope: !682)
!690 = !DILocation(line: 430, column: 34, scope: !682)
!691 = !DILocation(line: 430, column: 43, scope: !682)
!692 = !DILocation(line: 430, column: 47, scope: !682)
!693 = !DILocation(line: 430, column: 5, scope: !682)
!694 = !DILocation(line: 431, column: 16, scope: !682)
!695 = !DILocation(line: 431, column: 25, scope: !682)
!696 = !DILocation(line: 431, column: 34, scope: !682)
!697 = !DILocation(line: 431, column: 43, scope: !682)
!698 = !DILocation(line: 431, column: 47, scope: !682)
!699 = !DILocation(line: 431, column: 5, scope: !682)
!700 = !DILocation(line: 433, column: 1, scope: !647)
!701 = distinct !DISubprogram(name: "evolve", scope: !1, file: !1, line: 215, type: !392, isLocal: true, isDefinition: true, scopeLine: 216, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !68)
!702 = !DILocalVariable(name: "ou0", arg: 1, scope: !701, file: !1, line: 215, type: !22)
!703 = !DILocation(line: 215, column: 26, scope: !701)
!704 = !DILocalVariable(name: "ou1", arg: 2, scope: !701, file: !1, line: 215, type: !22)
!705 = !DILocation(line: 215, column: 37, scope: !701)
!706 = !DILocalVariable(name: "ot", arg: 3, scope: !701, file: !1, line: 215, type: !22)
!707 = !DILocation(line: 215, column: 48, scope: !701)
!708 = !DILocalVariable(name: "d1", arg: 4, scope: !701, file: !1, line: 215, type: !23)
!709 = !DILocation(line: 215, column: 56, scope: !701)
!710 = !DILocalVariable(name: "d2", arg: 5, scope: !701, file: !1, line: 215, type: !23)
!711 = !DILocation(line: 215, column: 64, scope: !701)
!712 = !DILocalVariable(name: "d3", arg: 6, scope: !701, file: !1, line: 215, type: !23)
!713 = !DILocation(line: 215, column: 72, scope: !701)
!714 = !DILocation(line: 217, column: 18, scope: !701)
!715 = !DILocation(line: 217, column: 3, scope: !701)
!716 = !DILocation(line: 217, column: 22, scope: !701)
!717 = !DILocation(line: 217, column: 24, scope: !701)
!718 = !DILocalVariable(name: "u0", scope: !701, file: !1, line: 217, type: !10)
!719 = !DILocation(line: 217, column: 14, scope: !701)
!720 = !DILocation(line: 217, column: 44, scope: !701)
!721 = !DILocation(line: 217, column: 30, scope: !701)
!722 = !DILocation(line: 217, column: 48, scope: !701)
!723 = !DILocation(line: 217, column: 50, scope: !701)
!724 = !DILocation(line: 217, column: 54, scope: !701)
!725 = !DILocation(line: 218, column: 18, scope: !701)
!726 = !DILocation(line: 218, column: 3, scope: !701)
!727 = !DILocation(line: 218, column: 22, scope: !701)
!728 = !DILocation(line: 218, column: 24, scope: !701)
!729 = !DILocalVariable(name: "u1", scope: !701, file: !1, line: 218, type: !10)
!730 = !DILocation(line: 218, column: 14, scope: !701)
!731 = !DILocation(line: 218, column: 44, scope: !701)
!732 = !DILocation(line: 218, column: 30, scope: !701)
!733 = !DILocation(line: 218, column: 48, scope: !701)
!734 = !DILocation(line: 218, column: 50, scope: !701)
!735 = !DILocation(line: 218, column: 54, scope: !701)
!736 = !DILocation(line: 219, column: 21, scope: !701)
!737 = !DILocation(line: 219, column: 3, scope: !701)
!738 = !DILocation(line: 219, column: 25, scope: !701)
!739 = !DILocation(line: 219, column: 27, scope: !701)
!740 = !DILocalVariable(name: "twiddle", scope: !701, file: !1, line: 219, type: !19)
!741 = !DILocation(line: 219, column: 12, scope: !701)
!742 = !DILocation(line: 219, column: 45, scope: !701)
!743 = !DILocation(line: 219, column: 33, scope: !701)
!744 = !DILocation(line: 219, column: 49, scope: !701)
!745 = !DILocation(line: 219, column: 51, scope: !701)
!746 = !DILocation(line: 219, column: 55, scope: !701)
!747 = !DILocalVariable(name: "i", scope: !701, file: !1, line: 221, type: !23)
!748 = !DILocation(line: 221, column: 7, scope: !701)
!749 = !DILocalVariable(name: "j", scope: !701, file: !1, line: 221, type: !23)
!750 = !DILocation(line: 221, column: 10, scope: !701)
!751 = !DILocalVariable(name: "k", scope: !701, file: !1, line: 221, type: !23)
!752 = !DILocation(line: 221, column: 13, scope: !701)
!753 = !DILocation(line: 223, column: 11, scope: !701)
!754 = !DILocation(line: 232, column: 1, scope: !701)
!755 = distinct !DISubprogram(name: "checksum", scope: !1, file: !1, line: 669, type: !756, isLocal: true, isDefinition: true, scopeLine: 670, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !68)
!756 = !DISubroutineType(types: !757)
!757 = !{null, !23, !22, !23, !23, !23}
!758 = !DILocalVariable(name: "i", arg: 1, scope: !755, file: !1, line: 669, type: !23)
!759 = !DILocation(line: 669, column: 26, scope: !755)
!760 = !DILocalVariable(name: "ou1", arg: 2, scope: !755, file: !1, line: 669, type: !22)
!761 = !DILocation(line: 669, column: 35, scope: !755)
!762 = !DILocalVariable(name: "d1", arg: 3, scope: !755, file: !1, line: 669, type: !23)
!763 = !DILocation(line: 669, column: 44, scope: !755)
!764 = !DILocalVariable(name: "d2", arg: 4, scope: !755, file: !1, line: 669, type: !23)
!765 = !DILocation(line: 669, column: 52, scope: !755)
!766 = !DILocalVariable(name: "d3", arg: 5, scope: !755, file: !1, line: 669, type: !23)
!767 = !DILocation(line: 669, column: 60, scope: !755)
!768 = !DILocation(line: 671, column: 18, scope: !755)
!769 = !DILocation(line: 671, column: 3, scope: !755)
!770 = !DILocation(line: 671, column: 22, scope: !755)
!771 = !DILocation(line: 671, column: 24, scope: !755)
!772 = !DILocalVariable(name: "u1", scope: !755, file: !1, line: 671, type: !10)
!773 = !DILocation(line: 671, column: 14, scope: !755)
!774 = !DILocation(line: 671, column: 44, scope: !755)
!775 = !DILocation(line: 671, column: 30, scope: !755)
!776 = !DILocation(line: 671, column: 48, scope: !755)
!777 = !DILocation(line: 671, column: 50, scope: !755)
!778 = !DILocation(line: 671, column: 54, scope: !755)
!779 = !DILocalVariable(name: "j", scope: !755, file: !1, line: 673, type: !23)
!780 = !DILocation(line: 673, column: 7, scope: !755)
!781 = !DILocalVariable(name: "q", scope: !755, file: !1, line: 673, type: !23)
!782 = !DILocation(line: 673, column: 10, scope: !755)
!783 = !DILocalVariable(name: "r", scope: !755, file: !1, line: 673, type: !23)
!784 = !DILocation(line: 673, column: 13, scope: !755)
!785 = !DILocalVariable(name: "s", scope: !755, file: !1, line: 673, type: !23)
!786 = !DILocation(line: 673, column: 16, scope: !755)
!787 = !DILocalVariable(name: "chk", scope: !755, file: !1, line: 674, type: !12)
!788 = !DILocation(line: 674, column: 12, scope: !755)
!789 = !DILocation(line: 676, column: 11, scope: !755)
!790 = !DILocation(line: 694, column: 9, scope: !755)
!791 = !DILocation(line: 696, column: 52, scope: !755)
!792 = !DILocation(line: 696, column: 59, scope: !755)
!793 = !DILocation(line: 696, column: 69, scope: !755)
!794 = !DILocation(line: 696, column: 3, scope: !755)
!795 = !DILocation(line: 697, column: 8, scope: !755)
!796 = !DILocation(line: 697, column: 3, scope: !755)
!797 = !DILocation(line: 697, column: 13, scope: !755)
!798 = !DILocation(line: 698, column: 1, scope: !755)
!799 = distinct !DISubprogram(name: "verify", scope: !1, file: !1, line: 701, type: !800, isLocal: true, isDefinition: true, scopeLine: 703, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !68)
!800 = !DISubroutineType(types: !801)
!801 = !{null, !23, !23, !23, !23, !802, !95}
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64, align: 64)
!803 = !DILocalVariable(name: "d1", arg: 1, scope: !799, file: !1, line: 701, type: !23)
!804 = !DILocation(line: 701, column: 24, scope: !799)
!805 = !DILocalVariable(name: "d2", arg: 2, scope: !799, file: !1, line: 701, type: !23)
!806 = !DILocation(line: 701, column: 32, scope: !799)
!807 = !DILocalVariable(name: "d3", arg: 3, scope: !799, file: !1, line: 701, type: !23)
!808 = !DILocation(line: 701, column: 40, scope: !799)
!809 = !DILocalVariable(name: "nt", arg: 4, scope: !799, file: !1, line: 701, type: !23)
!810 = !DILocation(line: 701, column: 48, scope: !799)
!811 = !DILocalVariable(name: "verified", arg: 5, scope: !799, file: !1, line: 702, type: !802)
!812 = !DILocation(line: 702, column: 29, scope: !799)
!813 = !DILocalVariable(name: "Class", arg: 6, scope: !799, file: !1, line: 702, type: !95)
!814 = !DILocation(line: 702, column: 45, scope: !799)
!815 = !DILocalVariable(name: "i", scope: !799, file: !1, line: 704, type: !23)
!816 = !DILocation(line: 704, column: 7, scope: !799)
!817 = !DILocalVariable(name: "err", scope: !799, file: !1, line: 705, type: !9)
!818 = !DILocation(line: 705, column: 10, scope: !799)
!819 = !DILocalVariable(name: "epsilon", scope: !799, file: !1, line: 705, type: !9)
!820 = !DILocation(line: 705, column: 15, scope: !799)
!821 = !DILocalVariable(name: "csum_ref", scope: !799, file: !1, line: 710, type: !822)
!822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 3328, align: 64, elements: !823)
!823 = !{!824}
!824 = !DISubrange(count: 26)
!825 = !DILocation(line: 710, column: 12, scope: !799)
!826 = !DILocation(line: 712, column: 4, scope: !799)
!827 = !DILocation(line: 712, column: 10, scope: !799)
!828 = !DILocation(line: 714, column: 11, scope: !799)
!829 = !DILocation(line: 715, column: 4, scope: !799)
!830 = !DILocation(line: 715, column: 13, scope: !799)
!831 = !DILocation(line: 717, column: 7, scope: !832)
!832 = distinct !DILexicalBlock(scope: !799, file: !1, line: 717, column: 7)
!833 = !DILocation(line: 717, column: 10, scope: !832)
!834 = !DILocation(line: 717, column: 16, scope: !832)
!835 = !DILocation(line: 717, column: 19, scope: !836)
!836 = !DILexicalBlockFile(scope: !832, file: !1, discriminator: 1)
!837 = !DILocation(line: 717, column: 22, scope: !836)
!838 = !DILocation(line: 717, column: 28, scope: !836)
!839 = !DILocation(line: 717, column: 31, scope: !840)
!840 = !DILexicalBlockFile(scope: !832, file: !1, discriminator: 2)
!841 = !DILocation(line: 717, column: 34, scope: !840)
!842 = !DILocation(line: 717, column: 40, scope: !840)
!843 = !DILocation(line: 717, column: 43, scope: !844)
!844 = !DILexicalBlockFile(scope: !832, file: !1, discriminator: 3)
!845 = !DILocation(line: 717, column: 46, scope: !844)
!846 = !DILocation(line: 717, column: 7, scope: !844)
!847 = !DILocation(line: 721, column: 6, scope: !848)
!848 = distinct !DILexicalBlock(scope: !832, file: !1, line: 717, column: 52)
!849 = !DILocation(line: 721, column: 12, scope: !848)
!850 = !DILocation(line: 722, column: 5, scope: !848)
!851 = !DILocation(line: 722, column: 19, scope: !848)
!852 = !DILocation(line: 723, column: 5, scope: !848)
!853 = !DILocation(line: 723, column: 19, scope: !848)
!854 = !DILocation(line: 724, column: 5, scope: !848)
!855 = !DILocation(line: 724, column: 19, scope: !848)
!856 = !DILocation(line: 725, column: 5, scope: !848)
!857 = !DILocation(line: 725, column: 19, scope: !848)
!858 = !DILocation(line: 726, column: 5, scope: !848)
!859 = !DILocation(line: 726, column: 19, scope: !848)
!860 = !DILocation(line: 727, column: 5, scope: !848)
!861 = !DILocation(line: 727, column: 19, scope: !848)
!862 = !DILocation(line: 729, column: 3, scope: !848)
!863 = !DILocation(line: 729, column: 14, scope: !864)
!864 = !DILexicalBlockFile(scope: !865, file: !1, discriminator: 1)
!865 = distinct !DILexicalBlock(scope: !832, file: !1, line: 729, column: 14)
!866 = !DILocation(line: 729, column: 17, scope: !864)
!867 = !DILocation(line: 729, column: 24, scope: !864)
!868 = !DILocation(line: 729, column: 27, scope: !869)
!869 = !DILexicalBlockFile(scope: !865, file: !1, discriminator: 2)
!870 = !DILocation(line: 729, column: 30, scope: !869)
!871 = !DILocation(line: 729, column: 37, scope: !869)
!872 = !DILocation(line: 729, column: 40, scope: !873)
!873 = !DILexicalBlockFile(scope: !865, file: !1, discriminator: 3)
!874 = !DILocation(line: 729, column: 43, scope: !873)
!875 = !DILocation(line: 729, column: 49, scope: !873)
!876 = !DILocation(line: 729, column: 52, scope: !877)
!877 = !DILexicalBlockFile(scope: !865, file: !1, discriminator: 4)
!878 = !DILocation(line: 729, column: 55, scope: !877)
!879 = !DILocation(line: 729, column: 14, scope: !877)
!880 = !DILocation(line: 733, column: 6, scope: !881)
!881 = distinct !DILexicalBlock(scope: !865, file: !1, line: 729, column: 61)
!882 = !DILocation(line: 733, column: 12, scope: !881)
!883 = !DILocation(line: 734, column: 5, scope: !881)
!884 = !DILocation(line: 734, column: 19, scope: !881)
!885 = !DILocation(line: 735, column: 5, scope: !881)
!886 = !DILocation(line: 735, column: 19, scope: !881)
!887 = !DILocation(line: 736, column: 5, scope: !881)
!888 = !DILocation(line: 736, column: 19, scope: !881)
!889 = !DILocation(line: 737, column: 5, scope: !881)
!890 = !DILocation(line: 737, column: 19, scope: !881)
!891 = !DILocation(line: 738, column: 5, scope: !881)
!892 = !DILocation(line: 738, column: 19, scope: !881)
!893 = !DILocation(line: 739, column: 5, scope: !881)
!894 = !DILocation(line: 739, column: 19, scope: !881)
!895 = !DILocation(line: 741, column: 3, scope: !881)
!896 = !DILocation(line: 741, column: 14, scope: !897)
!897 = !DILexicalBlockFile(scope: !898, file: !1, discriminator: 1)
!898 = distinct !DILexicalBlock(scope: !865, file: !1, line: 741, column: 14)
!899 = !DILocation(line: 741, column: 17, scope: !897)
!900 = !DILocation(line: 741, column: 24, scope: !897)
!901 = !DILocation(line: 741, column: 27, scope: !902)
!902 = !DILexicalBlockFile(scope: !898, file: !1, discriminator: 2)
!903 = !DILocation(line: 741, column: 30, scope: !902)
!904 = !DILocation(line: 741, column: 37, scope: !902)
!905 = !DILocation(line: 741, column: 40, scope: !906)
!906 = !DILexicalBlockFile(scope: !898, file: !1, discriminator: 3)
!907 = !DILocation(line: 741, column: 43, scope: !906)
!908 = !DILocation(line: 741, column: 50, scope: !906)
!909 = !DILocation(line: 741, column: 53, scope: !910)
!910 = !DILexicalBlockFile(scope: !898, file: !1, discriminator: 4)
!911 = !DILocation(line: 741, column: 56, scope: !910)
!912 = !DILocation(line: 741, column: 14, scope: !910)
!913 = !DILocation(line: 745, column: 6, scope: !914)
!914 = distinct !DILexicalBlock(scope: !898, file: !1, line: 741, column: 62)
!915 = !DILocation(line: 745, column: 12, scope: !914)
!916 = !DILocation(line: 746, column: 5, scope: !914)
!917 = !DILocation(line: 746, column: 19, scope: !914)
!918 = !DILocation(line: 747, column: 5, scope: !914)
!919 = !DILocation(line: 747, column: 19, scope: !914)
!920 = !DILocation(line: 748, column: 5, scope: !914)
!921 = !DILocation(line: 748, column: 19, scope: !914)
!922 = !DILocation(line: 749, column: 5, scope: !914)
!923 = !DILocation(line: 749, column: 19, scope: !914)
!924 = !DILocation(line: 750, column: 5, scope: !914)
!925 = !DILocation(line: 750, column: 19, scope: !914)
!926 = !DILocation(line: 751, column: 5, scope: !914)
!927 = !DILocation(line: 751, column: 19, scope: !914)
!928 = !DILocation(line: 753, column: 3, scope: !914)
!929 = !DILocation(line: 753, column: 14, scope: !930)
!930 = !DILexicalBlockFile(scope: !931, file: !1, discriminator: 1)
!931 = distinct !DILexicalBlock(scope: !898, file: !1, line: 753, column: 14)
!932 = !DILocation(line: 753, column: 17, scope: !930)
!933 = !DILocation(line: 753, column: 24, scope: !930)
!934 = !DILocation(line: 753, column: 27, scope: !935)
!935 = !DILexicalBlockFile(scope: !931, file: !1, discriminator: 2)
!936 = !DILocation(line: 753, column: 30, scope: !935)
!937 = !DILocation(line: 753, column: 37, scope: !935)
!938 = !DILocation(line: 753, column: 40, scope: !939)
!939 = !DILexicalBlockFile(scope: !931, file: !1, discriminator: 3)
!940 = !DILocation(line: 753, column: 43, scope: !939)
!941 = !DILocation(line: 753, column: 50, scope: !939)
!942 = !DILocation(line: 753, column: 53, scope: !943)
!943 = !DILexicalBlockFile(scope: !931, file: !1, discriminator: 4)
!944 = !DILocation(line: 753, column: 56, scope: !943)
!945 = !DILocation(line: 753, column: 14, scope: !943)
!946 = !DILocation(line: 757, column: 6, scope: !947)
!947 = distinct !DILexicalBlock(scope: !931, file: !1, line: 753, column: 63)
!948 = !DILocation(line: 757, column: 12, scope: !947)
!949 = !DILocation(line: 758, column: 5, scope: !947)
!950 = !DILocation(line: 758, column: 20, scope: !947)
!951 = !DILocation(line: 759, column: 5, scope: !947)
!952 = !DILocation(line: 759, column: 20, scope: !947)
!953 = !DILocation(line: 760, column: 5, scope: !947)
!954 = !DILocation(line: 760, column: 20, scope: !947)
!955 = !DILocation(line: 761, column: 5, scope: !947)
!956 = !DILocation(line: 761, column: 20, scope: !947)
!957 = !DILocation(line: 762, column: 5, scope: !947)
!958 = !DILocation(line: 762, column: 20, scope: !947)
!959 = !DILocation(line: 763, column: 5, scope: !947)
!960 = !DILocation(line: 763, column: 20, scope: !947)
!961 = !DILocation(line: 764, column: 5, scope: !947)
!962 = !DILocation(line: 764, column: 20, scope: !947)
!963 = !DILocation(line: 765, column: 5, scope: !947)
!964 = !DILocation(line: 765, column: 20, scope: !947)
!965 = !DILocation(line: 766, column: 5, scope: !947)
!966 = !DILocation(line: 766, column: 20, scope: !947)
!967 = !DILocation(line: 767, column: 5, scope: !947)
!968 = !DILocation(line: 767, column: 20, scope: !947)
!969 = !DILocation(line: 768, column: 5, scope: !947)
!970 = !DILocation(line: 768, column: 20, scope: !947)
!971 = !DILocation(line: 769, column: 5, scope: !947)
!972 = !DILocation(line: 769, column: 20, scope: !947)
!973 = !DILocation(line: 770, column: 5, scope: !947)
!974 = !DILocation(line: 770, column: 20, scope: !947)
!975 = !DILocation(line: 771, column: 5, scope: !947)
!976 = !DILocation(line: 771, column: 20, scope: !947)
!977 = !DILocation(line: 772, column: 5, scope: !947)
!978 = !DILocation(line: 772, column: 20, scope: !947)
!979 = !DILocation(line: 773, column: 5, scope: !947)
!980 = !DILocation(line: 773, column: 20, scope: !947)
!981 = !DILocation(line: 774, column: 5, scope: !947)
!982 = !DILocation(line: 774, column: 20, scope: !947)
!983 = !DILocation(line: 775, column: 5, scope: !947)
!984 = !DILocation(line: 775, column: 20, scope: !947)
!985 = !DILocation(line: 776, column: 5, scope: !947)
!986 = !DILocation(line: 776, column: 20, scope: !947)
!987 = !DILocation(line: 777, column: 5, scope: !947)
!988 = !DILocation(line: 777, column: 20, scope: !947)
!989 = !DILocation(line: 779, column: 3, scope: !947)
!990 = !DILocation(line: 779, column: 14, scope: !991)
!991 = !DILexicalBlockFile(scope: !992, file: !1, discriminator: 1)
!992 = distinct !DILexicalBlock(scope: !931, file: !1, line: 779, column: 14)
!993 = !DILocation(line: 779, column: 17, scope: !991)
!994 = !DILocation(line: 779, column: 24, scope: !991)
!995 = !DILocation(line: 779, column: 27, scope: !996)
!996 = !DILexicalBlockFile(scope: !992, file: !1, discriminator: 2)
!997 = !DILocation(line: 779, column: 30, scope: !996)
!998 = !DILocation(line: 779, column: 37, scope: !996)
!999 = !DILocation(line: 779, column: 40, scope: !1000)
!1000 = !DILexicalBlockFile(scope: !992, file: !1, discriminator: 3)
!1001 = !DILocation(line: 779, column: 43, scope: !1000)
!1002 = !DILocation(line: 779, column: 50, scope: !1000)
!1003 = !DILocation(line: 779, column: 53, scope: !1004)
!1004 = !DILexicalBlockFile(scope: !992, file: !1, discriminator: 4)
!1005 = !DILocation(line: 779, column: 56, scope: !1004)
!1006 = !DILocation(line: 779, column: 14, scope: !1004)
!1007 = !DILocation(line: 783, column: 6, scope: !1008)
!1008 = distinct !DILexicalBlock(scope: !992, file: !1, line: 779, column: 63)
!1009 = !DILocation(line: 783, column: 12, scope: !1008)
!1010 = !DILocation(line: 784, column: 5, scope: !1008)
!1011 = !DILocation(line: 784, column: 20, scope: !1008)
!1012 = !DILocation(line: 785, column: 5, scope: !1008)
!1013 = !DILocation(line: 785, column: 20, scope: !1008)
!1014 = !DILocation(line: 786, column: 5, scope: !1008)
!1015 = !DILocation(line: 786, column: 20, scope: !1008)
!1016 = !DILocation(line: 787, column: 5, scope: !1008)
!1017 = !DILocation(line: 787, column: 20, scope: !1008)
!1018 = !DILocation(line: 788, column: 5, scope: !1008)
!1019 = !DILocation(line: 788, column: 20, scope: !1008)
!1020 = !DILocation(line: 789, column: 5, scope: !1008)
!1021 = !DILocation(line: 789, column: 20, scope: !1008)
!1022 = !DILocation(line: 790, column: 5, scope: !1008)
!1023 = !DILocation(line: 790, column: 20, scope: !1008)
!1024 = !DILocation(line: 791, column: 5, scope: !1008)
!1025 = !DILocation(line: 791, column: 20, scope: !1008)
!1026 = !DILocation(line: 792, column: 5, scope: !1008)
!1027 = !DILocation(line: 792, column: 20, scope: !1008)
!1028 = !DILocation(line: 793, column: 5, scope: !1008)
!1029 = !DILocation(line: 793, column: 20, scope: !1008)
!1030 = !DILocation(line: 794, column: 5, scope: !1008)
!1031 = !DILocation(line: 794, column: 20, scope: !1008)
!1032 = !DILocation(line: 795, column: 5, scope: !1008)
!1033 = !DILocation(line: 795, column: 20, scope: !1008)
!1034 = !DILocation(line: 796, column: 5, scope: !1008)
!1035 = !DILocation(line: 796, column: 20, scope: !1008)
!1036 = !DILocation(line: 797, column: 5, scope: !1008)
!1037 = !DILocation(line: 797, column: 20, scope: !1008)
!1038 = !DILocation(line: 798, column: 5, scope: !1008)
!1039 = !DILocation(line: 798, column: 20, scope: !1008)
!1040 = !DILocation(line: 799, column: 5, scope: !1008)
!1041 = !DILocation(line: 799, column: 20, scope: !1008)
!1042 = !DILocation(line: 800, column: 5, scope: !1008)
!1043 = !DILocation(line: 800, column: 20, scope: !1008)
!1044 = !DILocation(line: 801, column: 5, scope: !1008)
!1045 = !DILocation(line: 801, column: 20, scope: !1008)
!1046 = !DILocation(line: 802, column: 5, scope: !1008)
!1047 = !DILocation(line: 802, column: 20, scope: !1008)
!1048 = !DILocation(line: 803, column: 5, scope: !1008)
!1049 = !DILocation(line: 803, column: 20, scope: !1008)
!1050 = !DILocation(line: 805, column: 3, scope: !1008)
!1051 = !DILocation(line: 805, column: 14, scope: !1052)
!1052 = !DILexicalBlockFile(scope: !1053, file: !1, discriminator: 1)
!1053 = distinct !DILexicalBlock(scope: !992, file: !1, line: 805, column: 14)
!1054 = !DILocation(line: 805, column: 17, scope: !1052)
!1055 = !DILocation(line: 805, column: 25, scope: !1052)
!1056 = !DILocation(line: 805, column: 28, scope: !1057)
!1057 = !DILexicalBlockFile(scope: !1053, file: !1, discriminator: 2)
!1058 = !DILocation(line: 805, column: 31, scope: !1057)
!1059 = !DILocation(line: 805, column: 39, scope: !1057)
!1060 = !DILocation(line: 805, column: 42, scope: !1061)
!1061 = !DILexicalBlockFile(scope: !1053, file: !1, discriminator: 3)
!1062 = !DILocation(line: 805, column: 45, scope: !1061)
!1063 = !DILocation(line: 805, column: 53, scope: !1061)
!1064 = !DILocation(line: 805, column: 56, scope: !1065)
!1065 = !DILexicalBlockFile(scope: !1053, file: !1, discriminator: 4)
!1066 = !DILocation(line: 805, column: 59, scope: !1065)
!1067 = !DILocation(line: 805, column: 14, scope: !1065)
!1068 = !DILocation(line: 809, column: 6, scope: !1069)
!1069 = distinct !DILexicalBlock(scope: !1053, file: !1, line: 805, column: 66)
!1070 = !DILocation(line: 809, column: 12, scope: !1069)
!1071 = !DILocation(line: 810, column: 5, scope: !1069)
!1072 = !DILocation(line: 810, column: 20, scope: !1069)
!1073 = !DILocation(line: 811, column: 5, scope: !1069)
!1074 = !DILocation(line: 811, column: 20, scope: !1069)
!1075 = !DILocation(line: 812, column: 5, scope: !1069)
!1076 = !DILocation(line: 812, column: 20, scope: !1069)
!1077 = !DILocation(line: 813, column: 5, scope: !1069)
!1078 = !DILocation(line: 813, column: 20, scope: !1069)
!1079 = !DILocation(line: 814, column: 5, scope: !1069)
!1080 = !DILocation(line: 814, column: 20, scope: !1069)
!1081 = !DILocation(line: 815, column: 5, scope: !1069)
!1082 = !DILocation(line: 815, column: 20, scope: !1069)
!1083 = !DILocation(line: 816, column: 5, scope: !1069)
!1084 = !DILocation(line: 816, column: 20, scope: !1069)
!1085 = !DILocation(line: 817, column: 5, scope: !1069)
!1086 = !DILocation(line: 817, column: 20, scope: !1069)
!1087 = !DILocation(line: 818, column: 5, scope: !1069)
!1088 = !DILocation(line: 818, column: 20, scope: !1069)
!1089 = !DILocation(line: 819, column: 5, scope: !1069)
!1090 = !DILocation(line: 819, column: 20, scope: !1069)
!1091 = !DILocation(line: 820, column: 5, scope: !1069)
!1092 = !DILocation(line: 820, column: 20, scope: !1069)
!1093 = !DILocation(line: 821, column: 5, scope: !1069)
!1094 = !DILocation(line: 821, column: 20, scope: !1069)
!1095 = !DILocation(line: 822, column: 5, scope: !1069)
!1096 = !DILocation(line: 822, column: 20, scope: !1069)
!1097 = !DILocation(line: 823, column: 5, scope: !1069)
!1098 = !DILocation(line: 823, column: 20, scope: !1069)
!1099 = !DILocation(line: 824, column: 5, scope: !1069)
!1100 = !DILocation(line: 824, column: 20, scope: !1069)
!1101 = !DILocation(line: 825, column: 5, scope: !1069)
!1102 = !DILocation(line: 825, column: 20, scope: !1069)
!1103 = !DILocation(line: 826, column: 5, scope: !1069)
!1104 = !DILocation(line: 826, column: 20, scope: !1069)
!1105 = !DILocation(line: 827, column: 5, scope: !1069)
!1106 = !DILocation(line: 827, column: 20, scope: !1069)
!1107 = !DILocation(line: 828, column: 5, scope: !1069)
!1108 = !DILocation(line: 828, column: 20, scope: !1069)
!1109 = !DILocation(line: 829, column: 5, scope: !1069)
!1110 = !DILocation(line: 829, column: 20, scope: !1069)
!1111 = !DILocation(line: 830, column: 5, scope: !1069)
!1112 = !DILocation(line: 830, column: 20, scope: !1069)
!1113 = !DILocation(line: 831, column: 5, scope: !1069)
!1114 = !DILocation(line: 831, column: 20, scope: !1069)
!1115 = !DILocation(line: 832, column: 5, scope: !1069)
!1116 = !DILocation(line: 832, column: 20, scope: !1069)
!1117 = !DILocation(line: 833, column: 5, scope: !1069)
!1118 = !DILocation(line: 833, column: 20, scope: !1069)
!1119 = !DILocation(line: 834, column: 5, scope: !1069)
!1120 = !DILocation(line: 834, column: 20, scope: !1069)
!1121 = !DILocation(line: 836, column: 3, scope: !1069)
!1122 = !DILocation(line: 836, column: 14, scope: !1123)
!1123 = !DILexicalBlockFile(scope: !1124, file: !1, discriminator: 1)
!1124 = distinct !DILexicalBlock(scope: !1053, file: !1, line: 836, column: 14)
!1125 = !DILocation(line: 836, column: 17, scope: !1123)
!1126 = !DILocation(line: 836, column: 25, scope: !1123)
!1127 = !DILocation(line: 836, column: 28, scope: !1128)
!1128 = !DILexicalBlockFile(scope: !1124, file: !1, discriminator: 2)
!1129 = !DILocation(line: 836, column: 31, scope: !1128)
!1130 = !DILocation(line: 836, column: 39, scope: !1128)
!1131 = !DILocation(line: 836, column: 42, scope: !1132)
!1132 = !DILexicalBlockFile(scope: !1124, file: !1, discriminator: 3)
!1133 = !DILocation(line: 836, column: 45, scope: !1132)
!1134 = !DILocation(line: 836, column: 53, scope: !1132)
!1135 = !DILocation(line: 836, column: 56, scope: !1136)
!1136 = !DILexicalBlockFile(scope: !1124, file: !1, discriminator: 4)
!1137 = !DILocation(line: 836, column: 59, scope: !1136)
!1138 = !DILocation(line: 836, column: 14, scope: !1136)
!1139 = !DILocation(line: 840, column: 6, scope: !1140)
!1140 = distinct !DILexicalBlock(scope: !1124, file: !1, line: 836, column: 66)
!1141 = !DILocation(line: 840, column: 12, scope: !1140)
!1142 = !DILocation(line: 841, column: 5, scope: !1140)
!1143 = !DILocation(line: 841, column: 20, scope: !1140)
!1144 = !DILocation(line: 842, column: 5, scope: !1140)
!1145 = !DILocation(line: 842, column: 20, scope: !1140)
!1146 = !DILocation(line: 843, column: 5, scope: !1140)
!1147 = !DILocation(line: 843, column: 20, scope: !1140)
!1148 = !DILocation(line: 844, column: 5, scope: !1140)
!1149 = !DILocation(line: 844, column: 20, scope: !1140)
!1150 = !DILocation(line: 845, column: 5, scope: !1140)
!1151 = !DILocation(line: 845, column: 20, scope: !1140)
!1152 = !DILocation(line: 846, column: 5, scope: !1140)
!1153 = !DILocation(line: 846, column: 20, scope: !1140)
!1154 = !DILocation(line: 847, column: 5, scope: !1140)
!1155 = !DILocation(line: 847, column: 20, scope: !1140)
!1156 = !DILocation(line: 848, column: 5, scope: !1140)
!1157 = !DILocation(line: 848, column: 20, scope: !1140)
!1158 = !DILocation(line: 849, column: 5, scope: !1140)
!1159 = !DILocation(line: 849, column: 20, scope: !1140)
!1160 = !DILocation(line: 850, column: 5, scope: !1140)
!1161 = !DILocation(line: 850, column: 20, scope: !1140)
!1162 = !DILocation(line: 851, column: 5, scope: !1140)
!1163 = !DILocation(line: 851, column: 20, scope: !1140)
!1164 = !DILocation(line: 852, column: 5, scope: !1140)
!1165 = !DILocation(line: 852, column: 20, scope: !1140)
!1166 = !DILocation(line: 853, column: 5, scope: !1140)
!1167 = !DILocation(line: 853, column: 20, scope: !1140)
!1168 = !DILocation(line: 854, column: 5, scope: !1140)
!1169 = !DILocation(line: 854, column: 20, scope: !1140)
!1170 = !DILocation(line: 855, column: 5, scope: !1140)
!1171 = !DILocation(line: 855, column: 20, scope: !1140)
!1172 = !DILocation(line: 856, column: 5, scope: !1140)
!1173 = !DILocation(line: 856, column: 20, scope: !1140)
!1174 = !DILocation(line: 857, column: 5, scope: !1140)
!1175 = !DILocation(line: 857, column: 20, scope: !1140)
!1176 = !DILocation(line: 858, column: 5, scope: !1140)
!1177 = !DILocation(line: 858, column: 20, scope: !1140)
!1178 = !DILocation(line: 859, column: 5, scope: !1140)
!1179 = !DILocation(line: 859, column: 20, scope: !1140)
!1180 = !DILocation(line: 860, column: 5, scope: !1140)
!1181 = !DILocation(line: 860, column: 20, scope: !1140)
!1182 = !DILocation(line: 861, column: 5, scope: !1140)
!1183 = !DILocation(line: 861, column: 20, scope: !1140)
!1184 = !DILocation(line: 862, column: 5, scope: !1140)
!1185 = !DILocation(line: 862, column: 20, scope: !1140)
!1186 = !DILocation(line: 863, column: 5, scope: !1140)
!1187 = !DILocation(line: 863, column: 20, scope: !1140)
!1188 = !DILocation(line: 864, column: 5, scope: !1140)
!1189 = !DILocation(line: 864, column: 20, scope: !1140)
!1190 = !DILocation(line: 865, column: 5, scope: !1140)
!1191 = !DILocation(line: 865, column: 20, scope: !1140)
!1192 = !DILocation(line: 866, column: 3, scope: !1140)
!1193 = !DILocation(line: 868, column: 8, scope: !1194)
!1194 = distinct !DILexicalBlock(scope: !799, file: !1, line: 868, column: 7)
!1195 = !DILocation(line: 868, column: 7, scope: !1194)
!1196 = !DILocation(line: 868, column: 14, scope: !1194)
!1197 = !DILocation(line: 868, column: 7, scope: !799)
!1198 = !DILocation(line: 869, column: 6, scope: !1199)
!1199 = distinct !DILexicalBlock(scope: !1194, file: !1, line: 868, column: 22)
!1200 = !DILocation(line: 869, column: 15, scope: !1199)
!1201 = !DILocation(line: 870, column: 12, scope: !1202)
!1202 = distinct !DILexicalBlock(scope: !1199, file: !1, line: 870, column: 5)
!1203 = !DILocation(line: 870, column: 10, scope: !1202)
!1204 = !DILocation(line: 870, column: 17, scope: !1205)
!1205 = !DILexicalBlockFile(scope: !1206, file: !1, discriminator: 1)
!1206 = distinct !DILexicalBlock(scope: !1202, file: !1, line: 870, column: 5)
!1207 = !DILocation(line: 870, column: 22, scope: !1205)
!1208 = !DILocation(line: 870, column: 19, scope: !1205)
!1209 = !DILocation(line: 870, column: 5, scope: !1205)
!1210 = !DILocation(line: 871, column: 13, scope: !1211)
!1211 = distinct !DILexicalBlock(scope: !1206, file: !1, line: 870, column: 31)
!1212 = !DILocation(line: 871, column: 13, scope: !1213)
!1213 = !DILexicalBlockFile(scope: !1211, file: !1, discriminator: 1)
!1214 = !DILocation(line: 871, column: 13, scope: !1215)
!1215 = !DILexicalBlockFile(scope: !1211, file: !1, discriminator: 2)
!1216 = !DILocation(line: 871, column: 13, scope: !1217)
!1217 = !DILexicalBlockFile(scope: !1211, file: !1, discriminator: 3)
!1218 = !DILocation(line: 871, column: 13, scope: !1219)
!1219 = !DILexicalBlockFile(scope: !1211, file: !1, discriminator: 4)
!1220 = !DILocation(line: 871, column: 11, scope: !1211)
!1221 = !DILocation(line: 873, column: 13, scope: !1222)
!1222 = distinct !DILexicalBlock(scope: !1211, file: !1, line: 873, column: 11)
!1223 = !DILocation(line: 873, column: 20, scope: !1222)
!1224 = !DILocation(line: 873, column: 17, scope: !1222)
!1225 = !DILocation(line: 873, column: 11, scope: !1211)
!1226 = !DILocation(line: 874, column: 10, scope: !1227)
!1227 = distinct !DILexicalBlock(scope: !1222, file: !1, line: 873, column: 30)
!1228 = !DILocation(line: 874, column: 19, scope: !1227)
!1229 = !DILocation(line: 875, column: 9, scope: !1227)
!1230 = !DILocation(line: 877, column: 5, scope: !1211)
!1231 = !DILocation(line: 870, column: 27, scope: !1232)
!1232 = !DILexicalBlockFile(scope: !1206, file: !1, discriminator: 2)
!1233 = !DILocation(line: 870, column: 5, scope: !1232)
!1234 = distinct !{!1234, !1235}
!1235 = !DILocation(line: 870, column: 5, scope: !1199)
!1236 = !DILocation(line: 878, column: 3, scope: !1199)
!1237 = !DILocation(line: 880, column: 8, scope: !1238)
!1238 = distinct !DILexicalBlock(scope: !799, file: !1, line: 880, column: 7)
!1239 = !DILocation(line: 880, column: 7, scope: !1238)
!1240 = !DILocation(line: 880, column: 14, scope: !1238)
!1241 = !DILocation(line: 880, column: 7, scope: !799)
!1242 = !DILocation(line: 881, column: 10, scope: !1243)
!1243 = distinct !DILexicalBlock(scope: !1244, file: !1, line: 881, column: 9)
!1244 = distinct !DILexicalBlock(scope: !1238, file: !1, line: 880, column: 22)
!1245 = !DILocation(line: 881, column: 9, scope: !1243)
!1246 = !DILocation(line: 881, column: 9, scope: !1244)
!1247 = !DILocation(line: 882, column: 7, scope: !1248)
!1248 = distinct !DILexicalBlock(scope: !1243, file: !1, line: 881, column: 20)
!1249 = !DILocation(line: 883, column: 5, scope: !1248)
!1250 = !DILocation(line: 884, column: 7, scope: !1251)
!1251 = distinct !DILexicalBlock(scope: !1243, file: !1, line: 883, column: 12)
!1252 = !DILocation(line: 886, column: 3, scope: !1244)
!1253 = !DILocation(line: 887, column: 28, scope: !799)
!1254 = !DILocation(line: 887, column: 27, scope: !799)
!1255 = !DILocation(line: 887, column: 3, scope: !799)
!1256 = !DILocation(line: 888, column: 1, scope: !799)
!1257 = distinct !DISubprogram(name: "print_timers", scope: !1, file: !1, line: 392, type: !291, isLocal: true, isDefinition: true, scopeLine: 393, isOptimized: false, unit: !0, variables: !68)
!1258 = !DILocalVariable(name: "i", scope: !1257, file: !1, line: 394, type: !23)
!1259 = !DILocation(line: 394, column: 7, scope: !1257)
!1260 = !DILocalVariable(name: "t", scope: !1257, file: !1, line: 395, type: !9)
!1261 = !DILocation(line: 395, column: 10, scope: !1257)
!1262 = !DILocalVariable(name: "t_m", scope: !1257, file: !1, line: 395, type: !9)
!1263 = !DILocation(line: 395, column: 13, scope: !1257)
!1264 = !DILocalVariable(name: "tstrings", scope: !1257, file: !1, line: 396, type: !1265)
!1265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !95, size: 576, align: 64, elements: !1266)
!1266 = !{!1267}
!1267 = !DISubrange(count: 9)
!1268 = !DILocation(line: 396, column: 9, scope: !1257)
!1269 = !DILocation(line: 397, column: 3, scope: !1257)
!1270 = !DILocation(line: 397, column: 15, scope: !1257)
!1271 = !DILocation(line: 398, column: 3, scope: !1257)
!1272 = !DILocation(line: 398, column: 15, scope: !1257)
!1273 = !DILocation(line: 399, column: 3, scope: !1257)
!1274 = !DILocation(line: 399, column: 15, scope: !1257)
!1275 = !DILocation(line: 400, column: 3, scope: !1257)
!1276 = !DILocation(line: 400, column: 15, scope: !1257)
!1277 = !DILocation(line: 401, column: 3, scope: !1257)
!1278 = !DILocation(line: 401, column: 15, scope: !1257)
!1279 = !DILocation(line: 402, column: 3, scope: !1257)
!1280 = !DILocation(line: 402, column: 15, scope: !1257)
!1281 = !DILocation(line: 403, column: 3, scope: !1257)
!1282 = !DILocation(line: 403, column: 15, scope: !1257)
!1283 = !DILocation(line: 404, column: 3, scope: !1257)
!1284 = !DILocation(line: 404, column: 15, scope: !1257)
!1285 = !DILocation(line: 406, column: 9, scope: !1257)
!1286 = !DILocation(line: 406, column: 7, scope: !1257)
!1287 = !DILocation(line: 407, column: 7, scope: !1288)
!1288 = distinct !DILexicalBlock(scope: !1257, file: !1, line: 407, column: 7)
!1289 = !DILocation(line: 407, column: 11, scope: !1288)
!1290 = !DILocation(line: 407, column: 7, scope: !1257)
!1291 = !DILocation(line: 407, column: 23, scope: !1292)
!1292 = !DILexicalBlockFile(scope: !1288, file: !1, discriminator: 1)
!1293 = !DILocation(line: 407, column: 19, scope: !1292)
!1294 = !DILocation(line: 408, column: 10, scope: !1295)
!1295 = distinct !DILexicalBlock(scope: !1257, file: !1, line: 408, column: 3)
!1296 = !DILocation(line: 408, column: 8, scope: !1295)
!1297 = !DILocation(line: 408, column: 15, scope: !1298)
!1298 = !DILexicalBlockFile(scope: !1299, file: !1, discriminator: 1)
!1299 = distinct !DILexicalBlock(scope: !1295, file: !1, line: 408, column: 3)
!1300 = !DILocation(line: 408, column: 17, scope: !1298)
!1301 = !DILocation(line: 408, column: 3, scope: !1298)
!1302 = !DILocation(line: 409, column: 20, scope: !1303)
!1303 = distinct !DILexicalBlock(scope: !1299, file: !1, line: 408, column: 32)
!1304 = !DILocation(line: 409, column: 9, scope: !1303)
!1305 = !DILocation(line: 409, column: 7, scope: !1303)
!1306 = !DILocation(line: 411, column: 9, scope: !1303)
!1307 = !DILocation(line: 411, column: 21, scope: !1303)
!1308 = !DILocation(line: 411, column: 12, scope: !1303)
!1309 = !DILocation(line: 411, column: 25, scope: !1303)
!1310 = !DILocation(line: 411, column: 28, scope: !1303)
!1311 = !DILocation(line: 411, column: 29, scope: !1303)
!1312 = !DILocation(line: 411, column: 36, scope: !1303)
!1313 = !DILocation(line: 411, column: 35, scope: !1303)
!1314 = !DILocation(line: 410, column: 5, scope: !1303)
!1315 = !DILocation(line: 412, column: 3, scope: !1303)
!1316 = !DILocation(line: 408, column: 28, scope: !1317)
!1317 = !DILexicalBlockFile(scope: !1299, file: !1, discriminator: 2)
!1318 = !DILocation(line: 408, column: 3, scope: !1317)
!1319 = distinct !{!1319, !1320}
!1320 = !DILocation(line: 408, column: 3, scope: !1257)
!1321 = !DILocation(line: 413, column: 1, scope: !1257)
!1322 = distinct !DISubprogram(name: "dcmplx_div", scope: !26, file: !26, line: 133, type: !1323, isLocal: true, isDefinition: true, scopeLine: 133, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !68)
!1323 = !DISubroutineType(types: !1324)
!1324 = !{!12, !12, !12}
!1325 = !DILocalVariable(name: "z1", arg: 1, scope: !1322, file: !26, line: 133, type: !12)
!1326 = !DILocation(line: 133, column: 44, scope: !1322)
!1327 = !DILocalVariable(name: "z2", arg: 2, scope: !1322, file: !26, line: 133, type: !12)
!1328 = !DILocation(line: 133, column: 57, scope: !1322)
!1329 = !DILocalVariable(name: "a", scope: !1322, file: !26, line: 134, type: !9)
!1330 = !DILocation(line: 134, column: 10, scope: !1322)
!1331 = !DILocation(line: 134, column: 17, scope: !1322)
!1332 = !DILocalVariable(name: "b", scope: !1322, file: !26, line: 135, type: !9)
!1333 = !DILocation(line: 135, column: 10, scope: !1322)
!1334 = !DILocation(line: 135, column: 17, scope: !1322)
!1335 = !DILocalVariable(name: "c", scope: !1322, file: !26, line: 136, type: !9)
!1336 = !DILocation(line: 136, column: 10, scope: !1322)
!1337 = !DILocation(line: 136, column: 17, scope: !1322)
!1338 = !DILocalVariable(name: "d", scope: !1322, file: !26, line: 137, type: !9)
!1339 = !DILocation(line: 137, column: 10, scope: !1322)
!1340 = !DILocation(line: 137, column: 17, scope: !1322)
!1341 = !DILocalVariable(name: "divisor", scope: !1322, file: !26, line: 139, type: !9)
!1342 = !DILocation(line: 139, column: 10, scope: !1322)
!1343 = !DILocation(line: 139, column: 20, scope: !1322)
!1344 = !DILocation(line: 139, column: 22, scope: !1322)
!1345 = !DILocation(line: 139, column: 21, scope: !1322)
!1346 = !DILocation(line: 139, column: 26, scope: !1322)
!1347 = !DILocation(line: 139, column: 28, scope: !1322)
!1348 = !DILocation(line: 139, column: 27, scope: !1322)
!1349 = !DILocation(line: 139, column: 24, scope: !1322)
!1350 = !DILocalVariable(name: "real", scope: !1322, file: !26, line: 140, type: !9)
!1351 = !DILocation(line: 140, column: 10, scope: !1322)
!1352 = !DILocation(line: 140, column: 18, scope: !1322)
!1353 = !DILocation(line: 140, column: 20, scope: !1322)
!1354 = !DILocation(line: 140, column: 19, scope: !1322)
!1355 = !DILocation(line: 140, column: 24, scope: !1322)
!1356 = !DILocation(line: 140, column: 26, scope: !1322)
!1357 = !DILocation(line: 140, column: 25, scope: !1322)
!1358 = !DILocation(line: 140, column: 22, scope: !1322)
!1359 = !DILocation(line: 140, column: 31, scope: !1322)
!1360 = !DILocation(line: 140, column: 29, scope: !1322)
!1361 = !DILocalVariable(name: "imag", scope: !1322, file: !26, line: 141, type: !9)
!1362 = !DILocation(line: 141, column: 10, scope: !1322)
!1363 = !DILocation(line: 141, column: 18, scope: !1322)
!1364 = !DILocation(line: 141, column: 20, scope: !1322)
!1365 = !DILocation(line: 141, column: 19, scope: !1322)
!1366 = !DILocation(line: 141, column: 24, scope: !1322)
!1367 = !DILocation(line: 141, column: 26, scope: !1322)
!1368 = !DILocation(line: 141, column: 25, scope: !1322)
!1369 = !DILocation(line: 141, column: 22, scope: !1322)
!1370 = !DILocation(line: 141, column: 31, scope: !1322)
!1371 = !DILocation(line: 141, column: 29, scope: !1322)
!1372 = !DILocalVariable(name: "result", scope: !1322, file: !26, line: 142, type: !12)
!1373 = !DILocation(line: 142, column: 12, scope: !1322)
!1374 = !DILocation(line: 142, column: 31, scope: !1322)
!1375 = !DILocation(line: 142, column: 32, scope: !1322)
!1376 = !DILocation(line: 142, column: 38, scope: !1322)
!1377 = !DILocation(line: 143, column: 10, scope: !1322)
!1378 = !DILocation(line: 143, column: 3, scope: !1322)
!1379 = distinct !DISubprogram(name: ".omp_outlined..31", scope: !1, file: !1, line: 676, type: !1380, isLocal: true, isDefinition: true, scopeLine: 677, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !68)
!1380 = !DISubroutineType(types: !1381)
!1381 = !{null, !1382, !1382, !1385, !347, !347, !1386, !1388}
!1382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1383)
!1383 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1384)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64, align: 64)
!1385 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !23, size: 64, align: 64)
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 64, align: 64)
!1387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, align: 64, elements: !17)
!1388 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !12, size: 64, align: 64)
!1389 = !{!"100"}
!1390 = !DILocalVariable(name: ".global_tid.", arg: 1, scope: !1379, type: !1382, flags: DIFlagArtificial | DIFlagObjectPointer)
!1391 = !DILocation(line: 0, scope: !1379)
!1392 = !DILocalVariable(name: ".bound_tid.", arg: 2, scope: !1379, type: !1382, flags: DIFlagArtificial)
!1393 = !DILocalVariable(name: "j", arg: 3, scope: !1379, type: !1385, flags: DIFlagArtificial)
!1394 = !DILocalVariable(name: "vla", arg: 4, scope: !1379, type: !347, flags: DIFlagArtificial)
!1395 = !DILocalVariable(name: "vla", arg: 5, scope: !1379, type: !347, flags: DIFlagArtificial)
!1396 = !DILocalVariable(name: "u1", arg: 6, scope: !1379, type: !1386, flags: DIFlagArtificial)
!1397 = !DILocalVariable(name: "chk", arg: 7, scope: !1379, type: !1388, flags: DIFlagArtificial)
!1398 = !DILocation(line: 677, column: 3, scope: !1379)
!1399 = !DILocalVariable(name: "i", scope: !1379, type: !23, flags: DIFlagArtificial)
!1400 = !DILocalVariable(name: "q", scope: !1379, type: !23, flags: DIFlagArtificial)
!1401 = !DILocalVariable(name: "r", scope: !1379, type: !23, flags: DIFlagArtificial)
!1402 = !DILocalVariable(name: "s", scope: !1379, type: !23, flags: DIFlagArtificial)
!1403 = !DILocalVariable(name: "my_chk", scope: !1404, file: !1, line: 678, type: !12)
!1404 = distinct !DILexicalBlock(scope: !1379, file: !1, line: 677, column: 3)
!1405 = !DILocation(line: 678, column: 14, scope: !1404)
!1406 = !DILocalVariable(name: ".omp.iv", scope: !1407, type: !23, flags: DIFlagArtificial)
!1407 = distinct !DILexicalBlock(scope: !1404, file: !1, line: 680, column: 13)
!1408 = !DILocation(line: 0, scope: !1407)
!1409 = !DILocalVariable(name: ".omp.lb", scope: !1407, type: !23, flags: DIFlagArtificial)
!1410 = !DILocation(line: 681, column: 10, scope: !1407)
!1411 = !DILocalVariable(name: ".omp.ub", scope: !1407, type: !23, flags: DIFlagArtificial)
!1412 = !DILocalVariable(name: ".omp.stride", scope: !1407, type: !23, flags: DIFlagArtificial)
!1413 = !DILocalVariable(name: ".omp.is_last", scope: !1407, type: !23, flags: DIFlagArtificial)
!1414 = !DILocalVariable(name: "j", scope: !1407, type: !23, flags: DIFlagArtificial)
!1415 = !DILocation(line: 680, column: 13, scope: !1404)
!1416 = !DILocation(line: 681, column: 10, scope: !1417)
!1417 = !DILexicalBlockFile(scope: !1407, file: !1, discriminator: 1)
!1418 = !DILocation(line: 681, column: 10, scope: !1419)
!1419 = !DILexicalBlockFile(scope: !1407, file: !1, discriminator: 2)
!1420 = !DILocation(line: 681, column: 10, scope: !1421)
!1421 = !DILexicalBlockFile(scope: !1407, file: !1, discriminator: 3)
!1422 = !DILocation(line: 680, column: 13, scope: !1423)
!1423 = !DILexicalBlockFile(scope: !1404, file: !1, discriminator: 1)
!1424 = !DILocation(line: 681, column: 10, scope: !1425)
!1425 = !DILexicalBlockFile(scope: !1407, file: !1, discriminator: 4)
!1426 = !DILocation(line: 680, column: 13, scope: !1427)
!1427 = !DILexicalBlockFile(scope: !1404, file: !1, discriminator: 2)
!1428 = !DILocation(line: 681, column: 10, scope: !1429)
!1429 = !DILexicalBlockFile(scope: !1407, file: !1, discriminator: 5)
!1430 = !DILocation(line: 681, column: 28, scope: !1429)
!1431 = !DILocation(line: 682, column: 11, scope: !1432)
!1432 = distinct !DILexicalBlock(scope: !1407, file: !1, line: 681, column: 33)
!1433 = !DILocation(line: 682, column: 13, scope: !1432)
!1434 = !DILocation(line: 682, column: 9, scope: !1432)
!1435 = !DILocation(line: 683, column: 13, scope: !1432)
!1436 = !DILocation(line: 683, column: 12, scope: !1432)
!1437 = !DILocation(line: 683, column: 15, scope: !1432)
!1438 = !DILocation(line: 683, column: 9, scope: !1432)
!1439 = !DILocation(line: 684, column: 13, scope: !1432)
!1440 = !DILocation(line: 684, column: 12, scope: !1432)
!1441 = !DILocation(line: 684, column: 15, scope: !1432)
!1442 = !DILocation(line: 684, column: 9, scope: !1432)
!1443 = !DILocation(line: 685, column: 16, scope: !1432)
!1444 = !DILocation(line: 686, column: 5, scope: !1432)
!1445 = !DILocation(line: 680, column: 13, scope: !1421)
!1446 = !DILocation(line: 681, column: 10, scope: !1447)
!1447 = !DILexicalBlockFile(scope: !1407, file: !1, discriminator: 6)
!1448 = !DILocation(line: 0, scope: !1417)
!1449 = !DILocation(line: 680, column: 13, scope: !1425)
!1450 = distinct !{!1450, !1415}
!1451 = !DILocation(line: 680, column: 13, scope: !1429)
!1452 = !DILocation(line: 680, column: 13, scope: !1447)
!1453 = !DILocation(line: 688, column: 13, scope: !1404)
!1454 = !DILocation(line: 690, column: 13, scope: !1455)
!1455 = distinct !DILexicalBlock(scope: !1456, file: !1, line: 689, column: 5)
!1456 = distinct !DILexicalBlock(scope: !1404, file: !1, line: 688, column: 13)
!1457 = !DILocation(line: 691, column: 5, scope: !1455)
!1458 = !DILocation(line: 692, column: 3, scope: !1379)
!1459 = distinct !DISubprogram(name: ".omp_outlined..8", scope: !1, file: !1, line: 223, type: !1460, isLocal: true, isDefinition: true, scopeLine: 224, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !68)
!1460 = !DISubroutineType(types: !1461)
!1461 = !{null, !1382, !1382, !1385, !1385, !1385, !347, !347, !1386, !347, !347, !19, !347, !347, !1386}
!1462 = !{!"101"}
!1463 = !DILocalVariable(name: ".global_tid.", arg: 1, scope: !1459, type: !1382, flags: DIFlagArtificial | DIFlagObjectPointer)
!1464 = !DILocation(line: 0, scope: !1459)
!1465 = !DILocalVariable(name: ".bound_tid.", arg: 2, scope: !1459, type: !1382, flags: DIFlagArtificial)
!1466 = !DILocalVariable(name: "d3", arg: 3, scope: !1459, type: !1385, flags: DIFlagArtificial)
!1467 = !DILocalVariable(name: "d2", arg: 4, scope: !1459, type: !1385, flags: DIFlagArtificial)
!1468 = !DILocalVariable(name: "d1", arg: 5, scope: !1459, type: !1385, flags: DIFlagArtificial)
!1469 = !DILocalVariable(name: "vla", arg: 6, scope: !1459, type: !347, flags: DIFlagArtificial)
!1470 = !DILocalVariable(name: "vla", arg: 7, scope: !1459, type: !347, flags: DIFlagArtificial)
!1471 = !DILocalVariable(name: "u0", arg: 8, scope: !1459, type: !1386, flags: DIFlagArtificial)
!1472 = !DILocalVariable(name: "vla", arg: 9, scope: !1459, type: !347, flags: DIFlagArtificial)
!1473 = !DILocalVariable(name: "vla", arg: 10, scope: !1459, type: !347, flags: DIFlagArtificial)
!1474 = !DILocalVariable(name: "twiddle", arg: 11, scope: !1459, type: !19, flags: DIFlagArtificial)
!1475 = !DILocalVariable(name: "vla", arg: 12, scope: !1459, type: !347, flags: DIFlagArtificial)
!1476 = !DILocalVariable(name: "vla", arg: 13, scope: !1459, type: !347, flags: DIFlagArtificial)
!1477 = !DILocalVariable(name: "u1", arg: 14, scope: !1459, type: !1386, flags: DIFlagArtificial)
!1478 = !DILocation(line: 224, column: 3, scope: !1459)
!1479 = !DILocalVariable(name: ".omp.iv", scope: !1459, type: !23, flags: DIFlagArtificial)
!1480 = !DILocalVariable(name: ".capture_expr.", scope: !1459, type: !23, flags: DIFlagArtificial)
!1481 = !DILocation(line: 224, column: 19, scope: !1459)
!1482 = !DILocalVariable(name: "k", scope: !1459, type: !23, flags: DIFlagArtificial)
!1483 = !DILocation(line: 224, column: 23, scope: !1459)
!1484 = !DILocalVariable(name: ".omp.lb", scope: !1459, type: !23, flags: DIFlagArtificial)
!1485 = !DILocation(line: 224, column: 8, scope: !1486)
!1486 = !DILexicalBlockFile(scope: !1459, file: !1, discriminator: 1)
!1487 = !DILocalVariable(name: ".omp.ub", scope: !1459, type: !23, flags: DIFlagArtificial)
!1488 = !DILocation(line: 0, scope: !1486)
!1489 = !DILocalVariable(name: ".omp.stride", scope: !1459, type: !23, flags: DIFlagArtificial)
!1490 = !DILocalVariable(name: ".omp.is_last", scope: !1459, type: !23, flags: DIFlagArtificial)
!1491 = !DILocalVariable(name: "i", scope: !1459, type: !23, flags: DIFlagArtificial)
!1492 = !DILocalVariable(name: "j", scope: !1459, type: !23, flags: DIFlagArtificial)
!1493 = !DILocation(line: 224, column: 3, scope: !1486)
!1494 = !DILocation(line: 0, scope: !1495)
!1495 = !DILexicalBlockFile(scope: !1459, file: !1, discriminator: 2)
!1496 = !DILocation(line: 224, column: 8, scope: !1495)
!1497 = !DILocation(line: 224, column: 8, scope: !1498)
!1498 = !DILexicalBlockFile(scope: !1459, file: !1, discriminator: 3)
!1499 = !DILocation(line: 224, column: 8, scope: !1500)
!1500 = !DILexicalBlockFile(scope: !1459, file: !1, discriminator: 4)
!1501 = !DILocation(line: 224, column: 3, scope: !1500)
!1502 = !DILocation(line: 224, column: 8, scope: !1503)
!1503 = !DILexicalBlockFile(scope: !1459, file: !1, discriminator: 5)
!1504 = !DILocation(line: 0, scope: !1498)
!1505 = !DILocation(line: 224, column: 3, scope: !1503)
!1506 = !DILocation(line: 224, column: 8, scope: !1507)
!1507 = !DILexicalBlockFile(scope: !1459, file: !1, discriminator: 6)
!1508 = !DILocation(line: 224, column: 23, scope: !1507)
!1509 = !DILocation(line: 225, column: 12, scope: !1510)
!1510 = distinct !DILexicalBlock(scope: !1511, file: !1, line: 225, column: 5)
!1511 = distinct !DILexicalBlock(scope: !1459, file: !1, line: 224, column: 28)
!1512 = !DILocation(line: 225, column: 10, scope: !1510)
!1513 = !DILocation(line: 225, column: 17, scope: !1514)
!1514 = !DILexicalBlockFile(scope: !1515, file: !1, discriminator: 1)
!1515 = distinct !DILexicalBlock(scope: !1510, file: !1, line: 225, column: 5)
!1516 = !DILocation(line: 225, column: 21, scope: !1514)
!1517 = !DILocation(line: 225, column: 19, scope: !1514)
!1518 = !DILocation(line: 225, column: 5, scope: !1514)
!1519 = !DILocation(line: 226, column: 14, scope: !1520)
!1520 = distinct !DILexicalBlock(scope: !1521, file: !1, line: 226, column: 7)
!1521 = distinct !DILexicalBlock(scope: !1515, file: !1, line: 225, column: 30)
!1522 = !DILocation(line: 226, column: 12, scope: !1520)
!1523 = !DILocation(line: 226, column: 19, scope: !1524)
!1524 = !DILexicalBlockFile(scope: !1525, file: !1, discriminator: 1)
!1525 = distinct !DILexicalBlock(scope: !1520, file: !1, line: 226, column: 7)
!1526 = !DILocation(line: 226, column: 23, scope: !1524)
!1527 = !DILocation(line: 226, column: 21, scope: !1524)
!1528 = !DILocation(line: 226, column: 7, scope: !1524)
!1529 = !DILocation(line: 227, column: 18, scope: !1530)
!1530 = distinct !DILexicalBlock(scope: !1525, file: !1, line: 226, column: 32)
!1531 = !DILocation(line: 227, column: 9, scope: !1530)
!1532 = !DILocation(line: 227, column: 15, scope: !1530)
!1533 = !DILocation(line: 227, column: 12, scope: !1530)
!1534 = !DILocation(line: 227, column: 23, scope: !1530)
!1535 = !DILocation(line: 228, column: 18, scope: !1530)
!1536 = !DILocation(line: 228, column: 9, scope: !1530)
!1537 = !DILocation(line: 228, column: 15, scope: !1530)
!1538 = !DILocation(line: 228, column: 12, scope: !1530)
!1539 = !DILocation(line: 228, column: 32, scope: !1530)
!1540 = !DILocation(line: 228, column: 23, scope: !1530)
!1541 = !DILocation(line: 228, column: 29, scope: !1530)
!1542 = !DILocation(line: 228, column: 26, scope: !1530)
!1543 = !DILocation(line: 229, column: 7, scope: !1530)
!1544 = !DILocation(line: 226, column: 28, scope: !1545)
!1545 = !DILexicalBlockFile(scope: !1525, file: !1, discriminator: 2)
!1546 = !DILocation(line: 226, column: 7, scope: !1545)
!1547 = distinct !{!1547, !1548}
!1548 = !DILocation(line: 226, column: 7, scope: !1521)
!1549 = !DILocation(line: 230, column: 5, scope: !1521)
!1550 = !DILocation(line: 225, column: 26, scope: !1551)
!1551 = !DILexicalBlockFile(scope: !1515, file: !1, discriminator: 2)
!1552 = !DILocation(line: 225, column: 5, scope: !1551)
!1553 = distinct !{!1553, !1554}
!1554 = !DILocation(line: 225, column: 5, scope: !1511)
!1555 = !DILocation(line: 231, column: 3, scope: !1511)
!1556 = !DILocation(line: 223, column: 11, scope: !1459)
!1557 = !DILocation(line: 224, column: 8, scope: !1558)
!1558 = !DILexicalBlockFile(scope: !1459, file: !1, discriminator: 7)
!1559 = !DILocation(line: 0, scope: !1500)
!1560 = !DILocation(line: 223, column: 11, scope: !1486)
!1561 = distinct !{!1561, !1478}
!1562 = !DILocation(line: 223, column: 11, scope: !1495)
!1563 = !DILocation(line: 223, column: 11, scope: !1498)
!1564 = !DILocation(line: 231, column: 3, scope: !1486)
!1565 = distinct !DISubprogram(name: "cffts1", scope: !1, file: !1, line: 436, type: !1566, isLocal: true, isDefinition: true, scopeLine: 437, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !68)
!1566 = !DISubroutineType(types: !1567)
!1567 = !{null, !23, !23, !23, !23, !22, !22}
!1568 = !DILocalVariable(name: "is", arg: 1, scope: !1565, file: !1, line: 436, type: !23)
!1569 = !DILocation(line: 436, column: 24, scope: !1565)
!1570 = !DILocalVariable(name: "d1", arg: 2, scope: !1565, file: !1, line: 436, type: !23)
!1571 = !DILocation(line: 436, column: 32, scope: !1565)
!1572 = !DILocalVariable(name: "d2", arg: 3, scope: !1565, file: !1, line: 436, type: !23)
!1573 = !DILocation(line: 436, column: 40, scope: !1565)
!1574 = !DILocalVariable(name: "d3", arg: 4, scope: !1565, file: !1, line: 436, type: !23)
!1575 = !DILocation(line: 436, column: 48, scope: !1565)
!1576 = !DILocalVariable(name: "ox", arg: 5, scope: !1565, file: !1, line: 436, type: !22)
!1577 = !DILocation(line: 436, column: 58, scope: !1565)
!1578 = !DILocalVariable(name: "oxout", arg: 6, scope: !1565, file: !1, line: 436, type: !22)
!1579 = !DILocation(line: 436, column: 68, scope: !1565)
!1580 = !DILocation(line: 438, column: 17, scope: !1565)
!1581 = !DILocation(line: 438, column: 3, scope: !1565)
!1582 = !DILocation(line: 438, column: 21, scope: !1565)
!1583 = !DILocation(line: 438, column: 23, scope: !1565)
!1584 = !DILocalVariable(name: "x", scope: !1565, file: !1, line: 438, type: !10)
!1585 = !DILocation(line: 438, column: 14, scope: !1565)
!1586 = !DILocation(line: 438, column: 43, scope: !1565)
!1587 = !DILocation(line: 438, column: 29, scope: !1565)
!1588 = !DILocation(line: 438, column: 47, scope: !1565)
!1589 = !DILocation(line: 438, column: 49, scope: !1565)
!1590 = !DILocation(line: 438, column: 53, scope: !1565)
!1591 = !DILocation(line: 439, column: 20, scope: !1565)
!1592 = !DILocation(line: 439, column: 3, scope: !1565)
!1593 = !DILocation(line: 439, column: 24, scope: !1565)
!1594 = !DILocation(line: 439, column: 26, scope: !1565)
!1595 = !DILocalVariable(name: "xout", scope: !1565, file: !1, line: 439, type: !10)
!1596 = !DILocation(line: 439, column: 14, scope: !1565)
!1597 = !DILocation(line: 439, column: 46, scope: !1565)
!1598 = !DILocation(line: 439, column: 32, scope: !1565)
!1599 = !DILocation(line: 439, column: 50, scope: !1565)
!1600 = !DILocation(line: 439, column: 52, scope: !1565)
!1601 = !DILocation(line: 439, column: 56, scope: !1565)
!1602 = !DILocalVariable(name: "logd1", scope: !1565, file: !1, line: 441, type: !23)
!1603 = !DILocation(line: 441, column: 7, scope: !1565)
!1604 = !DILocalVariable(name: "i", scope: !1565, file: !1, line: 442, type: !23)
!1605 = !DILocation(line: 442, column: 7, scope: !1565)
!1606 = !DILocalVariable(name: "j", scope: !1565, file: !1, line: 442, type: !23)
!1607 = !DILocation(line: 442, column: 10, scope: !1565)
!1608 = !DILocalVariable(name: "k", scope: !1565, file: !1, line: 442, type: !23)
!1609 = !DILocation(line: 442, column: 13, scope: !1565)
!1610 = !DILocalVariable(name: "jj", scope: !1565, file: !1, line: 442, type: !23)
!1611 = !DILocation(line: 442, column: 16, scope: !1565)
!1612 = !DILocation(line: 444, column: 17, scope: !1565)
!1613 = !DILocation(line: 444, column: 11, scope: !1565)
!1614 = !DILocation(line: 444, column: 9, scope: !1565)
!1615 = !DILocation(line: 446, column: 7, scope: !1616)
!1616 = distinct !DILexicalBlock(scope: !1565, file: !1, line: 446, column: 7)
!1617 = !DILocation(line: 446, column: 7, scope: !1565)
!1618 = !DILocation(line: 446, column: 23, scope: !1619)
!1619 = !DILexicalBlockFile(scope: !1616, file: !1, discriminator: 1)
!1620 = !DILocation(line: 447, column: 11, scope: !1565)
!1621 = !DILocation(line: 465, column: 7, scope: !1622)
!1622 = distinct !DILexicalBlock(scope: !1565, file: !1, line: 465, column: 7)
!1623 = !DILocation(line: 465, column: 7, scope: !1565)
!1624 = !DILocation(line: 465, column: 23, scope: !1625)
!1625 = !DILexicalBlockFile(scope: !1622, file: !1, discriminator: 1)
!1626 = !DILocation(line: 466, column: 1, scope: !1565)
!1627 = distinct !DISubprogram(name: "cffts2", scope: !1, file: !1, line: 469, type: !1566, isLocal: true, isDefinition: true, scopeLine: 470, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !68)
!1628 = !DILocalVariable(name: "is", arg: 1, scope: !1627, file: !1, line: 469, type: !23)
!1629 = !DILocation(line: 469, column: 24, scope: !1627)
!1630 = !DILocalVariable(name: "d1", arg: 2, scope: !1627, file: !1, line: 469, type: !23)
!1631 = !DILocation(line: 469, column: 32, scope: !1627)
!1632 = !DILocalVariable(name: "d2", arg: 3, scope: !1627, file: !1, line: 469, type: !23)
!1633 = !DILocation(line: 469, column: 40, scope: !1627)
!1634 = !DILocalVariable(name: "d3", arg: 4, scope: !1627, file: !1, line: 469, type: !23)
!1635 = !DILocation(line: 469, column: 48, scope: !1627)
!1636 = !DILocalVariable(name: "ox", arg: 5, scope: !1627, file: !1, line: 469, type: !22)
!1637 = !DILocation(line: 469, column: 58, scope: !1627)
!1638 = !DILocalVariable(name: "oxout", arg: 6, scope: !1627, file: !1, line: 469, type: !22)
!1639 = !DILocation(line: 469, column: 68, scope: !1627)
!1640 = !DILocation(line: 471, column: 17, scope: !1627)
!1641 = !DILocation(line: 471, column: 3, scope: !1627)
!1642 = !DILocation(line: 471, column: 21, scope: !1627)
!1643 = !DILocation(line: 471, column: 23, scope: !1627)
!1644 = !DILocalVariable(name: "x", scope: !1627, file: !1, line: 471, type: !10)
!1645 = !DILocation(line: 471, column: 14, scope: !1627)
!1646 = !DILocation(line: 471, column: 43, scope: !1627)
!1647 = !DILocation(line: 471, column: 29, scope: !1627)
!1648 = !DILocation(line: 471, column: 47, scope: !1627)
!1649 = !DILocation(line: 471, column: 49, scope: !1627)
!1650 = !DILocation(line: 471, column: 53, scope: !1627)
!1651 = !DILocation(line: 472, column: 20, scope: !1627)
!1652 = !DILocation(line: 472, column: 3, scope: !1627)
!1653 = !DILocation(line: 472, column: 24, scope: !1627)
!1654 = !DILocation(line: 472, column: 26, scope: !1627)
!1655 = !DILocalVariable(name: "xout", scope: !1627, file: !1, line: 472, type: !10)
!1656 = !DILocation(line: 472, column: 14, scope: !1627)
!1657 = !DILocation(line: 472, column: 46, scope: !1627)
!1658 = !DILocation(line: 472, column: 32, scope: !1627)
!1659 = !DILocation(line: 472, column: 50, scope: !1627)
!1660 = !DILocation(line: 472, column: 52, scope: !1627)
!1661 = !DILocation(line: 472, column: 56, scope: !1627)
!1662 = !DILocalVariable(name: "logd2", scope: !1627, file: !1, line: 474, type: !23)
!1663 = !DILocation(line: 474, column: 7, scope: !1627)
!1664 = !DILocalVariable(name: "i", scope: !1627, file: !1, line: 475, type: !23)
!1665 = !DILocation(line: 475, column: 7, scope: !1627)
!1666 = !DILocalVariable(name: "j", scope: !1627, file: !1, line: 475, type: !23)
!1667 = !DILocation(line: 475, column: 10, scope: !1627)
!1668 = !DILocalVariable(name: "k", scope: !1627, file: !1, line: 475, type: !23)
!1669 = !DILocation(line: 475, column: 13, scope: !1627)
!1670 = !DILocalVariable(name: "ii", scope: !1627, file: !1, line: 475, type: !23)
!1671 = !DILocation(line: 475, column: 16, scope: !1627)
!1672 = !DILocation(line: 477, column: 17, scope: !1627)
!1673 = !DILocation(line: 477, column: 11, scope: !1627)
!1674 = !DILocation(line: 477, column: 9, scope: !1627)
!1675 = !DILocation(line: 479, column: 7, scope: !1676)
!1676 = distinct !DILexicalBlock(scope: !1627, file: !1, line: 479, column: 7)
!1677 = !DILocation(line: 479, column: 7, scope: !1627)
!1678 = !DILocation(line: 479, column: 23, scope: !1679)
!1679 = !DILexicalBlockFile(scope: !1676, file: !1, discriminator: 1)
!1680 = !DILocation(line: 480, column: 11, scope: !1627)
!1681 = !DILocation(line: 498, column: 7, scope: !1682)
!1682 = distinct !DILexicalBlock(scope: !1627, file: !1, line: 498, column: 7)
!1683 = !DILocation(line: 498, column: 7, scope: !1627)
!1684 = !DILocation(line: 498, column: 23, scope: !1685)
!1685 = !DILexicalBlockFile(scope: !1682, file: !1, discriminator: 1)
!1686 = !DILocation(line: 499, column: 1, scope: !1627)
!1687 = distinct !DISubprogram(name: "cffts3", scope: !1, file: !1, line: 502, type: !1566, isLocal: true, isDefinition: true, scopeLine: 503, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !68)
!1688 = !DILocalVariable(name: "is", arg: 1, scope: !1687, file: !1, line: 502, type: !23)
!1689 = !DILocation(line: 502, column: 24, scope: !1687)
!1690 = !DILocalVariable(name: "d1", arg: 2, scope: !1687, file: !1, line: 502, type: !23)
!1691 = !DILocation(line: 502, column: 32, scope: !1687)
!1692 = !DILocalVariable(name: "d2", arg: 3, scope: !1687, file: !1, line: 502, type: !23)
!1693 = !DILocation(line: 502, column: 40, scope: !1687)
!1694 = !DILocalVariable(name: "d3", arg: 4, scope: !1687, file: !1, line: 502, type: !23)
!1695 = !DILocation(line: 502, column: 48, scope: !1687)
!1696 = !DILocalVariable(name: "ox", arg: 5, scope: !1687, file: !1, line: 502, type: !22)
!1697 = !DILocation(line: 502, column: 58, scope: !1687)
!1698 = !DILocalVariable(name: "oxout", arg: 6, scope: !1687, file: !1, line: 502, type: !22)
!1699 = !DILocation(line: 502, column: 68, scope: !1687)
!1700 = !DILocation(line: 504, column: 17, scope: !1687)
!1701 = !DILocation(line: 504, column: 3, scope: !1687)
!1702 = !DILocation(line: 504, column: 21, scope: !1687)
!1703 = !DILocation(line: 504, column: 23, scope: !1687)
!1704 = !DILocalVariable(name: "x", scope: !1687, file: !1, line: 504, type: !10)
!1705 = !DILocation(line: 504, column: 14, scope: !1687)
!1706 = !DILocation(line: 504, column: 43, scope: !1687)
!1707 = !DILocation(line: 504, column: 29, scope: !1687)
!1708 = !DILocation(line: 504, column: 47, scope: !1687)
!1709 = !DILocation(line: 504, column: 49, scope: !1687)
!1710 = !DILocation(line: 504, column: 53, scope: !1687)
!1711 = !DILocation(line: 505, column: 20, scope: !1687)
!1712 = !DILocation(line: 505, column: 3, scope: !1687)
!1713 = !DILocation(line: 505, column: 24, scope: !1687)
!1714 = !DILocation(line: 505, column: 26, scope: !1687)
!1715 = !DILocalVariable(name: "xout", scope: !1687, file: !1, line: 505, type: !10)
!1716 = !DILocation(line: 505, column: 14, scope: !1687)
!1717 = !DILocation(line: 505, column: 46, scope: !1687)
!1718 = !DILocation(line: 505, column: 32, scope: !1687)
!1719 = !DILocation(line: 505, column: 50, scope: !1687)
!1720 = !DILocation(line: 505, column: 52, scope: !1687)
!1721 = !DILocation(line: 505, column: 56, scope: !1687)
!1722 = !DILocalVariable(name: "logd3", scope: !1687, file: !1, line: 507, type: !23)
!1723 = !DILocation(line: 507, column: 7, scope: !1687)
!1724 = !DILocalVariable(name: "i", scope: !1687, file: !1, line: 508, type: !23)
!1725 = !DILocation(line: 508, column: 7, scope: !1687)
!1726 = !DILocalVariable(name: "j", scope: !1687, file: !1, line: 508, type: !23)
!1727 = !DILocation(line: 508, column: 10, scope: !1687)
!1728 = !DILocalVariable(name: "k", scope: !1687, file: !1, line: 508, type: !23)
!1729 = !DILocation(line: 508, column: 13, scope: !1687)
!1730 = !DILocalVariable(name: "ii", scope: !1687, file: !1, line: 508, type: !23)
!1731 = !DILocation(line: 508, column: 16, scope: !1687)
!1732 = !DILocation(line: 510, column: 17, scope: !1687)
!1733 = !DILocation(line: 510, column: 11, scope: !1687)
!1734 = !DILocation(line: 510, column: 9, scope: !1687)
!1735 = !DILocation(line: 512, column: 7, scope: !1736)
!1736 = distinct !DILexicalBlock(scope: !1687, file: !1, line: 512, column: 7)
!1737 = !DILocation(line: 512, column: 7, scope: !1687)
!1738 = !DILocation(line: 512, column: 23, scope: !1739)
!1739 = !DILexicalBlockFile(scope: !1736, file: !1, discriminator: 1)
!1740 = !DILocation(line: 513, column: 11, scope: !1687)
!1741 = !DILocation(line: 531, column: 7, scope: !1742)
!1742 = distinct !DILexicalBlock(scope: !1687, file: !1, line: 531, column: 7)
!1743 = !DILocation(line: 531, column: 7, scope: !1687)
!1744 = !DILocation(line: 531, column: 23, scope: !1745)
!1745 = !DILexicalBlockFile(scope: !1742, file: !1, discriminator: 1)
!1746 = !DILocation(line: 532, column: 1, scope: !1687)
!1747 = distinct !DISubprogram(name: "ilog2", scope: !1, file: !1, line: 655, type: !1748, isLocal: true, isDefinition: true, scopeLine: 656, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !68)
!1748 = !DISubroutineType(types: !1749)
!1749 = !{!23, !23}
!1750 = !DILocalVariable(name: "n", arg: 1, scope: !1747, file: !1, line: 655, type: !23)
!1751 = !DILocation(line: 655, column: 22, scope: !1747)
!1752 = !DILocalVariable(name: "nn", scope: !1747, file: !1, line: 657, type: !23)
!1753 = !DILocation(line: 657, column: 7, scope: !1747)
!1754 = !DILocalVariable(name: "lg", scope: !1747, file: !1, line: 657, type: !23)
!1755 = !DILocation(line: 657, column: 11, scope: !1747)
!1756 = !DILocation(line: 658, column: 7, scope: !1757)
!1757 = distinct !DILexicalBlock(scope: !1747, file: !1, line: 658, column: 7)
!1758 = !DILocation(line: 658, column: 9, scope: !1757)
!1759 = !DILocation(line: 658, column: 7, scope: !1747)
!1760 = !DILocation(line: 658, column: 15, scope: !1761)
!1761 = !DILexicalBlockFile(scope: !1757, file: !1, discriminator: 1)
!1762 = !DILocation(line: 659, column: 6, scope: !1747)
!1763 = !DILocation(line: 660, column: 6, scope: !1747)
!1764 = !DILocation(line: 661, column: 3, scope: !1747)
!1765 = !DILocation(line: 661, column: 10, scope: !1766)
!1766 = !DILexicalBlockFile(scope: !1747, file: !1, discriminator: 1)
!1767 = !DILocation(line: 661, column: 15, scope: !1766)
!1768 = !DILocation(line: 661, column: 13, scope: !1766)
!1769 = !DILocation(line: 661, column: 3, scope: !1766)
!1770 = !DILocation(line: 662, column: 10, scope: !1771)
!1771 = distinct !DILexicalBlock(scope: !1747, file: !1, line: 661, column: 18)
!1772 = !DILocation(line: 662, column: 12, scope: !1771)
!1773 = !DILocation(line: 662, column: 8, scope: !1771)
!1774 = !DILocation(line: 663, column: 10, scope: !1771)
!1775 = !DILocation(line: 663, column: 12, scope: !1771)
!1776 = !DILocation(line: 663, column: 8, scope: !1771)
!1777 = !DILocation(line: 661, column: 3, scope: !1778)
!1778 = !DILexicalBlockFile(scope: !1747, file: !1, discriminator: 2)
!1779 = distinct !{!1779, !1764}
!1780 = !DILocation(line: 665, column: 10, scope: !1747)
!1781 = !DILocation(line: 665, column: 3, scope: !1747)
!1782 = !DILocation(line: 666, column: 1, scope: !1747)
!1783 = distinct !DISubprogram(name: ".omp_outlined..30", scope: !1, file: !1, line: 513, type: !1784, isLocal: true, isDefinition: true, scopeLine: 514, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !68)
!1784 = !DISubroutineType(types: !1785)
!1785 = !{null, !1382, !1382, !1385, !1385, !1385, !347, !347, !1386, !1385, !1385, !347, !347, !1386}
!1786 = !{!"102"}
!1787 = !DILocalVariable(name: ".global_tid.", arg: 1, scope: !1783, type: !1382, flags: DIFlagArtificial | DIFlagObjectPointer)
!1788 = !DILocation(line: 0, scope: !1783)
!1789 = !DILocalVariable(name: ".bound_tid.", arg: 2, scope: !1783, type: !1382, flags: DIFlagArtificial)
!1790 = !DILocalVariable(name: "d2", arg: 3, scope: !1783, type: !1385, flags: DIFlagArtificial)
!1791 = !DILocalVariable(name: "d1", arg: 4, scope: !1783, type: !1385, flags: DIFlagArtificial)
!1792 = !DILocalVariable(name: "d3", arg: 5, scope: !1783, type: !1385, flags: DIFlagArtificial)
!1793 = !DILocalVariable(name: "vla", arg: 6, scope: !1783, type: !347, flags: DIFlagArtificial)
!1794 = !DILocalVariable(name: "vla", arg: 7, scope: !1783, type: !347, flags: DIFlagArtificial)
!1795 = !DILocalVariable(name: "x", arg: 8, scope: !1783, type: !1386, flags: DIFlagArtificial)
!1796 = !DILocalVariable(name: "is", arg: 9, scope: !1783, type: !1385, flags: DIFlagArtificial)
!1797 = !DILocalVariable(name: "logd3", arg: 10, scope: !1783, type: !1385, flags: DIFlagArtificial)
!1798 = !DILocalVariable(name: "vla", arg: 11, scope: !1783, type: !347, flags: DIFlagArtificial)
!1799 = !DILocalVariable(name: "vla", arg: 12, scope: !1783, type: !347, flags: DIFlagArtificial)
!1800 = !DILocalVariable(name: "xout", arg: 13, scope: !1783, type: !1386, flags: DIFlagArtificial)
!1801 = !DILocation(line: 514, column: 3, scope: !1783)
!1802 = !DILocalVariable(name: ".omp.iv", scope: !1783, type: !23, flags: DIFlagArtificial)
!1803 = !DILocalVariable(name: ".capture_expr.", scope: !1783, type: !23, flags: DIFlagArtificial)
!1804 = !DILocation(line: 514, column: 19, scope: !1783)
!1805 = !DILocalVariable(name: "j", scope: !1783, type: !23, flags: DIFlagArtificial)
!1806 = !DILocation(line: 514, column: 23, scope: !1783)
!1807 = !DILocalVariable(name: ".omp.lb", scope: !1783, type: !23, flags: DIFlagArtificial)
!1808 = !DILocation(line: 514, column: 8, scope: !1809)
!1809 = !DILexicalBlockFile(scope: !1783, file: !1, discriminator: 1)
!1810 = !DILocalVariable(name: ".omp.ub", scope: !1783, type: !23, flags: DIFlagArtificial)
!1811 = !DILocation(line: 0, scope: !1809)
!1812 = !DILocalVariable(name: ".omp.stride", scope: !1783, type: !23, flags: DIFlagArtificial)
!1813 = !DILocalVariable(name: ".omp.is_last", scope: !1783, type: !23, flags: DIFlagArtificial)
!1814 = !DILocalVariable(name: "i", scope: !1783, type: !23, flags: DIFlagArtificial)
!1815 = !DILocalVariable(name: "k", scope: !1783, type: !23, flags: DIFlagArtificial)
!1816 = !DILocalVariable(name: "ii", scope: !1783, type: !23, flags: DIFlagArtificial)
!1817 = !DILocation(line: 514, column: 3, scope: !1809)
!1818 = !DILocation(line: 0, scope: !1819)
!1819 = !DILexicalBlockFile(scope: !1783, file: !1, discriminator: 2)
!1820 = !DILocation(line: 514, column: 8, scope: !1819)
!1821 = !DILocation(line: 514, column: 8, scope: !1822)
!1822 = !DILexicalBlockFile(scope: !1783, file: !1, discriminator: 3)
!1823 = !DILocation(line: 514, column: 8, scope: !1824)
!1824 = !DILexicalBlockFile(scope: !1783, file: !1, discriminator: 4)
!1825 = !DILocation(line: 514, column: 3, scope: !1824)
!1826 = !DILocation(line: 514, column: 8, scope: !1827)
!1827 = !DILexicalBlockFile(scope: !1783, file: !1, discriminator: 5)
!1828 = !DILocation(line: 0, scope: !1822)
!1829 = !DILocation(line: 514, column: 3, scope: !1827)
!1830 = !DILocation(line: 514, column: 8, scope: !1831)
!1831 = !DILexicalBlockFile(scope: !1783, file: !1, discriminator: 6)
!1832 = !DILocation(line: 514, column: 23, scope: !1831)
!1833 = !DILocation(line: 515, column: 13, scope: !1834)
!1834 = distinct !DILexicalBlock(scope: !1835, file: !1, line: 515, column: 5)
!1835 = distinct !DILexicalBlock(scope: !1783, file: !1, line: 514, column: 28)
!1836 = !DILocation(line: 515, column: 10, scope: !1834)
!1837 = !DILocation(line: 515, column: 18, scope: !1838)
!1838 = !DILexicalBlockFile(scope: !1839, file: !1, discriminator: 1)
!1839 = distinct !DILexicalBlock(scope: !1834, file: !1, line: 515, column: 5)
!1840 = !DILocation(line: 515, column: 24, scope: !1838)
!1841 = !DILocation(line: 515, column: 29, scope: !1838)
!1842 = !DILocation(line: 515, column: 27, scope: !1838)
!1843 = !DILocation(line: 515, column: 21, scope: !1838)
!1844 = !DILocation(line: 515, column: 5, scope: !1838)
!1845 = !DILocation(line: 516, column: 14, scope: !1846)
!1846 = distinct !DILexicalBlock(scope: !1847, file: !1, line: 516, column: 7)
!1847 = distinct !DILexicalBlock(scope: !1839, file: !1, line: 515, column: 55)
!1848 = !DILocation(line: 516, column: 12, scope: !1846)
!1849 = !DILocation(line: 516, column: 19, scope: !1850)
!1850 = !DILexicalBlockFile(scope: !1851, file: !1, discriminator: 1)
!1851 = distinct !DILexicalBlock(scope: !1846, file: !1, line: 516, column: 7)
!1852 = !DILocation(line: 516, column: 23, scope: !1850)
!1853 = !DILocation(line: 516, column: 21, scope: !1850)
!1854 = !DILocation(line: 516, column: 7, scope: !1850)
!1855 = !DILocation(line: 517, column: 16, scope: !1856)
!1856 = distinct !DILexicalBlock(scope: !1857, file: !1, line: 517, column: 9)
!1857 = distinct !DILexicalBlock(scope: !1851, file: !1, line: 516, column: 32)
!1858 = !DILocation(line: 517, column: 14, scope: !1856)
!1859 = !DILocation(line: 517, column: 21, scope: !1860)
!1860 = !DILexicalBlockFile(scope: !1861, file: !1, discriminator: 1)
!1861 = distinct !DILexicalBlock(scope: !1856, file: !1, line: 517, column: 9)
!1862 = !DILocation(line: 517, column: 25, scope: !1860)
!1863 = !DILocation(line: 517, column: 23, scope: !1860)
!1864 = !DILocation(line: 517, column: 9, scope: !1860)
!1865 = !DILocation(line: 518, column: 18, scope: !1866)
!1866 = distinct !DILexicalBlock(scope: !1861, file: !1, line: 517, column: 40)
!1867 = !DILocation(line: 518, column: 11, scope: !1866)
!1868 = !DILocation(line: 518, column: 15, scope: !1866)
!1869 = !DILocation(line: 518, column: 31, scope: !1866)
!1870 = !DILocation(line: 518, column: 33, scope: !1866)
!1871 = !DILocation(line: 518, column: 32, scope: !1866)
!1872 = !DILocation(line: 518, column: 23, scope: !1866)
!1873 = !DILocation(line: 518, column: 28, scope: !1866)
!1874 = !DILocation(line: 518, column: 25, scope: !1866)
!1875 = !DILocation(line: 518, column: 23, scope: !1876)
!1876 = !DILexicalBlockFile(scope: !1866, file: !1, discriminator: 1)
!1877 = !DILocation(line: 519, column: 9, scope: !1866)
!1878 = !DILocation(line: 517, column: 36, scope: !1879)
!1879 = !DILexicalBlockFile(scope: !1861, file: !1, discriminator: 2)
!1880 = !DILocation(line: 517, column: 9, scope: !1879)
!1881 = distinct !{!1881, !1882}
!1882 = !DILocation(line: 517, column: 9, scope: !1857)
!1883 = !DILocation(line: 520, column: 7, scope: !1857)
!1884 = !DILocation(line: 516, column: 28, scope: !1885)
!1885 = !DILexicalBlockFile(scope: !1851, file: !1, discriminator: 2)
!1886 = !DILocation(line: 516, column: 7, scope: !1885)
!1887 = distinct !{!1887, !1888}
!1888 = !DILocation(line: 516, column: 7, scope: !1847)
!1889 = !DILocation(line: 522, column: 13, scope: !1847)
!1890 = !DILocation(line: 522, column: 17, scope: !1847)
!1891 = !DILocation(line: 522, column: 24, scope: !1847)
!1892 = !DILocation(line: 522, column: 28, scope: !1847)
!1893 = !DILocation(line: 522, column: 33, scope: !1894)
!1894 = !DILexicalBlockFile(scope: !1847, file: !1, discriminator: 1)
!1895 = !DILocation(line: 522, column: 33, scope: !1847)
!1896 = !DILocation(line: 522, column: 7, scope: !1897)
!1897 = !DILexicalBlockFile(scope: !1847, file: !1, discriminator: 2)
!1898 = !DILocation(line: 524, column: 14, scope: !1899)
!1899 = distinct !DILexicalBlock(scope: !1847, file: !1, line: 524, column: 7)
!1900 = !DILocation(line: 524, column: 12, scope: !1899)
!1901 = !DILocation(line: 524, column: 19, scope: !1902)
!1902 = !DILexicalBlockFile(scope: !1903, file: !1, discriminator: 1)
!1903 = distinct !DILexicalBlock(scope: !1899, file: !1, line: 524, column: 7)
!1904 = !DILocation(line: 524, column: 23, scope: !1902)
!1905 = !DILocation(line: 524, column: 21, scope: !1902)
!1906 = !DILocation(line: 524, column: 7, scope: !1902)
!1907 = !DILocation(line: 525, column: 16, scope: !1908)
!1908 = distinct !DILexicalBlock(scope: !1909, file: !1, line: 525, column: 9)
!1909 = distinct !DILexicalBlock(scope: !1903, file: !1, line: 524, column: 32)
!1910 = !DILocation(line: 525, column: 14, scope: !1908)
!1911 = !DILocation(line: 525, column: 21, scope: !1912)
!1912 = !DILexicalBlockFile(scope: !1913, file: !1, discriminator: 1)
!1913 = distinct !DILexicalBlock(scope: !1908, file: !1, line: 525, column: 9)
!1914 = !DILocation(line: 525, column: 25, scope: !1912)
!1915 = !DILocation(line: 525, column: 23, scope: !1912)
!1916 = !DILocation(line: 525, column: 9, scope: !1912)
!1917 = !DILocation(line: 526, column: 22, scope: !1918)
!1918 = distinct !DILexicalBlock(scope: !1913, file: !1, line: 525, column: 40)
!1919 = !DILocation(line: 526, column: 24, scope: !1918)
!1920 = !DILocation(line: 526, column: 23, scope: !1918)
!1921 = !DILocation(line: 526, column: 11, scope: !1918)
!1922 = !DILocation(line: 526, column: 19, scope: !1918)
!1923 = !DILocation(line: 526, column: 16, scope: !1918)
!1924 = !DILocation(line: 526, column: 37, scope: !1918)
!1925 = !DILocation(line: 526, column: 30, scope: !1918)
!1926 = !DILocation(line: 526, column: 34, scope: !1918)
!1927 = !DILocation(line: 526, column: 30, scope: !1928)
!1928 = !DILexicalBlockFile(scope: !1918, file: !1, discriminator: 1)
!1929 = !DILocation(line: 527, column: 9, scope: !1918)
!1930 = !DILocation(line: 525, column: 36, scope: !1931)
!1931 = !DILexicalBlockFile(scope: !1913, file: !1, discriminator: 2)
!1932 = !DILocation(line: 525, column: 9, scope: !1931)
!1933 = distinct !{!1933, !1934}
!1934 = !DILocation(line: 525, column: 9, scope: !1909)
!1935 = !DILocation(line: 528, column: 7, scope: !1909)
!1936 = !DILocation(line: 524, column: 28, scope: !1937)
!1937 = !DILexicalBlockFile(scope: !1903, file: !1, discriminator: 2)
!1938 = !DILocation(line: 524, column: 7, scope: !1937)
!1939 = distinct !{!1939, !1940}
!1940 = !DILocation(line: 524, column: 7, scope: !1847)
!1941 = !DILocation(line: 529, column: 5, scope: !1847)
!1942 = !DILocation(line: 515, column: 45, scope: !1943)
!1943 = !DILexicalBlockFile(scope: !1839, file: !1, discriminator: 2)
!1944 = !DILocation(line: 515, column: 42, scope: !1943)
!1945 = !DILocation(line: 515, column: 5, scope: !1943)
!1946 = distinct !{!1946, !1947}
!1947 = !DILocation(line: 515, column: 5, scope: !1835)
!1948 = !DILocation(line: 530, column: 3, scope: !1835)
!1949 = !DILocation(line: 513, column: 11, scope: !1783)
!1950 = !DILocation(line: 514, column: 8, scope: !1951)
!1951 = !DILexicalBlockFile(scope: !1783, file: !1, discriminator: 7)
!1952 = !DILocation(line: 0, scope: !1824)
!1953 = !DILocation(line: 513, column: 11, scope: !1809)
!1954 = distinct !{!1954, !1801}
!1955 = !DILocation(line: 513, column: 11, scope: !1819)
!1956 = !DILocation(line: 513, column: 11, scope: !1822)
!1957 = !DILocation(line: 530, column: 3, scope: !1809)
!1958 = distinct !DISubprogram(name: "cfftz", scope: !1, file: !1, line: 575, type: !1959, isLocal: true, isDefinition: true, scopeLine: 577, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !68)
!1959 = !DISubroutineType(types: !1960)
!1960 = !{null, !23, !23, !23, !1961, !1961}
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64, align: 64)
!1962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, align: 64, elements: !1963)
!1963 = !{!18}
!1964 = !DILocalVariable(name: "is", arg: 1, scope: !1958, file: !1, line: 575, type: !23)
!1965 = !DILocation(line: 575, column: 23, scope: !1958)
!1966 = !DILocalVariable(name: "m", arg: 2, scope: !1958, file: !1, line: 575, type: !23)
!1967 = !DILocation(line: 575, column: 31, scope: !1958)
!1968 = !DILocalVariable(name: "n", arg: 3, scope: !1958, file: !1, line: 575, type: !23)
!1969 = !DILocation(line: 575, column: 38, scope: !1958)
!1970 = !DILocalVariable(name: "x", arg: 4, scope: !1958, file: !1, line: 576, type: !1961)
!1971 = !DILocation(line: 576, column: 28, scope: !1958)
!1972 = !DILocalVariable(name: "y", arg: 5, scope: !1958, file: !1, line: 576, type: !1961)
!1973 = !DILocation(line: 576, column: 56, scope: !1958)
!1974 = !DILocation(line: 576, column: 30, scope: !1958)
!1975 = !DILocation(line: 576, column: 33, scope: !1958)
!1976 = !DILocation(line: 576, column: 58, scope: !1958)
!1977 = !DILocation(line: 576, column: 61, scope: !1958)
!1978 = !DILocalVariable(name: "i", scope: !1958, file: !1, line: 578, type: !23)
!1979 = !DILocation(line: 578, column: 7, scope: !1958)
!1980 = !DILocalVariable(name: "j", scope: !1958, file: !1, line: 578, type: !23)
!1981 = !DILocation(line: 578, column: 10, scope: !1958)
!1982 = !DILocalVariable(name: "l", scope: !1958, file: !1, line: 578, type: !23)
!1983 = !DILocation(line: 578, column: 13, scope: !1958)
!1984 = !DILocalVariable(name: "mx", scope: !1958, file: !1, line: 578, type: !23)
!1985 = !DILocation(line: 578, column: 16, scope: !1958)
!1986 = !DILocation(line: 583, column: 19, scope: !1958)
!1987 = !DILocation(line: 583, column: 8, scope: !1958)
!1988 = !DILocation(line: 583, column: 6, scope: !1958)
!1989 = !DILocation(line: 584, column: 8, scope: !1990)
!1990 = distinct !DILexicalBlock(scope: !1958, file: !1, line: 584, column: 7)
!1991 = !DILocation(line: 584, column: 11, scope: !1990)
!1992 = !DILocation(line: 584, column: 16, scope: !1990)
!1993 = !DILocation(line: 584, column: 19, scope: !1994)
!1994 = !DILexicalBlockFile(scope: !1990, file: !1, discriminator: 1)
!1995 = !DILocation(line: 584, column: 22, scope: !1994)
!1996 = !DILocation(line: 584, column: 29, scope: !1994)
!1997 = !DILocation(line: 584, column: 32, scope: !1998)
!1998 = !DILexicalBlockFile(scope: !1990, file: !1, discriminator: 2)
!1999 = !DILocation(line: 584, column: 34, scope: !1998)
!2000 = !DILocation(line: 584, column: 38, scope: !1998)
!2001 = !DILocation(line: 584, column: 41, scope: !2002)
!2002 = !DILexicalBlockFile(scope: !1990, file: !1, discriminator: 3)
!2003 = !DILocation(line: 584, column: 45, scope: !2002)
!2004 = !DILocation(line: 584, column: 43, scope: !2002)
!2005 = !DILocation(line: 584, column: 7, scope: !2002)
!2006 = !DILocation(line: 586, column: 65, scope: !2007)
!2007 = distinct !DILexicalBlock(scope: !1990, file: !1, line: 584, column: 49)
!2008 = !DILocation(line: 586, column: 69, scope: !2007)
!2009 = !DILocation(line: 586, column: 72, scope: !2007)
!2010 = !DILocation(line: 585, column: 5, scope: !2007)
!2011 = !DILocation(line: 587, column: 5, scope: !2007)
!2012 = !DILocation(line: 593, column: 10, scope: !2013)
!2013 = distinct !DILexicalBlock(scope: !1958, file: !1, line: 593, column: 3)
!2014 = !DILocation(line: 593, column: 8, scope: !2013)
!2015 = !DILocation(line: 593, column: 15, scope: !2016)
!2016 = !DILexicalBlockFile(scope: !2017, file: !1, discriminator: 1)
!2017 = distinct !DILexicalBlock(scope: !2013, file: !1, line: 593, column: 3)
!2018 = !DILocation(line: 593, column: 20, scope: !2016)
!2019 = !DILocation(line: 593, column: 17, scope: !2016)
!2020 = !DILocation(line: 593, column: 3, scope: !2016)
!2021 = !DILocation(line: 594, column: 11, scope: !2022)
!2022 = distinct !DILexicalBlock(scope: !2017, file: !1, line: 593, column: 31)
!2023 = !DILocation(line: 594, column: 15, scope: !2022)
!2024 = !DILocation(line: 594, column: 18, scope: !2022)
!2025 = !DILocation(line: 594, column: 21, scope: !2022)
!2026 = !DILocation(line: 594, column: 24, scope: !2022)
!2027 = !DILocation(line: 594, column: 34, scope: !2022)
!2028 = !DILocation(line: 594, column: 50, scope: !2022)
!2029 = !DILocation(line: 594, column: 53, scope: !2022)
!2030 = !DILocation(line: 594, column: 5, scope: !2022)
!2031 = !DILocation(line: 595, column: 9, scope: !2032)
!2032 = distinct !DILexicalBlock(scope: !2022, file: !1, line: 595, column: 9)
!2033 = !DILocation(line: 595, column: 14, scope: !2032)
!2034 = !DILocation(line: 595, column: 11, scope: !2032)
!2035 = !DILocation(line: 595, column: 9, scope: !2022)
!2036 = !DILocation(line: 599, column: 14, scope: !2037)
!2037 = distinct !DILexicalBlock(scope: !2038, file: !1, line: 599, column: 7)
!2038 = distinct !DILexicalBlock(scope: !2032, file: !1, line: 595, column: 17)
!2039 = !DILocation(line: 599, column: 12, scope: !2037)
!2040 = !DILocation(line: 599, column: 19, scope: !2041)
!2041 = !DILexicalBlockFile(scope: !2042, file: !1, discriminator: 1)
!2042 = distinct !DILexicalBlock(scope: !2037, file: !1, line: 599, column: 7)
!2043 = !DILocation(line: 599, column: 23, scope: !2041)
!2044 = !DILocation(line: 599, column: 21, scope: !2041)
!2045 = !DILocation(line: 599, column: 7, scope: !2041)
!2046 = !DILocation(line: 600, column: 16, scope: !2047)
!2047 = distinct !DILexicalBlock(scope: !2048, file: !1, line: 600, column: 9)
!2048 = distinct !DILexicalBlock(scope: !2042, file: !1, line: 599, column: 31)
!2049 = !DILocation(line: 600, column: 14, scope: !2047)
!2050 = !DILocation(line: 600, column: 21, scope: !2051)
!2051 = !DILexicalBlockFile(scope: !2052, file: !1, discriminator: 1)
!2052 = distinct !DILexicalBlock(scope: !2047, file: !1, line: 600, column: 9)
!2053 = !DILocation(line: 600, column: 25, scope: !2051)
!2054 = !DILocation(line: 600, column: 23, scope: !2051)
!2055 = !DILocation(line: 600, column: 9, scope: !2051)
!2056 = !DILocation(line: 601, column: 16, scope: !2057)
!2057 = distinct !DILexicalBlock(scope: !2052, file: !1, line: 600, column: 40)
!2058 = !DILocation(line: 601, column: 11, scope: !2057)
!2059 = !DILocation(line: 601, column: 13, scope: !2057)
!2060 = !DILocation(line: 601, column: 26, scope: !2057)
!2061 = !DILocation(line: 601, column: 21, scope: !2057)
!2062 = !DILocation(line: 601, column: 23, scope: !2057)
!2063 = !DILocation(line: 602, column: 9, scope: !2057)
!2064 = !DILocation(line: 600, column: 36, scope: !2065)
!2065 = !DILexicalBlockFile(scope: !2052, file: !1, discriminator: 2)
!2066 = !DILocation(line: 600, column: 9, scope: !2065)
!2067 = distinct !{!2067, !2068}
!2068 = !DILocation(line: 600, column: 9, scope: !2048)
!2069 = !DILocation(line: 603, column: 7, scope: !2048)
!2070 = !DILocation(line: 599, column: 27, scope: !2071)
!2071 = !DILexicalBlockFile(scope: !2042, file: !1, discriminator: 2)
!2072 = !DILocation(line: 599, column: 7, scope: !2071)
!2073 = distinct !{!2073, !2074}
!2074 = !DILocation(line: 599, column: 7, scope: !2038)
!2075 = !DILocation(line: 604, column: 7, scope: !2038)
!2076 = !DILocation(line: 606, column: 11, scope: !2022)
!2077 = !DILocation(line: 606, column: 15, scope: !2022)
!2078 = !DILocation(line: 606, column: 17, scope: !2022)
!2079 = !DILocation(line: 606, column: 22, scope: !2022)
!2080 = !DILocation(line: 606, column: 25, scope: !2022)
!2081 = !DILocation(line: 606, column: 28, scope: !2022)
!2082 = !DILocation(line: 606, column: 38, scope: !2022)
!2083 = !DILocation(line: 606, column: 54, scope: !2022)
!2084 = !DILocation(line: 606, column: 57, scope: !2022)
!2085 = !DILocation(line: 606, column: 5, scope: !2022)
!2086 = !DILocation(line: 607, column: 3, scope: !2022)
!2087 = !DILocation(line: 593, column: 25, scope: !2088)
!2088 = !DILexicalBlockFile(scope: !2017, file: !1, discriminator: 2)
!2089 = !DILocation(line: 593, column: 3, scope: !2088)
!2090 = distinct !{!2090, !2091}
!2091 = !DILocation(line: 593, column: 3, scope: !1958)
!2092 = !DILocation(line: 608, column: 1, scope: !1958)
!2093 = distinct !DISubprogram(name: "fftz2", scope: !1, file: !1, line: 614, type: !2094, isLocal: true, isDefinition: true, scopeLine: 616, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !68)
!2094 = !DISubroutineType(types: !2095)
!2095 = !{null, !23, !23, !23, !23, !23, !23, !650, !1961, !1961}
!2096 = !DILocalVariable(name: "is", arg: 1, scope: !2093, file: !1, line: 614, type: !23)
!2097 = !DILocation(line: 614, column: 23, scope: !2093)
!2098 = !DILocalVariable(name: "l", arg: 2, scope: !2093, file: !1, line: 614, type: !23)
!2099 = !DILocation(line: 614, column: 31, scope: !2093)
!2100 = !DILocalVariable(name: "m", arg: 3, scope: !2093, file: !1, line: 614, type: !23)
!2101 = !DILocation(line: 614, column: 38, scope: !2093)
!2102 = !DILocalVariable(name: "n", arg: 4, scope: !2093, file: !1, line: 614, type: !23)
!2103 = !DILocation(line: 614, column: 45, scope: !2093)
!2104 = !DILocalVariable(name: "ny", arg: 5, scope: !2093, file: !1, line: 614, type: !23)
!2105 = !DILocation(line: 614, column: 52, scope: !2093)
!2106 = !DILocalVariable(name: "ny1", arg: 6, scope: !2093, file: !1, line: 614, type: !23)
!2107 = !DILocation(line: 614, column: 60, scope: !2093)
!2108 = !DILocalVariable(name: "u", arg: 7, scope: !2093, file: !1, line: 615, type: !650)
!2109 = !DILocation(line: 615, column: 28, scope: !2093)
!2110 = !DILocalVariable(name: "x", arg: 8, scope: !2093, file: !1, line: 615, type: !1961)
!2111 = !DILocation(line: 615, column: 43, scope: !2093)
!2112 = !DILocalVariable(name: "y", arg: 9, scope: !2093, file: !1, line: 615, type: !1961)
!2113 = !DILocation(line: 615, column: 63, scope: !2093)
!2114 = !DILocation(line: 615, column: 30, scope: !2093)
!2115 = !DILocation(line: 615, column: 45, scope: !2093)
!2116 = !DILocation(line: 615, column: 48, scope: !2093)
!2117 = !DILocation(line: 615, column: 65, scope: !2093)
!2118 = !DILocation(line: 615, column: 68, scope: !2093)
!2119 = !DILocalVariable(name: "k", scope: !2093, file: !1, line: 617, type: !23)
!2120 = !DILocation(line: 617, column: 7, scope: !2093)
!2121 = !DILocalVariable(name: "n1", scope: !2093, file: !1, line: 617, type: !23)
!2122 = !DILocation(line: 617, column: 10, scope: !2093)
!2123 = !DILocalVariable(name: "li", scope: !2093, file: !1, line: 617, type: !23)
!2124 = !DILocation(line: 617, column: 14, scope: !2093)
!2125 = !DILocalVariable(name: "lj", scope: !2093, file: !1, line: 617, type: !23)
!2126 = !DILocation(line: 617, column: 18, scope: !2093)
!2127 = !DILocalVariable(name: "lk", scope: !2093, file: !1, line: 617, type: !23)
!2128 = !DILocation(line: 617, column: 22, scope: !2093)
!2129 = !DILocalVariable(name: "ku", scope: !2093, file: !1, line: 617, type: !23)
!2130 = !DILocation(line: 617, column: 26, scope: !2093)
!2131 = !DILocalVariable(name: "i", scope: !2093, file: !1, line: 617, type: !23)
!2132 = !DILocation(line: 617, column: 30, scope: !2093)
!2133 = !DILocalVariable(name: "j", scope: !2093, file: !1, line: 617, type: !23)
!2134 = !DILocation(line: 617, column: 33, scope: !2093)
!2135 = !DILocalVariable(name: "i11", scope: !2093, file: !1, line: 617, type: !23)
!2136 = !DILocation(line: 617, column: 36, scope: !2093)
!2137 = !DILocalVariable(name: "i12", scope: !2093, file: !1, line: 617, type: !23)
!2138 = !DILocation(line: 617, column: 41, scope: !2093)
!2139 = !DILocalVariable(name: "i21", scope: !2093, file: !1, line: 617, type: !23)
!2140 = !DILocation(line: 617, column: 46, scope: !2093)
!2141 = !DILocalVariable(name: "i22", scope: !2093, file: !1, line: 617, type: !23)
!2142 = !DILocation(line: 617, column: 51, scope: !2093)
!2143 = !DILocalVariable(name: "u1", scope: !2093, file: !1, line: 618, type: !12)
!2144 = !DILocation(line: 618, column: 12, scope: !2093)
!2145 = !DILocalVariable(name: "x11", scope: !2093, file: !1, line: 618, type: !12)
!2146 = !DILocation(line: 618, column: 16, scope: !2093)
!2147 = !DILocalVariable(name: "x21", scope: !2093, file: !1, line: 618, type: !12)
!2148 = !DILocation(line: 618, column: 21, scope: !2093)
!2149 = !DILocation(line: 623, column: 8, scope: !2093)
!2150 = !DILocation(line: 623, column: 10, scope: !2093)
!2151 = !DILocation(line: 623, column: 6, scope: !2093)
!2152 = !DILocation(line: 624, column: 14, scope: !2093)
!2153 = !DILocation(line: 624, column: 16, scope: !2093)
!2154 = !DILocation(line: 624, column: 10, scope: !2093)
!2155 = !DILocation(line: 624, column: 6, scope: !2093)
!2156 = !DILocation(line: 625, column: 14, scope: !2093)
!2157 = !DILocation(line: 625, column: 18, scope: !2093)
!2158 = !DILocation(line: 625, column: 16, scope: !2093)
!2159 = !DILocation(line: 625, column: 10, scope: !2093)
!2160 = !DILocation(line: 625, column: 6, scope: !2093)
!2161 = !DILocation(line: 626, column: 12, scope: !2093)
!2162 = !DILocation(line: 626, column: 10, scope: !2093)
!2163 = !DILocation(line: 626, column: 6, scope: !2093)
!2164 = !DILocation(line: 627, column: 8, scope: !2093)
!2165 = !DILocation(line: 627, column: 6, scope: !2093)
!2166 = !DILocation(line: 629, column: 10, scope: !2167)
!2167 = distinct !DILexicalBlock(scope: !2093, file: !1, line: 629, column: 3)
!2168 = !DILocation(line: 629, column: 8, scope: !2167)
!2169 = !DILocation(line: 629, column: 15, scope: !2170)
!2170 = !DILexicalBlockFile(scope: !2171, file: !1, discriminator: 1)
!2171 = distinct !DILexicalBlock(scope: !2167, file: !1, line: 629, column: 3)
!2172 = !DILocation(line: 629, column: 20, scope: !2170)
!2173 = !DILocation(line: 629, column: 23, scope: !2170)
!2174 = !DILocation(line: 629, column: 17, scope: !2170)
!2175 = !DILocation(line: 629, column: 3, scope: !2170)
!2176 = !DILocation(line: 630, column: 11, scope: !2177)
!2177 = distinct !DILexicalBlock(scope: !2171, file: !1, line: 629, column: 33)
!2178 = !DILocation(line: 630, column: 15, scope: !2177)
!2179 = !DILocation(line: 630, column: 13, scope: !2177)
!2180 = !DILocation(line: 630, column: 9, scope: !2177)
!2181 = !DILocation(line: 631, column: 11, scope: !2177)
!2182 = !DILocation(line: 631, column: 17, scope: !2177)
!2183 = !DILocation(line: 631, column: 15, scope: !2177)
!2184 = !DILocation(line: 631, column: 9, scope: !2177)
!2185 = !DILocation(line: 632, column: 11, scope: !2177)
!2186 = !DILocation(line: 632, column: 15, scope: !2177)
!2187 = !DILocation(line: 632, column: 13, scope: !2177)
!2188 = !DILocation(line: 632, column: 9, scope: !2177)
!2189 = !DILocation(line: 633, column: 11, scope: !2177)
!2190 = !DILocation(line: 633, column: 17, scope: !2177)
!2191 = !DILocation(line: 633, column: 15, scope: !2177)
!2192 = !DILocation(line: 633, column: 9, scope: !2177)
!2193 = !DILocation(line: 634, column: 9, scope: !2194)
!2194 = distinct !DILexicalBlock(scope: !2177, file: !1, line: 634, column: 9)
!2195 = !DILocation(line: 634, column: 12, scope: !2194)
!2196 = !DILocation(line: 634, column: 9, scope: !2177)
!2197 = !DILocation(line: 635, column: 14, scope: !2198)
!2198 = distinct !DILexicalBlock(scope: !2194, file: !1, line: 634, column: 18)
!2199 = !DILocation(line: 635, column: 17, scope: !2198)
!2200 = !DILocation(line: 635, column: 16, scope: !2198)
!2201 = !DILocation(line: 635, column: 12, scope: !2198)
!2202 = !DILocation(line: 636, column: 5, scope: !2198)
!2203 = !DILocation(line: 637, column: 12, scope: !2204)
!2204 = distinct !DILexicalBlock(scope: !2194, file: !1, line: 636, column: 12)
!2205 = !DILocation(line: 643, column: 12, scope: !2206)
!2206 = distinct !DILexicalBlock(scope: !2177, file: !1, line: 643, column: 5)
!2207 = !DILocation(line: 643, column: 10, scope: !2206)
!2208 = !DILocation(line: 643, column: 17, scope: !2209)
!2209 = !DILexicalBlockFile(scope: !2210, file: !1, discriminator: 1)
!2210 = distinct !DILexicalBlock(scope: !2206, file: !1, line: 643, column: 5)
!2211 = !DILocation(line: 643, column: 22, scope: !2209)
!2212 = !DILocation(line: 643, column: 25, scope: !2209)
!2213 = !DILocation(line: 643, column: 19, scope: !2209)
!2214 = !DILocation(line: 643, column: 5, scope: !2209)
!2215 = !DILocation(line: 644, column: 14, scope: !2216)
!2216 = distinct !DILexicalBlock(scope: !2217, file: !1, line: 644, column: 7)
!2217 = distinct !DILexicalBlock(scope: !2210, file: !1, line: 643, column: 35)
!2218 = !DILocation(line: 644, column: 12, scope: !2216)
!2219 = !DILocation(line: 644, column: 19, scope: !2220)
!2220 = !DILexicalBlockFile(scope: !2221, file: !1, discriminator: 1)
!2221 = distinct !DILexicalBlock(scope: !2216, file: !1, line: 644, column: 7)
!2222 = !DILocation(line: 644, column: 23, scope: !2220)
!2223 = !DILocation(line: 644, column: 21, scope: !2220)
!2224 = !DILocation(line: 644, column: 7, scope: !2220)
!2225 = !DILocation(line: 645, column: 24, scope: !2226)
!2226 = distinct !DILexicalBlock(scope: !2221, file: !1, line: 644, column: 32)
!2227 = !DILocation(line: 645, column: 15, scope: !2226)
!2228 = !DILocation(line: 645, column: 17, scope: !2226)
!2229 = !DILocation(line: 645, column: 21, scope: !2226)
!2230 = !DILocation(line: 645, column: 20, scope: !2226)
!2231 = !DILocation(line: 646, column: 24, scope: !2226)
!2232 = !DILocation(line: 646, column: 15, scope: !2226)
!2233 = !DILocation(line: 646, column: 17, scope: !2226)
!2234 = !DILocation(line: 646, column: 21, scope: !2226)
!2235 = !DILocation(line: 646, column: 20, scope: !2226)
!2236 = !DILocation(line: 647, column: 18, scope: !2226)
!2237 = !DILocation(line: 647, column: 9, scope: !2226)
!2238 = !DILocation(line: 647, column: 11, scope: !2226)
!2239 = !DILocation(line: 647, column: 15, scope: !2226)
!2240 = !DILocation(line: 647, column: 14, scope: !2226)
!2241 = !DILocation(line: 647, column: 23, scope: !2226)
!2242 = !DILocation(line: 648, column: 18, scope: !2226)
!2243 = !DILocation(line: 648, column: 9, scope: !2226)
!2244 = !DILocation(line: 648, column: 11, scope: !2226)
!2245 = !DILocation(line: 648, column: 15, scope: !2226)
!2246 = !DILocation(line: 648, column: 14, scope: !2226)
!2247 = !DILocation(line: 648, column: 23, scope: !2226)
!2248 = !DILocation(line: 649, column: 7, scope: !2226)
!2249 = !DILocation(line: 644, column: 28, scope: !2250)
!2250 = !DILexicalBlockFile(scope: !2221, file: !1, discriminator: 2)
!2251 = !DILocation(line: 644, column: 7, scope: !2250)
!2252 = distinct !{!2252, !2253}
!2253 = !DILocation(line: 644, column: 7, scope: !2217)
!2254 = !DILocation(line: 650, column: 5, scope: !2217)
!2255 = !DILocation(line: 643, column: 31, scope: !2256)
!2256 = !DILexicalBlockFile(scope: !2210, file: !1, discriminator: 2)
!2257 = !DILocation(line: 643, column: 5, scope: !2256)
!2258 = distinct !{!2258, !2259}
!2259 = !DILocation(line: 643, column: 5, scope: !2177)
!2260 = !DILocation(line: 651, column: 3, scope: !2177)
!2261 = !DILocation(line: 629, column: 29, scope: !2262)
!2262 = !DILexicalBlockFile(scope: !2171, file: !1, discriminator: 2)
!2263 = !DILocation(line: 629, column: 3, scope: !2262)
!2264 = distinct !{!2264, !2265}
!2265 = !DILocation(line: 629, column: 3, scope: !2093)
!2266 = !DILocation(line: 652, column: 1, scope: !2093)
!2267 = distinct !DISubprogram(name: ".omp_outlined..29", scope: !1, file: !1, line: 480, type: !1784, isLocal: true, isDefinition: true, scopeLine: 481, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !68)
!2268 = !{!"103"}
!2269 = !DILocalVariable(name: ".global_tid.", arg: 1, scope: !2267, type: !1382, flags: DIFlagArtificial | DIFlagObjectPointer)
!2270 = !DILocation(line: 0, scope: !2267)
!2271 = !DILocalVariable(name: ".bound_tid.", arg: 2, scope: !2267, type: !1382, flags: DIFlagArtificial)
!2272 = !DILocalVariable(name: "d3", arg: 3, scope: !2267, type: !1385, flags: DIFlagArtificial)
!2273 = !DILocalVariable(name: "d1", arg: 4, scope: !2267, type: !1385, flags: DIFlagArtificial)
!2274 = !DILocalVariable(name: "d2", arg: 5, scope: !2267, type: !1385, flags: DIFlagArtificial)
!2275 = !DILocalVariable(name: "vla", arg: 6, scope: !2267, type: !347, flags: DIFlagArtificial)
!2276 = !DILocalVariable(name: "vla", arg: 7, scope: !2267, type: !347, flags: DIFlagArtificial)
!2277 = !DILocalVariable(name: "x", arg: 8, scope: !2267, type: !1386, flags: DIFlagArtificial)
!2278 = !DILocalVariable(name: "is", arg: 9, scope: !2267, type: !1385, flags: DIFlagArtificial)
!2279 = !DILocalVariable(name: "logd2", arg: 10, scope: !2267, type: !1385, flags: DIFlagArtificial)
!2280 = !DILocalVariable(name: "vla", arg: 11, scope: !2267, type: !347, flags: DIFlagArtificial)
!2281 = !DILocalVariable(name: "vla", arg: 12, scope: !2267, type: !347, flags: DIFlagArtificial)
!2282 = !DILocalVariable(name: "xout", arg: 13, scope: !2267, type: !1386, flags: DIFlagArtificial)
!2283 = !DILocation(line: 481, column: 3, scope: !2267)
!2284 = !DILocalVariable(name: ".omp.iv", scope: !2267, type: !23, flags: DIFlagArtificial)
!2285 = !DILocalVariable(name: ".capture_expr.", scope: !2267, type: !23, flags: DIFlagArtificial)
!2286 = !DILocation(line: 481, column: 19, scope: !2267)
!2287 = !DILocalVariable(name: "k", scope: !2267, type: !23, flags: DIFlagArtificial)
!2288 = !DILocation(line: 481, column: 23, scope: !2267)
!2289 = !DILocalVariable(name: ".omp.lb", scope: !2267, type: !23, flags: DIFlagArtificial)
!2290 = !DILocation(line: 481, column: 8, scope: !2291)
!2291 = !DILexicalBlockFile(scope: !2267, file: !1, discriminator: 1)
!2292 = !DILocalVariable(name: ".omp.ub", scope: !2267, type: !23, flags: DIFlagArtificial)
!2293 = !DILocation(line: 0, scope: !2291)
!2294 = !DILocalVariable(name: ".omp.stride", scope: !2267, type: !23, flags: DIFlagArtificial)
!2295 = !DILocalVariable(name: ".omp.is_last", scope: !2267, type: !23, flags: DIFlagArtificial)
!2296 = !DILocalVariable(name: "i", scope: !2267, type: !23, flags: DIFlagArtificial)
!2297 = !DILocalVariable(name: "j", scope: !2267, type: !23, flags: DIFlagArtificial)
!2298 = !DILocalVariable(name: "ii", scope: !2267, type: !23, flags: DIFlagArtificial)
!2299 = !DILocation(line: 481, column: 3, scope: !2291)
!2300 = !DILocation(line: 0, scope: !2301)
!2301 = !DILexicalBlockFile(scope: !2267, file: !1, discriminator: 2)
!2302 = !DILocation(line: 481, column: 8, scope: !2301)
!2303 = !DILocation(line: 481, column: 8, scope: !2304)
!2304 = !DILexicalBlockFile(scope: !2267, file: !1, discriminator: 3)
!2305 = !DILocation(line: 481, column: 8, scope: !2306)
!2306 = !DILexicalBlockFile(scope: !2267, file: !1, discriminator: 4)
!2307 = !DILocation(line: 481, column: 3, scope: !2306)
!2308 = !DILocation(line: 481, column: 8, scope: !2309)
!2309 = !DILexicalBlockFile(scope: !2267, file: !1, discriminator: 5)
!2310 = !DILocation(line: 0, scope: !2304)
!2311 = !DILocation(line: 481, column: 3, scope: !2309)
!2312 = !DILocation(line: 481, column: 8, scope: !2313)
!2313 = !DILexicalBlockFile(scope: !2267, file: !1, discriminator: 6)
!2314 = !DILocation(line: 481, column: 23, scope: !2313)
!2315 = !DILocation(line: 482, column: 13, scope: !2316)
!2316 = distinct !DILexicalBlock(scope: !2317, file: !1, line: 482, column: 5)
!2317 = distinct !DILexicalBlock(scope: !2267, file: !1, line: 481, column: 28)
!2318 = !DILocation(line: 482, column: 10, scope: !2316)
!2319 = !DILocation(line: 482, column: 18, scope: !2320)
!2320 = !DILexicalBlockFile(scope: !2321, file: !1, discriminator: 1)
!2321 = distinct !DILexicalBlock(scope: !2316, file: !1, line: 482, column: 5)
!2322 = !DILocation(line: 482, column: 24, scope: !2320)
!2323 = !DILocation(line: 482, column: 29, scope: !2320)
!2324 = !DILocation(line: 482, column: 27, scope: !2320)
!2325 = !DILocation(line: 482, column: 21, scope: !2320)
!2326 = !DILocation(line: 482, column: 5, scope: !2320)
!2327 = !DILocation(line: 483, column: 14, scope: !2328)
!2328 = distinct !DILexicalBlock(scope: !2329, file: !1, line: 483, column: 7)
!2329 = distinct !DILexicalBlock(scope: !2321, file: !1, line: 482, column: 55)
!2330 = !DILocation(line: 483, column: 12, scope: !2328)
!2331 = !DILocation(line: 483, column: 19, scope: !2332)
!2332 = !DILexicalBlockFile(scope: !2333, file: !1, discriminator: 1)
!2333 = distinct !DILexicalBlock(scope: !2328, file: !1, line: 483, column: 7)
!2334 = !DILocation(line: 483, column: 23, scope: !2332)
!2335 = !DILocation(line: 483, column: 21, scope: !2332)
!2336 = !DILocation(line: 483, column: 7, scope: !2332)
!2337 = !DILocation(line: 484, column: 16, scope: !2338)
!2338 = distinct !DILexicalBlock(scope: !2339, file: !1, line: 484, column: 9)
!2339 = distinct !DILexicalBlock(scope: !2333, file: !1, line: 483, column: 32)
!2340 = !DILocation(line: 484, column: 14, scope: !2338)
!2341 = !DILocation(line: 484, column: 21, scope: !2342)
!2342 = !DILexicalBlockFile(scope: !2343, file: !1, discriminator: 1)
!2343 = distinct !DILexicalBlock(scope: !2338, file: !1, line: 484, column: 9)
!2344 = !DILocation(line: 484, column: 25, scope: !2342)
!2345 = !DILocation(line: 484, column: 23, scope: !2342)
!2346 = !DILocation(line: 484, column: 9, scope: !2342)
!2347 = !DILocation(line: 485, column: 18, scope: !2348)
!2348 = distinct !DILexicalBlock(scope: !2343, file: !1, line: 484, column: 40)
!2349 = !DILocation(line: 485, column: 11, scope: !2348)
!2350 = !DILocation(line: 485, column: 15, scope: !2348)
!2351 = !DILocation(line: 485, column: 31, scope: !2348)
!2352 = !DILocation(line: 485, column: 33, scope: !2348)
!2353 = !DILocation(line: 485, column: 32, scope: !2348)
!2354 = !DILocation(line: 485, column: 23, scope: !2348)
!2355 = !DILocation(line: 485, column: 28, scope: !2348)
!2356 = !DILocation(line: 485, column: 25, scope: !2348)
!2357 = !DILocation(line: 485, column: 23, scope: !2358)
!2358 = !DILexicalBlockFile(scope: !2348, file: !1, discriminator: 1)
!2359 = !DILocation(line: 486, column: 9, scope: !2348)
!2360 = !DILocation(line: 484, column: 36, scope: !2361)
!2361 = !DILexicalBlockFile(scope: !2343, file: !1, discriminator: 2)
!2362 = !DILocation(line: 484, column: 9, scope: !2361)
!2363 = distinct !{!2363, !2364}
!2364 = !DILocation(line: 484, column: 9, scope: !2339)
!2365 = !DILocation(line: 487, column: 7, scope: !2339)
!2366 = !DILocation(line: 483, column: 28, scope: !2367)
!2367 = !DILexicalBlockFile(scope: !2333, file: !1, discriminator: 2)
!2368 = !DILocation(line: 483, column: 7, scope: !2367)
!2369 = distinct !{!2369, !2370}
!2370 = !DILocation(line: 483, column: 7, scope: !2329)
!2371 = !DILocation(line: 489, column: 13, scope: !2329)
!2372 = !DILocation(line: 489, column: 17, scope: !2329)
!2373 = !DILocation(line: 489, column: 24, scope: !2329)
!2374 = !DILocation(line: 489, column: 28, scope: !2329)
!2375 = !DILocation(line: 489, column: 33, scope: !2376)
!2376 = !DILexicalBlockFile(scope: !2329, file: !1, discriminator: 1)
!2377 = !DILocation(line: 489, column: 33, scope: !2329)
!2378 = !DILocation(line: 489, column: 7, scope: !2379)
!2379 = !DILexicalBlockFile(scope: !2329, file: !1, discriminator: 2)
!2380 = !DILocation(line: 491, column: 14, scope: !2381)
!2381 = distinct !DILexicalBlock(scope: !2329, file: !1, line: 491, column: 7)
!2382 = !DILocation(line: 491, column: 12, scope: !2381)
!2383 = !DILocation(line: 491, column: 19, scope: !2384)
!2384 = !DILexicalBlockFile(scope: !2385, file: !1, discriminator: 1)
!2385 = distinct !DILexicalBlock(scope: !2381, file: !1, line: 491, column: 7)
!2386 = !DILocation(line: 491, column: 23, scope: !2384)
!2387 = !DILocation(line: 491, column: 21, scope: !2384)
!2388 = !DILocation(line: 491, column: 7, scope: !2384)
!2389 = !DILocation(line: 492, column: 16, scope: !2390)
!2390 = distinct !DILexicalBlock(scope: !2391, file: !1, line: 492, column: 9)
!2391 = distinct !DILexicalBlock(scope: !2385, file: !1, line: 491, column: 32)
!2392 = !DILocation(line: 492, column: 14, scope: !2390)
!2393 = !DILocation(line: 492, column: 21, scope: !2394)
!2394 = !DILexicalBlockFile(scope: !2395, file: !1, discriminator: 1)
!2395 = distinct !DILexicalBlock(scope: !2390, file: !1, line: 492, column: 9)
!2396 = !DILocation(line: 492, column: 25, scope: !2394)
!2397 = !DILocation(line: 492, column: 23, scope: !2394)
!2398 = !DILocation(line: 492, column: 9, scope: !2394)
!2399 = !DILocation(line: 493, column: 22, scope: !2400)
!2400 = distinct !DILexicalBlock(scope: !2395, file: !1, line: 492, column: 40)
!2401 = !DILocation(line: 493, column: 24, scope: !2400)
!2402 = !DILocation(line: 493, column: 23, scope: !2400)
!2403 = !DILocation(line: 493, column: 11, scope: !2400)
!2404 = !DILocation(line: 493, column: 19, scope: !2400)
!2405 = !DILocation(line: 493, column: 16, scope: !2400)
!2406 = !DILocation(line: 493, column: 37, scope: !2400)
!2407 = !DILocation(line: 493, column: 30, scope: !2400)
!2408 = !DILocation(line: 493, column: 34, scope: !2400)
!2409 = !DILocation(line: 493, column: 30, scope: !2410)
!2410 = !DILexicalBlockFile(scope: !2400, file: !1, discriminator: 1)
!2411 = !DILocation(line: 494, column: 9, scope: !2400)
!2412 = !DILocation(line: 492, column: 36, scope: !2413)
!2413 = !DILexicalBlockFile(scope: !2395, file: !1, discriminator: 2)
!2414 = !DILocation(line: 492, column: 9, scope: !2413)
!2415 = distinct !{!2415, !2416}
!2416 = !DILocation(line: 492, column: 9, scope: !2391)
!2417 = !DILocation(line: 495, column: 7, scope: !2391)
!2418 = !DILocation(line: 491, column: 28, scope: !2419)
!2419 = !DILexicalBlockFile(scope: !2385, file: !1, discriminator: 2)
!2420 = !DILocation(line: 491, column: 7, scope: !2419)
!2421 = distinct !{!2421, !2422}
!2422 = !DILocation(line: 491, column: 7, scope: !2329)
!2423 = !DILocation(line: 496, column: 5, scope: !2329)
!2424 = !DILocation(line: 482, column: 45, scope: !2425)
!2425 = !DILexicalBlockFile(scope: !2321, file: !1, discriminator: 2)
!2426 = !DILocation(line: 482, column: 42, scope: !2425)
!2427 = !DILocation(line: 482, column: 5, scope: !2425)
!2428 = distinct !{!2428, !2429}
!2429 = !DILocation(line: 482, column: 5, scope: !2317)
!2430 = !DILocation(line: 497, column: 3, scope: !2317)
!2431 = !DILocation(line: 480, column: 11, scope: !2267)
!2432 = !DILocation(line: 481, column: 8, scope: !2433)
!2433 = !DILexicalBlockFile(scope: !2267, file: !1, discriminator: 7)
!2434 = !DILocation(line: 0, scope: !2306)
!2435 = !DILocation(line: 480, column: 11, scope: !2291)
!2436 = distinct !{!2436, !2283}
!2437 = !DILocation(line: 480, column: 11, scope: !2301)
!2438 = !DILocation(line: 480, column: 11, scope: !2304)
!2439 = !DILocation(line: 497, column: 3, scope: !2291)
!2440 = distinct !DISubprogram(name: ".omp_outlined..27", scope: !1, file: !1, line: 447, type: !1784, isLocal: true, isDefinition: true, scopeLine: 448, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !68)
!2441 = !{!"104"}
!2442 = !DILocalVariable(name: ".global_tid.", arg: 1, scope: !2440, type: !1382, flags: DIFlagArtificial | DIFlagObjectPointer)
!2443 = !DILocation(line: 0, scope: !2440)
!2444 = !DILocalVariable(name: ".bound_tid.", arg: 2, scope: !2440, type: !1382, flags: DIFlagArtificial)
!2445 = !DILocalVariable(name: "d3", arg: 3, scope: !2440, type: !1385, flags: DIFlagArtificial)
!2446 = !DILocalVariable(name: "d2", arg: 4, scope: !2440, type: !1385, flags: DIFlagArtificial)
!2447 = !DILocalVariable(name: "d1", arg: 5, scope: !2440, type: !1385, flags: DIFlagArtificial)
!2448 = !DILocalVariable(name: "vla", arg: 6, scope: !2440, type: !347, flags: DIFlagArtificial)
!2449 = !DILocalVariable(name: "vla", arg: 7, scope: !2440, type: !347, flags: DIFlagArtificial)
!2450 = !DILocalVariable(name: "x", arg: 8, scope: !2440, type: !1386, flags: DIFlagArtificial)
!2451 = !DILocalVariable(name: "is", arg: 9, scope: !2440, type: !1385, flags: DIFlagArtificial)
!2452 = !DILocalVariable(name: "logd1", arg: 10, scope: !2440, type: !1385, flags: DIFlagArtificial)
!2453 = !DILocalVariable(name: "vla", arg: 11, scope: !2440, type: !347, flags: DIFlagArtificial)
!2454 = !DILocalVariable(name: "vla", arg: 12, scope: !2440, type: !347, flags: DIFlagArtificial)
!2455 = !DILocalVariable(name: "xout", arg: 13, scope: !2440, type: !1386, flags: DIFlagArtificial)
!2456 = !DILocation(line: 448, column: 3, scope: !2440)
!2457 = !DILocalVariable(name: ".omp.iv", scope: !2440, type: !23, flags: DIFlagArtificial)
!2458 = !DILocalVariable(name: ".capture_expr.", scope: !2440, type: !23, flags: DIFlagArtificial)
!2459 = !DILocation(line: 448, column: 19, scope: !2440)
!2460 = !DILocalVariable(name: "k", scope: !2440, type: !23, flags: DIFlagArtificial)
!2461 = !DILocation(line: 448, column: 23, scope: !2440)
!2462 = !DILocalVariable(name: ".omp.lb", scope: !2440, type: !23, flags: DIFlagArtificial)
!2463 = !DILocation(line: 448, column: 8, scope: !2464)
!2464 = !DILexicalBlockFile(scope: !2440, file: !1, discriminator: 1)
!2465 = !DILocalVariable(name: ".omp.ub", scope: !2440, type: !23, flags: DIFlagArtificial)
!2466 = !DILocation(line: 0, scope: !2464)
!2467 = !DILocalVariable(name: ".omp.stride", scope: !2440, type: !23, flags: DIFlagArtificial)
!2468 = !DILocalVariable(name: ".omp.is_last", scope: !2440, type: !23, flags: DIFlagArtificial)
!2469 = !DILocalVariable(name: "i", scope: !2440, type: !23, flags: DIFlagArtificial)
!2470 = !DILocalVariable(name: "j", scope: !2440, type: !23, flags: DIFlagArtificial)
!2471 = !DILocalVariable(name: "jj", scope: !2440, type: !23, flags: DIFlagArtificial)
!2472 = !DILocation(line: 448, column: 3, scope: !2464)
!2473 = !DILocation(line: 0, scope: !2474)
!2474 = !DILexicalBlockFile(scope: !2440, file: !1, discriminator: 2)
!2475 = !DILocation(line: 448, column: 8, scope: !2474)
!2476 = !DILocation(line: 448, column: 8, scope: !2477)
!2477 = !DILexicalBlockFile(scope: !2440, file: !1, discriminator: 3)
!2478 = !DILocation(line: 448, column: 8, scope: !2479)
!2479 = !DILexicalBlockFile(scope: !2440, file: !1, discriminator: 4)
!2480 = !DILocation(line: 448, column: 3, scope: !2479)
!2481 = !DILocation(line: 448, column: 8, scope: !2482)
!2482 = !DILexicalBlockFile(scope: !2440, file: !1, discriminator: 5)
!2483 = !DILocation(line: 0, scope: !2477)
!2484 = !DILocation(line: 448, column: 3, scope: !2482)
!2485 = !DILocation(line: 448, column: 8, scope: !2486)
!2486 = !DILexicalBlockFile(scope: !2440, file: !1, discriminator: 6)
!2487 = !DILocation(line: 448, column: 23, scope: !2486)
!2488 = !DILocation(line: 449, column: 13, scope: !2489)
!2489 = distinct !DILexicalBlock(scope: !2490, file: !1, line: 449, column: 5)
!2490 = distinct !DILexicalBlock(scope: !2440, file: !1, line: 448, column: 28)
!2491 = !DILocation(line: 449, column: 10, scope: !2489)
!2492 = !DILocation(line: 449, column: 18, scope: !2493)
!2493 = !DILexicalBlockFile(scope: !2494, file: !1, discriminator: 1)
!2494 = distinct !DILexicalBlock(scope: !2489, file: !1, line: 449, column: 5)
!2495 = !DILocation(line: 449, column: 24, scope: !2493)
!2496 = !DILocation(line: 449, column: 29, scope: !2493)
!2497 = !DILocation(line: 449, column: 27, scope: !2493)
!2498 = !DILocation(line: 449, column: 21, scope: !2493)
!2499 = !DILocation(line: 449, column: 5, scope: !2493)
!2500 = !DILocation(line: 450, column: 14, scope: !2501)
!2501 = distinct !DILexicalBlock(scope: !2502, file: !1, line: 450, column: 7)
!2502 = distinct !DILexicalBlock(scope: !2494, file: !1, line: 449, column: 55)
!2503 = !DILocation(line: 450, column: 12, scope: !2501)
!2504 = !DILocation(line: 450, column: 19, scope: !2505)
!2505 = !DILexicalBlockFile(scope: !2506, file: !1, discriminator: 1)
!2506 = distinct !DILexicalBlock(scope: !2501, file: !1, line: 450, column: 7)
!2507 = !DILocation(line: 450, column: 23, scope: !2505)
!2508 = !DILocation(line: 450, column: 21, scope: !2505)
!2509 = !DILocation(line: 450, column: 7, scope: !2505)
!2510 = !DILocation(line: 451, column: 16, scope: !2511)
!2511 = distinct !DILexicalBlock(scope: !2512, file: !1, line: 451, column: 9)
!2512 = distinct !DILexicalBlock(scope: !2506, file: !1, line: 450, column: 38)
!2513 = !DILocation(line: 451, column: 14, scope: !2511)
!2514 = !DILocation(line: 451, column: 21, scope: !2515)
!2515 = !DILexicalBlockFile(scope: !2516, file: !1, discriminator: 1)
!2516 = distinct !DILexicalBlock(scope: !2511, file: !1, line: 451, column: 9)
!2517 = !DILocation(line: 451, column: 25, scope: !2515)
!2518 = !DILocation(line: 451, column: 23, scope: !2515)
!2519 = !DILocation(line: 451, column: 9, scope: !2515)
!2520 = !DILocation(line: 452, column: 18, scope: !2521)
!2521 = distinct !DILexicalBlock(scope: !2516, file: !1, line: 451, column: 34)
!2522 = !DILocation(line: 452, column: 11, scope: !2521)
!2523 = !DILocation(line: 452, column: 15, scope: !2521)
!2524 = !DILocation(line: 452, column: 34, scope: !2521)
!2525 = !DILocation(line: 452, column: 23, scope: !2521)
!2526 = !DILocation(line: 452, column: 28, scope: !2521)
!2527 = !DILocation(line: 452, column: 30, scope: !2521)
!2528 = !DILocation(line: 452, column: 29, scope: !2521)
!2529 = !DILocation(line: 452, column: 25, scope: !2521)
!2530 = !DILocation(line: 452, column: 23, scope: !2531)
!2531 = !DILexicalBlockFile(scope: !2521, file: !1, discriminator: 1)
!2532 = !DILocation(line: 453, column: 9, scope: !2521)
!2533 = !DILocation(line: 451, column: 30, scope: !2534)
!2534 = !DILexicalBlockFile(scope: !2516, file: !1, discriminator: 2)
!2535 = !DILocation(line: 451, column: 9, scope: !2534)
!2536 = distinct !{!2536, !2537}
!2537 = !DILocation(line: 451, column: 9, scope: !2512)
!2538 = !DILocation(line: 454, column: 7, scope: !2512)
!2539 = !DILocation(line: 450, column: 34, scope: !2540)
!2540 = !DILexicalBlockFile(scope: !2506, file: !1, discriminator: 2)
!2541 = !DILocation(line: 450, column: 7, scope: !2540)
!2542 = distinct !{!2542, !2543}
!2543 = !DILocation(line: 450, column: 7, scope: !2502)
!2544 = !DILocation(line: 456, column: 13, scope: !2502)
!2545 = !DILocation(line: 456, column: 17, scope: !2502)
!2546 = !DILocation(line: 456, column: 24, scope: !2502)
!2547 = !DILocation(line: 456, column: 28, scope: !2502)
!2548 = !DILocation(line: 456, column: 33, scope: !2549)
!2549 = !DILexicalBlockFile(scope: !2502, file: !1, discriminator: 1)
!2550 = !DILocation(line: 456, column: 33, scope: !2502)
!2551 = !DILocation(line: 456, column: 7, scope: !2552)
!2552 = !DILexicalBlockFile(scope: !2502, file: !1, discriminator: 2)
!2553 = !DILocation(line: 458, column: 14, scope: !2554)
!2554 = distinct !DILexicalBlock(scope: !2502, file: !1, line: 458, column: 7)
!2555 = !DILocation(line: 458, column: 12, scope: !2554)
!2556 = !DILocation(line: 458, column: 19, scope: !2557)
!2557 = !DILexicalBlockFile(scope: !2558, file: !1, discriminator: 1)
!2558 = distinct !DILexicalBlock(scope: !2554, file: !1, line: 458, column: 7)
!2559 = !DILocation(line: 458, column: 23, scope: !2557)
!2560 = !DILocation(line: 458, column: 21, scope: !2557)
!2561 = !DILocation(line: 458, column: 7, scope: !2557)
!2562 = !DILocation(line: 459, column: 16, scope: !2563)
!2563 = distinct !DILexicalBlock(scope: !2564, file: !1, line: 459, column: 9)
!2564 = distinct !DILexicalBlock(scope: !2558, file: !1, line: 458, column: 38)
!2565 = !DILocation(line: 459, column: 14, scope: !2563)
!2566 = !DILocation(line: 459, column: 21, scope: !2567)
!2567 = !DILexicalBlockFile(scope: !2568, file: !1, discriminator: 1)
!2568 = distinct !DILexicalBlock(scope: !2563, file: !1, line: 459, column: 9)
!2569 = !DILocation(line: 459, column: 25, scope: !2567)
!2570 = !DILocation(line: 459, column: 23, scope: !2567)
!2571 = !DILocation(line: 459, column: 9, scope: !2567)
!2572 = !DILocation(line: 460, column: 25, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !2568, file: !1, line: 459, column: 34)
!2574 = !DILocation(line: 460, column: 11, scope: !2573)
!2575 = !DILocation(line: 460, column: 19, scope: !2573)
!2576 = !DILocation(line: 460, column: 21, scope: !2573)
!2577 = !DILocation(line: 460, column: 20, scope: !2573)
!2578 = !DILocation(line: 460, column: 16, scope: !2573)
!2579 = !DILocation(line: 460, column: 37, scope: !2573)
!2580 = !DILocation(line: 460, column: 30, scope: !2573)
!2581 = !DILocation(line: 460, column: 34, scope: !2573)
!2582 = !DILocation(line: 460, column: 30, scope: !2583)
!2583 = !DILexicalBlockFile(scope: !2573, file: !1, discriminator: 1)
!2584 = !DILocation(line: 461, column: 9, scope: !2573)
!2585 = !DILocation(line: 459, column: 30, scope: !2586)
!2586 = !DILexicalBlockFile(scope: !2568, file: !1, discriminator: 2)
!2587 = !DILocation(line: 459, column: 9, scope: !2586)
!2588 = distinct !{!2588, !2589}
!2589 = !DILocation(line: 459, column: 9, scope: !2564)
!2590 = !DILocation(line: 462, column: 7, scope: !2564)
!2591 = !DILocation(line: 458, column: 34, scope: !2592)
!2592 = !DILexicalBlockFile(scope: !2558, file: !1, discriminator: 2)
!2593 = !DILocation(line: 458, column: 7, scope: !2592)
!2594 = distinct !{!2594, !2595}
!2595 = !DILocation(line: 458, column: 7, scope: !2502)
!2596 = !DILocation(line: 463, column: 5, scope: !2502)
!2597 = !DILocation(line: 449, column: 45, scope: !2598)
!2598 = !DILexicalBlockFile(scope: !2494, file: !1, discriminator: 2)
!2599 = !DILocation(line: 449, column: 42, scope: !2598)
!2600 = !DILocation(line: 449, column: 5, scope: !2598)
!2601 = distinct !{!2601, !2602}
!2602 = !DILocation(line: 449, column: 5, scope: !2490)
!2603 = !DILocation(line: 464, column: 3, scope: !2490)
!2604 = !DILocation(line: 447, column: 11, scope: !2440)
!2605 = !DILocation(line: 448, column: 8, scope: !2606)
!2606 = !DILexicalBlockFile(scope: !2440, file: !1, discriminator: 7)
!2607 = !DILocation(line: 0, scope: !2479)
!2608 = !DILocation(line: 447, column: 11, scope: !2464)
!2609 = distinct !{!2609, !2456}
!2610 = !DILocation(line: 447, column: 11, scope: !2474)
!2611 = !DILocation(line: 447, column: 11, scope: !2477)
!2612 = !DILocation(line: 464, column: 3, scope: !2464)
!2613 = distinct !DISubprogram(name: "ipow46", scope: !1, file: !1, line: 276, type: !2614, isLocal: true, isDefinition: true, scopeLine: 277, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !68)
!2614 = !DISubroutineType(types: !2615)
!2615 = !{!9, !9, !23}
!2616 = !DILocalVariable(name: "a", arg: 1, scope: !2613, file: !1, line: 276, type: !9)
!2617 = !DILocation(line: 276, column: 29, scope: !2613)
!2618 = !DILocalVariable(name: "exponent", arg: 2, scope: !2613, file: !1, line: 276, type: !23)
!2619 = !DILocation(line: 276, column: 36, scope: !2613)
!2620 = !DILocalVariable(name: "result", scope: !2613, file: !1, line: 278, type: !9)
!2621 = !DILocation(line: 278, column: 10, scope: !2613)
!2622 = !DILocalVariable(name: "dummy", scope: !2613, file: !1, line: 278, type: !9)
!2623 = !DILocation(line: 278, column: 18, scope: !2613)
!2624 = !DILocalVariable(name: "q", scope: !2613, file: !1, line: 278, type: !9)
!2625 = !DILocation(line: 278, column: 25, scope: !2613)
!2626 = !DILocalVariable(name: "r", scope: !2613, file: !1, line: 278, type: !9)
!2627 = !DILocation(line: 278, column: 28, scope: !2613)
!2628 = !DILocalVariable(name: "n", scope: !2613, file: !1, line: 279, type: !23)
!2629 = !DILocation(line: 279, column: 7, scope: !2613)
!2630 = !DILocalVariable(name: "n2", scope: !2613, file: !1, line: 279, type: !23)
!2631 = !DILocation(line: 279, column: 10, scope: !2613)
!2632 = !DILocation(line: 286, column: 10, scope: !2613)
!2633 = !DILocation(line: 287, column: 7, scope: !2634)
!2634 = distinct !DILexicalBlock(scope: !2613, file: !1, line: 287, column: 7)
!2635 = !DILocation(line: 287, column: 16, scope: !2634)
!2636 = !DILocation(line: 287, column: 7, scope: !2613)
!2637 = !DILocation(line: 287, column: 29, scope: !2638)
!2638 = !DILexicalBlockFile(scope: !2634, file: !1, discriminator: 1)
!2639 = !DILocation(line: 287, column: 22, scope: !2638)
!2640 = !DILocation(line: 288, column: 7, scope: !2613)
!2641 = !DILocation(line: 288, column: 5, scope: !2613)
!2642 = !DILocation(line: 289, column: 5, scope: !2613)
!2643 = !DILocation(line: 290, column: 7, scope: !2613)
!2644 = !DILocation(line: 290, column: 5, scope: !2613)
!2645 = !DILocation(line: 292, column: 3, scope: !2613)
!2646 = !DILocation(line: 292, column: 10, scope: !2647)
!2647 = !DILexicalBlockFile(scope: !2613, file: !1, discriminator: 1)
!2648 = !DILocation(line: 292, column: 12, scope: !2647)
!2649 = !DILocation(line: 292, column: 3, scope: !2647)
!2650 = !DILocation(line: 293, column: 10, scope: !2651)
!2651 = distinct !DILexicalBlock(scope: !2613, file: !1, line: 292, column: 17)
!2652 = !DILocation(line: 293, column: 12, scope: !2651)
!2653 = !DILocation(line: 293, column: 8, scope: !2651)
!2654 = !DILocation(line: 294, column: 9, scope: !2655)
!2655 = distinct !DILexicalBlock(scope: !2651, file: !1, line: 294, column: 9)
!2656 = !DILocation(line: 294, column: 12, scope: !2655)
!2657 = !DILocation(line: 294, column: 19, scope: !2655)
!2658 = !DILocation(line: 294, column: 16, scope: !2655)
!2659 = !DILocation(line: 294, column: 9, scope: !2651)
!2660 = !DILocation(line: 295, column: 26, scope: !2661)
!2661 = distinct !DILexicalBlock(scope: !2655, file: !1, line: 294, column: 22)
!2662 = !DILocation(line: 295, column: 15, scope: !2661)
!2663 = !DILocation(line: 295, column: 13, scope: !2661)
!2664 = !DILocation(line: 296, column: 11, scope: !2661)
!2665 = !DILocation(line: 296, column: 9, scope: !2661)
!2666 = !DILocation(line: 297, column: 5, scope: !2661)
!2667 = !DILocation(line: 298, column: 26, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2655, file: !1, line: 297, column: 12)
!2669 = !DILocation(line: 298, column: 15, scope: !2668)
!2670 = !DILocation(line: 298, column: 13, scope: !2668)
!2671 = !DILocation(line: 299, column: 11, scope: !2668)
!2672 = !DILocation(line: 299, column: 12, scope: !2668)
!2673 = !DILocation(line: 299, column: 9, scope: !2668)
!2674 = !DILocation(line: 292, column: 3, scope: !2675)
!2675 = !DILexicalBlockFile(scope: !2613, file: !1, discriminator: 2)
!2676 = distinct !{!2676, !2645}
!2677 = !DILocation(line: 302, column: 22, scope: !2613)
!2678 = !DILocation(line: 302, column: 11, scope: !2613)
!2679 = !DILocation(line: 302, column: 9, scope: !2613)
!2680 = !DILocation(line: 303, column: 12, scope: !2613)
!2681 = !DILocation(line: 303, column: 10, scope: !2613)
!2682 = !DILocation(line: 304, column: 10, scope: !2613)
!2683 = !DILocation(line: 304, column: 3, scope: !2613)
!2684 = !DILocation(line: 305, column: 1, scope: !2613)
!2685 = distinct !DISubprogram(name: ".omp_outlined..9", scope: !1, file: !1, line: 263, type: !2686, isLocal: true, isDefinition: true, scopeLine: 264, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !68)
!2686 = !DISubroutineType(types: !2687)
!2687 = !{null, !1382, !1382, !2688, !347, !347, !1386}
!2688 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !75, size: 64, align: 64)
!2689 = !{!"105"}
!2690 = !DILocalVariable(name: ".global_tid.", arg: 1, scope: !2685, type: !1382, flags: DIFlagArtificial | DIFlagObjectPointer)
!2691 = !DILocation(line: 0, scope: !2685)
!2692 = !DILocalVariable(name: ".bound_tid.", arg: 2, scope: !2685, type: !1382, flags: DIFlagArtificial)
!2693 = !DILocalVariable(name: "starts", arg: 3, scope: !2685, type: !2688, flags: DIFlagArtificial)
!2694 = !DILocalVariable(name: "vla", arg: 4, scope: !2685, type: !347, flags: DIFlagArtificial)
!2695 = !DILocalVariable(name: "vla", arg: 5, scope: !2685, type: !347, flags: DIFlagArtificial)
!2696 = !DILocalVariable(name: "u0", arg: 6, scope: !2685, type: !1386, flags: DIFlagArtificial)
!2697 = !DILocation(line: 264, column: 3, scope: !2685)
!2698 = !DILocalVariable(name: ".omp.iv", scope: !2685, type: !23, flags: DIFlagArtificial)
!2699 = !DILocalVariable(name: ".capture_expr.", scope: !2685, type: !23, flags: DIFlagArtificial)
!2700 = !DILocation(line: 264, column: 19, scope: !2685)
!2701 = !DILocalVariable(name: "k", scope: !2685, type: !23, flags: DIFlagArtificial)
!2702 = !DILocation(line: 264, column: 28, scope: !2685)
!2703 = !DILocalVariable(name: ".omp.lb", scope: !2685, type: !23, flags: DIFlagArtificial)
!2704 = !DILocation(line: 264, column: 8, scope: !2705)
!2705 = !DILexicalBlockFile(scope: !2685, file: !1, discriminator: 1)
!2706 = !DILocalVariable(name: ".omp.ub", scope: !2685, type: !23, flags: DIFlagArtificial)
!2707 = !DILocation(line: 0, scope: !2705)
!2708 = !DILocalVariable(name: ".omp.stride", scope: !2685, type: !23, flags: DIFlagArtificial)
!2709 = !DILocalVariable(name: ".omp.is_last", scope: !2685, type: !23, flags: DIFlagArtificial)
!2710 = !DILocalVariable(name: "j", scope: !2685, type: !23, flags: DIFlagArtificial)
!2711 = !DILocalVariable(name: "x0", scope: !2685, type: !9, flags: DIFlagArtificial)
!2712 = !DILocation(line: 264, column: 3, scope: !2705)
!2713 = !DILocation(line: 0, scope: !2714)
!2714 = !DILexicalBlockFile(scope: !2685, file: !1, discriminator: 2)
!2715 = !DILocation(line: 264, column: 8, scope: !2714)
!2716 = !DILocation(line: 264, column: 8, scope: !2717)
!2717 = !DILexicalBlockFile(scope: !2685, file: !1, discriminator: 3)
!2718 = !DILocation(line: 264, column: 8, scope: !2719)
!2719 = !DILexicalBlockFile(scope: !2685, file: !1, discriminator: 4)
!2720 = !DILocation(line: 264, column: 3, scope: !2719)
!2721 = !DILocation(line: 264, column: 8, scope: !2722)
!2722 = !DILexicalBlockFile(scope: !2685, file: !1, discriminator: 5)
!2723 = !DILocation(line: 0, scope: !2717)
!2724 = !DILocation(line: 264, column: 3, scope: !2722)
!2725 = !DILocation(line: 264, column: 8, scope: !2726)
!2726 = !DILexicalBlockFile(scope: !2685, file: !1, discriminator: 6)
!2727 = !DILocation(line: 264, column: 28, scope: !2726)
!2728 = !DILocation(line: 265, column: 17, scope: !2729)
!2729 = distinct !DILexicalBlock(scope: !2685, file: !1, line: 264, column: 33)
!2730 = !DILocation(line: 265, column: 10, scope: !2729)
!2731 = !DILocation(line: 265, column: 8, scope: !2729)
!2732 = !DILocation(line: 266, column: 12, scope: !2733)
!2733 = distinct !DILexicalBlock(scope: !2729, file: !1, line: 266, column: 5)
!2734 = !DILocation(line: 266, column: 10, scope: !2733)
!2735 = !DILocation(line: 266, column: 17, scope: !2736)
!2736 = !DILexicalBlockFile(scope: !2737, file: !1, discriminator: 1)
!2737 = distinct !DILexicalBlock(scope: !2733, file: !1, line: 266, column: 5)
!2738 = !DILocation(line: 266, column: 21, scope: !2736)
!2739 = !DILocation(line: 266, column: 19, scope: !2736)
!2740 = !DILocation(line: 266, column: 5, scope: !2736)
!2741 = !DILocation(line: 267, column: 45, scope: !2742)
!2742 = distinct !DILexicalBlock(scope: !2737, file: !1, line: 266, column: 35)
!2743 = !DILocation(line: 267, column: 39, scope: !2742)
!2744 = !DILocation(line: 267, column: 42, scope: !2742)
!2745 = !DILocation(line: 267, column: 28, scope: !2742)
!2746 = !DILocation(line: 267, column: 7, scope: !2742)
!2747 = !DILocation(line: 268, column: 5, scope: !2742)
!2748 = !DILocation(line: 266, column: 31, scope: !2749)
!2749 = !DILexicalBlockFile(scope: !2737, file: !1, discriminator: 2)
!2750 = !DILocation(line: 266, column: 5, scope: !2749)
!2751 = distinct !{!2751, !2752}
!2752 = !DILocation(line: 266, column: 5, scope: !2729)
!2753 = !DILocation(line: 269, column: 3, scope: !2729)
!2754 = !DILocation(line: 263, column: 11, scope: !2685)
!2755 = !DILocation(line: 264, column: 8, scope: !2756)
!2756 = !DILexicalBlockFile(scope: !2685, file: !1, discriminator: 7)
!2757 = !DILocation(line: 0, scope: !2719)
!2758 = !DILocation(line: 263, column: 11, scope: !2705)
!2759 = distinct !{!2759, !2697}
!2760 = !DILocation(line: 263, column: 11, scope: !2714)
!2761 = !DILocation(line: 263, column: 11, scope: !2717)
!2762 = !DILocation(line: 269, column: 3, scope: !2705)
!2763 = distinct !DISubprogram(name: ".omp_outlined..17", scope: !1, file: !1, line: 376, type: !2764, isLocal: true, isDefinition: true, scopeLine: 377, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !68)
!2764 = !DISubroutineType(types: !2765)
!2765 = !{null, !1382, !1382, !347, !347, !19, !2766}
!2766 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !9, size: 64, align: 64)
!2767 = !{!"106"}
!2768 = !DILocalVariable(name: ".global_tid.", arg: 1, scope: !2763, type: !1382, flags: DIFlagArtificial | DIFlagObjectPointer)
!2769 = !DILocation(line: 0, scope: !2763)
!2770 = !DILocalVariable(name: ".bound_tid.", arg: 2, scope: !2763, type: !1382, flags: DIFlagArtificial)
!2771 = !DILocalVariable(name: "vla", arg: 3, scope: !2763, type: !347, flags: DIFlagArtificial)
!2772 = !DILocalVariable(name: "vla", arg: 4, scope: !2763, type: !347, flags: DIFlagArtificial)
!2773 = !DILocalVariable(name: "twiddle", arg: 5, scope: !2763, type: !19, flags: DIFlagArtificial)
!2774 = !DILocalVariable(name: "ap", arg: 6, scope: !2763, type: !2766, flags: DIFlagArtificial)
!2775 = !DILocation(line: 377, column: 3, scope: !2763)
!2776 = !DILocalVariable(name: ".omp.iv", scope: !2763, type: !23, flags: DIFlagArtificial)
!2777 = !DILocalVariable(name: ".capture_expr.", scope: !2763, type: !23, flags: DIFlagArtificial)
!2778 = !DILocation(line: 377, column: 19, scope: !2763)
!2779 = !DILocalVariable(name: "k", scope: !2763, type: !23, flags: DIFlagArtificial)
!2780 = !DILocation(line: 377, column: 28, scope: !2763)
!2781 = !DILocalVariable(name: ".omp.lb", scope: !2763, type: !23, flags: DIFlagArtificial)
!2782 = !DILocation(line: 377, column: 8, scope: !2783)
!2783 = !DILexicalBlockFile(scope: !2763, file: !1, discriminator: 1)
!2784 = !DILocalVariable(name: ".omp.ub", scope: !2763, type: !23, flags: DIFlagArtificial)
!2785 = !DILocation(line: 0, scope: !2783)
!2786 = !DILocalVariable(name: ".omp.stride", scope: !2763, type: !23, flags: DIFlagArtificial)
!2787 = !DILocalVariable(name: ".omp.is_last", scope: !2763, type: !23, flags: DIFlagArtificial)
!2788 = !DILocalVariable(name: "i", scope: !2763, type: !23, flags: DIFlagArtificial)
!2789 = !DILocalVariable(name: "j", scope: !2763, type: !23, flags: DIFlagArtificial)
!2790 = !DILocalVariable(name: "kk", scope: !2763, type: !23, flags: DIFlagArtificial)
!2791 = !DILocalVariable(name: "kk2", scope: !2763, type: !23, flags: DIFlagArtificial)
!2792 = !DILocalVariable(name: "jj", scope: !2763, type: !23, flags: DIFlagArtificial)
!2793 = !DILocalVariable(name: "kj2", scope: !2763, type: !23, flags: DIFlagArtificial)
!2794 = !DILocalVariable(name: "ii", scope: !2763, type: !23, flags: DIFlagArtificial)
!2795 = !DILocation(line: 377, column: 3, scope: !2783)
!2796 = !DILocation(line: 0, scope: !2797)
!2797 = !DILexicalBlockFile(scope: !2763, file: !1, discriminator: 2)
!2798 = !DILocation(line: 377, column: 8, scope: !2797)
!2799 = !DILocation(line: 377, column: 8, scope: !2800)
!2800 = !DILexicalBlockFile(scope: !2763, file: !1, discriminator: 3)
!2801 = !DILocation(line: 377, column: 8, scope: !2802)
!2802 = !DILexicalBlockFile(scope: !2763, file: !1, discriminator: 4)
!2803 = !DILocation(line: 377, column: 3, scope: !2802)
!2804 = !DILocation(line: 377, column: 8, scope: !2805)
!2805 = !DILexicalBlockFile(scope: !2763, file: !1, discriminator: 5)
!2806 = !DILocation(line: 0, scope: !2800)
!2807 = !DILocation(line: 377, column: 3, scope: !2805)
!2808 = !DILocation(line: 377, column: 8, scope: !2809)
!2809 = !DILexicalBlockFile(scope: !2763, file: !1, discriminator: 6)
!2810 = !DILocation(line: 377, column: 28, scope: !2809)
!2811 = !DILocation(line: 378, column: 12, scope: !2812)
!2812 = distinct !DILexicalBlock(scope: !2763, file: !1, line: 377, column: 33)
!2813 = !DILocation(line: 378, column: 14, scope: !2812)
!2814 = !DILocation(line: 378, column: 22, scope: !2812)
!2815 = !DILocation(line: 378, column: 28, scope: !2812)
!2816 = !DILocation(line: 378, column: 8, scope: !2812)
!2817 = !DILocation(line: 379, column: 11, scope: !2812)
!2818 = !DILocation(line: 379, column: 14, scope: !2812)
!2819 = !DILocation(line: 379, column: 13, scope: !2812)
!2820 = !DILocation(line: 379, column: 9, scope: !2812)
!2821 = !DILocation(line: 380, column: 12, scope: !2822)
!2822 = distinct !DILexicalBlock(scope: !2812, file: !1, line: 380, column: 5)
!2823 = !DILocation(line: 380, column: 10, scope: !2822)
!2824 = !DILocation(line: 380, column: 17, scope: !2825)
!2825 = !DILexicalBlockFile(scope: !2826, file: !1, discriminator: 1)
!2826 = distinct !DILexicalBlock(scope: !2822, file: !1, line: 380, column: 5)
!2827 = !DILocation(line: 380, column: 21, scope: !2825)
!2828 = !DILocation(line: 380, column: 19, scope: !2825)
!2829 = !DILocation(line: 380, column: 5, scope: !2825)
!2830 = !DILocation(line: 381, column: 14, scope: !2831)
!2831 = distinct !DILexicalBlock(scope: !2826, file: !1, line: 380, column: 35)
!2832 = !DILocation(line: 381, column: 16, scope: !2831)
!2833 = !DILocation(line: 381, column: 24, scope: !2831)
!2834 = !DILocation(line: 381, column: 30, scope: !2831)
!2835 = !DILocation(line: 381, column: 10, scope: !2831)
!2836 = !DILocation(line: 382, column: 13, scope: !2831)
!2837 = !DILocation(line: 382, column: 16, scope: !2831)
!2838 = !DILocation(line: 382, column: 15, scope: !2831)
!2839 = !DILocation(line: 382, column: 21, scope: !2831)
!2840 = !DILocation(line: 382, column: 19, scope: !2831)
!2841 = !DILocation(line: 382, column: 11, scope: !2831)
!2842 = !DILocation(line: 383, column: 14, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2831, file: !1, line: 383, column: 7)
!2844 = !DILocation(line: 383, column: 12, scope: !2843)
!2845 = !DILocation(line: 383, column: 19, scope: !2846)
!2846 = !DILexicalBlockFile(scope: !2847, file: !1, discriminator: 1)
!2847 = distinct !DILexicalBlock(scope: !2843, file: !1, line: 383, column: 7)
!2848 = !DILocation(line: 383, column: 23, scope: !2846)
!2849 = !DILocation(line: 383, column: 21, scope: !2846)
!2850 = !DILocation(line: 383, column: 7, scope: !2846)
!2851 = !DILocation(line: 384, column: 16, scope: !2852)
!2852 = distinct !DILexicalBlock(scope: !2847, file: !1, line: 383, column: 37)
!2853 = !DILocation(line: 384, column: 18, scope: !2852)
!2854 = !DILocation(line: 384, column: 26, scope: !2852)
!2855 = !DILocation(line: 384, column: 32, scope: !2852)
!2856 = !DILocation(line: 384, column: 12, scope: !2852)
!2857 = !DILocation(line: 385, column: 32, scope: !2852)
!2858 = !DILocation(line: 385, column: 46, scope: !2852)
!2859 = !DILocation(line: 385, column: 49, scope: !2852)
!2860 = !DILocation(line: 385, column: 48, scope: !2852)
!2861 = !DILocation(line: 385, column: 52, scope: !2852)
!2862 = !DILocation(line: 385, column: 51, scope: !2852)
!2863 = !DILocation(line: 385, column: 37, scope: !2852)
!2864 = !DILocation(line: 385, column: 35, scope: !2852)
!2865 = !DILocation(line: 385, column: 28, scope: !2852)
!2866 = !DILocation(line: 385, column: 23, scope: !2852)
!2867 = !DILocation(line: 385, column: 9, scope: !2852)
!2868 = !DILocation(line: 385, column: 20, scope: !2852)
!2869 = !DILocation(line: 385, column: 17, scope: !2852)
!2870 = !DILocation(line: 385, column: 26, scope: !2852)
!2871 = !DILocation(line: 386, column: 7, scope: !2852)
!2872 = !DILocation(line: 383, column: 33, scope: !2873)
!2873 = !DILexicalBlockFile(scope: !2847, file: !1, discriminator: 2)
!2874 = !DILocation(line: 383, column: 7, scope: !2873)
!2875 = distinct !{!2875, !2876}
!2876 = !DILocation(line: 383, column: 7, scope: !2831)
!2877 = !DILocation(line: 387, column: 5, scope: !2831)
!2878 = !DILocation(line: 380, column: 31, scope: !2879)
!2879 = !DILexicalBlockFile(scope: !2826, file: !1, discriminator: 2)
!2880 = !DILocation(line: 380, column: 5, scope: !2879)
!2881 = distinct !{!2881, !2882}
!2882 = !DILocation(line: 380, column: 5, scope: !2812)
!2883 = !DILocation(line: 388, column: 3, scope: !2812)
!2884 = !DILocation(line: 376, column: 11, scope: !2763)
!2885 = !DILocation(line: 377, column: 8, scope: !2886)
!2886 = !DILexicalBlockFile(scope: !2763, file: !1, discriminator: 7)
!2887 = !DILocation(line: 0, scope: !2802)
!2888 = !DILocation(line: 376, column: 11, scope: !2783)
!2889 = distinct !{!2889, !2775}
!2890 = !DILocation(line: 376, column: 11, scope: !2797)
!2891 = !DILocation(line: 376, column: 11, scope: !2800)
!2892 = !DILocation(line: 388, column: 3, scope: !2783)
!2893 = distinct !DISubprogram(name: ".omp_outlined.", scope: !1, file: !1, line: 199, type: !2894, isLocal: true, isDefinition: true, scopeLine: 200, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !68)
!2894 = !DISubroutineType(types: !2895)
!2895 = !{null, !1382, !1382, !1385, !1385, !1385, !347, !347, !1386, !347, !347, !1386, !347, !347, !19}
!2896 = !DILocalVariable(name: ".global_tid.", arg: 1, scope: !2893, type: !1382, flags: DIFlagArtificial | DIFlagObjectPointer)
!2897 = !DILocation(line: 0, scope: !2893)
!2898 = !DILocalVariable(name: ".bound_tid.", arg: 2, scope: !2893, type: !1382, flags: DIFlagArtificial)
!2899 = !DILocalVariable(name: "d3", arg: 3, scope: !2893, type: !1385, flags: DIFlagArtificial)
!2900 = !DILocalVariable(name: "d2", arg: 4, scope: !2893, type: !1385, flags: DIFlagArtificial)
!2901 = !DILocalVariable(name: "d1", arg: 5, scope: !2893, type: !1385, flags: DIFlagArtificial)
!2902 = !DILocalVariable(name: "vla", arg: 6, scope: !2893, type: !347, flags: DIFlagArtificial)
!2903 = !DILocalVariable(name: "vla", arg: 7, scope: !2893, type: !347, flags: DIFlagArtificial)
!2904 = !DILocalVariable(name: "u0", arg: 8, scope: !2893, type: !1386, flags: DIFlagArtificial)
!2905 = !DILocalVariable(name: "vla", arg: 9, scope: !2893, type: !347, flags: DIFlagArtificial)
!2906 = !DILocalVariable(name: "vla", arg: 10, scope: !2893, type: !347, flags: DIFlagArtificial)
!2907 = !DILocalVariable(name: "u1", arg: 11, scope: !2893, type: !1386, flags: DIFlagArtificial)
!2908 = !DILocalVariable(name: "vla", arg: 12, scope: !2893, type: !347, flags: DIFlagArtificial)
!2909 = !DILocalVariable(name: "vla", arg: 13, scope: !2893, type: !347, flags: DIFlagArtificial)
!2910 = !DILocalVariable(name: "twiddle", arg: 14, scope: !2893, type: !19, flags: DIFlagArtificial)
!2911 = !DILocation(line: 200, column: 3, scope: !2893)
!2912 = !DILocalVariable(name: ".omp.iv", scope: !2893, type: !23, flags: DIFlagArtificial)
!2913 = !DILocalVariable(name: ".capture_expr.", scope: !2893, type: !23, flags: DIFlagArtificial)
!2914 = !DILocation(line: 200, column: 19, scope: !2893)
!2915 = !DILocalVariable(name: "k", scope: !2893, type: !23, flags: DIFlagArtificial)
!2916 = !DILocation(line: 200, column: 23, scope: !2893)
!2917 = !DILocalVariable(name: ".omp.lb", scope: !2893, type: !23, flags: DIFlagArtificial)
!2918 = !DILocation(line: 200, column: 8, scope: !2919)
!2919 = !DILexicalBlockFile(scope: !2893, file: !1, discriminator: 1)
!2920 = !DILocalVariable(name: ".omp.ub", scope: !2893, type: !23, flags: DIFlagArtificial)
!2921 = !DILocation(line: 0, scope: !2919)
!2922 = !DILocalVariable(name: ".omp.stride", scope: !2893, type: !23, flags: DIFlagArtificial)
!2923 = !DILocalVariable(name: ".omp.is_last", scope: !2893, type: !23, flags: DIFlagArtificial)
!2924 = !DILocalVariable(name: "i", scope: !2893, type: !23, flags: DIFlagArtificial)
!2925 = !DILocalVariable(name: "j", scope: !2893, type: !23, flags: DIFlagArtificial)
!2926 = !DILocation(line: 200, column: 3, scope: !2919)
!2927 = !DILocation(line: 0, scope: !2928)
!2928 = !DILexicalBlockFile(scope: !2893, file: !1, discriminator: 2)
!2929 = !DILocation(line: 200, column: 8, scope: !2928)
!2930 = !DILocation(line: 200, column: 8, scope: !2931)
!2931 = !DILexicalBlockFile(scope: !2893, file: !1, discriminator: 3)
!2932 = !DILocation(line: 200, column: 8, scope: !2933)
!2933 = !DILexicalBlockFile(scope: !2893, file: !1, discriminator: 4)
!2934 = !DILocation(line: 200, column: 3, scope: !2933)
!2935 = !DILocation(line: 200, column: 8, scope: !2936)
!2936 = !DILexicalBlockFile(scope: !2893, file: !1, discriminator: 5)
!2937 = !DILocation(line: 0, scope: !2931)
!2938 = !DILocation(line: 200, column: 3, scope: !2936)
!2939 = !DILocation(line: 200, column: 8, scope: !2940)
!2940 = !DILexicalBlockFile(scope: !2893, file: !1, discriminator: 6)
!2941 = !DILocation(line: 200, column: 23, scope: !2940)
!2942 = !DILocation(line: 201, column: 12, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2944, file: !1, line: 201, column: 5)
!2944 = distinct !DILexicalBlock(scope: !2893, file: !1, line: 200, column: 28)
!2945 = !DILocation(line: 201, column: 10, scope: !2943)
!2946 = !DILocation(line: 201, column: 17, scope: !2947)
!2947 = !DILexicalBlockFile(scope: !2948, file: !1, discriminator: 1)
!2948 = distinct !DILexicalBlock(scope: !2943, file: !1, line: 201, column: 5)
!2949 = !DILocation(line: 201, column: 21, scope: !2947)
!2950 = !DILocation(line: 201, column: 19, scope: !2947)
!2951 = !DILocation(line: 201, column: 5, scope: !2947)
!2952 = !DILocation(line: 202, column: 14, scope: !2953)
!2953 = distinct !DILexicalBlock(scope: !2954, file: !1, line: 202, column: 7)
!2954 = distinct !DILexicalBlock(scope: !2948, file: !1, line: 201, column: 30)
!2955 = !DILocation(line: 202, column: 12, scope: !2953)
!2956 = !DILocation(line: 202, column: 19, scope: !2957)
!2957 = !DILexicalBlockFile(scope: !2958, file: !1, discriminator: 1)
!2958 = distinct !DILexicalBlock(scope: !2953, file: !1, line: 202, column: 7)
!2959 = !DILocation(line: 202, column: 23, scope: !2957)
!2960 = !DILocation(line: 202, column: 21, scope: !2957)
!2961 = !DILocation(line: 202, column: 7, scope: !2957)
!2962 = !DILocation(line: 203, column: 18, scope: !2963)
!2963 = distinct !DILexicalBlock(scope: !2958, file: !1, line: 202, column: 32)
!2964 = !DILocation(line: 203, column: 9, scope: !2963)
!2965 = !DILocation(line: 203, column: 15, scope: !2963)
!2966 = !DILocation(line: 203, column: 12, scope: !2963)
!2967 = !DILocation(line: 203, column: 23, scope: !2963)
!2968 = !DILocation(line: 204, column: 18, scope: !2963)
!2969 = !DILocation(line: 204, column: 9, scope: !2963)
!2970 = !DILocation(line: 204, column: 15, scope: !2963)
!2971 = !DILocation(line: 204, column: 12, scope: !2963)
!2972 = !DILocation(line: 204, column: 23, scope: !2963)
!2973 = !DILocation(line: 205, column: 23, scope: !2963)
!2974 = !DILocation(line: 205, column: 9, scope: !2963)
!2975 = !DILocation(line: 205, column: 20, scope: !2963)
!2976 = !DILocation(line: 205, column: 17, scope: !2963)
!2977 = !DILocation(line: 205, column: 26, scope: !2963)
!2978 = !DILocation(line: 206, column: 7, scope: !2963)
!2979 = !DILocation(line: 202, column: 28, scope: !2980)
!2980 = !DILexicalBlockFile(scope: !2958, file: !1, discriminator: 2)
!2981 = !DILocation(line: 202, column: 7, scope: !2980)
!2982 = distinct !{!2982, !2983}
!2983 = !DILocation(line: 202, column: 7, scope: !2954)
!2984 = !DILocation(line: 207, column: 5, scope: !2954)
!2985 = !DILocation(line: 201, column: 26, scope: !2986)
!2986 = !DILexicalBlockFile(scope: !2948, file: !1, discriminator: 2)
!2987 = !DILocation(line: 201, column: 5, scope: !2986)
!2988 = distinct !{!2988, !2989}
!2989 = !DILocation(line: 201, column: 5, scope: !2944)
!2990 = !DILocation(line: 208, column: 3, scope: !2944)
!2991 = !DILocation(line: 199, column: 11, scope: !2893)
!2992 = !DILocation(line: 200, column: 8, scope: !2993)
!2993 = !DILexicalBlockFile(scope: !2893, file: !1, discriminator: 7)
!2994 = !DILocation(line: 0, scope: !2933)
!2995 = !DILocation(line: 199, column: 11, scope: !2919)
!2996 = distinct !{!2996, !2911}
!2997 = !DILocation(line: 199, column: 11, scope: !2928)
!2998 = !DILocation(line: 199, column: 11, scope: !2931)
!2999 = !DILocation(line: 208, column: 3, scope: !2919)
!3000 = distinct !DISubprogram(name: "print_results", scope: !3001, file: !3001, line: 10, type: !3002, isLocal: false, isDefinition: true, scopeLine: 14, flags: DIFlagPrototyped, isOptimized: false, unit: !60, variables: !68)
!3001 = !DIFile(filename: "print_results.c", directory: "/home/amiryousefi/llvmTemp/Codes/NAS/NPB3.3-OMP-C/common")
!3002 = !DISubroutineType(types: !3003)
!3003 = !{null, !95, !96, !23, !23, !23, !23, !9, !9, !95, !3004, !95, !95, !95, !95, !95, !95, !95, !95, !95}
!3004 = !DIDerivedType(tag: DW_TAG_typedef, name: "logical", file: !64, line: 4, baseType: !63)
!3005 = !DILocalVariable(name: "name", arg: 1, scope: !3000, file: !3001, line: 10, type: !95)
!3006 = !DILocation(line: 10, column: 26, scope: !3000)
!3007 = !DILocalVariable(name: "class", arg: 2, scope: !3000, file: !3001, line: 10, type: !96)
!3008 = !DILocation(line: 10, column: 37, scope: !3000)
!3009 = !DILocalVariable(name: "n1", arg: 3, scope: !3000, file: !3001, line: 10, type: !23)
!3010 = !DILocation(line: 10, column: 48, scope: !3000)
!3011 = !DILocalVariable(name: "n2", arg: 4, scope: !3000, file: !3001, line: 10, type: !23)
!3012 = !DILocation(line: 10, column: 56, scope: !3000)
!3013 = !DILocalVariable(name: "n3", arg: 5, scope: !3000, file: !3001, line: 10, type: !23)
!3014 = !DILocation(line: 10, column: 64, scope: !3000)
!3015 = !DILocalVariable(name: "niter", arg: 6, scope: !3000, file: !3001, line: 10, type: !23)
!3016 = !DILocation(line: 10, column: 72, scope: !3000)
!3017 = !DILocalVariable(name: "t", arg: 7, scope: !3000, file: !3001, line: 11, type: !9)
!3018 = !DILocation(line: 11, column: 12, scope: !3000)
!3019 = !DILocalVariable(name: "mops", arg: 8, scope: !3000, file: !3001, line: 11, type: !9)
!3020 = !DILocation(line: 11, column: 22, scope: !3000)
!3021 = !DILocalVariable(name: "optype", arg: 9, scope: !3000, file: !3001, line: 11, type: !95)
!3022 = !DILocation(line: 11, column: 34, scope: !3000)
!3023 = !DILocalVariable(name: "verified", arg: 10, scope: !3000, file: !3001, line: 11, type: !3004)
!3024 = !DILocation(line: 11, column: 50, scope: !3000)
!3025 = !DILocalVariable(name: "npbversion", arg: 11, scope: !3000, file: !3001, line: 11, type: !95)
!3026 = !DILocation(line: 11, column: 66, scope: !3000)
!3027 = !DILocalVariable(name: "compiletime", arg: 12, scope: !3000, file: !3001, line: 12, type: !95)
!3028 = !DILocation(line: 12, column: 11, scope: !3000)
!3029 = !DILocalVariable(name: "cs1", arg: 13, scope: !3000, file: !3001, line: 12, type: !95)
!3030 = !DILocation(line: 12, column: 30, scope: !3000)
!3031 = !DILocalVariable(name: "cs2", arg: 14, scope: !3000, file: !3001, line: 12, type: !95)
!3032 = !DILocation(line: 12, column: 41, scope: !3000)
!3033 = !DILocalVariable(name: "cs3", arg: 15, scope: !3000, file: !3001, line: 12, type: !95)
!3034 = !DILocation(line: 12, column: 52, scope: !3000)
!3035 = !DILocalVariable(name: "cs4", arg: 16, scope: !3000, file: !3001, line: 12, type: !95)
!3036 = !DILocation(line: 12, column: 63, scope: !3000)
!3037 = !DILocalVariable(name: "cs5", arg: 17, scope: !3000, file: !3001, line: 12, type: !95)
!3038 = !DILocation(line: 12, column: 74, scope: !3000)
!3039 = !DILocalVariable(name: "cs6", arg: 18, scope: !3000, file: !3001, line: 13, type: !95)
!3040 = !DILocation(line: 13, column: 11, scope: !3000)
!3041 = !DILocalVariable(name: "cs7", arg: 19, scope: !3000, file: !3001, line: 13, type: !95)
!3042 = !DILocation(line: 13, column: 22, scope: !3000)
!3043 = !DILocalVariable(name: "size", scope: !3000, file: !3001, line: 15, type: !3044)
!3044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 128, align: 8, elements: !3045)
!3045 = !{!3046}
!3046 = !DISubrange(count: 16)
!3047 = !DILocation(line: 15, column: 8, scope: !3000)
!3048 = !DILocalVariable(name: "j", scope: !3000, file: !3001, line: 16, type: !23)
!3049 = !DILocation(line: 16, column: 7, scope: !3000)
!3050 = !DILocalVariable(name: "num_threads", scope: !3000, file: !3001, line: 17, type: !23)
!3051 = !DILocation(line: 17, column: 7, scope: !3000)
!3052 = !DILocalVariable(name: "max_threads", scope: !3000, file: !3001, line: 17, type: !23)
!3053 = !DILocation(line: 17, column: 20, scope: !3000)
!3054 = !DILocation(line: 19, column: 15, scope: !3000)
!3055 = !DILocation(line: 20, column: 15, scope: !3000)
!3056 = !DILocation(line: 24, column: 17, scope: !3000)
!3057 = !DILocation(line: 24, column: 15, scope: !3000)
!3058 = !DILocation(line: 25, column: 9, scope: !3000)
!3059 = !DILocation(line: 33, column: 45, scope: !3000)
!3060 = !DILocation(line: 33, column: 3, scope: !3000)
!3061 = !DILocation(line: 34, column: 52, scope: !3000)
!3062 = !DILocation(line: 34, column: 3, scope: !3000)
!3063 = !DILocation(line: 41, column: 10, scope: !3064)
!3064 = distinct !DILexicalBlock(scope: !3000, file: !3001, line: 41, column: 8)
!3065 = !DILocation(line: 41, column: 13, scope: !3064)
!3066 = !DILocation(line: 41, column: 20, scope: !3064)
!3067 = !DILocation(line: 41, column: 25, scope: !3068)
!3068 = !DILexicalBlockFile(scope: !3064, file: !3001, discriminator: 1)
!3069 = !DILocation(line: 41, column: 28, scope: !3068)
!3070 = !DILocation(line: 41, column: 8, scope: !3068)
!3071 = !DILocation(line: 42, column: 12, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !3073, file: !3001, line: 42, column: 10)
!3073 = distinct !DILexicalBlock(scope: !3064, file: !3001, line: 41, column: 37)
!3074 = !DILocation(line: 42, column: 20, scope: !3072)
!3075 = !DILocation(line: 42, column: 29, scope: !3072)
!3076 = !DILocation(line: 42, column: 34, scope: !3077)
!3077 = !DILexicalBlockFile(scope: !3072, file: !3001, discriminator: 1)
!3078 = !DILocation(line: 42, column: 42, scope: !3077)
!3079 = !DILocation(line: 42, column: 10, scope: !3077)
!3080 = !DILocation(line: 43, column: 16, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3072, file: !3001, line: 42, column: 53)
!3082 = !DILocation(line: 43, column: 42, scope: !3081)
!3083 = !DILocation(line: 43, column: 33, scope: !3081)
!3084 = !DILocation(line: 43, column: 7, scope: !3085)
!3085 = !DILexicalBlockFile(scope: !3081, file: !3001, discriminator: 1)
!3086 = !DILocation(line: 44, column: 9, scope: !3081)
!3087 = !DILocation(line: 45, column: 17, scope: !3088)
!3088 = distinct !DILexicalBlock(scope: !3081, file: !3001, line: 45, column: 12)
!3089 = !DILocation(line: 45, column: 12, scope: !3088)
!3090 = !DILocation(line: 45, column: 20, scope: !3088)
!3091 = !DILocation(line: 45, column: 12, scope: !3081)
!3092 = !DILocation(line: 46, column: 14, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !3088, file: !3001, line: 45, column: 29)
!3094 = !DILocation(line: 46, column: 9, scope: !3093)
!3095 = !DILocation(line: 46, column: 17, scope: !3093)
!3096 = !DILocation(line: 47, column: 10, scope: !3093)
!3097 = !DILocation(line: 48, column: 7, scope: !3093)
!3098 = !DILocation(line: 49, column: 12, scope: !3081)
!3099 = !DILocation(line: 49, column: 13, scope: !3081)
!3100 = !DILocation(line: 49, column: 7, scope: !3081)
!3101 = !DILocation(line: 49, column: 17, scope: !3081)
!3102 = !DILocation(line: 50, column: 53, scope: !3081)
!3103 = !DILocation(line: 50, column: 7, scope: !3081)
!3104 = !DILocation(line: 51, column: 5, scope: !3081)
!3105 = !DILocation(line: 52, column: 56, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3072, file: !3001, line: 51, column: 12)
!3107 = !DILocation(line: 52, column: 7, scope: !3106)
!3108 = !DILocation(line: 54, column: 3, scope: !3073)
!3109 = !DILocation(line: 55, column: 59, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3064, file: !3001, line: 54, column: 10)
!3111 = !DILocation(line: 55, column: 63, scope: !3110)
!3112 = !DILocation(line: 55, column: 67, scope: !3110)
!3113 = !DILocation(line: 55, column: 5, scope: !3110)
!3114 = !DILocation(line: 58, column: 52, scope: !3000)
!3115 = !DILocation(line: 58, column: 3, scope: !3000)
!3116 = !DILocation(line: 59, column: 55, scope: !3000)
!3117 = !DILocation(line: 59, column: 3, scope: !3000)
!3118 = !DILocation(line: 61, column: 52, scope: !3000)
!3119 = !DILocation(line: 61, column: 3, scope: !3000)
!3120 = !DILocation(line: 62, column: 52, scope: !3000)
!3121 = !DILocation(line: 62, column: 3, scope: !3000)
!3122 = !DILocation(line: 63, column: 8, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !3000, file: !3001, line: 63, column: 8)
!3124 = !DILocation(line: 63, column: 23, scope: !3123)
!3125 = !DILocation(line: 63, column: 20, scope: !3123)
!3126 = !DILocation(line: 63, column: 8, scope: !3000)
!3127 = !DILocation(line: 64, column: 5, scope: !3123)
!3128 = !DILocation(line: 66, column: 52, scope: !3000)
!3129 = !DILocation(line: 66, column: 3, scope: !3000)
!3130 = !DILocation(line: 67, column: 52, scope: !3000)
!3131 = !DILocation(line: 67, column: 65, scope: !3000)
!3132 = !DILocation(line: 67, column: 57, scope: !3000)
!3133 = !DILocation(line: 67, column: 56, scope: !3000)
!3134 = !DILocation(line: 67, column: 3, scope: !3000)
!3135 = !DILocation(line: 69, column: 40, scope: !3000)
!3136 = !DILocation(line: 69, column: 3, scope: !3000)
!3137 = !DILocation(line: 70, column: 8, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !3000, file: !3001, line: 70, column: 8)
!3139 = !DILocation(line: 70, column: 8, scope: !3000)
!3140 = !DILocation(line: 71, column: 5, scope: !3138)
!3141 = !DILocation(line: 73, column: 5, scope: !3138)
!3142 = !DILocation(line: 74, column: 52, scope: !3000)
!3143 = !DILocation(line: 74, column: 3, scope: !3000)
!3144 = !DILocation(line: 75, column: 52, scope: !3000)
!3145 = !DILocation(line: 75, column: 3, scope: !3000)
!3146 = !DILocation(line: 78, column: 38, scope: !3000)
!3147 = !DILocation(line: 77, column: 3, scope: !3000)
!3148 = !DILocation(line: 79, column: 38, scope: !3000)
!3149 = !DILocation(line: 79, column: 3, scope: !3000)
!3150 = !DILocation(line: 80, column: 38, scope: !3000)
!3151 = !DILocation(line: 80, column: 3, scope: !3000)
!3152 = !DILocation(line: 81, column: 38, scope: !3000)
!3153 = !DILocation(line: 81, column: 3, scope: !3000)
!3154 = !DILocation(line: 82, column: 38, scope: !3000)
!3155 = !DILocation(line: 82, column: 3, scope: !3000)
!3156 = !DILocation(line: 83, column: 38, scope: !3000)
!3157 = !DILocation(line: 83, column: 3, scope: !3000)
!3158 = !DILocation(line: 84, column: 38, scope: !3000)
!3159 = !DILocation(line: 84, column: 3, scope: !3000)
!3160 = !DILocation(line: 86, column: 3, scope: !3000)
!3161 = !DILocation(line: 92, column: 1, scope: !3000)
!3162 = distinct !DISubprogram(name: ".omp_outlined.", scope: !61, file: !61, line: 25, type: !3163, isLocal: true, isDefinition: true, scopeLine: 26, flags: DIFlagPrototyped, isOptimized: false, unit: !60, variables: !68)
!3163 = !DISubroutineType(types: !3164)
!3164 = !{null, !1382, !1382, !1385}
!3165 = !{!"107"}
!3166 = !DILocalVariable(name: ".global_tid.", arg: 1, scope: !3162, type: !1382, flags: DIFlagArtificial | DIFlagObjectPointer)
!3167 = !DILocation(line: 0, scope: !3162)
!3168 = !DILocalVariable(name: ".bound_tid.", arg: 2, scope: !3162, type: !1382, flags: DIFlagArtificial)
!3169 = !DILocalVariable(name: "num_threads", arg: 3, scope: !3162, type: !1385, flags: DIFlagArtificial)
!3170 = !DILocation(line: 26, column: 3, scope: !3171)
!3171 = !DILexicalBlockFile(scope: !3162, file: !3001, discriminator: 0)
!3172 = !DILocation(line: 27, column: 13, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !3171, file: !3001, line: 26, column: 3)
!3174 = !DILocation(line: 28, column: 19, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !3173, file: !3001, line: 27, column: 13)
!3176 = !DILocation(line: 28, column: 17, scope: !3175)
!3177 = !DILocation(line: 28, column: 5, scope: !3178)
!3178 = !DILexicalBlockFile(scope: !3175, file: !3001, discriminator: 1)
!3179 = !DILocation(line: 28, column: 5, scope: !3175)
!3180 = !DILocation(line: 29, column: 3, scope: !3171)
!3181 = distinct !DISubprogram(name: "randlc", scope: !3182, file: !3182, line: 4, type: !3183, isLocal: false, isDefinition: true, scopeLine: 5, flags: DIFlagPrototyped, isOptimized: false, unit: !66, variables: !68)
!3182 = !DIFile(filename: "randdp.c", directory: "/home/amiryousefi/llvmTemp/Codes/NAS/NPB3.3-OMP-C/common")
!3183 = !DISubroutineType(types: !3184)
!3184 = !{!9, !21, !9}
!3185 = !DILocalVariable(name: "x", arg: 1, scope: !3181, file: !3182, line: 4, type: !21)
!3186 = !DILocation(line: 4, column: 24, scope: !3181)
!3187 = !DILocalVariable(name: "a", arg: 2, scope: !3181, file: !3182, line: 4, type: !9)
!3188 = !DILocation(line: 4, column: 34, scope: !3181)
!3189 = !DILocalVariable(name: "r23", scope: !3181, file: !3182, line: 36, type: !3190)
!3190 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9)
!3191 = !DILocation(line: 36, column: 16, scope: !3181)
!3192 = !DILocalVariable(name: "r46", scope: !3181, file: !3182, line: 37, type: !3190)
!3193 = !DILocation(line: 37, column: 16, scope: !3181)
!3194 = !DILocalVariable(name: "t23", scope: !3181, file: !3182, line: 38, type: !3190)
!3195 = !DILocation(line: 38, column: 16, scope: !3181)
!3196 = !DILocalVariable(name: "t46", scope: !3181, file: !3182, line: 39, type: !3190)
!3197 = !DILocation(line: 39, column: 16, scope: !3181)
!3198 = !DILocalVariable(name: "t1", scope: !3181, file: !3182, line: 41, type: !9)
!3199 = !DILocation(line: 41, column: 10, scope: !3181)
!3200 = !DILocalVariable(name: "t2", scope: !3181, file: !3182, line: 41, type: !9)
!3201 = !DILocation(line: 41, column: 14, scope: !3181)
!3202 = !DILocalVariable(name: "t3", scope: !3181, file: !3182, line: 41, type: !9)
!3203 = !DILocation(line: 41, column: 18, scope: !3181)
!3204 = !DILocalVariable(name: "t4", scope: !3181, file: !3182, line: 41, type: !9)
!3205 = !DILocation(line: 41, column: 22, scope: !3181)
!3206 = !DILocalVariable(name: "a1", scope: !3181, file: !3182, line: 41, type: !9)
!3207 = !DILocation(line: 41, column: 26, scope: !3181)
!3208 = !DILocalVariable(name: "a2", scope: !3181, file: !3182, line: 41, type: !9)
!3209 = !DILocation(line: 41, column: 30, scope: !3181)
!3210 = !DILocalVariable(name: "x1", scope: !3181, file: !3182, line: 41, type: !9)
!3211 = !DILocation(line: 41, column: 34, scope: !3181)
!3212 = !DILocalVariable(name: "x2", scope: !3181, file: !3182, line: 41, type: !9)
!3213 = !DILocation(line: 41, column: 38, scope: !3181)
!3214 = !DILocalVariable(name: "z", scope: !3181, file: !3182, line: 41, type: !9)
!3215 = !DILocation(line: 41, column: 42, scope: !3181)
!3216 = !DILocalVariable(name: "r", scope: !3181, file: !3182, line: 42, type: !9)
!3217 = !DILocation(line: 42, column: 10, scope: !3181)
!3218 = !DILocation(line: 47, column: 14, scope: !3181)
!3219 = !DILocation(line: 47, column: 12, scope: !3181)
!3220 = !DILocation(line: 47, column: 6, scope: !3181)
!3221 = !DILocation(line: 48, column: 14, scope: !3181)
!3222 = !DILocation(line: 48, column: 8, scope: !3181)
!3223 = !DILocation(line: 48, column: 6, scope: !3181)
!3224 = !DILocation(line: 49, column: 8, scope: !3181)
!3225 = !DILocation(line: 49, column: 18, scope: !3181)
!3226 = !DILocation(line: 49, column: 16, scope: !3181)
!3227 = !DILocation(line: 49, column: 10, scope: !3181)
!3228 = !DILocation(line: 49, column: 6, scope: !3181)
!3229 = !DILocation(line: 56, column: 16, scope: !3181)
!3230 = !DILocation(line: 56, column: 15, scope: !3181)
!3231 = !DILocation(line: 56, column: 12, scope: !3181)
!3232 = !DILocation(line: 56, column: 6, scope: !3181)
!3233 = !DILocation(line: 57, column: 14, scope: !3181)
!3234 = !DILocation(line: 57, column: 8, scope: !3181)
!3235 = !DILocation(line: 57, column: 6, scope: !3181)
!3236 = !DILocation(line: 58, column: 9, scope: !3181)
!3237 = !DILocation(line: 58, column: 8, scope: !3181)
!3238 = !DILocation(line: 58, column: 19, scope: !3181)
!3239 = !DILocation(line: 58, column: 17, scope: !3181)
!3240 = !DILocation(line: 58, column: 11, scope: !3181)
!3241 = !DILocation(line: 58, column: 6, scope: !3181)
!3242 = !DILocation(line: 59, column: 8, scope: !3181)
!3243 = !DILocation(line: 59, column: 13, scope: !3181)
!3244 = !DILocation(line: 59, column: 11, scope: !3181)
!3245 = !DILocation(line: 59, column: 18, scope: !3181)
!3246 = !DILocation(line: 59, column: 23, scope: !3181)
!3247 = !DILocation(line: 59, column: 21, scope: !3181)
!3248 = !DILocation(line: 59, column: 16, scope: !3181)
!3249 = !DILocation(line: 59, column: 6, scope: !3181)
!3250 = !DILocation(line: 60, column: 21, scope: !3181)
!3251 = !DILocation(line: 60, column: 19, scope: !3181)
!3252 = !DILocation(line: 60, column: 8, scope: !3181)
!3253 = !DILocation(line: 60, column: 6, scope: !3181)
!3254 = !DILocation(line: 61, column: 7, scope: !3181)
!3255 = !DILocation(line: 61, column: 18, scope: !3181)
!3256 = !DILocation(line: 61, column: 16, scope: !3181)
!3257 = !DILocation(line: 61, column: 10, scope: !3181)
!3258 = !DILocation(line: 61, column: 5, scope: !3181)
!3259 = !DILocation(line: 62, column: 14, scope: !3181)
!3260 = !DILocation(line: 62, column: 12, scope: !3181)
!3261 = !DILocation(line: 62, column: 18, scope: !3181)
!3262 = !DILocation(line: 62, column: 23, scope: !3181)
!3263 = !DILocation(line: 62, column: 21, scope: !3181)
!3264 = !DILocation(line: 62, column: 16, scope: !3181)
!3265 = !DILocation(line: 62, column: 6, scope: !3181)
!3266 = !DILocation(line: 63, column: 21, scope: !3181)
!3267 = !DILocation(line: 63, column: 19, scope: !3181)
!3268 = !DILocation(line: 63, column: 8, scope: !3181)
!3269 = !DILocation(line: 63, column: 6, scope: !3181)
!3270 = !DILocation(line: 64, column: 8, scope: !3181)
!3271 = !DILocation(line: 64, column: 19, scope: !3181)
!3272 = !DILocation(line: 64, column: 17, scope: !3181)
!3273 = !DILocation(line: 64, column: 11, scope: !3181)
!3274 = !DILocation(line: 64, column: 4, scope: !3181)
!3275 = !DILocation(line: 64, column: 6, scope: !3181)
!3276 = !DILocation(line: 65, column: 15, scope: !3181)
!3277 = !DILocation(line: 65, column: 14, scope: !3181)
!3278 = !DILocation(line: 65, column: 11, scope: !3181)
!3279 = !DILocation(line: 65, column: 5, scope: !3181)
!3280 = !DILocation(line: 67, column: 10, scope: !3181)
!3281 = !DILocation(line: 67, column: 3, scope: !3181)
!3282 = distinct !DISubprogram(name: "vranlc", scope: !3182, file: !3182, line: 71, type: !3283, isLocal: false, isDefinition: true, scopeLine: 72, flags: DIFlagPrototyped, isOptimized: false, unit: !66, variables: !68)
!3283 = !DISubroutineType(types: !3284)
!3284 = !{null, !23, !21, !9, !21}
!3285 = !DILocalVariable(name: "n", arg: 1, scope: !3282, file: !3182, line: 71, type: !23)
!3286 = !DILocation(line: 71, column: 18, scope: !3282)
!3287 = !DILocalVariable(name: "x", arg: 2, scope: !3282, file: !3182, line: 71, type: !21)
!3288 = !DILocation(line: 71, column: 29, scope: !3282)
!3289 = !DILocalVariable(name: "a", arg: 3, scope: !3282, file: !3182, line: 71, type: !9)
!3290 = !DILocation(line: 71, column: 39, scope: !3282)
!3291 = !DILocalVariable(name: "y", arg: 4, scope: !3282, file: !3182, line: 71, type: !21)
!3292 = !DILocation(line: 71, column: 49, scope: !3282)
!3293 = !DILocalVariable(name: "r23", scope: !3282, file: !3182, line: 103, type: !3190)
!3294 = !DILocation(line: 103, column: 16, scope: !3282)
!3295 = !DILocalVariable(name: "r46", scope: !3282, file: !3182, line: 104, type: !3190)
!3296 = !DILocation(line: 104, column: 16, scope: !3282)
!3297 = !DILocalVariable(name: "t23", scope: !3282, file: !3182, line: 105, type: !3190)
!3298 = !DILocation(line: 105, column: 16, scope: !3282)
!3299 = !DILocalVariable(name: "t46", scope: !3282, file: !3182, line: 106, type: !3190)
!3300 = !DILocation(line: 106, column: 16, scope: !3282)
!3301 = !DILocalVariable(name: "t1", scope: !3282, file: !3182, line: 108, type: !9)
!3302 = !DILocation(line: 108, column: 10, scope: !3282)
!3303 = !DILocalVariable(name: "t2", scope: !3282, file: !3182, line: 108, type: !9)
!3304 = !DILocation(line: 108, column: 14, scope: !3282)
!3305 = !DILocalVariable(name: "t3", scope: !3282, file: !3182, line: 108, type: !9)
!3306 = !DILocation(line: 108, column: 18, scope: !3282)
!3307 = !DILocalVariable(name: "t4", scope: !3282, file: !3182, line: 108, type: !9)
!3308 = !DILocation(line: 108, column: 22, scope: !3282)
!3309 = !DILocalVariable(name: "a1", scope: !3282, file: !3182, line: 108, type: !9)
!3310 = !DILocation(line: 108, column: 26, scope: !3282)
!3311 = !DILocalVariable(name: "a2", scope: !3282, file: !3182, line: 108, type: !9)
!3312 = !DILocation(line: 108, column: 30, scope: !3282)
!3313 = !DILocalVariable(name: "x1", scope: !3282, file: !3182, line: 108, type: !9)
!3314 = !DILocation(line: 108, column: 34, scope: !3282)
!3315 = !DILocalVariable(name: "x2", scope: !3282, file: !3182, line: 108, type: !9)
!3316 = !DILocation(line: 108, column: 38, scope: !3282)
!3317 = !DILocalVariable(name: "z", scope: !3282, file: !3182, line: 108, type: !9)
!3318 = !DILocation(line: 108, column: 42, scope: !3282)
!3319 = !DILocalVariable(name: "i", scope: !3282, file: !3182, line: 110, type: !23)
!3320 = !DILocation(line: 110, column: 7, scope: !3282)
!3321 = !DILocation(line: 115, column: 14, scope: !3282)
!3322 = !DILocation(line: 115, column: 12, scope: !3282)
!3323 = !DILocation(line: 115, column: 6, scope: !3282)
!3324 = !DILocation(line: 116, column: 14, scope: !3282)
!3325 = !DILocation(line: 116, column: 8, scope: !3282)
!3326 = !DILocation(line: 116, column: 6, scope: !3282)
!3327 = !DILocation(line: 117, column: 8, scope: !3282)
!3328 = !DILocation(line: 117, column: 18, scope: !3282)
!3329 = !DILocation(line: 117, column: 16, scope: !3282)
!3330 = !DILocation(line: 117, column: 10, scope: !3282)
!3331 = !DILocation(line: 117, column: 6, scope: !3282)
!3332 = !DILocation(line: 122, column: 11, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !3282, file: !3182, line: 122, column: 3)
!3334 = !DILocation(line: 122, column: 9, scope: !3333)
!3335 = !DILocation(line: 122, column: 16, scope: !3336)
!3336 = !DILexicalBlockFile(scope: !3337, file: !3182, discriminator: 1)
!3337 = distinct !DILexicalBlock(scope: !3333, file: !3182, line: 122, column: 3)
!3338 = !DILocation(line: 122, column: 20, scope: !3336)
!3339 = !DILocation(line: 122, column: 18, scope: !3336)
!3340 = !DILocation(line: 122, column: 3, scope: !3336)
!3341 = !DILocation(line: 128, column: 18, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3337, file: !3182, line: 122, column: 29)
!3343 = !DILocation(line: 128, column: 17, scope: !3342)
!3344 = !DILocation(line: 128, column: 14, scope: !3342)
!3345 = !DILocation(line: 128, column: 8, scope: !3342)
!3346 = !DILocation(line: 129, column: 16, scope: !3342)
!3347 = !DILocation(line: 129, column: 10, scope: !3342)
!3348 = !DILocation(line: 129, column: 8, scope: !3342)
!3349 = !DILocation(line: 130, column: 11, scope: !3342)
!3350 = !DILocation(line: 130, column: 10, scope: !3342)
!3351 = !DILocation(line: 130, column: 21, scope: !3342)
!3352 = !DILocation(line: 130, column: 19, scope: !3342)
!3353 = !DILocation(line: 130, column: 13, scope: !3342)
!3354 = !DILocation(line: 130, column: 8, scope: !3342)
!3355 = !DILocation(line: 131, column: 10, scope: !3342)
!3356 = !DILocation(line: 131, column: 15, scope: !3342)
!3357 = !DILocation(line: 131, column: 13, scope: !3342)
!3358 = !DILocation(line: 131, column: 20, scope: !3342)
!3359 = !DILocation(line: 131, column: 25, scope: !3342)
!3360 = !DILocation(line: 131, column: 23, scope: !3342)
!3361 = !DILocation(line: 131, column: 18, scope: !3342)
!3362 = !DILocation(line: 131, column: 8, scope: !3342)
!3363 = !DILocation(line: 132, column: 23, scope: !3342)
!3364 = !DILocation(line: 132, column: 21, scope: !3342)
!3365 = !DILocation(line: 132, column: 10, scope: !3342)
!3366 = !DILocation(line: 132, column: 8, scope: !3342)
!3367 = !DILocation(line: 133, column: 9, scope: !3342)
!3368 = !DILocation(line: 133, column: 20, scope: !3342)
!3369 = !DILocation(line: 133, column: 18, scope: !3342)
!3370 = !DILocation(line: 133, column: 12, scope: !3342)
!3371 = !DILocation(line: 133, column: 7, scope: !3342)
!3372 = !DILocation(line: 134, column: 16, scope: !3342)
!3373 = !DILocation(line: 134, column: 14, scope: !3342)
!3374 = !DILocation(line: 134, column: 20, scope: !3342)
!3375 = !DILocation(line: 134, column: 25, scope: !3342)
!3376 = !DILocation(line: 134, column: 23, scope: !3342)
!3377 = !DILocation(line: 134, column: 18, scope: !3342)
!3378 = !DILocation(line: 134, column: 8, scope: !3342)
!3379 = !DILocation(line: 135, column: 23, scope: !3342)
!3380 = !DILocation(line: 135, column: 21, scope: !3342)
!3381 = !DILocation(line: 135, column: 10, scope: !3342)
!3382 = !DILocation(line: 135, column: 8, scope: !3342)
!3383 = !DILocation(line: 136, column: 10, scope: !3342)
!3384 = !DILocation(line: 136, column: 21, scope: !3342)
!3385 = !DILocation(line: 136, column: 19, scope: !3342)
!3386 = !DILocation(line: 136, column: 13, scope: !3342)
!3387 = !DILocation(line: 136, column: 6, scope: !3342)
!3388 = !DILocation(line: 136, column: 8, scope: !3342)
!3389 = !DILocation(line: 137, column: 20, scope: !3342)
!3390 = !DILocation(line: 137, column: 19, scope: !3342)
!3391 = !DILocation(line: 137, column: 16, scope: !3342)
!3392 = !DILocation(line: 137, column: 7, scope: !3342)
!3393 = !DILocation(line: 137, column: 5, scope: !3342)
!3394 = !DILocation(line: 137, column: 10, scope: !3342)
!3395 = !DILocation(line: 138, column: 3, scope: !3342)
!3396 = !DILocation(line: 122, column: 24, scope: !3397)
!3397 = !DILexicalBlockFile(scope: !3337, file: !3182, discriminator: 2)
!3398 = !DILocation(line: 122, column: 3, scope: !3397)
!3399 = distinct !{!3399, !3400}
!3400 = !DILocation(line: 122, column: 3, scope: !3282)
!3401 = !DILocation(line: 140, column: 3, scope: !3282)
!3402 = distinct !DISubprogram(name: "timer_clear", scope: !74, file: !74, line: 37, type: !561, isLocal: false, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !70, variables: !68)
!3403 = !DILocalVariable(name: "n", arg: 1, scope: !3402, file: !74, line: 37, type: !23)
!3404 = !DILocation(line: 37, column: 23, scope: !3402)
!3405 = !DILocation(line: 39, column: 13, scope: !3402)
!3406 = !DILocation(line: 39, column: 5, scope: !3402)
!3407 = !DILocation(line: 39, column: 16, scope: !3402)
!3408 = !DILocation(line: 40, column: 11, scope: !3402)
!3409 = !DILocation(line: 40, column: 5, scope: !3402)
!3410 = !DILocation(line: 40, column: 14, scope: !3402)
!3411 = !DILocation(line: 41, column: 1, scope: !3402)
!3412 = distinct !DISubprogram(name: "timer_start", scope: !74, file: !74, line: 47, type: !561, isLocal: false, isDefinition: true, scopeLine: 48, flags: DIFlagPrototyped, isOptimized: false, unit: !70, variables: !68)
!3413 = !DILocalVariable(name: "n", arg: 1, scope: !3412, file: !74, line: 47, type: !23)
!3414 = !DILocation(line: 47, column: 23, scope: !3412)
!3415 = !DILocation(line: 49, column: 16, scope: !3412)
!3416 = !DILocation(line: 49, column: 11, scope: !3412)
!3417 = !DILocation(line: 49, column: 5, scope: !3412)
!3418 = !DILocation(line: 49, column: 5, scope: !3419)
!3419 = !DILexicalBlockFile(scope: !3412, file: !74, discriminator: 1)
!3420 = !DILocation(line: 49, column: 14, scope: !3412)
!3421 = !DILocation(line: 50, column: 1, scope: !3412)
!3422 = distinct !DISubprogram(name: "elapsed_time", scope: !74, file: !74, line: 14, type: !3423, isLocal: true, isDefinition: true, scopeLine: 15, flags: DIFlagPrototyped, isOptimized: false, unit: !70, variables: !68)
!3423 = !DISubroutineType(types: !65)
!3424 = !DILocalVariable(name: "t", scope: !3422, file: !74, line: 16, type: !9)
!3425 = !DILocation(line: 16, column: 12, scope: !3422)
!3426 = !DILocation(line: 20, column: 9, scope: !3422)
!3427 = !DILocation(line: 20, column: 7, scope: !3422)
!3428 = !DILocation(line: 24, column: 13, scope: !3422)
!3429 = !DILocation(line: 24, column: 5, scope: !3422)
!3430 = distinct !DISubprogram(name: "timer_stop", scope: !74, file: !74, line: 56, type: !561, isLocal: false, isDefinition: true, scopeLine: 57, flags: DIFlagPrototyped, isOptimized: false, unit: !70, variables: !68)
!3431 = !DILocalVariable(name: "n", arg: 1, scope: !3430, file: !74, line: 56, type: !23)
!3432 = !DILocation(line: 56, column: 22, scope: !3430)
!3433 = !DILocalVariable(name: "t", scope: !3430, file: !74, line: 58, type: !9)
!3434 = !DILocation(line: 58, column: 12, scope: !3430)
!3435 = !DILocalVariable(name: "now", scope: !3430, file: !74, line: 58, type: !9)
!3436 = !DILocation(line: 58, column: 15, scope: !3430)
!3437 = !DILocation(line: 60, column: 11, scope: !3430)
!3438 = !DILocation(line: 60, column: 9, scope: !3430)
!3439 = !DILocation(line: 61, column: 9, scope: !3430)
!3440 = !DILocation(line: 61, column: 21, scope: !3430)
!3441 = !DILocation(line: 61, column: 15, scope: !3430)
!3442 = !DILocation(line: 61, column: 13, scope: !3430)
!3443 = !DILocation(line: 61, column: 7, scope: !3430)
!3444 = !DILocation(line: 62, column: 19, scope: !3430)
!3445 = !DILocation(line: 62, column: 13, scope: !3430)
!3446 = !DILocation(line: 62, column: 5, scope: !3430)
!3447 = !DILocation(line: 62, column: 16, scope: !3430)
!3448 = !DILocation(line: 63, column: 11, scope: !3430)
!3449 = !DILocation(line: 63, column: 5, scope: !3430)
!3450 = !DILocation(line: 63, column: 13, scope: !3430)
!3451 = !DILocation(line: 65, column: 1, scope: !3430)
!3452 = distinct !DISubprogram(name: "timer_read", scope: !74, file: !74, line: 71, type: !3453, isLocal: false, isDefinition: true, scopeLine: 72, flags: DIFlagPrototyped, isOptimized: false, unit: !70, variables: !68)
!3453 = !DISubroutineType(types: !3454)
!3454 = !{!9, !23}
!3455 = !DILocalVariable(name: "n", arg: 1, scope: !3452, file: !74, line: 71, type: !23)
!3456 = !DILocation(line: 71, column: 24, scope: !3452)
!3457 = !DILocation(line: 73, column: 21, scope: !3452)
!3458 = !DILocation(line: 73, column: 13, scope: !3452)
!3459 = !DILocation(line: 73, column: 5, scope: !3452)
!3460 = distinct !DISubprogram(name: "timer_count", scope: !74, file: !74, line: 76, type: !3461, isLocal: false, isDefinition: true, scopeLine: 77, flags: DIFlagPrototyped, isOptimized: false, unit: !70, variables: !68)
!3461 = !DISubroutineType(types: !3462)
!3462 = !{!80, !23}
!3463 = !DILocalVariable(name: "n", arg: 1, scope: !3460, file: !74, line: 76, type: !23)
!3464 = !DILocation(line: 76, column: 27, scope: !3460)
!3465 = !DILocation(line: 78, column: 18, scope: !3460)
!3466 = !DILocation(line: 78, column: 12, scope: !3460)
!3467 = !DILocation(line: 78, column: 5, scope: !3460)
!3468 = !DILocalVariable(name: "t", arg: 1, scope: !85, file: !82, line: 7, type: !21)
!3469 = !DILocation(line: 7, column: 20, scope: !85)
!3470 = !DILocalVariable(name: "tv", scope: !85, file: !82, line: 11, type: !3471)
!3471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !3472, line: 30, size: 128, align: 64, elements: !3473)
!3472 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "/home/amiryousefi/llvmTemp/Codes/NAS/NPB3.3-OMP-C/common")
!3473 = !{!3474, !3477}
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3471, file: !3472, line: 32, baseType: !3475, size: 64, align: 64)
!3475 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !3476, line: 139, baseType: !326)
!3476 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/amiryousefi/llvmTemp/Codes/NAS/NPB3.3-OMP-C/common")
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !3471, file: !3472, line: 33, baseType: !3478, size: 64, align: 64, offset: 64)
!3478 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !3476, line: 141, baseType: !326)
!3479 = !DILocation(line: 11, column: 19, scope: !85)
!3480 = !DILocation(line: 12, column: 4, scope: !85)
!3481 = !DILocation(line: 13, column: 8, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !85, file: !82, line: 13, column: 8)
!3483 = !DILocation(line: 13, column: 12, scope: !3482)
!3484 = !DILocation(line: 13, column: 8, scope: !85)
!3485 = !DILocation(line: 13, column: 26, scope: !3486)
!3486 = !DILexicalBlockFile(scope: !3482, file: !82, discriminator: 1)
!3487 = !DILocation(line: 13, column: 23, scope: !3486)
!3488 = !DILocation(line: 13, column: 21, scope: !3486)
!3489 = !DILocation(line: 13, column: 17, scope: !3486)
!3490 = !DILocation(line: 14, column: 13, scope: !85)
!3491 = !DILocation(line: 14, column: 22, scope: !85)
!3492 = !DILocation(line: 14, column: 20, scope: !85)
!3493 = !DILocation(line: 14, column: 9, scope: !85)
!3494 = !DILocation(line: 14, column: 39, scope: !85)
!3495 = !DILocation(line: 14, column: 36, scope: !85)
!3496 = !DILocation(line: 14, column: 35, scope: !85)
!3497 = !DILocation(line: 14, column: 27, scope: !85)
!3498 = !DILocation(line: 14, column: 5, scope: !85)
!3499 = !DILocation(line: 14, column: 7, scope: !85)
!3500 = !DILocation(line: 15, column: 1, scope: !85)
