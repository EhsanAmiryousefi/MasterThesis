; ModuleID = '<stdin>'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%ident_t = type { i32, i32, i32, i32, i8* }
%struct.timeval = type { i64, i64 }
%struct.timezone = type { i32, i32 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.utsname = type { [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8] }
%struct.anon = type { i64*, i32* }
%struct.kmp_task_t_with_privates = type { %struct.kmp_task_t, %struct..kmp_privates.t }
%struct.kmp_task_t = type { i8*, i32 (i32, i8*)*, i32, i32 (i32, i8*)* }
%struct..kmp_privates.t = type { i32 }

@stderr = external global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [16 x i8] c"Error (%d): %s\0A\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"Unspecified error.\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"Not enough memory.\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"Unrecognized parameter.\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"Invalid error code.\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"Warning (%d): %s\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"Unspecified warning.\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"Invalid warning code.\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"%Y/%m/%d;%H:%M\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"%s-%s;%d\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"%.2f;%.2f;%.2f\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"n/a\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"successful\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"UNSUCCESSFUL\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"Not requested\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c"%f\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"%3.2f\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@.str.19 = private unnamed_addr constant [238 x i8] c"Benchmark;Parameters;Model;Cutoff;Resources;Result;Time;Sequential;Speed-up;Nodes;Nodes/Sec;Exec Date;Exec Time;Exec Message;Architecture;Processors;Load Avg-1;Load Avg-5;Load Avg-15;Comp Date;Comp Time;Comp Message;CC;CFLAGS;LD;LDFLAGS\0A\00", align 1
@.str.20 = private unnamed_addr constant [94 x i8] c"Benchmark;Parameters;Model;Cutoff;Resources;Result;Time;Sequential;Speed-up;Nodes;Nodes/Sec;\0A\00", align 1
@.str.21 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.22 = private unnamed_addr constant [26 x i8] c"Program             = %s\0A\00", align 1
@.str.23 = private unnamed_addr constant [26 x i8] c"Parameters          = %s\0A\00", align 1
@.str.24 = private unnamed_addr constant [26 x i8] c"Model               = %s\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"Embedded cut-off    = %s\0A\00", align 1
@.str.26 = private unnamed_addr constant [26 x i8] c"# of Threads        = %s\0A\00", align 1
@.str.27 = private unnamed_addr constant [26 x i8] c"Verification        = %s\0A\00", align 1
@.str.28 = private unnamed_addr constant [34 x i8] c"Time Program        = %s seconds\0A\00", align 1
@.str.29 = private unnamed_addr constant [34 x i8] c"Time Sequential     = %s seconds\0A\00", align 1
@.str.30 = private unnamed_addr constant [26 x i8] c"Speed-up            = %s\0A\00", align 1
@.str.31 = private unnamed_addr constant [26 x i8] c"Nodes               = %s\0A\00", align 1
@.str.32 = private unnamed_addr constant [26 x i8] c"Nodes/Sec           = %s\0A\00", align 1
@.str.33 = private unnamed_addr constant [26 x i8] c"Execution Date      = %s\0A\00", align 1
@.str.34 = private unnamed_addr constant [26 x i8] c"Execution Message   = %s\0A\00", align 1
@.str.35 = private unnamed_addr constant [26 x i8] c"Architecture        = %s\0A\00", align 1
@.str.36 = private unnamed_addr constant [26 x i8] c"Load Avg [1:5:15]   = %s\0A\00", align 1
@.str.37 = private unnamed_addr constant [26 x i8] c"Compilation Date    = %s\0A\00", align 1
@.str.38 = private unnamed_addr constant [26 x i8] c"Compilation Message = %s\0A\00", align 1
@.str.39 = private unnamed_addr constant [26 x i8] c"Compiler            = %s\0A\00", align 1
@.str.40 = private unnamed_addr constant [26 x i8] c"Compiler Flags      = %s\0A\00", align 1
@.str.41 = private unnamed_addr constant [26 x i8] c"Linker              = %s\0A\00", align 1
@.str.42 = private unnamed_addr constant [26 x i8] c"Linker Flags        = %s\0A\00", align 1
@.str.43 = private unnamed_addr constant [19 x i8] c"%s;%s;%s;%s;%s;%s;\00", align 1
@.str.44 = private unnamed_addr constant [10 x i8] c"%s;%s;%s;\00", align 1
@.str.45 = private unnamed_addr constant [7 x i8] c"%s;%s;\00", align 1
@.str.46 = private unnamed_addr constant [13 x i8] c"%s;%s;%s;%s;\00", align 1
@.str.47 = private unnamed_addr constant [24 x i8] c"No valid output format\0A\00", align 1
@bots_execname = common global [256 x i8] zeroinitializer, align 16
@bots_exec_date = common global [256 x i8] zeroinitializer, align 16
@bots_exec_message = common global [256 x i8] zeroinitializer, align 16
@bots_check_flag = global i32 0, align 4
@bots_arg_size = global i32 10, align 4
@bots_output_format = global i32 1, align 4
@bots_sequential_flag = global i32 0, align 4
@bots_verbose_mode = global i32 1, align 4
@bots_print_header = global i32 0, align 4
@bots_name = common global [256 x i8] zeroinitializer, align 16
@bots_parameters = common global [256 x i8] zeroinitializer, align 16
@bots_model = common global [256 x i8] zeroinitializer, align 16
@bots_resources = common global [256 x i8] zeroinitializer, align 16
@bots_comp_date = common global [256 x i8] zeroinitializer, align 16
@bots_comp_message = common global [256 x i8] zeroinitializer, align 16
@bots_cc = common global [256 x i8] zeroinitializer, align 16
@bots_cflags = common global [256 x i8] zeroinitializer, align 16
@bots_ld = common global [256 x i8] zeroinitializer, align 16
@bots_ldflags = common global [256 x i8] zeroinitializer, align 16
@bots_cutoff = common global [256 x i8] zeroinitializer, align 16
@bots_time_sequential = global double 0.000000e+00, align 8
@bots_time_program = global double 0.000000e+00, align 8
@bots_result = global i32 3, align 4
@bots_number_of_tasks = global i64 0, align 8
@.str.48 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1.49 = private unnamed_addr constant [22 x i8] c"Usage: %s -[options]\0A\00", align 1
@.str.2.50 = private unnamed_addr constant [20 x i8] c"Where options are:\0A\00", align 1
@.str.3.51 = private unnamed_addr constant [34 x i8] c"  -n <size>  : Number to compute\0A\00", align 1
@.str.4.52 = private unnamed_addr constant [49 x i8] c"  -e <str>   : Include 'str' execution message.\0A\00", align 1
@.str.5.53 = private unnamed_addr constant [49 x i8] c"  -v <level> : Set verbose level (default = 1).\0A\00", align 1
@.str.6.54 = private unnamed_addr constant [26 x i8] c"               0 - none.\0A\00", align 1
@.str.7.55 = private unnamed_addr constant [29 x i8] c"               1 - default.\0A\00", align 1
@.str.8.56 = private unnamed_addr constant [27 x i8] c"               2 - debug.\0A\00", align 1
@.str.9.57 = private unnamed_addr constant [54 x i8] c"  -o <value> : Set output format mode (default = 1).\0A\00", align 1
@.str.10.58 = private unnamed_addr constant [41 x i8] c"               0 - no benchmark output.\0A\00", align 1
@.str.11.59 = private unnamed_addr constant [42 x i8] c"               1 - detailed list format.\0A\00", align 1
@.str.12.60 = private unnamed_addr constant [41 x i8] c"               2 - detailed row format.\0A\00", align 1
@.str.13.61 = private unnamed_addr constant [42 x i8] c"               3 - abridged list format.\0A\00", align 1
@.str.14.62 = private unnamed_addr constant [41 x i8] c"               4 - abridged row format.\0A\00", align 1
@.str.15.63 = private unnamed_addr constant [70 x i8] c"  -z         : Print row header (if output format is a row variant).\0A\00", align 1
@.str.16.64 = private unnamed_addr constant [40 x i8] c"  -s         : Run sequential version.\0A\00", align 1
@.str.17.65 = private unnamed_addr constant [31 x i8] c"  -c         : Check mode ON.\0A\00", align 1
@.str.18.66 = private unnamed_addr constant [51 x i8] c"  -h         : Print program's usage (this help).\0A\00", align 1
@.str.19.67 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.20.68 = private unnamed_addr constant [100 x i8] c"Error: Configure the suite using '--debug' option in order to use a verbose level greather than 1.\0A\00", align 1
@.str.21.69 = private unnamed_addr constant [32 x i8] c"Error: Unrecognized parameter.\0A\00", align 1
@.str.22.70 = private unnamed_addr constant [10 x i8] c"Fibonacci\00", align 1
@.str.23.71 = private unnamed_addr constant [5 x i8] c"N=%d\00", align 1
@.str.24.72 = private unnamed_addr constant [21 x i8] c"OpenMP (using tasks)\00", align 1
@.str.25.73 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.26.74 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@fib_results = global [41 x i64] [i64 0, i64 1, i64 1, i64 2, i64 3, i64 5, i64 8, i64 13, i64 21, i64 34, i64 55, i64 89, i64 144, i64 233, i64 377, i64 610, i64 987, i64 1597, i64 2584, i64 4181, i64 6765, i64 10946, i64 17711, i64 28657, i64 46368, i64 75025, i64 121393, i64 196418, i64 317811, i64 514229, i64 832040, i64 1346269, i64 2178309, i64 3524578, i64 5702887, i64 9227465, i64 14930352, i64 24157817, i64 39088169, i64 63245986, i64 102334155], align 16
@0 = private unnamed_addr constant %ident_t { i32 0, i32 2, i32 0, i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.75, i32 0, i32 0) }, align 8
@.str.75 = private unnamed_addr constant [23 x i8] c";unknown;unknown;0;0;;\00", align 1
@1 = private unnamed_addr constant [20 x i8] c";fib.c;fib;102;10;;\00"
@2 = private unnamed_addr constant [20 x i8] c";fib.c;fib;104;10;;\00"
@3 = private unnamed_addr constant [20 x i8] c";fib.c;fib;107;10;;\00"
@4 = private unnamed_addr constant [21 x i8] c";fib.c;fib0;117;10;;\00"
@5 = private unnamed_addr constant [21 x i8] c";fib.c;fib0;118;10;;\00"
@par_res = internal global i64 0, align 8
@.str.5.78 = private unnamed_addr constant [33 x i8] c"Fibonacci result for %d is %lld\0A\00", align 1
@seq_res = internal global i64 0, align 8
@.str.49 = private unnamed_addr constant [11 x i8] c"error.addr\00"
@.str.50 = private unnamed_addr constant [13 x i8] c"message.addr\00"
@.str.51 = private unnamed_addr constant [13 x i8] c"message.addr\00"
@.str.52 = private unnamed_addr constant [11 x i8] c"error.addr\00"
@.str.53 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.54 = private unnamed_addr constant [11 x i8] c"error.addr\00"
@.str.55 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.56 = private unnamed_addr constant [11 x i8] c"error.addr\00"
@.str.57 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.58 = private unnamed_addr constant [11 x i8] c"error.addr\00"
@.str.59 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.60 = private unnamed_addr constant [11 x i8] c"error.addr\00"
@.str.61 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.62 = private unnamed_addr constant [11 x i8] c"error.addr\00"
@.str.63 = private unnamed_addr constant [13 x i8] c"message.addr\00"
@.str.64 = private unnamed_addr constant [11 x i8] c"error.addr\00"
@.str.65 = private unnamed_addr constant [13 x i8] c"warning.addr\00"
@.str.66 = private unnamed_addr constant [13 x i8] c"message.addr\00"
@.str.67 = private unnamed_addr constant [13 x i8] c"message.addr\00"
@.str.68 = private unnamed_addr constant [13 x i8] c"warning.addr\00"
@.str.69 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.70 = private unnamed_addr constant [13 x i8] c"warning.addr\00"
@.str.71 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.72 = private unnamed_addr constant [13 x i8] c"warning.addr\00"
@.str.73 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.74 = private unnamed_addr constant [13 x i8] c"warning.addr\00"
@.str.76 = private unnamed_addr constant [13 x i8] c"message.addr\00"
@.str.77 = private unnamed_addr constant [2 x i8] c"t\00"
@.str.78 = private unnamed_addr constant [2 x i8] c"t\00"
@.str.79 = private unnamed_addr constant [9 x i8] c"str.addr\00"
@.str.80 = private unnamed_addr constant [9 x i8] c"str.addr\00"
@.str.81 = private unnamed_addr constant [9 x i8] c"str.addr\00"
@.str.82 = private unnamed_addr constant [6 x i8] c"ncpus\00"
@.str.83 = private unnamed_addr constant [9 x i8] c"str.addr\00"
@.str.84 = private unnamed_addr constant [6 x i8] c"ncpus\00"
@.str.85 = private unnamed_addr constant [9 x i8] c"str.addr\00"
@.str.86 = private unnamed_addr constant [9 x i8] c"str.addr\00"
@.str.87 = private unnamed_addr constant [8 x i8] c"loadavg\00"
@.str.88 = private unnamed_addr constant [8 x i8] c"loadavg\00"
@.str.89 = private unnamed_addr constant [8 x i8] c"loadavg\00"
@.str.90 = private unnamed_addr constant [12 x i8] c"bots_result\00"
@.str.91 = private unnamed_addr constant [18 x i8] c"bots_time_program\00"
@.str.92 = private unnamed_addr constant [21 x i8] c"bots_sequential_flag\00"
@.str.93 = private unnamed_addr constant [21 x i8] c"bots_time_sequential\00"
@.str.94 = private unnamed_addr constant [21 x i8] c"bots_sequential_flag\00"
@.str.95 = private unnamed_addr constant [21 x i8] c"bots_time_sequential\00"
@.str.96 = private unnamed_addr constant [18 x i8] c"bots_time_program\00"
@.str.97 = private unnamed_addr constant [21 x i8] c"bots_number_of_tasks\00"
@.str.98 = private unnamed_addr constant [21 x i8] c"bots_number_of_tasks\00"
@.str.99 = private unnamed_addr constant [18 x i8] c"bots_time_program\00"
@.str.100 = private unnamed_addr constant [18 x i8] c"bots_print_header\00"
@.str.101 = private unnamed_addr constant [19 x i8] c"bots_output_format\00"
@.str.102 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.103 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.104 = private unnamed_addr constant [19 x i8] c"bots_output_format\00"
@.str.105 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.106 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.107 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.108 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.109 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.110 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.111 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.112 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.113 = private unnamed_addr constant [21 x i8] c"bots_sequential_flag\00"
@.str.114 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.115 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.116 = private unnamed_addr constant [21 x i8] c"bots_number_of_tasks\00"
@.str.117 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.118 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.119 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.120 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.121 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.122 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.123 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.124 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.125 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.126 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.127 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.128 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.129 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.130 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.131 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.132 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.133 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.134 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.135 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.136 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.137 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.138 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.139 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.140 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.141 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.142 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.143 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.144 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.145 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.146 = private unnamed_addr constant [21 x i8] c"bots_sequential_flag\00"
@.str.147 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.148 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.149 = private unnamed_addr constant [21 x i8] c"bots_number_of_tasks\00"
@.str.150 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.151 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.152 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.153 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.154 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.155 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.156 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.157 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.158 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.159 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.160 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.161 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.162 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.163 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.164 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.165 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.166 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.167 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.168 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.169 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.170 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.171 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.172 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.173 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.174 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.175 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.176 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.177 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.178 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.179 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.180 = private unnamed_addr constant [10 x i8] c"argc.addr\00"
@.str.181 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.182 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.183 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.184 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.185 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.186 = private unnamed_addr constant [10 x i8] c"argc.addr\00"
@.str.187 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.188 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.189 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.190 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.191 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.192 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.193 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.194 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.195 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.196 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.197 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.198 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.199 = private unnamed_addr constant [16 x i8] c"bots_check_flag\00"
@.str.200 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.201 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.202 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.203 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.204 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.205 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.206 = private unnamed_addr constant [10 x i8] c"argc.addr\00"
@.str.207 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.208 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.209 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.210 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.211 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.212 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.213 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.214 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.215 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.216 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.217 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.218 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.219 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.220 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.221 = private unnamed_addr constant [10 x i8] c"argc.addr\00"
@.str.222 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.223 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.224 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.225 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.226 = private unnamed_addr constant [14 x i8] c"bots_arg_size\00"
@.str.227 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.228 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.229 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.230 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.231 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.232 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.233 = private unnamed_addr constant [10 x i8] c"argc.addr\00"
@.str.234 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.235 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.236 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.237 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.238 = private unnamed_addr constant [19 x i8] c"bots_output_format\00"
@.str.239 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.240 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.241 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.242 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.243 = private unnamed_addr constant [21 x i8] c"bots_sequential_flag\00"
@.str.244 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.245 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.246 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.247 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.248 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.249 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.250 = private unnamed_addr constant [10 x i8] c"argc.addr\00"
@.str.251 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.252 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.253 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.254 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.255 = private unnamed_addr constant [18 x i8] c"bots_verbose_mode\00"
@.str.256 = private unnamed_addr constant [18 x i8] c"bots_verbose_mode\00"
@.str.257 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.258 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.259 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.260 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.261 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.262 = private unnamed_addr constant [18 x i8] c"bots_print_header\00"
@.str.263 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.264 = private unnamed_addr constant [7 x i8] c"stderr\00"
@.str.265 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.266 = private unnamed_addr constant [2 x i8] c"i\00"
@.str.267 = private unnamed_addr constant [10 x i8] c"argc.addr\00"
@.str.268 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.269 = private unnamed_addr constant [10 x i8] c"argc.addr\00"
@.str.270 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.271 = private unnamed_addr constant [14 x i8] c"bots_arg_size\00"
@.str.272 = private unnamed_addr constant [10 x i8] c"argc.addr\00"
@.str.273 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.274 = private unnamed_addr constant [10 x i8] c"argc.addr\00"
@.str.275 = private unnamed_addr constant [10 x i8] c"argv.addr\00"
@.str.276 = private unnamed_addr constant [21 x i8] c"bots_sequential_flag\00"
@.str.277 = private unnamed_addr constant [21 x i8] c"bots_sequential_flag\00"
@.str.278 = private unnamed_addr constant [13 x i8] c"bots_t_start\00"
@.str.279 = private unnamed_addr constant [14 x i8] c"bots_arg_size\00"
@.str.280 = private unnamed_addr constant [11 x i8] c"bots_t_end\00"
@.str.281 = private unnamed_addr constant [11 x i8] c"bots_t_end\00"
@.str.282 = private unnamed_addr constant [13 x i8] c"bots_t_start\00"
@.str.283 = private unnamed_addr constant [21 x i8] c"bots_time_sequential\00"
@.str.284 = private unnamed_addr constant [13 x i8] c"bots_t_start\00"
@.str.285 = private unnamed_addr constant [14 x i8] c"bots_arg_size\00"
@.str.286 = private unnamed_addr constant [11 x i8] c"bots_t_end\00"
@.str.287 = private unnamed_addr constant [11 x i8] c"bots_t_end\00"
@.str.288 = private unnamed_addr constant [13 x i8] c"bots_t_start\00"
@.str.289 = private unnamed_addr constant [18 x i8] c"bots_time_program\00"
@.str.290 = private unnamed_addr constant [16 x i8] c"bots_check_flag\00"
@.str.291 = private unnamed_addr constant [14 x i8] c"bots_arg_size\00"
@.str.292 = private unnamed_addr constant [12 x i8] c"bots_result\00"
@.str.293 = private unnamed_addr constant [7 x i8] c"n.addr\00"
@.str.294 = private unnamed_addr constant [7 x i8] c"n.addr\00"
@.str.295 = private unnamed_addr constant [7 x i8] c"n.addr\00"
@.str.296 = private unnamed_addr constant [7 x i8] c"n.addr\00"
@.str.297 = private unnamed_addr constant [2 x i8] c"x\00"
@.str.298 = private unnamed_addr constant [7 x i8] c"n.addr\00"
@.str.299 = private unnamed_addr constant [2 x i8] c"y\00"
@.str.300 = private unnamed_addr constant [2 x i8] c"x\00"
@.str.301 = private unnamed_addr constant [2 x i8] c"y\00"
@.str.302 = private unnamed_addr constant [7 x i8] c"retval\00"
@.str.303 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.304 = private unnamed_addr constant [12 x i8] c"Main Thread\00"
@.str.305 = private unnamed_addr constant [111 x i8] c"/media/norouzi/90cafd61-f918-48a5-9298-db353cb6be30/software/benchmarks/botsTemp/fib/fib.c: fib :: line No: 97\00"
@.str.306 = private unnamed_addr constant [7 x i8] c"n.addr\00"
@.str.307 = private unnamed_addr constant [7 x i8] c"n.addr\00"
@.str.308 = private unnamed_addr constant [7 x i8] c"n.addr\00"
@.str.309 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.310 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.311 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.312 = private unnamed_addr constant [12 x i8] c"Main Thread\00"
@.str.313 = private unnamed_addr constant [111 x i8] c"/media/norouzi/90cafd61-f918-48a5-9298-db353cb6be30/software/benchmarks/botsTemp/fib/fib.c: fib :: line No: 97\00"
@.str.314 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.315 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.316 = private unnamed_addr constant [4 x i8] c"ref\00"
@.str.317 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.318 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.319 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.320 = private unnamed_addr constant [12 x i8] c"Main Thread\00"
@.str.321 = private unnamed_addr constant [111 x i8] c"/media/norouzi/90cafd61-f918-48a5-9298-db353cb6be30/software/benchmarks/botsTemp/fib/fib.c: fib :: line No: 97\00"
@.str.322 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.323 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.324 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.325 = private unnamed_addr constant [12 x i8] c"Main Thread\00"
@.str.326 = private unnamed_addr constant [111 x i8] c"/media/norouzi/90cafd61-f918-48a5-9298-db353cb6be30/software/benchmarks/botsTemp/fib/fib.c: fib :: line No: 97\00"
@.str.327 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.328 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.329 = private unnamed_addr constant [5 x i8] c"ref2\00"
@.str.330 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.331 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.332 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.333 = private unnamed_addr constant [12 x i8] c"Main Thread\00"
@.str.334 = private unnamed_addr constant [111 x i8] c"/media/norouzi/90cafd61-f918-48a5-9298-db353cb6be30/software/benchmarks/botsTemp/fib/fib.c: fib :: line No: 97\00"
@.str.335 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.336 = private unnamed_addr constant [12 x i8] c"Main Thread\00"
@.str.337 = private unnamed_addr constant [111 x i8] c"/media/norouzi/90cafd61-f918-48a5-9298-db353cb6be30/software/benchmarks/botsTemp/fib/fib.c: fib :: line No: 97\00"
@.str.338 = private unnamed_addr constant [2 x i8] c"x\00"
@.str.339 = private unnamed_addr constant [2 x i8] c"y\00"
@.str.340 = private unnamed_addr constant [7 x i8] c"retval\00"
@.str.341 = private unnamed_addr constant [12 x i8] c"Main Thread\00"
@.str.342 = private unnamed_addr constant [125 x i8] c"/media/norouzi/90cafd61-f918-48a5-9298-db353cb6be30/software/benchmarks/botsTemp/fib/fib.c: .omp_task_entry. :: line No: 103\00"
@.str.343 = private unnamed_addr constant [6 x i8] c".addr\00"
@.str.344 = private unnamed_addr constant [7 x i8] c".addr1\00"
@.str.345 = private unnamed_addr constant [6 x i8] c".addr\00"
@.str.346 = private unnamed_addr constant [7 x i8] c".addr1\00"
@.str.347 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.348 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.349 = private unnamed_addr constant [20 x i8] c".global_tid..addr.i\00"
@.str.350 = private unnamed_addr constant [17 x i8] c".part_id..addr.i\00"
@.str.351 = private unnamed_addr constant [18 x i8] c".privates..addr.i\00"
@.str.352 = private unnamed_addr constant [17 x i8] c".copy_fn..addr.i\00"
@.str.353 = private unnamed_addr constant [17 x i8] c"__context.addr.i\00"
@.str.354 = private unnamed_addr constant [17 x i8] c"__context.addr.i\00"
@.str.355 = private unnamed_addr constant [17 x i8] c".copy_fn..addr.i\00"
@.str.356 = private unnamed_addr constant [18 x i8] c".privates..addr.i\00"
@.str.357 = private unnamed_addr constant [6 x i8] c"tmp.i\00"
@.str.358 = private unnamed_addr constant [6 x i8] c"tmp.i\00"
@.str.359 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.360 = private unnamed_addr constant [6 x i8] c"ref.i\00"
@.str.361 = private unnamed_addr constant [12 x i8] c"Main Thread\00"
@.str.362 = private unnamed_addr constant [132 x i8] c"/media/norouzi/90cafd61-f918-48a5-9298-db353cb6be30/software/benchmarks/botsTemp/fib/fib.c: .omp_task_privates_map. :: line No: 103\00"
@.str.363 = private unnamed_addr constant [6 x i8] c".addr\00"
@.str.364 = private unnamed_addr constant [7 x i8] c".addr1\00"
@.str.365 = private unnamed_addr constant [6 x i8] c".addr\00"
@.str.366 = private unnamed_addr constant [7 x i8] c".addr1\00"
@.str.367 = private unnamed_addr constant [7 x i8] c".addr1\00"
@.str.368 = private unnamed_addr constant [12 x i8] c"Main Thread\00"
@.str.369 = private unnamed_addr constant [127 x i8] c"/media/norouzi/90cafd61-f918-48a5-9298-db353cb6be30/software/benchmarks/botsTemp/fib/fib.c: .omp_task_entry..3 :: line No: 105\00"
@.str.370 = private unnamed_addr constant [6 x i8] c".addr\00"
@.str.371 = private unnamed_addr constant [7 x i8] c".addr1\00"
@.str.372 = private unnamed_addr constant [6 x i8] c".addr\00"
@.str.373 = private unnamed_addr constant [7 x i8] c".addr1\00"
@.str.374 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.375 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.376 = private unnamed_addr constant [20 x i8] c".global_tid..addr.i\00"
@.str.377 = private unnamed_addr constant [17 x i8] c".part_id..addr.i\00"
@.str.378 = private unnamed_addr constant [18 x i8] c".privates..addr.i\00"
@.str.379 = private unnamed_addr constant [17 x i8] c".copy_fn..addr.i\00"
@.str.380 = private unnamed_addr constant [17 x i8] c"__context.addr.i\00"
@.str.381 = private unnamed_addr constant [17 x i8] c"__context.addr.i\00"
@.str.382 = private unnamed_addr constant [17 x i8] c".copy_fn..addr.i\00"
@.str.383 = private unnamed_addr constant [18 x i8] c".privates..addr.i\00"
@.str.384 = private unnamed_addr constant [6 x i8] c"tmp.i\00"
@.str.385 = private unnamed_addr constant [6 x i8] c"tmp.i\00"
@.str.386 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.387 = private unnamed_addr constant [6 x i8] c"ref.i\00"
@.str.388 = private unnamed_addr constant [12 x i8] c"Main Thread\00"
@.str.389 = private unnamed_addr constant [134 x i8] c"/media/norouzi/90cafd61-f918-48a5-9298-db353cb6be30/software/benchmarks/botsTemp/fib/fib.c: .omp_task_privates_map..2 :: line No: 105\00"
@.str.390 = private unnamed_addr constant [6 x i8] c".addr\00"
@.str.391 = private unnamed_addr constant [7 x i8] c".addr1\00"
@.str.392 = private unnamed_addr constant [6 x i8] c".addr\00"
@.str.393 = private unnamed_addr constant [7 x i8] c".addr1\00"
@.str.394 = private unnamed_addr constant [7 x i8] c".addr1\00"
@.str.395 = private unnamed_addr constant [7 x i8] c"n.addr\00"
@.str.396 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.397 = private unnamed_addr constant [12 x i8] c"Main Thread\00"
@.str.398 = private unnamed_addr constant [113 x i8] c"/media/norouzi/90cafd61-f918-48a5-9298-db353cb6be30/software/benchmarks/botsTemp/fib/fib.c: fib0 :: line No: 115\00"
@.str.399 = private unnamed_addr constant [18 x i8] c"bots_verbose_mode\00"
@.str.400 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.401 = private unnamed_addr constant [7 x i8] c"n.addr\00"
@.str.402 = private unnamed_addr constant [8 x i8] c"par_res\00"
@.str.403 = private unnamed_addr constant [12 x i8] c"Main Thread\00"
@.str.404 = private unnamed_addr constant [125 x i8] c"/media/norouzi/90cafd61-f918-48a5-9298-db353cb6be30/software/benchmarks/botsTemp/fib/fib.c: .omp_outlined..4 :: line No: 118\00"
@.str.405 = private unnamed_addr constant [18 x i8] c".global_tid..addr\00"
@.str.406 = private unnamed_addr constant [17 x i8] c".bound_tid..addr\00"
@.str.407 = private unnamed_addr constant [7 x i8] c"n.addr\00"
@.str.408 = private unnamed_addr constant [7 x i8] c"n.addr\00"
@.str.409 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.410 = private unnamed_addr constant [18 x i8] c".global_tid..addr\00"
@.str.411 = private unnamed_addr constant [18 x i8] c".global_tid..addr\00"
@.str.412 = private unnamed_addr constant [12 x i8] c"Main Thread\00"
@.str.413 = private unnamed_addr constant [125 x i8] c"/media/norouzi/90cafd61-f918-48a5-9298-db353cb6be30/software/benchmarks/botsTemp/fib/fib.c: .omp_outlined..4 :: line No: 118\00"
@.str.414 = private unnamed_addr constant [7 x i8] c"n.addr\00"
@.str.415 = private unnamed_addr constant [8 x i8] c"par_res\00"
@.str.416 = private unnamed_addr constant [20 x i8] c"NO VARNAME ATTACHED\00"
@.str.417 = private unnamed_addr constant [12 x i8] c"Main Thread\00"
@.str.418 = private unnamed_addr constant [125 x i8] c"/media/norouzi/90cafd61-f918-48a5-9298-db353cb6be30/software/benchmarks/botsTemp/fib/fib.c: .omp_outlined..4 :: line No: 118\00"
@.str.419 = private unnamed_addr constant [7 x i8] c"n.addr\00"
@.str.420 = private unnamed_addr constant [7 x i8] c"n.addr\00"
@.str.421 = private unnamed_addr constant [8 x i8] c"seq_res\00"
@.str.422 = private unnamed_addr constant [18 x i8] c"bots_verbose_mode\00"
@.str.423 = private unnamed_addr constant [7 x i8] c"stdout\00"
@.str.424 = private unnamed_addr constant [7 x i8] c"n.addr\00"
@.str.425 = private unnamed_addr constant [8 x i8] c"seq_res\00"
@.str.426 = private unnamed_addr constant [7 x i8] c"n.addr\00"
@.str.427 = private unnamed_addr constant [7 x i8] c"n.addr\00"
@.str.428 = private unnamed_addr constant [7 x i8] c"n.addr\00"
@.str.429 = private unnamed_addr constant [12 x i8] c"fib_results\00"
@.str.430 = private unnamed_addr constant [7 x i8] c"n.addr\00"
@.str.431 = private unnamed_addr constant [7 x i8] c"n.addr\00"
@.str.432 = private unnamed_addr constant [7 x i8] c"retval\00"
@.str.433 = private unnamed_addr constant [7 x i8] c"n.addr\00"
@.str.434 = private unnamed_addr constant [21 x i8] c"bots_sequential_flag\00"
@.str.435 = private unnamed_addr constant [8 x i8] c"par_res\00"
@.str.436 = private unnamed_addr constant [8 x i8] c"seq_res\00"
@.str.437 = private unnamed_addr constant [7 x i8] c"result\00"
@.str.438 = private unnamed_addr constant [7 x i8] c"result\00"
@.str.439 = private unnamed_addr constant [7 x i8] c"n.addr\00"
@.str.440 = private unnamed_addr constant [8 x i8] c"seq_res\00"
@.str.441 = private unnamed_addr constant [8 x i8] c"par_res\00"
@.str.442 = private unnamed_addr constant [8 x i8] c"seq_res\00"
@.str.443 = private unnamed_addr constant [7 x i8] c"result\00"
@.str.444 = private unnamed_addr constant [7 x i8] c"result\00"
@.str.445 = private unnamed_addr constant [7 x i8] c"result\00"

; Function Attrs: nounwind uwtable
define void @bots_error(i32 %error, i8* %message) #0 !dbg !280 {
entry:
  %error.addr = alloca i32, align 4
  %message.addr = alloca i8*, align 8
  %0 = ptrtoint i32* %error.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.49, i32 0, i32 0))
  store i32 %error, i32* %error.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %error.addr, metadata !285, metadata !286), !dbg !287
  %1 = ptrtoint i8** %message.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.50, i32 0, i32 0))
  store i8* %message, i8** %message.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %message.addr, metadata !288, metadata !286), !dbg !289
  %2 = ptrtoint i8** %message.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %2, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.51, i32 0, i32 0))
  %3 = load i8*, i8** %message.addr, align 8, !dbg !290
  %cmp = icmp eq i8* %3, null, !dbg !292
  br i1 %cmp, label %if.then, label %if.else, !dbg !293

if.then:                                          ; preds = %entry
  %4 = ptrtoint i32* %error.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %4, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.52, i32 0, i32 0))
  %5 = load i32, i32* %error.addr, align 4, !dbg !294
  switch i32 %5, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb3
  ], !dbg !296

sw.bb:                                            ; preds = %if.then
  %6 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %6, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0))
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !297
  %8 = ptrtoint i32* %error.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %8, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.54, i32 0, i32 0))
  %9 = load i32, i32* %error.addr, align 4, !dbg !299
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), i32 %9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i32 0, i32 0)), !dbg !300
  br label %sw.epilog, !dbg !301

sw.bb1:                                           ; preds = %if.then
  %10 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %10, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0))
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !302
  %12 = ptrtoint i32* %error.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %12, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.56, i32 0, i32 0))
  %13 = load i32, i32* %error.addr, align 4, !dbg !303
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), i32 %13, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0)), !dbg !304
  br label %sw.epilog, !dbg !305

sw.bb3:                                           ; preds = %if.then
  %14 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %14, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i32 0, i32 0))
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !306
  %16 = ptrtoint i32* %error.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %16, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i32 0, i32 0))
  %17 = load i32, i32* %error.addr, align 4, !dbg !307
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), i32 %17, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i32 0, i32 0)), !dbg !308
  call void @bots_print_usage(), !dbg !309
  br label %sw.epilog, !dbg !310

sw.default:                                       ; preds = %if.then
  %18 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %18, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.59, i32 0, i32 0))
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !311
  %20 = ptrtoint i32* %error.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %20, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.60, i32 0, i32 0))
  %21 = load i32, i32* %error.addr, align 4, !dbg !312
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), i32 %21, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i32 0, i32 0)), !dbg !313
  br label %sw.epilog, !dbg !314

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb1, %sw.bb
  br label %if.end, !dbg !315

if.else:                                          ; preds = %entry
  %22 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %22, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.61, i32 0, i32 0))
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !316
  %24 = ptrtoint i32* %error.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %24, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i32 0, i32 0))
  %25 = load i32, i32* %error.addr, align 4, !dbg !317
  %26 = ptrtoint i8** %message.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %26, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.63, i32 0, i32 0))
  %27 = load i8*, i8** %message.addr, align 8, !dbg !318
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), i32 %25, i8* %27), !dbg !319
  br label %if.end

if.end:                                           ; preds = %if.else, %sw.epilog
  %28 = ptrtoint i32* %error.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %28, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64, i32 0, i32 0))
  %29 = load i32, i32* %error.addr, align 4, !dbg !320
  %add = add nsw i32 100, %29, !dbg !321
  call void @exit(i32 %add) #8, !dbg !322
  unreachable, !dbg !322

return:                                           ; No predecessors!
  ret void, !dbg !323
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: noreturn nounwind
declare void @exit(i32) #3

; Function Attrs: nounwind uwtable
define void @bots_warning(i32 %warning, i8* %message) #0 !dbg !324 {
entry:
  %warning.addr = alloca i32, align 4
  %message.addr = alloca i8*, align 8
  %0 = ptrtoint i32* %warning.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i32 0, i32 0))
  store i32 %warning, i32* %warning.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %warning.addr, metadata !325, metadata !286), !dbg !326
  %1 = ptrtoint i8** %message.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.66, i32 0, i32 0))
  store i8* %message, i8** %message.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %message.addr, metadata !327, metadata !286), !dbg !328
  %2 = ptrtoint i8** %message.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %2, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.67, i32 0, i32 0))
  %3 = load i8*, i8** %message.addr, align 8, !dbg !329
  %cmp = icmp eq i8* %3, null, !dbg !331
  br i1 %cmp, label %if.then, label %if.else, !dbg !332

if.then:                                          ; preds = %entry
  %4 = ptrtoint i32* %warning.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %4, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.68, i32 0, i32 0))
  %5 = load i32, i32* %warning.addr, align 4, !dbg !333
  switch i32 %5, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !335

sw.bb:                                            ; preds = %if.then
  %6 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %6, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i32 0, i32 0))
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !336
  %8 = ptrtoint i32* %warning.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %8, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.70, i32 0, i32 0))
  %9 = load i32, i32* %warning.addr, align 4, !dbg !338
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i32 0, i32 0), i32 %9, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0)), !dbg !339
  br label %sw.epilog, !dbg !340

sw.default:                                       ; preds = %if.then
  %10 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %10, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.71, i32 0, i32 0))
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !341
  %12 = ptrtoint i32* %warning.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %12, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.72, i32 0, i32 0))
  %13 = load i32, i32* %warning.addr, align 4, !dbg !342
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i32 0, i32 0), i32 %13, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i32 0, i32 0)), !dbg !343
  br label %sw.epilog, !dbg !344

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  br label %if.end, !dbg !345

if.else:                                          ; preds = %entry
  %14 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %14, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i32 0, i32 0))
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !346
  %16 = ptrtoint i32* %warning.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %16, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.74, i32 0, i32 0))
  %17 = load i32, i32* %warning.addr, align 4, !dbg !347
  %18 = ptrtoint i8** %message.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %18, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.76, i32 0, i32 0))
  %19 = load i8*, i8** %message.addr, align 8, !dbg !348
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i32 0, i32 0), i32 %17, i8* %19), !dbg !349
  br label %if.end

if.end:                                           ; preds = %if.else, %sw.epilog
  ret void, !dbg !350
}

; Function Attrs: nounwind uwtable
define i64 @bots_usecs() #0 !dbg !351 {
entry:
  %t = alloca %struct.timeval, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval* %t, metadata !355, metadata !286), !dbg !364
  %call = call i32 @gettimeofday(%struct.timeval* %t, %struct.timezone* null) #9, !dbg !365
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %t, i32 0, i32 0, !dbg !366
  %0 = ptrtoint i64* %tv_sec to i64
  call void @__DiscoPoPOpenMPRead(i64 %0, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.77, i32 0, i32 0))
  %1 = load i64, i64* %tv_sec, align 8, !dbg !366
  %mul = mul nsw i64 %1, 1000000, !dbg !367
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %t, i32 0, i32 1, !dbg !368
  %2 = ptrtoint i64* %tv_usec to i64
  call void @__DiscoPoPOpenMPRead(i64 %2, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.78, i32 0, i32 0))
  %3 = load i64, i64* %tv_usec, align 8, !dbg !368
  %add = add nsw i64 %mul, %3, !dbg !369
  ret i64 %add, !dbg !370
}

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval*, %struct.timezone*) #4

; Function Attrs: nounwind uwtable
define void @bots_get_date(i8* %str) #0 !dbg !371 {
entry:
  %str.addr = alloca i8*, align 8
  %now = alloca i64, align 8
  %0 = ptrtoint i8** %str.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.79, i32 0, i32 0))
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !374, metadata !286), !dbg !375
  call void @llvm.dbg.declare(metadata i64* %now, metadata !376, metadata !286), !dbg !379
  %call = call i64 @time(i64* %now) #9, !dbg !380
  %1 = ptrtoint i8** %str.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %1, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.80, i32 0, i32 0))
  %2 = load i8*, i8** %str.addr, align 8, !dbg !381
  %call1 = call %struct.tm* @gmtime(i64* %now) #9, !dbg !382
  %call2 = call i64 @strftime(i8* %2, i64 32, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i32 0, i32 0), %struct.tm* %call1) #9, !dbg !383
  ret void, !dbg !385
}

; Function Attrs: nounwind
declare i64 @time(i64*) #4

; Function Attrs: nounwind
declare %struct.tm* @gmtime(i64*) #4

; Function Attrs: nounwind
declare i64 @strftime(i8*, i64, i8*, %struct.tm*) #4

; Function Attrs: nounwind uwtable
define void @bots_get_architecture(i8* %str) #0 !dbg !386 {
entry:
  %str.addr = alloca i8*, align 8
  %ncpus = alloca i32, align 4
  %architecture = alloca %struct.utsname, align 1
  %0 = ptrtoint i8** %str.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.81, i32 0, i32 0))
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !387, metadata !286), !dbg !388
  call void @llvm.dbg.declare(metadata i32* %ncpus, metadata !389, metadata !286), !dbg !390
  %call = call i64 @sysconf(i32 83) #9, !dbg !391
  %conv = trunc i64 %call to i32, !dbg !391
  %1 = ptrtoint i32* %ncpus to i64
  call void @__DiscoPoPOpenMPWrite(i64 %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.82, i32 0, i32 0))
  store i32 %conv, i32* %ncpus, align 4, !dbg !390
  call void @llvm.dbg.declare(metadata %struct.utsname* %architecture, metadata !392, metadata !286), !dbg !405
  %call1 = call i32 @uname(%struct.utsname* %architecture) #9, !dbg !406
  %2 = ptrtoint i8** %str.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %2, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0))
  %3 = load i8*, i8** %str.addr, align 8, !dbg !407
  %sysname = getelementptr inbounds %struct.utsname, %struct.utsname* %architecture, i32 0, i32 0, !dbg !408
  %arraydecay = getelementptr inbounds [65 x i8], [65 x i8]* %sysname, i32 0, i32 0, !dbg !409
  %machine = getelementptr inbounds %struct.utsname, %struct.utsname* %architecture, i32 0, i32 4, !dbg !410
  %arraydecay2 = getelementptr inbounds [65 x i8], [65 x i8]* %machine, i32 0, i32 0, !dbg !411
  %4 = ptrtoint i32* %ncpus to i64
  call void @__DiscoPoPOpenMPRead(i64 %4, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i32 0, i32 0))
  %5 = load i32, i32* %ncpus, align 4, !dbg !412
  %call3 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %3, i64 256, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i32 0, i32 0), i8* %arraydecay, i8* %arraydecay2, i32 %5) #9, !dbg !413
  ret void, !dbg !414
}

; Function Attrs: nounwind
declare i64 @sysconf(i32) #4

; Function Attrs: nounwind
declare i32 @uname(%struct.utsname*) #4

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i64, i8*, ...) #4

; Function Attrs: nounwind uwtable
define void @bots_get_load_average(i8* %str) #0 !dbg !415 {
entry:
  %str.addr = alloca i8*, align 8
  %loadavg = alloca [3 x double], align 16
  %0 = ptrtoint i8** %str.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i32 0, i32 0))
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !416, metadata !286), !dbg !417
  call void @llvm.dbg.declare(metadata [3 x double]* %loadavg, metadata !418, metadata !286), !dbg !422
  %arraydecay = getelementptr inbounds [3 x double], [3 x double]* %loadavg, i32 0, i32 0, !dbg !423
  %call = call i32 @getloadavg(double* %arraydecay, i32 3) #9, !dbg !424
  %1 = ptrtoint i8** %str.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %1, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i32 0, i32 0))
  %2 = load i8*, i8** %str.addr, align 8, !dbg !425
  %arrayidx = getelementptr inbounds [3 x double], [3 x double]* %loadavg, i64 0, i64 0, !dbg !426
  %3 = ptrtoint double* %arrayidx to i64
  call void @__DiscoPoPOpenMPRead(i64 %3, i32 16, i32 0, i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.87, i32 0, i32 0))
  %4 = load double, double* %arrayidx, align 16, !dbg !426
  %arrayidx1 = getelementptr inbounds [3 x double], [3 x double]* %loadavg, i64 0, i64 1, !dbg !427
  %5 = ptrtoint double* %arrayidx1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %5, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.88, i32 0, i32 0))
  %6 = load double, double* %arrayidx1, align 8, !dbg !427
  %arrayidx2 = getelementptr inbounds [3 x double], [3 x double]* %loadavg, i64 0, i64 2, !dbg !428
  %7 = ptrtoint double* %arrayidx2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %7, i32 16, i32 0, i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.89, i32 0, i32 0))
  %8 = load double, double* %arrayidx2, align 16, !dbg !428
  %call3 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 256, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0), double %4, double %6, double %8) #9, !dbg !429
  ret void, !dbg !430
}

; Function Attrs: nounwind
declare i32 @getloadavg(double*, i32) #4

; Function Attrs: nounwind uwtable
define void @bots_print_results() #0 !dbg !431 {
entry:
  %str_name = alloca [256 x i8], align 16
  %str_parameters = alloca [256 x i8], align 16
  %str_model = alloca [256 x i8], align 16
  %str_resources = alloca [256 x i8], align 16
  %str_result = alloca [15 x i8], align 1
  %str_time_program = alloca [15 x i8], align 1
  %str_time_sequential = alloca [15 x i8], align 1
  %str_speed_up = alloca [15 x i8], align 1
  %str_number_of_tasks = alloca [15 x i8], align 1
  %str_number_of_tasks_per_second = alloca [15 x i8], align 1
  %str_exec_date = alloca [256 x i8], align 16
  %str_exec_message = alloca [256 x i8], align 16
  %str_architecture = alloca [256 x i8], align 16
  %str_load_avg = alloca [256 x i8], align 16
  %str_comp_date = alloca [256 x i8], align 16
  %str_comp_message = alloca [256 x i8], align 16
  %str_cc = alloca [256 x i8], align 16
  %str_cflags = alloca [256 x i8], align 16
  %str_ld = alloca [256 x i8], align 16
  %str_ldflags = alloca [256 x i8], align 16
  %str_cutoff = alloca [256 x i8], align 16
  call void @llvm.dbg.declare(metadata [256 x i8]* %str_name, metadata !434, metadata !286), !dbg !435
  call void @llvm.dbg.declare(metadata [256 x i8]* %str_parameters, metadata !436, metadata !286), !dbg !437
  call void @llvm.dbg.declare(metadata [256 x i8]* %str_model, metadata !438, metadata !286), !dbg !439
  call void @llvm.dbg.declare(metadata [256 x i8]* %str_resources, metadata !440, metadata !286), !dbg !441
  call void @llvm.dbg.declare(metadata [15 x i8]* %str_result, metadata !442, metadata !286), !dbg !446
  call void @llvm.dbg.declare(metadata [15 x i8]* %str_time_program, metadata !447, metadata !286), !dbg !448
  call void @llvm.dbg.declare(metadata [15 x i8]* %str_time_sequential, metadata !449, metadata !286), !dbg !450
  call void @llvm.dbg.declare(metadata [15 x i8]* %str_speed_up, metadata !451, metadata !286), !dbg !452
  call void @llvm.dbg.declare(metadata [15 x i8]* %str_number_of_tasks, metadata !453, metadata !286), !dbg !454
  call void @llvm.dbg.declare(metadata [15 x i8]* %str_number_of_tasks_per_second, metadata !455, metadata !286), !dbg !456
  call void @llvm.dbg.declare(metadata [256 x i8]* %str_exec_date, metadata !457, metadata !286), !dbg !458
  call void @llvm.dbg.declare(metadata [256 x i8]* %str_exec_message, metadata !459, metadata !286), !dbg !460
  call void @llvm.dbg.declare(metadata [256 x i8]* %str_architecture, metadata !461, metadata !286), !dbg !462
  call void @llvm.dbg.declare(metadata [256 x i8]* %str_load_avg, metadata !463, metadata !286), !dbg !464
  call void @llvm.dbg.declare(metadata [256 x i8]* %str_comp_date, metadata !465, metadata !286), !dbg !466
  call void @llvm.dbg.declare(metadata [256 x i8]* %str_comp_message, metadata !467, metadata !286), !dbg !468
  call void @llvm.dbg.declare(metadata [256 x i8]* %str_cc, metadata !469, metadata !286), !dbg !470
  call void @llvm.dbg.declare(metadata [256 x i8]* %str_cflags, metadata !471, metadata !286), !dbg !472
  call void @llvm.dbg.declare(metadata [256 x i8]* %str_ld, metadata !473, metadata !286), !dbg !474
  call void @llvm.dbg.declare(metadata [256 x i8]* %str_ldflags, metadata !475, metadata !286), !dbg !476
  call void @llvm.dbg.declare(metadata [256 x i8]* %str_cutoff, metadata !477, metadata !286), !dbg !478
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %str_name, i32 0, i32 0, !dbg !479
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_name, i32 0, i32 0)) #9, !dbg !480
  %arraydecay1 = getelementptr inbounds [256 x i8], [256 x i8]* %str_parameters, i32 0, i32 0, !dbg !481
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_parameters, i32 0, i32 0)) #9, !dbg !482
  %arraydecay3 = getelementptr inbounds [256 x i8], [256 x i8]* %str_model, i32 0, i32 0, !dbg !483
  %call4 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_model, i32 0, i32 0)) #9, !dbg !484
  %arraydecay5 = getelementptr inbounds [256 x i8], [256 x i8]* %str_cutoff, i32 0, i32 0, !dbg !485
  %call6 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_cutoff, i32 0, i32 0)) #9, !dbg !486
  %arraydecay7 = getelementptr inbounds [256 x i8], [256 x i8]* %str_resources, i32 0, i32 0, !dbg !487
  %call8 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_resources, i32 0, i32 0)) #9, !dbg !488
  %0 = ptrtoint i32* @bots_result to i64
  call void @__DiscoPoPOpenMPRead(i64 %0, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.90, i32 0, i32 0))
  %1 = load i32, i32* @bots_result, align 4, !dbg !489
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb11
    i32 2, label %sw.bb14
    i32 3, label %sw.bb17
  ], !dbg !490

sw.bb:                                            ; preds = %entry
  %arraydecay9 = getelementptr inbounds [15 x i8], [15 x i8]* %str_result, i32 0, i32 0, !dbg !491
  %call10 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i32 0, i32 0)) #9, !dbg !493
  br label %sw.epilog, !dbg !494

sw.bb11:                                          ; preds = %entry
  %arraydecay12 = getelementptr inbounds [15 x i8], [15 x i8]* %str_result, i32 0, i32 0, !dbg !495
  %call13 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay12, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i32 0, i32 0)) #9, !dbg !496
  br label %sw.epilog, !dbg !497

sw.bb14:                                          ; preds = %entry
  %arraydecay15 = getelementptr inbounds [15 x i8], [15 x i8]* %str_result, i32 0, i32 0, !dbg !498
  %call16 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay15, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i32 0, i32 0)) #9, !dbg !499
  br label %sw.epilog, !dbg !500

sw.bb17:                                          ; preds = %entry
  %arraydecay18 = getelementptr inbounds [15 x i8], [15 x i8]* %str_result, i32 0, i32 0, !dbg !501
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay18, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i32 0, i32 0)) #9, !dbg !502
  br label %sw.epilog, !dbg !503

sw.default:                                       ; preds = %entry
  %arraydecay20 = getelementptr inbounds [15 x i8], [15 x i8]* %str_result, i32 0, i32 0, !dbg !504
  %call21 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay20, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i32 0, i32 0)) #9, !dbg !505
  br label %sw.epilog, !dbg !506

sw.epilog:                                        ; preds = %sw.default, %sw.bb17, %sw.bb14, %sw.bb11, %sw.bb
  %arraydecay22 = getelementptr inbounds [15 x i8], [15 x i8]* %str_time_program, i32 0, i32 0, !dbg !507
  %2 = ptrtoint double* @bots_time_program to i64
  call void @__DiscoPoPOpenMPRead(i64 %2, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.91, i32 0, i32 0))
  %3 = load double, double* @bots_time_program, align 8, !dbg !508
  %call23 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay22, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i32 0, i32 0), double %3) #9, !dbg !509
  %4 = ptrtoint i32* @bots_sequential_flag to i64
  call void @__DiscoPoPOpenMPRead(i64 %4, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.92, i32 0, i32 0))
  %5 = load i32, i32* @bots_sequential_flag, align 4, !dbg !510
  %tobool = icmp ne i32 %5, 0, !dbg !510
  br i1 %tobool, label %if.then, label %if.else, !dbg !512

if.then:                                          ; preds = %sw.epilog
  %arraydecay24 = getelementptr inbounds [15 x i8], [15 x i8]* %str_time_sequential, i32 0, i32 0, !dbg !513
  %6 = ptrtoint double* @bots_time_sequential to i64
  call void @__DiscoPoPOpenMPRead(i64 %6, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.93, i32 0, i32 0))
  %7 = load double, double* @bots_time_sequential, align 8, !dbg !515
  %call25 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i32 0, i32 0), double %7) #9, !dbg !516
  br label %if.end, !dbg !516

if.else:                                          ; preds = %sw.epilog
  %arraydecay26 = getelementptr inbounds [15 x i8], [15 x i8]* %str_time_sequential, i32 0, i32 0, !dbg !517
  %call27 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay26, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i32 0, i32 0)) #9, !dbg !518
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = ptrtoint i32* @bots_sequential_flag to i64
  call void @__DiscoPoPOpenMPRead(i64 %8, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.94, i32 0, i32 0))
  %9 = load i32, i32* @bots_sequential_flag, align 4, !dbg !519
  %tobool28 = icmp ne i32 %9, 0, !dbg !519
  br i1 %tobool28, label %if.then29, label %if.else32, !dbg !521

if.then29:                                        ; preds = %if.end
  %arraydecay30 = getelementptr inbounds [15 x i8], [15 x i8]* %str_speed_up, i32 0, i32 0, !dbg !522
  %10 = ptrtoint double* @bots_time_sequential to i64
  call void @__DiscoPoPOpenMPRead(i64 %10, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.95, i32 0, i32 0))
  %11 = load double, double* @bots_time_sequential, align 8, !dbg !523
  %12 = ptrtoint double* @bots_time_program to i64
  call void @__DiscoPoPOpenMPRead(i64 %12, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.96, i32 0, i32 0))
  %13 = load double, double* @bots_time_program, align 8, !dbg !524
  %div = fdiv double %11, %13, !dbg !525
  %call31 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay30, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i32 0, i32 0), double %div) #9, !dbg !526
  br label %if.end35, !dbg !526

if.else32:                                        ; preds = %if.end
  %arraydecay33 = getelementptr inbounds [15 x i8], [15 x i8]* %str_speed_up, i32 0, i32 0, !dbg !527
  %call34 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay33, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i32 0, i32 0)) #9, !dbg !528
  br label %if.end35

if.end35:                                         ; preds = %if.else32, %if.then29
  %arraydecay36 = getelementptr inbounds [15 x i8], [15 x i8]* %str_number_of_tasks, i32 0, i32 0, !dbg !529
  %14 = ptrtoint i64* @bots_number_of_tasks to i64
  call void @__DiscoPoPOpenMPRead(i64 %14, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.97, i32 0, i32 0))
  %15 = load i64, i64* @bots_number_of_tasks, align 8, !dbg !530
  %conv = uitofp i64 %15 to float, !dbg !531
  %conv37 = fpext float %conv to double, !dbg !531
  %call38 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay36, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i32 0, i32 0), double %conv37) #9, !dbg !532
  %arraydecay39 = getelementptr inbounds [15 x i8], [15 x i8]* %str_number_of_tasks_per_second, i32 0, i32 0, !dbg !533
  %16 = ptrtoint i64* @bots_number_of_tasks to i64
  call void @__DiscoPoPOpenMPRead(i64 %16, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.98, i32 0, i32 0))
  %17 = load i64, i64* @bots_number_of_tasks, align 8, !dbg !534
  %conv40 = uitofp i64 %17 to float, !dbg !535
  %conv41 = fpext float %conv40 to double, !dbg !535
  %18 = ptrtoint double* @bots_time_program to i64
  call void @__DiscoPoPOpenMPRead(i64 %18, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.99, i32 0, i32 0))
  %19 = load double, double* @bots_time_program, align 8, !dbg !536
  %div42 = fdiv double %conv41, %19, !dbg !537
  %call43 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay39, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i32 0, i32 0), double %div42) #9, !dbg !538
  %arraydecay44 = getelementptr inbounds [256 x i8], [256 x i8]* %str_exec_date, i32 0, i32 0, !dbg !539
  %call45 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay44, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_exec_date, i32 0, i32 0)) #9, !dbg !540
  %arraydecay46 = getelementptr inbounds [256 x i8], [256 x i8]* %str_exec_message, i32 0, i32 0, !dbg !541
  %call47 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay46, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_exec_message, i32 0, i32 0)) #9, !dbg !542
  %arraydecay48 = getelementptr inbounds [256 x i8], [256 x i8]* %str_architecture, i32 0, i32 0, !dbg !543
  call void @bots_get_architecture(i8* %arraydecay48), !dbg !544
  %arraydecay49 = getelementptr inbounds [256 x i8], [256 x i8]* %str_load_avg, i32 0, i32 0, !dbg !545
  call void @bots_get_load_average(i8* %arraydecay49), !dbg !546
  %arraydecay50 = getelementptr inbounds [256 x i8], [256 x i8]* %str_comp_date, i32 0, i32 0, !dbg !547
  %call51 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay50, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_comp_date, i32 0, i32 0)) #9, !dbg !548
  %arraydecay52 = getelementptr inbounds [256 x i8], [256 x i8]* %str_comp_message, i32 0, i32 0, !dbg !549
  %call53 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay52, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_comp_message, i32 0, i32 0)) #9, !dbg !550
  %arraydecay54 = getelementptr inbounds [256 x i8], [256 x i8]* %str_cc, i32 0, i32 0, !dbg !551
  %call55 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay54, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_cc, i32 0, i32 0)) #9, !dbg !552
  %arraydecay56 = getelementptr inbounds [256 x i8], [256 x i8]* %str_cflags, i32 0, i32 0, !dbg !553
  %call57 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay56, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_cflags, i32 0, i32 0)) #9, !dbg !554
  %arraydecay58 = getelementptr inbounds [256 x i8], [256 x i8]* %str_ld, i32 0, i32 0, !dbg !555
  %call59 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay58, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_ld, i32 0, i32 0)) #9, !dbg !556
  %arraydecay60 = getelementptr inbounds [256 x i8], [256 x i8]* %str_ldflags, i32 0, i32 0, !dbg !557
  %call61 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay60, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_ldflags, i32 0, i32 0)) #9, !dbg !558
  %20 = ptrtoint i32* @bots_print_header to i64
  call void @__DiscoPoPOpenMPRead(i64 %20, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.100, i32 0, i32 0))
  %21 = load i32, i32* @bots_print_header, align 4, !dbg !559
  %tobool62 = icmp ne i32 %21, 0, !dbg !559
  br i1 %tobool62, label %if.then63, label %if.end73, !dbg !561

if.then63:                                        ; preds = %if.end35
  %22 = ptrtoint i32* @bots_output_format to i64
  call void @__DiscoPoPOpenMPRead(i64 %22, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.101, i32 0, i32 0))
  %23 = load i32, i32* @bots_output_format, align 4, !dbg !562
  switch i32 %23, label %sw.default71 [
    i32 0, label %sw.bb64
    i32 1, label %sw.bb65
    i32 2, label %sw.bb66
    i32 3, label %sw.bb68
    i32 4, label %sw.bb69
  ], !dbg !564

sw.bb64:                                          ; preds = %if.then63
  br label %sw.epilog72, !dbg !565

sw.bb65:                                          ; preds = %if.then63
  br label %sw.epilog72, !dbg !567

sw.bb66:                                          ; preds = %if.then63
  %24 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %24, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.102, i32 0, i32 0))
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !568
  %call67 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([238 x i8], [238 x i8]* @.str.19, i32 0, i32 0)), !dbg !569
  br label %sw.epilog72, !dbg !570

sw.bb68:                                          ; preds = %if.then63
  br label %sw.epilog72, !dbg !571

sw.bb69:                                          ; preds = %if.then63
  %26 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %26, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.103, i32 0, i32 0))
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !572
  %call70 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.20, i32 0, i32 0)), !dbg !573
  br label %sw.epilog72, !dbg !574

sw.default71:                                     ; preds = %if.then63
  br label %sw.epilog72, !dbg !575

sw.epilog72:                                      ; preds = %sw.default71, %sw.bb69, %sw.bb68, %sw.bb66, %sw.bb65, %sw.bb64
  br label %if.end73, !dbg !576

if.end73:                                         ; preds = %sw.epilog72, %if.end35
  %28 = ptrtoint i32* @bots_output_format to i64
  call void @__DiscoPoPOpenMPRead(i64 %28, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.104, i32 0, i32 0))
  %29 = load i32, i32* @bots_output_format, align 4, !dbg !577
  switch i32 %29, label %sw.default203 [
    i32 0, label %sw.bb74
    i32 1, label %sw.bb75
    i32 2, label %sw.bb126
    i32 3, label %sw.bb156
    i32 4, label %sw.bb187
  ], !dbg !578

sw.bb74:                                          ; preds = %if.end73
  br label %sw.epilog204, !dbg !579

sw.bb75:                                          ; preds = %if.end73
  %30 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %30, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.105, i32 0, i32 0))
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !581
  %call76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i32 0, i32 0)), !dbg !582
  %32 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %32, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.106, i32 0, i32 0))
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !583
  %arraydecay77 = getelementptr inbounds [256 x i8], [256 x i8]* %str_name, i32 0, i32 0, !dbg !584
  %call78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.22, i32 0, i32 0), i8* %arraydecay77), !dbg !585
  %34 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %34, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.107, i32 0, i32 0))
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !586
  %arraydecay79 = getelementptr inbounds [256 x i8], [256 x i8]* %str_parameters, i32 0, i32 0, !dbg !587
  %call80 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.23, i32 0, i32 0), i8* %arraydecay79), !dbg !588
  %36 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %36, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.108, i32 0, i32 0))
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !589
  %arraydecay81 = getelementptr inbounds [256 x i8], [256 x i8]* %str_model, i32 0, i32 0, !dbg !590
  %call82 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i32 0, i32 0), i8* %arraydecay81), !dbg !591
  %38 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %38, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.109, i32 0, i32 0))
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !592
  %arraydecay83 = getelementptr inbounds [256 x i8], [256 x i8]* %str_cutoff, i32 0, i32 0, !dbg !593
  %call84 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i8* %arraydecay83), !dbg !594
  %40 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %40, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.110, i32 0, i32 0))
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !595
  %arraydecay85 = getelementptr inbounds [256 x i8], [256 x i8]* %str_resources, i32 0, i32 0, !dbg !596
  %call86 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.26, i32 0, i32 0), i8* %arraydecay85), !dbg !597
  %42 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %42, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.111, i32 0, i32 0))
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !598
  %arraydecay87 = getelementptr inbounds [15 x i8], [15 x i8]* %str_result, i32 0, i32 0, !dbg !599
  %call88 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.27, i32 0, i32 0), i8* %arraydecay87), !dbg !600
  %44 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %44, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.112, i32 0, i32 0))
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !601
  %arraydecay89 = getelementptr inbounds [15 x i8], [15 x i8]* %str_time_program, i32 0, i32 0, !dbg !602
  %call90 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.28, i32 0, i32 0), i8* %arraydecay89), !dbg !603
  %46 = ptrtoint i32* @bots_sequential_flag to i64
  call void @__DiscoPoPOpenMPRead(i64 %46, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.113, i32 0, i32 0))
  %47 = load i32, i32* @bots_sequential_flag, align 4, !dbg !604
  %tobool91 = icmp ne i32 %47, 0, !dbg !604
  br i1 %tobool91, label %if.then92, label %if.end97, !dbg !606

if.then92:                                        ; preds = %sw.bb75
  %48 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %48, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.114, i32 0, i32 0))
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !607
  %arraydecay93 = getelementptr inbounds [15 x i8], [15 x i8]* %str_time_sequential, i32 0, i32 0, !dbg !609
  %call94 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %49, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.29, i32 0, i32 0), i8* %arraydecay93), !dbg !610
  %50 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %50, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.115, i32 0, i32 0))
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !611
  %arraydecay95 = getelementptr inbounds [15 x i8], [15 x i8]* %str_speed_up, i32 0, i32 0, !dbg !612
  %call96 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.30, i32 0, i32 0), i8* %arraydecay95), !dbg !613
  br label %if.end97, !dbg !614

if.end97:                                         ; preds = %if.then92, %sw.bb75
  %52 = ptrtoint i64* @bots_number_of_tasks to i64
  call void @__DiscoPoPOpenMPRead(i64 %52, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.116, i32 0, i32 0))
  %53 = load i64, i64* @bots_number_of_tasks, align 8, !dbg !615
  %cmp = icmp ugt i64 %53, 0, !dbg !617
  br i1 %cmp, label %if.then99, label %if.end104, !dbg !618

if.then99:                                        ; preds = %if.end97
  %54 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %54, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.117, i32 0, i32 0))
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !619
  %arraydecay100 = getelementptr inbounds [15 x i8], [15 x i8]* %str_number_of_tasks, i32 0, i32 0, !dbg !621
  %call101 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %55, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.31, i32 0, i32 0), i8* %arraydecay100), !dbg !622
  %56 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %56, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.118, i32 0, i32 0))
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !623
  %arraydecay102 = getelementptr inbounds [15 x i8], [15 x i8]* %str_number_of_tasks_per_second, i32 0, i32 0, !dbg !624
  %call103 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %57, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.32, i32 0, i32 0), i8* %arraydecay102), !dbg !625
  br label %if.end104, !dbg !626

if.end104:                                        ; preds = %if.then99, %if.end97
  %58 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %58, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.119, i32 0, i32 0))
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !627
  %arraydecay105 = getelementptr inbounds [256 x i8], [256 x i8]* %str_exec_date, i32 0, i32 0, !dbg !628
  %call106 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.33, i32 0, i32 0), i8* %arraydecay105), !dbg !629
  %60 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %60, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i32 0, i32 0))
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !630
  %arraydecay107 = getelementptr inbounds [256 x i8], [256 x i8]* %str_exec_message, i32 0, i32 0, !dbg !631
  %call108 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.34, i32 0, i32 0), i8* %arraydecay107), !dbg !632
  %62 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %62, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.121, i32 0, i32 0))
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !633
  %arraydecay109 = getelementptr inbounds [256 x i8], [256 x i8]* %str_architecture, i32 0, i32 0, !dbg !634
  %call110 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %63, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.35, i32 0, i32 0), i8* %arraydecay109), !dbg !635
  %64 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %64, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.122, i32 0, i32 0))
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !636
  %arraydecay111 = getelementptr inbounds [256 x i8], [256 x i8]* %str_load_avg, i32 0, i32 0, !dbg !637
  %call112 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %65, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.36, i32 0, i32 0), i8* %arraydecay111), !dbg !638
  %66 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %66, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.123, i32 0, i32 0))
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !639
  %arraydecay113 = getelementptr inbounds [256 x i8], [256 x i8]* %str_comp_date, i32 0, i32 0, !dbg !640
  %call114 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %67, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.37, i32 0, i32 0), i8* %arraydecay113), !dbg !641
  %68 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %68, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.124, i32 0, i32 0))
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !642
  %arraydecay115 = getelementptr inbounds [256 x i8], [256 x i8]* %str_comp_message, i32 0, i32 0, !dbg !643
  %call116 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %69, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.38, i32 0, i32 0), i8* %arraydecay115), !dbg !644
  %70 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %70, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.125, i32 0, i32 0))
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !645
  %arraydecay117 = getelementptr inbounds [256 x i8], [256 x i8]* %str_cc, i32 0, i32 0, !dbg !646
  %call118 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %71, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.39, i32 0, i32 0), i8* %arraydecay117), !dbg !647
  %72 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %72, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.126, i32 0, i32 0))
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !648
  %arraydecay119 = getelementptr inbounds [256 x i8], [256 x i8]* %str_cflags, i32 0, i32 0, !dbg !649
  %call120 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %73, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.40, i32 0, i32 0), i8* %arraydecay119), !dbg !650
  %74 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %74, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i32 0, i32 0))
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !651
  %arraydecay121 = getelementptr inbounds [256 x i8], [256 x i8]* %str_ld, i32 0, i32 0, !dbg !652
  %call122 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %75, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.41, i32 0, i32 0), i8* %arraydecay121), !dbg !653
  %76 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %76, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.128, i32 0, i32 0))
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !654
  %arraydecay123 = getelementptr inbounds [256 x i8], [256 x i8]* %str_ldflags, i32 0, i32 0, !dbg !655
  %call124 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %77, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.42, i32 0, i32 0), i8* %arraydecay123), !dbg !656
  %78 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %78, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.129, i32 0, i32 0))
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !657
  %call125 = call i32 @fflush(%struct._IO_FILE* %79), !dbg !658
  br label %sw.epilog204, !dbg !659

sw.bb126:                                         ; preds = %if.end73
  %80 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %80, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.130, i32 0, i32 0))
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !660
  %arraydecay127 = getelementptr inbounds [256 x i8], [256 x i8]* %str_name, i32 0, i32 0, !dbg !661
  %arraydecay128 = getelementptr inbounds [256 x i8], [256 x i8]* %str_parameters, i32 0, i32 0, !dbg !662
  %arraydecay129 = getelementptr inbounds [256 x i8], [256 x i8]* %str_model, i32 0, i32 0, !dbg !663
  %arraydecay130 = getelementptr inbounds [256 x i8], [256 x i8]* %str_cutoff, i32 0, i32 0, !dbg !664
  %arraydecay131 = getelementptr inbounds [256 x i8], [256 x i8]* %str_resources, i32 0, i32 0, !dbg !665
  %arraydecay132 = getelementptr inbounds [15 x i8], [15 x i8]* %str_result, i32 0, i32 0, !dbg !666
  %call133 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %81, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.43, i32 0, i32 0), i8* %arraydecay127, i8* %arraydecay128, i8* %arraydecay129, i8* %arraydecay130, i8* %arraydecay131, i8* %arraydecay132), !dbg !667
  %82 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %82, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.131, i32 0, i32 0))
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !668
  %arraydecay134 = getelementptr inbounds [15 x i8], [15 x i8]* %str_time_program, i32 0, i32 0, !dbg !669
  %arraydecay135 = getelementptr inbounds [15 x i8], [15 x i8]* %str_time_sequential, i32 0, i32 0, !dbg !670
  %arraydecay136 = getelementptr inbounds [15 x i8], [15 x i8]* %str_speed_up, i32 0, i32 0, !dbg !671
  %call137 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %83, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i32 0, i32 0), i8* %arraydecay134, i8* %arraydecay135, i8* %arraydecay136), !dbg !672
  %84 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %84, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.132, i32 0, i32 0))
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !673
  %arraydecay138 = getelementptr inbounds [15 x i8], [15 x i8]* %str_number_of_tasks, i32 0, i32 0, !dbg !674
  %arraydecay139 = getelementptr inbounds [15 x i8], [15 x i8]* %str_number_of_tasks_per_second, i32 0, i32 0, !dbg !675
  %call140 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %85, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i32 0, i32 0), i8* %arraydecay138, i8* %arraydecay139), !dbg !676
  %86 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %86, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.133, i32 0, i32 0))
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !677
  %arraydecay141 = getelementptr inbounds [256 x i8], [256 x i8]* %str_exec_date, i32 0, i32 0, !dbg !678
  %arraydecay142 = getelementptr inbounds [256 x i8], [256 x i8]* %str_exec_message, i32 0, i32 0, !dbg !679
  %call143 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %87, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i32 0, i32 0), i8* %arraydecay141, i8* %arraydecay142), !dbg !680
  %88 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %88, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.134, i32 0, i32 0))
  %89 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !681
  %arraydecay144 = getelementptr inbounds [256 x i8], [256 x i8]* %str_architecture, i32 0, i32 0, !dbg !682
  %arraydecay145 = getelementptr inbounds [256 x i8], [256 x i8]* %str_load_avg, i32 0, i32 0, !dbg !683
  %call146 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %89, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i32 0, i32 0), i8* %arraydecay144, i8* %arraydecay145), !dbg !684
  %90 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %90, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.135, i32 0, i32 0))
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !685
  %arraydecay147 = getelementptr inbounds [256 x i8], [256 x i8]* %str_comp_date, i32 0, i32 0, !dbg !686
  %arraydecay148 = getelementptr inbounds [256 x i8], [256 x i8]* %str_comp_message, i32 0, i32 0, !dbg !687
  %call149 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %91, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i32 0, i32 0), i8* %arraydecay147, i8* %arraydecay148), !dbg !688
  %92 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %92, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.136, i32 0, i32 0))
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !689
  %arraydecay150 = getelementptr inbounds [256 x i8], [256 x i8]* %str_cc, i32 0, i32 0, !dbg !690
  %arraydecay151 = getelementptr inbounds [256 x i8], [256 x i8]* %str_cflags, i32 0, i32 0, !dbg !691
  %arraydecay152 = getelementptr inbounds [256 x i8], [256 x i8]* %str_ld, i32 0, i32 0, !dbg !692
  %arraydecay153 = getelementptr inbounds [256 x i8], [256 x i8]* %str_ldflags, i32 0, i32 0, !dbg !693
  %call154 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %93, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.46, i32 0, i32 0), i8* %arraydecay150, i8* %arraydecay151, i8* %arraydecay152, i8* %arraydecay153), !dbg !694
  %94 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %94, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.137, i32 0, i32 0))
  %95 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !695
  %call155 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %95, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i32 0, i32 0)), !dbg !696
  br label %sw.epilog204, !dbg !697

sw.bb156:                                         ; preds = %if.end73
  %96 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %96, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.138, i32 0, i32 0))
  %97 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !698
  %call157 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %97, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i32 0, i32 0)), !dbg !699
  %98 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %98, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.139, i32 0, i32 0))
  %99 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !700
  %arraydecay158 = getelementptr inbounds [256 x i8], [256 x i8]* %str_name, i32 0, i32 0, !dbg !701
  %call159 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %99, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.22, i32 0, i32 0), i8* %arraydecay158), !dbg !702
  %100 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %100, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.140, i32 0, i32 0))
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !703
  %arraydecay160 = getelementptr inbounds [256 x i8], [256 x i8]* %str_parameters, i32 0, i32 0, !dbg !704
  %call161 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %101, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.23, i32 0, i32 0), i8* %arraydecay160), !dbg !705
  %102 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %102, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.141, i32 0, i32 0))
  %103 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !706
  %arraydecay162 = getelementptr inbounds [256 x i8], [256 x i8]* %str_model, i32 0, i32 0, !dbg !707
  %call163 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %103, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i32 0, i32 0), i8* %arraydecay162), !dbg !708
  %104 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %104, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.142, i32 0, i32 0))
  %105 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !709
  %arraydecay164 = getelementptr inbounds [256 x i8], [256 x i8]* %str_cutoff, i32 0, i32 0, !dbg !710
  %call165 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %105, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i8* %arraydecay164), !dbg !711
  %106 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %106, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.143, i32 0, i32 0))
  %107 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !712
  %arraydecay166 = getelementptr inbounds [256 x i8], [256 x i8]* %str_resources, i32 0, i32 0, !dbg !713
  %call167 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %107, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.26, i32 0, i32 0), i8* %arraydecay166), !dbg !714
  %108 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %108, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.144, i32 0, i32 0))
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !715
  %arraydecay168 = getelementptr inbounds [15 x i8], [15 x i8]* %str_result, i32 0, i32 0, !dbg !716
  %call169 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %109, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.27, i32 0, i32 0), i8* %arraydecay168), !dbg !717
  %110 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %110, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.145, i32 0, i32 0))
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !718
  %arraydecay170 = getelementptr inbounds [15 x i8], [15 x i8]* %str_time_program, i32 0, i32 0, !dbg !719
  %call171 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %111, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.28, i32 0, i32 0), i8* %arraydecay170), !dbg !720
  %112 = ptrtoint i32* @bots_sequential_flag to i64
  call void @__DiscoPoPOpenMPRead(i64 %112, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.146, i32 0, i32 0))
  %113 = load i32, i32* @bots_sequential_flag, align 4, !dbg !721
  %tobool172 = icmp ne i32 %113, 0, !dbg !721
  br i1 %tobool172, label %if.then173, label %if.end178, !dbg !723

if.then173:                                       ; preds = %sw.bb156
  %114 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %114, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.147, i32 0, i32 0))
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !724
  %arraydecay174 = getelementptr inbounds [15 x i8], [15 x i8]* %str_time_sequential, i32 0, i32 0, !dbg !726
  %call175 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %115, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.29, i32 0, i32 0), i8* %arraydecay174), !dbg !727
  %116 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %116, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.148, i32 0, i32 0))
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !728
  %arraydecay176 = getelementptr inbounds [15 x i8], [15 x i8]* %str_speed_up, i32 0, i32 0, !dbg !729
  %call177 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %117, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.30, i32 0, i32 0), i8* %arraydecay176), !dbg !730
  br label %if.end178, !dbg !731

if.end178:                                        ; preds = %if.then173, %sw.bb156
  %118 = ptrtoint i64* @bots_number_of_tasks to i64
  call void @__DiscoPoPOpenMPRead(i64 %118, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.149, i32 0, i32 0))
  %119 = load i64, i64* @bots_number_of_tasks, align 8, !dbg !732
  %cmp179 = icmp ugt i64 %119, 0, !dbg !734
  br i1 %cmp179, label %if.then181, label %if.end186, !dbg !735

if.then181:                                       ; preds = %if.end178
  %120 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %120, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.150, i32 0, i32 0))
  %121 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !736
  %arraydecay182 = getelementptr inbounds [15 x i8], [15 x i8]* %str_number_of_tasks, i32 0, i32 0, !dbg !738
  %call183 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %121, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.31, i32 0, i32 0), i8* %arraydecay182), !dbg !739
  %122 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %122, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.151, i32 0, i32 0))
  %123 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !740
  %arraydecay184 = getelementptr inbounds [15 x i8], [15 x i8]* %str_number_of_tasks_per_second, i32 0, i32 0, !dbg !741
  %call185 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %123, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.32, i32 0, i32 0), i8* %arraydecay184), !dbg !742
  br label %if.end186, !dbg !743

if.end186:                                        ; preds = %if.then181, %if.end178
  br label %sw.epilog204, !dbg !744

sw.bb187:                                         ; preds = %if.end73
  %124 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %124, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.152, i32 0, i32 0))
  %125 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !745
  %arraydecay188 = getelementptr inbounds [256 x i8], [256 x i8]* %str_name, i32 0, i32 0, !dbg !746
  %arraydecay189 = getelementptr inbounds [256 x i8], [256 x i8]* %str_parameters, i32 0, i32 0, !dbg !747
  %arraydecay190 = getelementptr inbounds [256 x i8], [256 x i8]* %str_model, i32 0, i32 0, !dbg !748
  %arraydecay191 = getelementptr inbounds [256 x i8], [256 x i8]* %str_cutoff, i32 0, i32 0, !dbg !749
  %arraydecay192 = getelementptr inbounds [256 x i8], [256 x i8]* %str_resources, i32 0, i32 0, !dbg !750
  %arraydecay193 = getelementptr inbounds [15 x i8], [15 x i8]* %str_result, i32 0, i32 0, !dbg !751
  %call194 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %125, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.43, i32 0, i32 0), i8* %arraydecay188, i8* %arraydecay189, i8* %arraydecay190, i8* %arraydecay191, i8* %arraydecay192, i8* %arraydecay193), !dbg !752
  %126 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %126, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.153, i32 0, i32 0))
  %127 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !753
  %arraydecay195 = getelementptr inbounds [15 x i8], [15 x i8]* %str_time_program, i32 0, i32 0, !dbg !754
  %arraydecay196 = getelementptr inbounds [15 x i8], [15 x i8]* %str_time_sequential, i32 0, i32 0, !dbg !755
  %arraydecay197 = getelementptr inbounds [15 x i8], [15 x i8]* %str_speed_up, i32 0, i32 0, !dbg !756
  %call198 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i32 0, i32 0), i8* %arraydecay195, i8* %arraydecay196, i8* %arraydecay197), !dbg !757
  %128 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %128, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.154, i32 0, i32 0))
  %129 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !758
  %arraydecay199 = getelementptr inbounds [15 x i8], [15 x i8]* %str_number_of_tasks, i32 0, i32 0, !dbg !759
  %arraydecay200 = getelementptr inbounds [15 x i8], [15 x i8]* %str_number_of_tasks_per_second, i32 0, i32 0, !dbg !760
  %call201 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %129, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i32 0, i32 0), i8* %arraydecay199, i8* %arraydecay200), !dbg !761
  %130 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %130, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.155, i32 0, i32 0))
  %131 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !762
  %call202 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %131, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i32 0, i32 0)), !dbg !763
  br label %sw.epilog204, !dbg !764

sw.default203:                                    ; preds = %if.end73
  call void @bots_error(i32 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.47, i32 0, i32 0)), !dbg !765
  br label %sw.epilog204, !dbg !766

sw.epilog204:                                     ; preds = %sw.default203, %sw.bb187, %if.end186, %sw.bb126, %if.end104, %sw.bb74
  ret void, !dbg !767
}

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #4

declare i32 @fflush(%struct._IO_FILE*) #2

; Function Attrs: nounwind uwtable
define void @bots_print_usage() #0 !dbg !768 {
entry:
  %0 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %0, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.156, i32 0, i32 0))
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !769
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)), !dbg !770
  %2 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %2, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.157, i32 0, i32 0))
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !771
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1.49, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_execname, i32 0, i32 0)), !dbg !772
  %4 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %4, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.158, i32 0, i32 0))
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !773
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)), !dbg !774
  %6 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %6, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.159, i32 0, i32 0))
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !775
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.50, i32 0, i32 0)), !dbg !776
  %8 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %8, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.160, i32 0, i32 0))
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !777
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3.51, i32 0, i32 0)), !dbg !778
  %10 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %10, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.161, i32 0, i32 0))
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !779
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)), !dbg !780
  %12 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %12, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.162, i32 0, i32 0))
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !781
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.52, i32 0, i32 0)), !dbg !782
  %14 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %14, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.163, i32 0, i32 0))
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !783
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5.53, i32 0, i32 0)), !dbg !784
  %16 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %16, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.164, i32 0, i32 0))
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !785
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6.54, i32 0, i32 0)), !dbg !786
  %18 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %18, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.165, i32 0, i32 0))
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !787
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.55, i32 0, i32 0)), !dbg !788
  %20 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %20, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.166, i32 0, i32 0))
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !789
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.56, i32 0, i32 0)), !dbg !790
  %22 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %22, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.167, i32 0, i32 0))
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !791
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.9.57, i32 0, i32 0)), !dbg !792
  %24 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %24, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.168, i32 0, i32 0))
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !793
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10.58, i32 0, i32 0)), !dbg !794
  %26 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %26, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.169, i32 0, i32 0))
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !795
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.11.59, i32 0, i32 0)), !dbg !796
  %28 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %28, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.170, i32 0, i32 0))
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !797
  %call14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12.60, i32 0, i32 0)), !dbg !798
  %30 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %30, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.171, i32 0, i32 0))
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !799
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.13.61, i32 0, i32 0)), !dbg !800
  %32 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %32, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.172, i32 0, i32 0))
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !801
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.14.62, i32 0, i32 0)), !dbg !802
  %34 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %34, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.173, i32 0, i32 0))
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !803
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15.63, i32 0, i32 0)), !dbg !804
  %36 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %36, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.174, i32 0, i32 0))
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !805
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)), !dbg !806
  %38 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %38, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.175, i32 0, i32 0))
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !807
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.16.64, i32 0, i32 0)), !dbg !808
  %40 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %40, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.176, i32 0, i32 0))
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !809
  %call20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.17.65, i32 0, i32 0)), !dbg !810
  %42 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %42, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.177, i32 0, i32 0))
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !811
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)), !dbg !812
  %44 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %44, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.178, i32 0, i32 0))
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !813
  %call22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.18.66, i32 0, i32 0)), !dbg !814
  %46 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %46, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.179, i32 0, i32 0))
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !815
  %call23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %47, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)), !dbg !816
  ret void, !dbg !817
}

; Function Attrs: nounwind uwtable
define void @bots_get_params_common(i32 %argc, i8** %argv) #0 !dbg !818 {
entry:
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  %0 = ptrtoint i32* %argc.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.180, i32 0, i32 0))
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !822, metadata !286), !dbg !823
  %1 = ptrtoint i8*** %argv.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.181, i32 0, i32 0))
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !824, metadata !286), !dbg !825
  call void @llvm.dbg.declare(metadata i32* %i, metadata !826, metadata !286), !dbg !827
  %2 = ptrtoint i8*** %argv.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %2, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.182, i32 0, i32 0))
  %3 = load i8**, i8*** %argv.addr, align 8, !dbg !828
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 0, !dbg !828
  %4 = ptrtoint i8** %arrayidx to i64
  call void @__DiscoPoPOpenMPRead(i64 %4, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.183, i32 0, i32 0))
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !828
  %call = call i8* @__xpg_basename(i8* %5) #9, !dbg !829
  %call1 = call i8* @strcpy(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_execname, i32 0, i32 0), i8* %call) #9, !dbg !830
  call void @bots_get_date(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_exec_date, i32 0, i32 0)), !dbg !832
  %call2 = call i8* @strcpy(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_exec_message, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19.67, i32 0, i32 0)) #9, !dbg !833
  %6 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.184, i32 0, i32 0))
  store i32 1, i32* %i, align 4, !dbg !834
  br label %for.cond, !dbg !836

for.cond:                                         ; preds = %for.inc, %entry
  %7 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %7, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.185, i32 0, i32 0))
  %8 = load i32, i32* %i, align 4, !dbg !837
  %9 = ptrtoint i32* %argc.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %9, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.186, i32 0, i32 0))
  %10 = load i32, i32* %argc.addr, align 4, !dbg !840
  %cmp = icmp slt i32 %8, %10, !dbg !841
  br i1 %cmp, label %for.body, label %for.end, !dbg !842

for.body:                                         ; preds = %for.cond
  %11 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %11, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.187, i32 0, i32 0))
  %12 = load i32, i32* %i, align 4, !dbg !843
  %idxprom = sext i32 %12 to i64, !dbg !846
  %13 = ptrtoint i8*** %argv.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %13, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.188, i32 0, i32 0))
  %14 = load i8**, i8*** %argv.addr, align 8, !dbg !846
  %arrayidx3 = getelementptr inbounds i8*, i8** %14, i64 %idxprom, !dbg !846
  %15 = ptrtoint i8** %arrayidx3 to i64
  call void @__DiscoPoPOpenMPRead(i64 %15, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.189, i32 0, i32 0))
  %16 = load i8*, i8** %arrayidx3, align 8, !dbg !846
  %arrayidx4 = getelementptr inbounds i8, i8* %16, i64 0, !dbg !846
  %17 = ptrtoint i8* %arrayidx4 to i64
  call void @__DiscoPoPOpenMPRead(i64 %17, i32 1, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.190, i32 0, i32 0))
  %18 = load i8, i8* %arrayidx4, align 1, !dbg !846
  %conv = sext i8 %18 to i32, !dbg !846
  %cmp5 = icmp eq i32 %conv, 45, !dbg !847
  br i1 %cmp5, label %if.then, label %if.else, !dbg !848

if.then:                                          ; preds = %for.body
  %19 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %19, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.191, i32 0, i32 0))
  %20 = load i32, i32* %i, align 4, !dbg !849
  %idxprom7 = sext i32 %20 to i64, !dbg !851
  %21 = ptrtoint i8*** %argv.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %21, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.192, i32 0, i32 0))
  %22 = load i8**, i8*** %argv.addr, align 8, !dbg !851
  %arrayidx8 = getelementptr inbounds i8*, i8** %22, i64 %idxprom7, !dbg !851
  %23 = ptrtoint i8** %arrayidx8 to i64
  call void @__DiscoPoPOpenMPRead(i64 %23, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.193, i32 0, i32 0))
  %24 = load i8*, i8** %arrayidx8, align 8, !dbg !851
  %arrayidx9 = getelementptr inbounds i8, i8* %24, i64 1, !dbg !851
  %25 = ptrtoint i8* %arrayidx9 to i64
  call void @__DiscoPoPOpenMPRead(i64 %25, i32 1, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.194, i32 0, i32 0))
  %26 = load i8, i8* %arrayidx9, align 1, !dbg !851
  %conv10 = sext i8 %26 to i32, !dbg !851
  switch i32 %conv10, label %sw.default [
    i32 99, label %sw.bb
    i32 101, label %sw.bb14
    i32 104, label %sw.bb24
    i32 110, label %sw.bb28
    i32 111, label %sw.bb40
    i32 115, label %sw.bb52
    i32 118, label %sw.bb56
    i32 122, label %sw.bb73
  ], !dbg !852

sw.bb:                                            ; preds = %if.then
  %27 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %27, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.195, i32 0, i32 0))
  %28 = load i32, i32* %i, align 4, !dbg !853
  %idxprom11 = sext i32 %28 to i64, !dbg !855
  %29 = ptrtoint i8*** %argv.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %29, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.196, i32 0, i32 0))
  %30 = load i8**, i8*** %argv.addr, align 8, !dbg !855
  %arrayidx12 = getelementptr inbounds i8*, i8** %30, i64 %idxprom11, !dbg !855
  %31 = ptrtoint i8** %arrayidx12 to i64
  call void @__DiscoPoPOpenMPRead(i64 %31, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.197, i32 0, i32 0))
  %32 = load i8*, i8** %arrayidx12, align 8, !dbg !855
  %arrayidx13 = getelementptr inbounds i8, i8* %32, i64 1, !dbg !855
  %33 = ptrtoint i8* %arrayidx13 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %33, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.198, i32 0, i32 0))
  store i8 42, i8* %arrayidx13, align 1, !dbg !856
  %34 = ptrtoint i32* @bots_check_flag to i64
  call void @__DiscoPoPOpenMPWrite(i64 %34, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.199, i32 0, i32 0))
  store i32 1, i32* @bots_check_flag, align 4, !dbg !857
  br label %sw.epilog, !dbg !858

sw.bb14:                                          ; preds = %if.then
  %35 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %35, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i32 0, i32 0))
  %36 = load i32, i32* %i, align 4, !dbg !859
  %idxprom15 = sext i32 %36 to i64, !dbg !860
  %37 = ptrtoint i8*** %argv.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %37, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.201, i32 0, i32 0))
  %38 = load i8**, i8*** %argv.addr, align 8, !dbg !860
  %arrayidx16 = getelementptr inbounds i8*, i8** %38, i64 %idxprom15, !dbg !860
  %39 = ptrtoint i8** %arrayidx16 to i64
  call void @__DiscoPoPOpenMPRead(i64 %39, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.202, i32 0, i32 0))
  %40 = load i8*, i8** %arrayidx16, align 8, !dbg !860
  %arrayidx17 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !860
  %41 = ptrtoint i8* %arrayidx17 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %41, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.203, i32 0, i32 0))
  store i8 42, i8* %arrayidx17, align 1, !dbg !861
  %42 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %42, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.204, i32 0, i32 0))
  %43 = load i32, i32* %i, align 4, !dbg !862
  %inc = add nsw i32 %43, 1, !dbg !862
  %44 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %44, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.205, i32 0, i32 0))
  store i32 %inc, i32* %i, align 4, !dbg !862
  %45 = ptrtoint i32* %argc.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %45, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.206, i32 0, i32 0))
  %46 = load i32, i32* %argc.addr, align 4, !dbg !863
  %47 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %47, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.207, i32 0, i32 0))
  %48 = load i32, i32* %i, align 4, !dbg !865
  %cmp18 = icmp eq i32 %46, %48, !dbg !866
  br i1 %cmp18, label %if.then20, label %if.end, !dbg !867

if.then20:                                        ; preds = %sw.bb14
  call void @bots_print_usage(), !dbg !868
  call void @exit(i32 100) #8, !dbg !871
  unreachable, !dbg !873

if.end:                                           ; preds = %sw.bb14
  %49 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %49, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.208, i32 0, i32 0))
  %50 = load i32, i32* %i, align 4, !dbg !874
  %idxprom21 = sext i32 %50 to i64, !dbg !875
  %51 = ptrtoint i8*** %argv.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %51, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.209, i32 0, i32 0))
  %52 = load i8**, i8*** %argv.addr, align 8, !dbg !875
  %arrayidx22 = getelementptr inbounds i8*, i8** %52, i64 %idxprom21, !dbg !875
  %53 = ptrtoint i8** %arrayidx22 to i64
  call void @__DiscoPoPOpenMPRead(i64 %53, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.210, i32 0, i32 0))
  %54 = load i8*, i8** %arrayidx22, align 8, !dbg !875
  %call23 = call i8* @strcpy(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_exec_message, i32 0, i32 0), i8* %54) #9, !dbg !876
  br label %sw.epilog, !dbg !877

sw.bb24:                                          ; preds = %if.then
  %55 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %55, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.211, i32 0, i32 0))
  %56 = load i32, i32* %i, align 4, !dbg !878
  %idxprom25 = sext i32 %56 to i64, !dbg !879
  %57 = ptrtoint i8*** %argv.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %57, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.212, i32 0, i32 0))
  %58 = load i8**, i8*** %argv.addr, align 8, !dbg !879
  %arrayidx26 = getelementptr inbounds i8*, i8** %58, i64 %idxprom25, !dbg !879
  %59 = ptrtoint i8** %arrayidx26 to i64
  call void @__DiscoPoPOpenMPRead(i64 %59, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.213, i32 0, i32 0))
  %60 = load i8*, i8** %arrayidx26, align 8, !dbg !879
  %arrayidx27 = getelementptr inbounds i8, i8* %60, i64 1, !dbg !879
  %61 = ptrtoint i8* %arrayidx27 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %61, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.214, i32 0, i32 0))
  store i8 42, i8* %arrayidx27, align 1, !dbg !880
  call void @bots_print_usage(), !dbg !881
  call void @exit(i32 100) #8, !dbg !882
  unreachable, !dbg !882

sw.bb28:                                          ; preds = %if.then
  %62 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %62, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.215, i32 0, i32 0))
  %63 = load i32, i32* %i, align 4, !dbg !883
  %idxprom29 = sext i32 %63 to i64, !dbg !884
  %64 = ptrtoint i8*** %argv.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %64, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.216, i32 0, i32 0))
  %65 = load i8**, i8*** %argv.addr, align 8, !dbg !884
  %arrayidx30 = getelementptr inbounds i8*, i8** %65, i64 %idxprom29, !dbg !884
  %66 = ptrtoint i8** %arrayidx30 to i64
  call void @__DiscoPoPOpenMPRead(i64 %66, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.217, i32 0, i32 0))
  %67 = load i8*, i8** %arrayidx30, align 8, !dbg !884
  %arrayidx31 = getelementptr inbounds i8, i8* %67, i64 1, !dbg !884
  %68 = ptrtoint i8* %arrayidx31 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %68, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.218, i32 0, i32 0))
  store i8 42, i8* %arrayidx31, align 1, !dbg !885
  %69 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %69, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i32 0, i32 0))
  %70 = load i32, i32* %i, align 4, !dbg !886
  %inc32 = add nsw i32 %70, 1, !dbg !886
  %71 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %71, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.220, i32 0, i32 0))
  store i32 %inc32, i32* %i, align 4, !dbg !886
  %72 = ptrtoint i32* %argc.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %72, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.221, i32 0, i32 0))
  %73 = load i32, i32* %argc.addr, align 4, !dbg !887
  %74 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %74, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.222, i32 0, i32 0))
  %75 = load i32, i32* %i, align 4, !dbg !889
  %cmp33 = icmp eq i32 %73, %75, !dbg !890
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !891

if.then35:                                        ; preds = %sw.bb28
  call void @bots_print_usage(), !dbg !892
  call void @exit(i32 100) #8, !dbg !895
  unreachable, !dbg !897

if.end36:                                         ; preds = %sw.bb28
  %76 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %76, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.223, i32 0, i32 0))
  %77 = load i32, i32* %i, align 4, !dbg !898
  %idxprom37 = sext i32 %77 to i64, !dbg !899
  %78 = ptrtoint i8*** %argv.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %78, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.224, i32 0, i32 0))
  %79 = load i8**, i8*** %argv.addr, align 8, !dbg !899
  %arrayidx38 = getelementptr inbounds i8*, i8** %79, i64 %idxprom37, !dbg !899
  %80 = ptrtoint i8** %arrayidx38 to i64
  call void @__DiscoPoPOpenMPRead(i64 %80, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.225, i32 0, i32 0))
  %81 = load i8*, i8** %arrayidx38, align 8, !dbg !899
  %call39 = call i32 @atoi(i8* %81) #10, !dbg !900
  %82 = ptrtoint i32* @bots_arg_size to i64
  call void @__DiscoPoPOpenMPWrite(i64 %82, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.226, i32 0, i32 0))
  store i32 %call39, i32* @bots_arg_size, align 4, !dbg !901
  br label %sw.epilog, !dbg !902

sw.bb40:                                          ; preds = %if.then
  %83 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %83, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.227, i32 0, i32 0))
  %84 = load i32, i32* %i, align 4, !dbg !903
  %idxprom41 = sext i32 %84 to i64, !dbg !904
  %85 = ptrtoint i8*** %argv.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %85, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.228, i32 0, i32 0))
  %86 = load i8**, i8*** %argv.addr, align 8, !dbg !904
  %arrayidx42 = getelementptr inbounds i8*, i8** %86, i64 %idxprom41, !dbg !904
  %87 = ptrtoint i8** %arrayidx42 to i64
  call void @__DiscoPoPOpenMPRead(i64 %87, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.229, i32 0, i32 0))
  %88 = load i8*, i8** %arrayidx42, align 8, !dbg !904
  %arrayidx43 = getelementptr inbounds i8, i8* %88, i64 1, !dbg !904
  %89 = ptrtoint i8* %arrayidx43 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %89, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.230, i32 0, i32 0))
  store i8 42, i8* %arrayidx43, align 1, !dbg !905
  %90 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %90, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.231, i32 0, i32 0))
  %91 = load i32, i32* %i, align 4, !dbg !906
  %inc44 = add nsw i32 %91, 1, !dbg !906
  %92 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %92, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.232, i32 0, i32 0))
  store i32 %inc44, i32* %i, align 4, !dbg !906
  %93 = ptrtoint i32* %argc.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %93, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.233, i32 0, i32 0))
  %94 = load i32, i32* %argc.addr, align 4, !dbg !907
  %95 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %95, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.234, i32 0, i32 0))
  %96 = load i32, i32* %i, align 4, !dbg !909
  %cmp45 = icmp eq i32 %94, %96, !dbg !910
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !911

if.then47:                                        ; preds = %sw.bb40
  call void @bots_print_usage(), !dbg !912
  call void @exit(i32 100) #8, !dbg !915
  unreachable, !dbg !917

if.end48:                                         ; preds = %sw.bb40
  %97 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %97, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.235, i32 0, i32 0))
  %98 = load i32, i32* %i, align 4, !dbg !918
  %idxprom49 = sext i32 %98 to i64, !dbg !919
  %99 = ptrtoint i8*** %argv.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %99, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.236, i32 0, i32 0))
  %100 = load i8**, i8*** %argv.addr, align 8, !dbg !919
  %arrayidx50 = getelementptr inbounds i8*, i8** %100, i64 %idxprom49, !dbg !919
  %101 = ptrtoint i8** %arrayidx50 to i64
  call void @__DiscoPoPOpenMPRead(i64 %101, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.237, i32 0, i32 0))
  %102 = load i8*, i8** %arrayidx50, align 8, !dbg !919
  %call51 = call i32 @atoi(i8* %102) #10, !dbg !920
  %103 = ptrtoint i32* @bots_output_format to i64
  call void @__DiscoPoPOpenMPWrite(i64 %103, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.238, i32 0, i32 0))
  store i32 %call51, i32* @bots_output_format, align 4, !dbg !921
  br label %sw.epilog, !dbg !922

sw.bb52:                                          ; preds = %if.then
  %104 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %104, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.239, i32 0, i32 0))
  %105 = load i32, i32* %i, align 4, !dbg !923
  %idxprom53 = sext i32 %105 to i64, !dbg !924
  %106 = ptrtoint i8*** %argv.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %106, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.240, i32 0, i32 0))
  %107 = load i8**, i8*** %argv.addr, align 8, !dbg !924
  %arrayidx54 = getelementptr inbounds i8*, i8** %107, i64 %idxprom53, !dbg !924
  %108 = ptrtoint i8** %arrayidx54 to i64
  call void @__DiscoPoPOpenMPRead(i64 %108, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.241, i32 0, i32 0))
  %109 = load i8*, i8** %arrayidx54, align 8, !dbg !924
  %arrayidx55 = getelementptr inbounds i8, i8* %109, i64 1, !dbg !924
  %110 = ptrtoint i8* %arrayidx55 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %110, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.242, i32 0, i32 0))
  store i8 42, i8* %arrayidx55, align 1, !dbg !925
  %111 = ptrtoint i32* @bots_sequential_flag to i64
  call void @__DiscoPoPOpenMPWrite(i64 %111, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.243, i32 0, i32 0))
  store i32 1, i32* @bots_sequential_flag, align 4, !dbg !926
  br label %sw.epilog, !dbg !927

sw.bb56:                                          ; preds = %if.then
  %112 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %112, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.244, i32 0, i32 0))
  %113 = load i32, i32* %i, align 4, !dbg !928
  %idxprom57 = sext i32 %113 to i64, !dbg !929
  %114 = ptrtoint i8*** %argv.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %114, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.245, i32 0, i32 0))
  %115 = load i8**, i8*** %argv.addr, align 8, !dbg !929
  %arrayidx58 = getelementptr inbounds i8*, i8** %115, i64 %idxprom57, !dbg !929
  %116 = ptrtoint i8** %arrayidx58 to i64
  call void @__DiscoPoPOpenMPRead(i64 %116, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.246, i32 0, i32 0))
  %117 = load i8*, i8** %arrayidx58, align 8, !dbg !929
  %arrayidx59 = getelementptr inbounds i8, i8* %117, i64 1, !dbg !929
  %118 = ptrtoint i8* %arrayidx59 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %118, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.247, i32 0, i32 0))
  store i8 42, i8* %arrayidx59, align 1, !dbg !930
  %119 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %119, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.248, i32 0, i32 0))
  %120 = load i32, i32* %i, align 4, !dbg !931
  %inc60 = add nsw i32 %120, 1, !dbg !931
  %121 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %121, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.249, i32 0, i32 0))
  store i32 %inc60, i32* %i, align 4, !dbg !931
  %122 = ptrtoint i32* %argc.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %122, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.250, i32 0, i32 0))
  %123 = load i32, i32* %argc.addr, align 4, !dbg !932
  %124 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %124, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.251, i32 0, i32 0))
  %125 = load i32, i32* %i, align 4, !dbg !934
  %cmp61 = icmp eq i32 %123, %125, !dbg !935
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !936

if.then63:                                        ; preds = %sw.bb56
  call void @bots_print_usage(), !dbg !937
  call void @exit(i32 100) #8, !dbg !940
  unreachable, !dbg !942

if.end64:                                         ; preds = %sw.bb56
  %126 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %126, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.252, i32 0, i32 0))
  %127 = load i32, i32* %i, align 4, !dbg !943
  %idxprom65 = sext i32 %127 to i64, !dbg !944
  %128 = ptrtoint i8*** %argv.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %128, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.253, i32 0, i32 0))
  %129 = load i8**, i8*** %argv.addr, align 8, !dbg !944
  %arrayidx66 = getelementptr inbounds i8*, i8** %129, i64 %idxprom65, !dbg !944
  %130 = ptrtoint i8** %arrayidx66 to i64
  call void @__DiscoPoPOpenMPRead(i64 %130, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.254, i32 0, i32 0))
  %131 = load i8*, i8** %arrayidx66, align 8, !dbg !944
  %call67 = call i32 @atoi(i8* %131) #10, !dbg !945
  %132 = ptrtoint i32* @bots_verbose_mode to i64
  call void @__DiscoPoPOpenMPWrite(i64 %132, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.255, i32 0, i32 0))
  store i32 %call67, i32* @bots_verbose_mode, align 4, !dbg !946
  %133 = ptrtoint i32* @bots_verbose_mode to i64
  call void @__DiscoPoPOpenMPRead(i64 %133, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.256, i32 0, i32 0))
  %134 = load i32, i32* @bots_verbose_mode, align 4, !dbg !947
  %cmp68 = icmp ugt i32 %134, 1, !dbg !949
  br i1 %cmp68, label %if.then70, label %if.end72, !dbg !950

if.then70:                                        ; preds = %if.end64
  %135 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %135, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.257, i32 0, i32 0))
  %136 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !951
  %call71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %136, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.20.68, i32 0, i32 0)), !dbg !953
  call void @exit(i32 100) #8, !dbg !954
  unreachable, !dbg !954

if.end72:                                         ; preds = %if.end64
  br label %sw.epilog, !dbg !955

sw.bb73:                                          ; preds = %if.then
  %137 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %137, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.258, i32 0, i32 0))
  %138 = load i32, i32* %i, align 4, !dbg !956
  %idxprom74 = sext i32 %138 to i64, !dbg !957
  %139 = ptrtoint i8*** %argv.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %139, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.259, i32 0, i32 0))
  %140 = load i8**, i8*** %argv.addr, align 8, !dbg !957
  %arrayidx75 = getelementptr inbounds i8*, i8** %140, i64 %idxprom74, !dbg !957
  %141 = ptrtoint i8** %arrayidx75 to i64
  call void @__DiscoPoPOpenMPRead(i64 %141, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.260, i32 0, i32 0))
  %142 = load i8*, i8** %arrayidx75, align 8, !dbg !957
  %arrayidx76 = getelementptr inbounds i8, i8* %142, i64 1, !dbg !957
  %143 = ptrtoint i8* %arrayidx76 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %143, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.261, i32 0, i32 0))
  store i8 42, i8* %arrayidx76, align 1, !dbg !958
  %144 = ptrtoint i32* @bots_print_header to i64
  call void @__DiscoPoPOpenMPWrite(i64 %144, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.262, i32 0, i32 0))
  store i32 1, i32* @bots_print_header, align 4, !dbg !959
  br label %sw.epilog, !dbg !960

sw.default:                                       ; preds = %if.then
  %145 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %145, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.263, i32 0, i32 0))
  %146 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !961
  %call77 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %146, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21.69, i32 0, i32 0)), !dbg !962
  call void @bots_print_usage(), !dbg !963
  call void @exit(i32 100) #8, !dbg !964
  unreachable, !dbg !964

sw.epilog:                                        ; preds = %sw.bb73, %if.end72, %sw.bb52, %if.end48, %if.end36, %if.end, %sw.bb
  br label %if.end79, !dbg !965

if.else:                                          ; preds = %for.body
  %147 = ptrtoint %struct._IO_FILE** @stderr to i64
  call void @__DiscoPoPOpenMPRead(i64 %147, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.264, i32 0, i32 0))
  %148 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !966
  %call78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %148, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21.69, i32 0, i32 0)), !dbg !968
  call void @bots_print_usage(), !dbg !969
  call void @exit(i32 100) #8, !dbg !970
  unreachable, !dbg !970

if.end79:                                         ; preds = %sw.epilog
  br label %for.inc, !dbg !971

for.inc:                                          ; preds = %if.end79
  %149 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPRead(i64 %149, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.265, i32 0, i32 0))
  %150 = load i32, i32* %i, align 4, !dbg !972
  %inc80 = add nsw i32 %150, 1, !dbg !972
  %151 = ptrtoint i32* %i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %151, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.266, i32 0, i32 0))
  store i32 %inc80, i32* %i, align 4, !dbg !972
  br label %for.cond, !dbg !974

for.end:                                          ; preds = %for.cond
  ret void, !dbg !975
}

; Function Attrs: nounwind
declare i8* @__xpg_basename(i8*) #4

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #4

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #5

; Function Attrs: nounwind uwtable
define void @bots_get_params(i32 %argc, i8** %argv) #0 !dbg !976 {
entry:
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %0 = ptrtoint i32* %argc.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.267, i32 0, i32 0))
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !977, metadata !286), !dbg !978
  %1 = ptrtoint i8*** %argv.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.268, i32 0, i32 0))
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !979, metadata !286), !dbg !980
  %2 = ptrtoint i32* %argc.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %2, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.269, i32 0, i32 0))
  %3 = load i32, i32* %argc.addr, align 4, !dbg !981
  %4 = ptrtoint i8*** %argv.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %4, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.270, i32 0, i32 0))
  %5 = load i8**, i8*** %argv.addr, align 8, !dbg !982
  call void @bots_get_params_common(i32 %3, i8** %5), !dbg !983
  ret void, !dbg !984
}

; Function Attrs: nounwind uwtable
define void @bots_set_info() #0 !dbg !985 {
entry:
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_name, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22.70, i32 0, i32 0)) #9, !dbg !986
  %0 = ptrtoint i32* @bots_arg_size to i64
  call void @__DiscoPoPOpenMPRead(i64 %0, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.271, i32 0, i32 0))
  %1 = load i32, i32* @bots_arg_size, align 4, !dbg !987
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_parameters, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23.71, i32 0, i32 0), i32 %1) #9, !dbg !988
  %call2 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_model, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.24.72, i32 0, i32 0)) #9, !dbg !989
  %call3 = call i32 @omp_get_max_threads(), !dbg !990
  %call4 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_resources, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.73, i32 0, i32 0), i32 %call3) #9, !dbg !991
  %call5 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_comp_date, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19.67, i32 0, i32 0)) #9, !dbg !993
  %call6 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_comp_message, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19.67, i32 0, i32 0)) #9, !dbg !994
  %call7 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_cc, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19.67, i32 0, i32 0)) #9, !dbg !995
  %call8 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_cflags, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19.67, i32 0, i32 0)) #9, !dbg !996
  %call9 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_ld, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19.67, i32 0, i32 0)) #9, !dbg !997
  %call10 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_ldflags, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19.67, i32 0, i32 0)) #9, !dbg !998
  %call11 = call i8* @strcpy(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_cutoff, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26.74, i32 0, i32 0)) #9, !dbg !999
  ret void, !dbg !1000
}

declare i32 @omp_get_max_threads() #2

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 !dbg !1001 {
entry:
  call void @__DiscoPoPOpenMPInitialize()
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %bots_t_start = alloca i64, align 8
  %bots_t_end = alloca i64, align 8
  store i32 0, i32* %retval, align 4
  %0 = ptrtoint i32* %argc.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.272, i32 0, i32 0))
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !1004, metadata !286), !dbg !1005
  %1 = ptrtoint i8*** %argv.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.273, i32 0, i32 0))
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !1006, metadata !286), !dbg !1007
  call void @llvm.dbg.declare(metadata i64* %bots_t_start, metadata !1008, metadata !286), !dbg !1009
  call void @llvm.dbg.declare(metadata i64* %bots_t_end, metadata !1010, metadata !286), !dbg !1011
  %2 = ptrtoint i32* %argc.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %2, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.274, i32 0, i32 0))
  %3 = load i32, i32* %argc.addr, align 4, !dbg !1012
  %4 = ptrtoint i8*** %argv.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %4, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.275, i32 0, i32 0))
  %5 = load i8**, i8*** %argv.addr, align 8, !dbg !1013
  call void @bots_get_params(i32 %3, i8** %5), !dbg !1014
  call void @bots_set_info(), !dbg !1015
  %6 = ptrtoint i32* @bots_sequential_flag to i64
  call void @__DiscoPoPOpenMPRead(i64 %6, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.276, i32 0, i32 0))
  %7 = load i32, i32* @bots_sequential_flag, align 4, !dbg !1016
  %tobool = icmp ne i32 %7, 0, !dbg !1016
  br i1 %tobool, label %if.then, label %if.end, !dbg !1018

if.then:                                          ; preds = %entry
  %8 = ptrtoint i32* @bots_sequential_flag to i64
  call void @__DiscoPoPOpenMPWrite(i64 %8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.277, i32 0, i32 0))
  store i32 1, i32* @bots_sequential_flag, align 4, !dbg !1019
  %call = call i64 (...) bitcast (i64 ()* @bots_usecs to i64 (...)*)(), !dbg !1021
  %9 = ptrtoint i64* %bots_t_start to i64
  call void @__DiscoPoPOpenMPWrite(i64 %9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.278, i32 0, i32 0))
  store i64 %call, i64* %bots_t_start, align 8, !dbg !1022
  %10 = ptrtoint i32* @bots_arg_size to i64
  call void @__DiscoPoPOpenMPRead(i64 %10, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.279, i32 0, i32 0))
  %11 = load i32, i32* @bots_arg_size, align 4, !dbg !1023
  call void @fib0_seq(i32 %11), !dbg !1023
  %call1 = call i64 (...) bitcast (i64 ()* @bots_usecs to i64 (...)*)(), !dbg !1024
  %12 = ptrtoint i64* %bots_t_end to i64
  call void @__DiscoPoPOpenMPWrite(i64 %12, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.280, i32 0, i32 0))
  store i64 %call1, i64* %bots_t_end, align 8, !dbg !1025
  %13 = ptrtoint i64* %bots_t_end to i64
  call void @__DiscoPoPOpenMPRead(i64 %13, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.281, i32 0, i32 0))
  %14 = load i64, i64* %bots_t_end, align 8, !dbg !1026
  %15 = ptrtoint i64* %bots_t_start to i64
  call void @__DiscoPoPOpenMPRead(i64 %15, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.282, i32 0, i32 0))
  %16 = load i64, i64* %bots_t_start, align 8, !dbg !1027
  %sub = sub nsw i64 %14, %16, !dbg !1028
  %conv = sitofp i64 %sub to double, !dbg !1029
  %div = fdiv double %conv, 1.000000e+06, !dbg !1030
  %17 = ptrtoint double* @bots_time_sequential to i64
  call void @__DiscoPoPOpenMPWrite(i64 %17, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.283, i32 0, i32 0))
  store double %div, double* @bots_time_sequential, align 8, !dbg !1031
  br label %if.end, !dbg !1032

if.end:                                           ; preds = %if.then, %entry
  %call2 = call i64 (...) bitcast (i64 ()* @bots_usecs to i64 (...)*)(), !dbg !1033
  %18 = ptrtoint i64* %bots_t_start to i64
  call void @__DiscoPoPOpenMPWrite(i64 %18, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.284, i32 0, i32 0))
  store i64 %call2, i64* %bots_t_start, align 8, !dbg !1034
  %19 = ptrtoint i32* @bots_arg_size to i64
  call void @__DiscoPoPOpenMPRead(i64 %19, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.285, i32 0, i32 0))
  %20 = load i32, i32* @bots_arg_size, align 4, !dbg !1035
  call void @fib0(i32 %20), !dbg !1035
  %call3 = call i64 (...) bitcast (i64 ()* @bots_usecs to i64 (...)*)(), !dbg !1036
  %21 = ptrtoint i64* %bots_t_end to i64
  call void @__DiscoPoPOpenMPWrite(i64 %21, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.286, i32 0, i32 0))
  store i64 %call3, i64* %bots_t_end, align 8, !dbg !1037
  %22 = ptrtoint i64* %bots_t_end to i64
  call void @__DiscoPoPOpenMPRead(i64 %22, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.287, i32 0, i32 0))
  %23 = load i64, i64* %bots_t_end, align 8, !dbg !1038
  %24 = ptrtoint i64* %bots_t_start to i64
  call void @__DiscoPoPOpenMPRead(i64 %24, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.288, i32 0, i32 0))
  %25 = load i64, i64* %bots_t_start, align 8, !dbg !1039
  %sub4 = sub nsw i64 %23, %25, !dbg !1040
  %conv5 = sitofp i64 %sub4 to double, !dbg !1041
  %div6 = fdiv double %conv5, 1.000000e+06, !dbg !1042
  %26 = ptrtoint double* @bots_time_program to i64
  call void @__DiscoPoPOpenMPWrite(i64 %26, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.289, i32 0, i32 0))
  store double %div6, double* @bots_time_program, align 8, !dbg !1043
  %27 = ptrtoint i32* @bots_check_flag to i64
  call void @__DiscoPoPOpenMPRead(i64 %27, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.290, i32 0, i32 0))
  %28 = load i32, i32* @bots_check_flag, align 4, !dbg !1044
  %tobool7 = icmp ne i32 %28, 0, !dbg !1044
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !1046

if.then8:                                         ; preds = %if.end
  %29 = ptrtoint i32* @bots_arg_size to i64
  call void @__DiscoPoPOpenMPRead(i64 %29, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.291, i32 0, i32 0))
  %30 = load i32, i32* @bots_arg_size, align 4, !dbg !1047
  %call9 = call i32 @fib_verify(i32 %30), !dbg !1047
  %31 = ptrtoint i32* @bots_result to i64
  call void @__DiscoPoPOpenMPWrite(i64 %31, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.292, i32 0, i32 0))
  store i32 %call9, i32* @bots_result, align 4, !dbg !1049
  br label %if.end10, !dbg !1050

if.end10:                                         ; preds = %if.then8, %if.end
  call void @bots_print_results(), !dbg !1051
  call void @__DiscoPoPOpenMPFinalize()
  ret i32 0, !dbg !1052
}

; Function Attrs: nounwind uwtable
define i64 @fib_seq(i32 %n) #0 !dbg !1053 {
entry:
  %retval = alloca i64, align 8
  %n.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %0 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.293, i32 0, i32 0))
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !1056, metadata !286), !dbg !1057
  call void @llvm.dbg.declare(metadata i32* %x, metadata !1058, metadata !286), !dbg !1059
  call void @llvm.dbg.declare(metadata i32* %y, metadata !1060, metadata !286), !dbg !1061
  %1 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %1, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.294, i32 0, i32 0))
  %2 = load i32, i32* %n.addr, align 4, !dbg !1062
  %cmp = icmp slt i32 %2, 2, !dbg !1064
  br i1 %cmp, label %if.then, label %if.end, !dbg !1065

if.then:                                          ; preds = %entry
  %3 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %3, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.295, i32 0, i32 0))
  %4 = load i32, i32* %n.addr, align 4, !dbg !1066
  %conv = sext i32 %4 to i64, !dbg !1066
  store i64 %conv, i64* %retval, align 8, !dbg !1068
  br label %return, !dbg !1068

if.end:                                           ; preds = %entry
  %5 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %5, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.296, i32 0, i32 0))
  %6 = load i32, i32* %n.addr, align 4, !dbg !1069
  %sub = sub nsw i32 %6, 1, !dbg !1070
  %call = call i64 @fib_seq(i32 %sub), !dbg !1071
  %conv1 = trunc i64 %call to i32, !dbg !1071
  %7 = ptrtoint i32* %x to i64
  call void @__DiscoPoPOpenMPWrite(i64 %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.297, i32 0, i32 0))
  store i32 %conv1, i32* %x, align 4, !dbg !1072
  %8 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %8, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.298, i32 0, i32 0))
  %9 = load i32, i32* %n.addr, align 4, !dbg !1073
  %sub2 = sub nsw i32 %9, 2, !dbg !1074
  %call3 = call i64 @fib_seq(i32 %sub2), !dbg !1075
  %conv4 = trunc i64 %call3 to i32, !dbg !1075
  %10 = ptrtoint i32* %y to i64
  call void @__DiscoPoPOpenMPWrite(i64 %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.299, i32 0, i32 0))
  store i32 %conv4, i32* %y, align 4, !dbg !1076
  %11 = ptrtoint i32* %x to i64
  call void @__DiscoPoPOpenMPRead(i64 %11, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.300, i32 0, i32 0))
  %12 = load i32, i32* %x, align 4, !dbg !1077
  %13 = ptrtoint i32* %y to i64
  call void @__DiscoPoPOpenMPRead(i64 %13, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.301, i32 0, i32 0))
  %14 = load i32, i32* %y, align 4, !dbg !1078
  %add = add nsw i32 %12, %14, !dbg !1079
  %conv5 = sext i32 %add to i64, !dbg !1077
  store i64 %conv5, i64* %retval, align 8, !dbg !1080
  br label %return, !dbg !1080

return:                                           ; preds = %if.end, %if.then
  %15 = ptrtoint i64* %retval to i64
  call void @__DiscoPoPOpenMPRead(i64 %15, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.302, i32 0, i32 0))
  %16 = load i64, i64* %retval, align 8, !dbg !1081
  ret i64 %16, !dbg !1081
}

; Function Attrs: nounwind uwtable
define i64 @fib(i32 %n) #0 !dbg !1082 {
entry:
  %retval = alloca i64, align 8
  %n.addr = alloca i32, align 4
  %x = alloca i64, align 8
  %y = alloca i64, align 8
  %agg.captured = alloca %struct.anon, align 8
  %.kmpc_loc.addr = alloca %ident_t, align 8
  %0 = bitcast %ident_t* %.kmpc_loc.addr to i8*
  %1 = bitcast %ident_t* @0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 24, i32 8, i1 false)
  %2 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4
  %3 = ptrtoint i8** %2 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.303, i32 0, i32 0))
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @1, i32 0, i32 0), i8** %2, align 8
  call void @__DiscoPoPOpenMPBeforeCall(i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.305, i32 0, i32 0))
  call void @__DiscoPoPOpenMPAfterCall()
  %4 = call i32 @__kmpc_global_thread_num(%ident_t* %.kmpc_loc.addr)
  %agg.captured1 = alloca %struct.anon, align 8
  %5 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.306, i32 0, i32 0))
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !1083, metadata !286), !dbg !1084
  call void @llvm.dbg.declare(metadata i64* %x, metadata !1085, metadata !286), !dbg !1086
  call void @llvm.dbg.declare(metadata i64* %y, metadata !1087, metadata !286), !dbg !1088
  %6 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %6, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.307, i32 0, i32 0))
  %7 = load i32, i32* %n.addr, align 4, !dbg !1089
  %cmp = icmp slt i32 %7, 2, !dbg !1091
  br i1 %cmp, label %if.then, label %if.end, !dbg !1092

if.then:                                          ; preds = %entry
  %8 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %8, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.308, i32 0, i32 0))
  %9 = load i32, i32* %n.addr, align 4, !dbg !1093
  %conv = sext i32 %9 to i64, !dbg !1093
  store i64 %conv, i64* %retval, align 8, !dbg !1095
  br label %return, !dbg !1095

if.end:                                           ; preds = %entry
  %10 = getelementptr inbounds %struct.anon, %struct.anon* %agg.captured, i32 0, i32 0, !dbg !1096
  %11 = ptrtoint i64** %10 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %11, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.309, i32 0, i32 0))
  store i64* %x, i64** %10, align 8, !dbg !1096
  %12 = getelementptr inbounds %struct.anon, %struct.anon* %agg.captured, i32 0, i32 1, !dbg !1096
  %13 = ptrtoint i32** %12 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %13, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.310, i32 0, i32 0))
  store i32* %n.addr, i32** %12, align 8, !dbg !1096
  %14 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !1096
  %15 = ptrtoint i8** %14 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %15, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.311, i32 0, i32 0))
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @1, i32 0, i32 0), i8** %14, align 8, !dbg !1096
  call void @__DiscoPoPOpenMPBeforeCall(i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.313, i32 0, i32 0))
  call void @__DiscoPoPOpenMPAfterCall()
  %16 = call i8* @__kmpc_omp_task_alloc(%ident_t* %.kmpc_loc.addr, i32 %4, i32 0, i64 40, i64 16, i32 (i32, i8*)* bitcast (i32 (i32, %struct.kmp_task_t_with_privates*)* @.omp_task_entry. to i32 (i32, i8*)*)), !dbg !1096
  %17 = bitcast i8* %16 to %struct.kmp_task_t_with_privates*, !dbg !1096
  %18 = getelementptr inbounds %struct.kmp_task_t_with_privates, %struct.kmp_task_t_with_privates* %17, i32 0, i32 0, !dbg !1096
  %19 = getelementptr inbounds %struct.kmp_task_t, %struct.kmp_task_t* %18, i32 0, i32 0, !dbg !1096
  %20 = ptrtoint i8** %19 to i64
  call void @__DiscoPoPOpenMPRead(i64 %20, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.314, i32 0, i32 0))
  %21 = load i8*, i8** %19, align 8, !dbg !1096
  %22 = bitcast %struct.anon* %agg.captured to i8*, !dbg !1096
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 16, i32 8, i1 false), !dbg !1097
  %23 = getelementptr inbounds %struct.kmp_task_t_with_privates, %struct.kmp_task_t_with_privates* %17, i32 0, i32 1, !dbg !1096
  %24 = bitcast i8* %21 to %struct.anon*, !dbg !1096
  %25 = getelementptr inbounds %struct..kmp_privates.t, %struct..kmp_privates.t* %23, i32 0, i32 0, !dbg !1096
  %26 = getelementptr inbounds %struct.anon, %struct.anon* %24, i32 0, i32 1, !dbg !1096
  %27 = ptrtoint i32** %26 to i64
  call void @__DiscoPoPOpenMPRead(i64 %27, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.315, i32 0, i32 0))
  %ref = load i32*, i32** %26, align 8, !dbg !1096
  %28 = ptrtoint i32* %ref to i64
  call void @__DiscoPoPOpenMPRead(i64 %28, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.316, i32 0, i32 0))
  %29 = load i32, i32* %ref, align 4, !dbg !1099
  %30 = ptrtoint i32* %25 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %30, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.317, i32 0, i32 0))
  store i32 %29, i32* %25, align 8, !dbg !1096
  %31 = getelementptr inbounds %struct.kmp_task_t, %struct.kmp_task_t* %18, i32 0, i32 3, !dbg !1096
  %32 = ptrtoint i32 (i32, i8*)** %31 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %32, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.318, i32 0, i32 0))
  store i32 (i32, i8*)* null, i32 (i32, i8*)** %31, align 8, !dbg !1096
  %33 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !1096
  %34 = ptrtoint i8** %33 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %34, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.319, i32 0, i32 0))
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @1, i32 0, i32 0), i8** %33, align 8, !dbg !1096
  call void @__DiscoPoPOpenMPBeforeCall(i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.321, i32 0, i32 0))
  call void @__DiscoPoPOpenMPAfterCall()
  %35 = call i32 @__kmpc_omp_task(%ident_t* %.kmpc_loc.addr, i32 %4, i8* %16), !dbg !1101
  %36 = getelementptr inbounds %struct.anon, %struct.anon* %agg.captured1, i32 0, i32 0, !dbg !1103
  %37 = ptrtoint i64** %36 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.322, i32 0, i32 0))
  store i64* %y, i64** %36, align 8, !dbg !1103
  %38 = getelementptr inbounds %struct.anon, %struct.anon* %agg.captured1, i32 0, i32 1, !dbg !1103
  %39 = ptrtoint i32** %38 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %39, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.323, i32 0, i32 0))
  store i32* %n.addr, i32** %38, align 8, !dbg !1103
  %40 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !1103
  %41 = ptrtoint i8** %40 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %41, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.324, i32 0, i32 0))
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @2, i32 0, i32 0), i8** %40, align 8, !dbg !1103
  call void @__DiscoPoPOpenMPBeforeCall(i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.326, i32 0, i32 0))
  call void @__DiscoPoPOpenMPAfterCall()
  %42 = call i8* @__kmpc_omp_task_alloc(%ident_t* %.kmpc_loc.addr, i32 %4, i32 0, i64 40, i64 16, i32 (i32, i8*)* bitcast (i32 (i32, %struct.kmp_task_t_with_privates*)* @.omp_task_entry..3 to i32 (i32, i8*)*)), !dbg !1103
  %43 = bitcast i8* %42 to %struct.kmp_task_t_with_privates*, !dbg !1103
  %44 = getelementptr inbounds %struct.kmp_task_t_with_privates, %struct.kmp_task_t_with_privates* %43, i32 0, i32 0, !dbg !1103
  %45 = getelementptr inbounds %struct.kmp_task_t, %struct.kmp_task_t* %44, i32 0, i32 0, !dbg !1103
  %46 = ptrtoint i8** %45 to i64
  call void @__DiscoPoPOpenMPRead(i64 %46, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.327, i32 0, i32 0))
  %47 = load i8*, i8** %45, align 8, !dbg !1103
  %48 = bitcast %struct.anon* %agg.captured1 to i8*, !dbg !1103
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 16, i32 8, i1 false), !dbg !1104
  %49 = getelementptr inbounds %struct.kmp_task_t_with_privates, %struct.kmp_task_t_with_privates* %43, i32 0, i32 1, !dbg !1103
  %50 = bitcast i8* %47 to %struct.anon*, !dbg !1103
  %51 = getelementptr inbounds %struct..kmp_privates.t, %struct..kmp_privates.t* %49, i32 0, i32 0, !dbg !1103
  %52 = getelementptr inbounds %struct.anon, %struct.anon* %50, i32 0, i32 1, !dbg !1103
  %53 = ptrtoint i32** %52 to i64
  call void @__DiscoPoPOpenMPRead(i64 %53, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.328, i32 0, i32 0))
  %ref2 = load i32*, i32** %52, align 8, !dbg !1103
  %54 = ptrtoint i32* %ref2 to i64
  call void @__DiscoPoPOpenMPRead(i64 %54, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.329, i32 0, i32 0))
  %55 = load i32, i32* %ref2, align 4, !dbg !1105
  %56 = ptrtoint i32* %51 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %56, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.330, i32 0, i32 0))
  store i32 %55, i32* %51, align 8, !dbg !1103
  %57 = getelementptr inbounds %struct.kmp_task_t, %struct.kmp_task_t* %44, i32 0, i32 3, !dbg !1103
  %58 = ptrtoint i32 (i32, i8*)** %57 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %58, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.331, i32 0, i32 0))
  store i32 (i32, i8*)* null, i32 (i32, i8*)** %57, align 8, !dbg !1103
  %59 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !1103
  %60 = ptrtoint i8** %59 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %60, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.332, i32 0, i32 0))
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @2, i32 0, i32 0), i8** %59, align 8, !dbg !1103
  call void @__DiscoPoPOpenMPBeforeCall(i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.334, i32 0, i32 0))
  call void @__DiscoPoPOpenMPAfterCall()
  %61 = call i32 @__kmpc_omp_task(%ident_t* %.kmpc_loc.addr, i32 %4, i8* %42), !dbg !1107
  %62 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !1108
  %63 = ptrtoint i8** %62 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %63, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.335, i32 0, i32 0))
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @3, i32 0, i32 0), i8** %62, align 8, !dbg !1108
  call void @__DiscoPoPOpenMPBeforeCall(i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.337, i32 0, i32 0))
  call void @__DiscoPoPOpenMPAfterCall()
  %64 = call i32 @__kmpc_omp_taskwait(%ident_t* %.kmpc_loc.addr, i32 %4), !dbg !1108
  %65 = ptrtoint i64* %x to i64
  call void @__DiscoPoPOpenMPRead(i64 %65, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.338, i32 0, i32 0))
  %66 = load i64, i64* %x, align 8, !dbg !1109
  %67 = ptrtoint i64* %y to i64
  call void @__DiscoPoPOpenMPRead(i64 %67, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.339, i32 0, i32 0))
  %68 = load i64, i64* %y, align 8, !dbg !1110
  %add = add nsw i64 %66, %68, !dbg !1111
  store i64 %add, i64* %retval, align 8, !dbg !1112
  br label %return, !dbg !1112

return:                                           ; preds = %if.end, %if.then
  %69 = ptrtoint i64* %retval to i64
  call void @__DiscoPoPOpenMPRead(i64 %69, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.340, i32 0, i32 0))
  %70 = load i64, i64* %retval, align 8, !dbg !1113
  ret i64 %70, !dbg !1113
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #6

declare i32 @__kmpc_global_thread_num(%ident_t*)

; Function Attrs: nounwind uwtable
define internal i32 @.omp_task_entry.(i32, %struct.kmp_task_t_with_privates* noalias) #0 {
entry:
  call void @__DiscoPoPOpenMPBeforeCall(i8* getelementptr inbounds ([125 x i8], [125 x i8]* @.str.342, i32 0, i32 0))
  %.global_tid..addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %.global_tid..addr.i, metadata !1114, metadata !286), !dbg !1127
  %.part_id..addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %.part_id..addr.i, metadata !1128, metadata !286), !dbg !1127
  %.privates..addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %.privates..addr.i, metadata !1129, metadata !286), !dbg !1127
  %.copy_fn..addr.i = alloca void (i8*, ...)*, align 8
  call void @llvm.dbg.declare(metadata void (i8*, ...)** %.copy_fn..addr.i, metadata !1130, metadata !286), !dbg !1127
  %__context.addr.i = alloca %struct.anon*, align 8
  call void @llvm.dbg.declare(metadata %struct.anon** %__context.addr.i, metadata !1131, metadata !286), !dbg !1127
  %tmp.i = alloca i32*, align 8
  %.addr = alloca i32, align 4
  %.addr1 = alloca %struct.kmp_task_t_with_privates*, align 8
  %2 = ptrtoint i32* %.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.343, i32 0, i32 0))
  store i32 %0, i32* %.addr, align 4
  %3 = ptrtoint %struct.kmp_task_t_with_privates** %.addr1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.344, i32 0, i32 0))
  store %struct.kmp_task_t_with_privates* %1, %struct.kmp_task_t_with_privates** %.addr1, align 8
  %4 = ptrtoint i32* %.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %4, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.345, i32 0, i32 0))
  %5 = load i32, i32* %.addr, align 4
  %6 = ptrtoint %struct.kmp_task_t_with_privates** %.addr1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %6, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.346, i32 0, i32 0))
  %7 = load %struct.kmp_task_t_with_privates*, %struct.kmp_task_t_with_privates** %.addr1, align 8
  %8 = getelementptr inbounds %struct.kmp_task_t_with_privates, %struct.kmp_task_t_with_privates* %7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.kmp_task_t, %struct.kmp_task_t* %8, i32 0, i32 2
  %10 = ptrtoint i32* %9 to i64
  call void @__DiscoPoPOpenMPRead(i64 %10, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.347, i32 0, i32 0))
  %11 = load i32, i32* %9, align 8
  %12 = getelementptr inbounds %struct.kmp_task_t, %struct.kmp_task_t* %8, i32 0, i32 0
  %13 = ptrtoint i8** %12 to i64
  call void @__DiscoPoPOpenMPRead(i64 %13, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.348, i32 0, i32 0))
  %14 = load i8*, i8** %12, align 8
  %15 = bitcast i8* %14 to %struct.anon*
  %16 = getelementptr inbounds %struct.kmp_task_t_with_privates, %struct.kmp_task_t_with_privates* %7, i32 0, i32 1
  %17 = bitcast %struct..kmp_privates.t* %16 to i8*
  %18 = ptrtoint i32* %.global_tid..addr.i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %18, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.349, i32 0, i32 0))
  store i32 %5, i32* %.global_tid..addr.i, align 4, !noalias !1132
  %19 = ptrtoint i32* %.part_id..addr.i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %19, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.350, i32 0, i32 0))
  store i32 %11, i32* %.part_id..addr.i, align 4, !noalias !1132
  %20 = ptrtoint i8** %.privates..addr.i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %20, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.351, i32 0, i32 0))
  store i8* %17, i8** %.privates..addr.i, align 8, !noalias !1132
  %21 = ptrtoint void (i8*, ...)** %.copy_fn..addr.i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %21, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.352, i32 0, i32 0))
  store void (i8*, ...)* bitcast (void (%struct..kmp_privates.t*, i32**)* @.omp_task_privates_map. to void (i8*, ...)*), void (i8*, ...)** %.copy_fn..addr.i, align 8, !noalias !1132
  %22 = ptrtoint %struct.anon** %__context.addr.i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %22, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.353, i32 0, i32 0))
  store %struct.anon* %15, %struct.anon** %__context.addr.i, align 8, !noalias !1132
  %23 = ptrtoint %struct.anon** %__context.addr.i to i64
  call void @__DiscoPoPOpenMPRead(i64 %23, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.354, i32 0, i32 0))
  %24 = load %struct.anon*, %struct.anon** %__context.addr.i, align 8, !dbg !1136, !noalias !1132
  %25 = ptrtoint void (i8*, ...)** %.copy_fn..addr.i to i64
  call void @__DiscoPoPOpenMPRead(i64 %25, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.355, i32 0, i32 0))
  %26 = load void (i8*, ...)*, void (i8*, ...)** %.copy_fn..addr.i, align 8, !dbg !1136, !noalias !1132
  %27 = ptrtoint i8** %.privates..addr.i to i64
  call void @__DiscoPoPOpenMPRead(i64 %27, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.356, i32 0, i32 0))
  %28 = load i8*, i8** %.privates..addr.i, align 8, !dbg !1136, !noalias !1132
  call void (i8*, ...) %26(i8* %28, i32** %tmp.i) #9, !dbg !1136
  %29 = ptrtoint i32** %tmp.i to i64
  call void @__DiscoPoPOpenMPRead(i64 %29, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.357, i32 0, i32 0))
  %30 = load i32*, i32** %tmp.i, align 8, !dbg !1136, !noalias !1132
  %31 = ptrtoint i32* %30 to i64
  call void @__DiscoPoPOpenMPRead(i64 %31, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.358, i32 0, i32 0))
  %32 = load i32, i32* %30, align 4, !dbg !1137
  %sub.i = sub nsw i32 %32, 1, !dbg !1138
  %call.i = call i64 @fib(i32 %sub.i) #9, !dbg !1139
  %33 = getelementptr inbounds %struct.anon, %struct.anon* %24, i32 0, i32 0, !dbg !1136
  %34 = ptrtoint i64** %33 to i64
  call void @__DiscoPoPOpenMPRead(i64 %34, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.359, i32 0, i32 0))
  %ref.i = load i64*, i64** %33, align 8, !dbg !1136
  %35 = ptrtoint i64* %ref.i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %35, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.360, i32 0, i32 0))
  store i64 %call.i, i64* %ref.i, align 8, !dbg !1141
  call void @__DiscoPoPOpenMPAfterCall()
  ret i32 0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @.omp_task_privates_map.(%struct..kmp_privates.t* noalias, i32** noalias) #7 {
entry:
  call void @__DiscoPoPOpenMPBeforeCall(i8* getelementptr inbounds ([132 x i8], [132 x i8]* @.str.362, i32 0, i32 0))
  %.addr = alloca %struct..kmp_privates.t*, align 8
  %.addr1 = alloca i32**, align 8
  %2 = ptrtoint %struct..kmp_privates.t** %.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.363, i32 0, i32 0))
  store %struct..kmp_privates.t* %0, %struct..kmp_privates.t** %.addr, align 8
  %3 = ptrtoint i32*** %.addr1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.364, i32 0, i32 0))
  store i32** %1, i32*** %.addr1, align 8
  %4 = ptrtoint %struct..kmp_privates.t** %.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %4, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.365, i32 0, i32 0))
  %5 = load %struct..kmp_privates.t*, %struct..kmp_privates.t** %.addr, align 8
  %6 = getelementptr inbounds %struct..kmp_privates.t, %struct..kmp_privates.t* %5, i32 0, i32 0
  %7 = ptrtoint i32*** %.addr1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %7, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.366, i32 0, i32 0))
  %8 = load i32**, i32*** %.addr1, align 8
  %9 = ptrtoint i32** %8 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.367, i32 0, i32 0))
  store i32* %6, i32** %8, align 8
  call void @__DiscoPoPOpenMPAfterCall()
  ret void
}

declare i8* @__kmpc_omp_task_alloc(%ident_t*, i32, i32, i64, i64, i32 (i32, i8*)*)

declare i32 @__kmpc_omp_task(%ident_t*, i32, i8*)

; Function Attrs: nounwind uwtable
define internal i32 @.omp_task_entry..3(i32, %struct.kmp_task_t_with_privates* noalias) #0 {
entry:
  call void @__DiscoPoPOpenMPBeforeCall(i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.369, i32 0, i32 0))
  %.global_tid..addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %.global_tid..addr.i, metadata !1142, metadata !286), !dbg !1148
  %.part_id..addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %.part_id..addr.i, metadata !1149, metadata !286), !dbg !1148
  %.privates..addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %.privates..addr.i, metadata !1150, metadata !286), !dbg !1148
  %.copy_fn..addr.i = alloca void (i8*, ...)*, align 8
  call void @llvm.dbg.declare(metadata void (i8*, ...)** %.copy_fn..addr.i, metadata !1151, metadata !286), !dbg !1148
  %__context.addr.i = alloca %struct.anon*, align 8
  call void @llvm.dbg.declare(metadata %struct.anon** %__context.addr.i, metadata !1152, metadata !286), !dbg !1148
  %tmp.i = alloca i32*, align 8
  %.addr = alloca i32, align 4
  %.addr1 = alloca %struct.kmp_task_t_with_privates*, align 8
  %2 = ptrtoint i32* %.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.370, i32 0, i32 0))
  store i32 %0, i32* %.addr, align 4
  %3 = ptrtoint %struct.kmp_task_t_with_privates** %.addr1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.371, i32 0, i32 0))
  store %struct.kmp_task_t_with_privates* %1, %struct.kmp_task_t_with_privates** %.addr1, align 8
  %4 = ptrtoint i32* %.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %4, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.372, i32 0, i32 0))
  %5 = load i32, i32* %.addr, align 4
  %6 = ptrtoint %struct.kmp_task_t_with_privates** %.addr1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %6, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.373, i32 0, i32 0))
  %7 = load %struct.kmp_task_t_with_privates*, %struct.kmp_task_t_with_privates** %.addr1, align 8
  %8 = getelementptr inbounds %struct.kmp_task_t_with_privates, %struct.kmp_task_t_with_privates* %7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.kmp_task_t, %struct.kmp_task_t* %8, i32 0, i32 2
  %10 = ptrtoint i32* %9 to i64
  call void @__DiscoPoPOpenMPRead(i64 %10, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.374, i32 0, i32 0))
  %11 = load i32, i32* %9, align 8
  %12 = getelementptr inbounds %struct.kmp_task_t, %struct.kmp_task_t* %8, i32 0, i32 0
  %13 = ptrtoint i8** %12 to i64
  call void @__DiscoPoPOpenMPRead(i64 %13, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.375, i32 0, i32 0))
  %14 = load i8*, i8** %12, align 8
  %15 = bitcast i8* %14 to %struct.anon*
  %16 = getelementptr inbounds %struct.kmp_task_t_with_privates, %struct.kmp_task_t_with_privates* %7, i32 0, i32 1
  %17 = bitcast %struct..kmp_privates.t* %16 to i8*
  %18 = ptrtoint i32* %.global_tid..addr.i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %18, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.376, i32 0, i32 0))
  store i32 %5, i32* %.global_tid..addr.i, align 4, !noalias !1153
  %19 = ptrtoint i32* %.part_id..addr.i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %19, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.377, i32 0, i32 0))
  store i32 %11, i32* %.part_id..addr.i, align 4, !noalias !1153
  %20 = ptrtoint i8** %.privates..addr.i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %20, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.378, i32 0, i32 0))
  store i8* %17, i8** %.privates..addr.i, align 8, !noalias !1153
  %21 = ptrtoint void (i8*, ...)** %.copy_fn..addr.i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %21, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.379, i32 0, i32 0))
  store void (i8*, ...)* bitcast (void (%struct..kmp_privates.t*, i32**)* @.omp_task_privates_map..2 to void (i8*, ...)*), void (i8*, ...)** %.copy_fn..addr.i, align 8, !noalias !1153
  %22 = ptrtoint %struct.anon** %__context.addr.i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %22, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.380, i32 0, i32 0))
  store %struct.anon* %15, %struct.anon** %__context.addr.i, align 8, !noalias !1153
  %23 = ptrtoint %struct.anon** %__context.addr.i to i64
  call void @__DiscoPoPOpenMPRead(i64 %23, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.381, i32 0, i32 0))
  %24 = load %struct.anon*, %struct.anon** %__context.addr.i, align 8, !dbg !1157, !noalias !1153
  %25 = ptrtoint void (i8*, ...)** %.copy_fn..addr.i to i64
  call void @__DiscoPoPOpenMPRead(i64 %25, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.382, i32 0, i32 0))
  %26 = load void (i8*, ...)*, void (i8*, ...)** %.copy_fn..addr.i, align 8, !dbg !1157, !noalias !1153
  %27 = ptrtoint i8** %.privates..addr.i to i64
  call void @__DiscoPoPOpenMPRead(i64 %27, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.383, i32 0, i32 0))
  %28 = load i8*, i8** %.privates..addr.i, align 8, !dbg !1157, !noalias !1153
  call void (i8*, ...) %26(i8* %28, i32** %tmp.i) #9, !dbg !1157
  %29 = ptrtoint i32** %tmp.i to i64
  call void @__DiscoPoPOpenMPRead(i64 %29, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.384, i32 0, i32 0))
  %30 = load i32*, i32** %tmp.i, align 8, !dbg !1157, !noalias !1153
  %31 = ptrtoint i32* %30 to i64
  call void @__DiscoPoPOpenMPRead(i64 %31, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.385, i32 0, i32 0))
  %32 = load i32, i32* %30, align 4, !dbg !1158
  %sub.i = sub nsw i32 %32, 2, !dbg !1159
  %call.i = call i64 @fib(i32 %sub.i) #9, !dbg !1160
  %33 = getelementptr inbounds %struct.anon, %struct.anon* %24, i32 0, i32 0, !dbg !1157
  %34 = ptrtoint i64** %33 to i64
  call void @__DiscoPoPOpenMPRead(i64 %34, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.386, i32 0, i32 0))
  %ref.i = load i64*, i64** %33, align 8, !dbg !1157
  %35 = ptrtoint i64* %ref.i to i64
  call void @__DiscoPoPOpenMPWrite(i64 %35, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.387, i32 0, i32 0))
  store i64 %call.i, i64* %ref.i, align 8, !dbg !1162
  call void @__DiscoPoPOpenMPAfterCall()
  ret i32 0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @.omp_task_privates_map..2(%struct..kmp_privates.t* noalias, i32** noalias) #7 {
entry:
  call void @__DiscoPoPOpenMPBeforeCall(i8* getelementptr inbounds ([134 x i8], [134 x i8]* @.str.389, i32 0, i32 0))
  %.addr = alloca %struct..kmp_privates.t*, align 8
  %.addr1 = alloca i32**, align 8
  %2 = ptrtoint %struct..kmp_privates.t** %.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.390, i32 0, i32 0))
  store %struct..kmp_privates.t* %0, %struct..kmp_privates.t** %.addr, align 8
  %3 = ptrtoint i32*** %.addr1 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.391, i32 0, i32 0))
  store i32** %1, i32*** %.addr1, align 8
  %4 = ptrtoint %struct..kmp_privates.t** %.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %4, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.392, i32 0, i32 0))
  %5 = load %struct..kmp_privates.t*, %struct..kmp_privates.t** %.addr, align 8
  %6 = getelementptr inbounds %struct..kmp_privates.t, %struct..kmp_privates.t* %5, i32 0, i32 0
  %7 = ptrtoint i32*** %.addr1 to i64
  call void @__DiscoPoPOpenMPRead(i64 %7, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.393, i32 0, i32 0))
  %8 = load i32**, i32*** %.addr1, align 8
  %9 = ptrtoint i32** %8 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.394, i32 0, i32 0))
  store i32* %6, i32** %8, align 8
  call void @__DiscoPoPOpenMPAfterCall()
  ret void
}

declare i32 @__kmpc_omp_taskwait(%ident_t*, i32)

; Function Attrs: nounwind uwtable
define void @fib0(i32 %n) #0 !dbg !1163 {
entry:
  %n.addr = alloca i32, align 4
  %.kmpc_loc.addr = alloca %ident_t, align 8
  %0 = bitcast %ident_t* %.kmpc_loc.addr to i8*
  %1 = bitcast %ident_t* @0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 24, i32 8, i1 false)
  %2 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.395, i32 0, i32 0))
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !1166, metadata !286), !dbg !1167
  %3 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !1168
  %4 = ptrtoint i8** %3 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.396, i32 0, i32 0))
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @4, i32 0, i32 0), i8** %3, align 8, !dbg !1168
  call void @__DiscoPoPOpenMPBeforeCall(i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.398, i32 0, i32 0))
  call void @__DiscoPoPOpenMPAfterCall()
  call void (%ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%ident_t* %.kmpc_loc.addr, i32 1, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i32*)* @.omp_outlined..4 to void (i32*, i32*, ...)*), i32* %n.addr), !dbg !1168
  %5 = ptrtoint i32* @bots_verbose_mode to i64
  call void @__DiscoPoPOpenMPRead(i64 %5, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.399, i32 0, i32 0))
  %6 = load i32, i32* @bots_verbose_mode, align 4, !dbg !1169
  %cmp = icmp uge i32 %6, 1, !dbg !1169
  br i1 %cmp, label %if.then, label %if.end, !dbg !1172

if.then:                                          ; preds = %entry
  %7 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %7, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.400, i32 0, i32 0))
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1173
  %9 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %9, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.401, i32 0, i32 0))
  %10 = load i32, i32* %n.addr, align 4, !dbg !1173
  %11 = ptrtoint i64* @par_res to i64
  call void @__DiscoPoPOpenMPRead(i64 %11, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.402, i32 0, i32 0))
  %12 = load i64, i64* @par_res, align 8, !dbg !1173
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.78, i32 0, i32 0), i32 %10, i64 %12), !dbg !1173
  br label %if.end, !dbg !1173

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !1176
}

; Function Attrs: nounwind uwtable
define internal void @.omp_outlined..4(i32* noalias %.global_tid., i32* noalias %.bound_tid., i32* dereferenceable(4) %n) #0 !dbg !1177 {
entry:
  call void @__DiscoPoPOpenMPBeforeCall(i8* getelementptr inbounds ([125 x i8], [125 x i8]* @.str.404, i32 0, i32 0))
  %.global_tid..addr = alloca i32*, align 8
  %.bound_tid..addr = alloca i32*, align 8
  %n.addr = alloca i32*, align 8
  %.kmpc_loc.addr = alloca %ident_t, align 8
  %0 = bitcast %ident_t* %.kmpc_loc.addr to i8*
  %1 = bitcast %ident_t* @0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 24, i32 8, i1 false)
  %2 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.405, i32 0, i32 0))
  store i32* %.global_tid., i32** %.global_tid..addr, align 8
  call void @llvm.dbg.declare(metadata i32** %.global_tid..addr, metadata !1184, metadata !286), !dbg !1185
  %3 = ptrtoint i32** %.bound_tid..addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.406, i32 0, i32 0))
  store i32* %.bound_tid., i32** %.bound_tid..addr, align 8
  call void @llvm.dbg.declare(metadata i32** %.bound_tid..addr, metadata !1186, metadata !286), !dbg !1185
  %4 = ptrtoint i32** %n.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.407, i32 0, i32 0))
  store i32* %n, i32** %n.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %n.addr, metadata !1187, metadata !286), !dbg !1185
  %5 = ptrtoint i32** %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %5, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.408, i32 0, i32 0))
  %6 = load i32*, i32** %n.addr, align 8, !dbg !1188
  %7 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !1188
  %8 = ptrtoint i8** %7 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.409, i32 0, i32 0))
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @5, i32 0, i32 0), i8** %7, align 8, !dbg !1188
  %9 = ptrtoint i32** %.global_tid..addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %9, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.410, i32 0, i32 0))
  %10 = load i32*, i32** %.global_tid..addr, align 8, !dbg !1188
  %11 = ptrtoint i32* %10 to i64
  call void @__DiscoPoPOpenMPRead(i64 %11, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.411, i32 0, i32 0))
  %12 = load i32, i32* %10, align 4, !dbg !1188
  call void @__DiscoPoPOpenMPBeforeCall(i8* getelementptr inbounds ([125 x i8], [125 x i8]* @.str.413, i32 0, i32 0))
  %13 = call i32 @__kmpc_single(%ident_t* %.kmpc_loc.addr, i32 %12), !dbg !1188
  %tobool = icmp ne i32 %13, 0, !dbg !1188
  br i1 %tobool, label %omp_if.then, label %omp_if.end, !dbg !1188

omp_if.then:                                      ; preds = %entry
  %14 = ptrtoint i32* %6 to i64
  call void @__DiscoPoPOpenMPRead(i64 %14, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.414, i32 0, i32 0))
  %15 = load i32, i32* %6, align 4, !dbg !1189
  %call = call i64 @fib(i32 %15), !dbg !1191
  %16 = ptrtoint i64* @par_res to i64
  call void @__DiscoPoPOpenMPWrite(i64 %16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.415, i32 0, i32 0))
  store i64 %call, i64* @par_res, align 8, !dbg !1192
  call void @__DiscoPoPOpenMPAfterCall()
  call void @__kmpc_end_single(%ident_t* %.kmpc_loc.addr, i32 %12), !dbg !1193
  br label %omp_if.end, !dbg !1195

omp_if.end:                                       ; preds = %omp_if.then, %entry
  %17 = getelementptr inbounds %ident_t, %ident_t* %.kmpc_loc.addr, i32 0, i32 4, !dbg !1196
  %18 = ptrtoint i8** %17 to i64
  call void @__DiscoPoPOpenMPWrite(i64 %18, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.416, i32 0, i32 0))
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @5, i32 0, i32 0), i8** %17, align 8, !dbg !1196
  call void @__DiscoPoPOpenMPBeforeCall(i8* getelementptr inbounds ([125 x i8], [125 x i8]* @.str.418, i32 0, i32 0))
  call void @__DiscoPoPOpenMPAfterCall()
  call void @__kmpc_barrier(%ident_t* %.kmpc_loc.addr, i32 %12), !dbg !1196
  call void @__DiscoPoPOpenMPAfterCall()
  ret void, !dbg !1196
}

declare i32 @__kmpc_single(%ident_t*, i32)

declare void @__kmpc_end_single(%ident_t*, i32)

declare void @__kmpc_barrier(%ident_t*, i32)

declare void @__kmpc_fork_call(%ident_t*, i32, void (i32*, i32*, ...)*, ...)

; Function Attrs: nounwind uwtable
define void @fib0_seq(i32 %n) #0 !dbg !1197 {
entry:
  %n.addr = alloca i32, align 4
  %0 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.419, i32 0, i32 0))
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !1198, metadata !286), !dbg !1199
  %1 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %1, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.420, i32 0, i32 0))
  %2 = load i32, i32* %n.addr, align 4, !dbg !1200
  %call = call i64 @fib_seq(i32 %2), !dbg !1201
  %3 = ptrtoint i64* @seq_res to i64
  call void @__DiscoPoPOpenMPWrite(i64 %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.421, i32 0, i32 0))
  store i64 %call, i64* @seq_res, align 8, !dbg !1202
  %4 = ptrtoint i32* @bots_verbose_mode to i64
  call void @__DiscoPoPOpenMPRead(i64 %4, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.422, i32 0, i32 0))
  %5 = load i32, i32* @bots_verbose_mode, align 4, !dbg !1203
  %cmp = icmp uge i32 %5, 1, !dbg !1203
  br i1 %cmp, label %if.then, label %if.end, !dbg !1206

if.then:                                          ; preds = %entry
  %6 = ptrtoint %struct._IO_FILE** @stdout to i64
  call void @__DiscoPoPOpenMPRead(i64 %6, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.423, i32 0, i32 0))
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1207
  %8 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %8, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.424, i32 0, i32 0))
  %9 = load i32, i32* %n.addr, align 4, !dbg !1207
  %10 = ptrtoint i64* @seq_res to i64
  call void @__DiscoPoPOpenMPRead(i64 %10, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.425, i32 0, i32 0))
  %11 = load i64, i64* @seq_res, align 8, !dbg !1207
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.78, i32 0, i32 0), i32 %9, i64 %11), !dbg !1207
  br label %if.end, !dbg !1207

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !1210
}

; Function Attrs: nounwind uwtable
define i64 @fib_verify_value(i32 %n) #0 !dbg !1211 {
entry:
  %retval = alloca i64, align 8
  %n.addr = alloca i32, align 4
  %0 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.426, i32 0, i32 0))
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !1212, metadata !286), !dbg !1213
  %1 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %1, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.427, i32 0, i32 0))
  %2 = load i32, i32* %n.addr, align 4, !dbg !1214
  %cmp = icmp slt i32 %2, 41, !dbg !1216
  br i1 %cmp, label %if.then, label %if.end, !dbg !1217

if.then:                                          ; preds = %entry
  %3 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %3, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.428, i32 0, i32 0))
  %4 = load i32, i32* %n.addr, align 4, !dbg !1218
  %idxprom = sext i32 %4 to i64, !dbg !1220
  %arrayidx = getelementptr inbounds [41 x i64], [41 x i64]* @fib_results, i64 0, i64 %idxprom, !dbg !1220
  %5 = ptrtoint i64* %arrayidx to i64
  call void @__DiscoPoPOpenMPRead(i64 %5, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.429, i32 0, i32 0))
  %6 = load i64, i64* %arrayidx, align 8, !dbg !1220
  store i64 %6, i64* %retval, align 8, !dbg !1221
  br label %return, !dbg !1221

if.end:                                           ; preds = %entry
  %7 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %7, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.430, i32 0, i32 0))
  %8 = load i32, i32* %n.addr, align 4, !dbg !1222
  %sub = sub nsw i32 %8, 1, !dbg !1223
  %call = call i64 @fib_verify_value(i32 %sub), !dbg !1224
  %9 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %9, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.431, i32 0, i32 0))
  %10 = load i32, i32* %n.addr, align 4, !dbg !1225
  %sub1 = sub nsw i32 %10, 2, !dbg !1226
  %call2 = call i64 @fib_verify_value(i32 %sub1), !dbg !1227
  %add = add nsw i64 %call, %call2, !dbg !1229
  store i64 %add, i64* %retval, align 8, !dbg !1230
  br label %return, !dbg !1230

return:                                           ; preds = %if.end, %if.then
  %11 = ptrtoint i64* %retval to i64
  call void @__DiscoPoPOpenMPRead(i64 %11, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.432, i32 0, i32 0))
  %12 = load i64, i64* %retval, align 8, !dbg !1231
  ret i64 %12, !dbg !1231
}

; Function Attrs: nounwind uwtable
define i32 @fib_verify(i32 %n) #0 !dbg !1232 {
entry:
  %n.addr = alloca i32, align 4
  %result = alloca i32, align 4
  %0 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPWrite(i64 %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.433, i32 0, i32 0))
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !1235, metadata !286), !dbg !1236
  call void @llvm.dbg.declare(metadata i32* %result, metadata !1237, metadata !286), !dbg !1238
  %1 = ptrtoint i32* @bots_sequential_flag to i64
  call void @__DiscoPoPOpenMPRead(i64 %1, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.434, i32 0, i32 0))
  %2 = load i32, i32* @bots_sequential_flag, align 4, !dbg !1239
  %tobool = icmp ne i32 %2, 0, !dbg !1239
  br i1 %tobool, label %if.then, label %if.else2, !dbg !1241

if.then:                                          ; preds = %entry
  %3 = ptrtoint i64* @par_res to i64
  call void @__DiscoPoPOpenMPRead(i64 %3, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.435, i32 0, i32 0))
  %4 = load i64, i64* @par_res, align 8, !dbg !1242
  %5 = ptrtoint i64* @seq_res to i64
  call void @__DiscoPoPOpenMPRead(i64 %5, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.436, i32 0, i32 0))
  %6 = load i64, i64* @seq_res, align 8, !dbg !1245
  %cmp = icmp eq i64 %4, %6, !dbg !1246
  br i1 %cmp, label %if.then1, label %if.else, !dbg !1247

if.then1:                                         ; preds = %if.then
  %7 = ptrtoint i32* %result to i64
  call void @__DiscoPoPOpenMPWrite(i64 %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.437, i32 0, i32 0))
  store i32 1, i32* %result, align 4, !dbg !1248
  br label %if.end, !dbg !1250

if.else:                                          ; preds = %if.then
  %8 = ptrtoint i32* %result to i64
  call void @__DiscoPoPOpenMPWrite(i64 %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.438, i32 0, i32 0))
  store i32 2, i32* %result, align 4, !dbg !1251
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  br label %if.end7, !dbg !1252

if.else2:                                         ; preds = %entry
  %9 = ptrtoint i32* %n.addr to i64
  call void @__DiscoPoPOpenMPRead(i64 %9, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.439, i32 0, i32 0))
  %10 = load i32, i32* %n.addr, align 4, !dbg !1253
  %call = call i64 @fib_verify_value(i32 %10), !dbg !1255
  %11 = ptrtoint i64* @seq_res to i64
  call void @__DiscoPoPOpenMPWrite(i64 %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.440, i32 0, i32 0))
  store i64 %call, i64* @seq_res, align 8, !dbg !1256
  %12 = ptrtoint i64* @par_res to i64
  call void @__DiscoPoPOpenMPRead(i64 %12, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.441, i32 0, i32 0))
  %13 = load i64, i64* @par_res, align 8, !dbg !1257
  %14 = ptrtoint i64* @seq_res to i64
  call void @__DiscoPoPOpenMPRead(i64 %14, i32 8, i32 0, i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.442, i32 0, i32 0))
  %15 = load i64, i64* @seq_res, align 8, !dbg !1259
  %cmp3 = icmp eq i64 %13, %15, !dbg !1260
  br i1 %cmp3, label %if.then4, label %if.else5, !dbg !1261

if.then4:                                         ; preds = %if.else2
  %16 = ptrtoint i32* %result to i64
  call void @__DiscoPoPOpenMPWrite(i64 %16, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.443, i32 0, i32 0))
  store i32 1, i32* %result, align 4, !dbg !1262
  br label %if.end6, !dbg !1264

if.else5:                                         ; preds = %if.else2
  %17 = ptrtoint i32* %result to i64
  call void @__DiscoPoPOpenMPWrite(i64 %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.444, i32 0, i32 0))
  store i32 2, i32* %result, align 4, !dbg !1265
  br label %if.end6

if.end6:                                          ; preds = %if.else5, %if.then4
  br label %if.end7

if.end7:                                          ; preds = %if.end6, %if.end
  %18 = ptrtoint i32* %result to i64
  call void @__DiscoPoPOpenMPRead(i64 %18, i32 4, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.445, i32 0, i32 0))
  %19 = load i32, i32* %result, align 4, !dbg !1266
  ret i32 %19, !dbg !1267
}

declare void @__DiscoPoPOpenMPInitialize()

declare void @__CollectThreadInfo()

declare void @__DiscoPoPOpenMPFinalize()

declare void @__DiscoPoPOpenMPRead(i64, i32, i32, i32, i8*)

declare void @__DiscoPoPOpenMPWrite(i64, i8*)

declare void @__DiscoPoPOpenMPBeforeCall(i8*)

declare void @__DiscoPoPOpenMPAfterCall()

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { alwaysinline nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }

!llvm.dbg.cu = !{!0, !224, !267}
!llvm.ident = !{!277, !277, !277}
!llvm.module.flags = !{!278, !279}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (trunk)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !221)
!1 = !DIFile(filename: "bots_common.c", directory: "/media/norouzi/90cafd61-f918-48a5-9298-db353cb6be30/software/benchmarks/botsTemp/fib")
!2 = !{!3}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 71, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/confname.h", directory: "/media/norouzi/90cafd61-f918-48a5-9298-db353cb6be30/software/benchmarks/botsTemp/fib")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220}
!6 = !DIEnumerator(name: "_SC_ARG_MAX", value: 0)
!7 = !DIEnumerator(name: "_SC_CHILD_MAX", value: 1)
!8 = !DIEnumerator(name: "_SC_CLK_TCK", value: 2)
!9 = !DIEnumerator(name: "_SC_NGROUPS_MAX", value: 3)
!10 = !DIEnumerator(name: "_SC_OPEN_MAX", value: 4)
!11 = !DIEnumerator(name: "_SC_STREAM_MAX", value: 5)
!12 = !DIEnumerator(name: "_SC_TZNAME_MAX", value: 6)
!13 = !DIEnumerator(name: "_SC_JOB_CONTROL", value: 7)
!14 = !DIEnumerator(name: "_SC_SAVED_IDS", value: 8)
!15 = !DIEnumerator(name: "_SC_REALTIME_SIGNALS", value: 9)
!16 = !DIEnumerator(name: "_SC_PRIORITY_SCHEDULING", value: 10)
!17 = !DIEnumerator(name: "_SC_TIMERS", value: 11)
!18 = !DIEnumerator(name: "_SC_ASYNCHRONOUS_IO", value: 12)
!19 = !DIEnumerator(name: "_SC_PRIORITIZED_IO", value: 13)
!20 = !DIEnumerator(name: "_SC_SYNCHRONIZED_IO", value: 14)
!21 = !DIEnumerator(name: "_SC_FSYNC", value: 15)
!22 = !DIEnumerator(name: "_SC_MAPPED_FILES", value: 16)
!23 = !DIEnumerator(name: "_SC_MEMLOCK", value: 17)
!24 = !DIEnumerator(name: "_SC_MEMLOCK_RANGE", value: 18)
!25 = !DIEnumerator(name: "_SC_MEMORY_PROTECTION", value: 19)
!26 = !DIEnumerator(name: "_SC_MESSAGE_PASSING", value: 20)
!27 = !DIEnumerator(name: "_SC_SEMAPHORES", value: 21)
!28 = !DIEnumerator(name: "_SC_SHARED_MEMORY_OBJECTS", value: 22)
!29 = !DIEnumerator(name: "_SC_AIO_LISTIO_MAX", value: 23)
!30 = !DIEnumerator(name: "_SC_AIO_MAX", value: 24)
!31 = !DIEnumerator(name: "_SC_AIO_PRIO_DELTA_MAX", value: 25)
!32 = !DIEnumerator(name: "_SC_DELAYTIMER_MAX", value: 26)
!33 = !DIEnumerator(name: "_SC_MQ_OPEN_MAX", value: 27)
!34 = !DIEnumerator(name: "_SC_MQ_PRIO_MAX", value: 28)
!35 = !DIEnumerator(name: "_SC_VERSION", value: 29)
!36 = !DIEnumerator(name: "_SC_PAGESIZE", value: 30)
!37 = !DIEnumerator(name: "_SC_RTSIG_MAX", value: 31)
!38 = !DIEnumerator(name: "_SC_SEM_NSEMS_MAX", value: 32)
!39 = !DIEnumerator(name: "_SC_SEM_VALUE_MAX", value: 33)
!40 = !DIEnumerator(name: "_SC_SIGQUEUE_MAX", value: 34)
!41 = !DIEnumerator(name: "_SC_TIMER_MAX", value: 35)
!42 = !DIEnumerator(name: "_SC_BC_BASE_MAX", value: 36)
!43 = !DIEnumerator(name: "_SC_BC_DIM_MAX", value: 37)
!44 = !DIEnumerator(name: "_SC_BC_SCALE_MAX", value: 38)
!45 = !DIEnumerator(name: "_SC_BC_STRING_MAX", value: 39)
!46 = !DIEnumerator(name: "_SC_COLL_WEIGHTS_MAX", value: 40)
!47 = !DIEnumerator(name: "_SC_EQUIV_CLASS_MAX", value: 41)
!48 = !DIEnumerator(name: "_SC_EXPR_NEST_MAX", value: 42)
!49 = !DIEnumerator(name: "_SC_LINE_MAX", value: 43)
!50 = !DIEnumerator(name: "_SC_RE_DUP_MAX", value: 44)
!51 = !DIEnumerator(name: "_SC_CHARCLASS_NAME_MAX", value: 45)
!52 = !DIEnumerator(name: "_SC_2_VERSION", value: 46)
!53 = !DIEnumerator(name: "_SC_2_C_BIND", value: 47)
!54 = !DIEnumerator(name: "_SC_2_C_DEV", value: 48)
!55 = !DIEnumerator(name: "_SC_2_FORT_DEV", value: 49)
!56 = !DIEnumerator(name: "_SC_2_FORT_RUN", value: 50)
!57 = !DIEnumerator(name: "_SC_2_SW_DEV", value: 51)
!58 = !DIEnumerator(name: "_SC_2_LOCALEDEF", value: 52)
!59 = !DIEnumerator(name: "_SC_PII", value: 53)
!60 = !DIEnumerator(name: "_SC_PII_XTI", value: 54)
!61 = !DIEnumerator(name: "_SC_PII_SOCKET", value: 55)
!62 = !DIEnumerator(name: "_SC_PII_INTERNET", value: 56)
!63 = !DIEnumerator(name: "_SC_PII_OSI", value: 57)
!64 = !DIEnumerator(name: "_SC_POLL", value: 58)
!65 = !DIEnumerator(name: "_SC_SELECT", value: 59)
!66 = !DIEnumerator(name: "_SC_UIO_MAXIOV", value: 60)
!67 = !DIEnumerator(name: "_SC_IOV_MAX", value: 60)
!68 = !DIEnumerator(name: "_SC_PII_INTERNET_STREAM", value: 61)
!69 = !DIEnumerator(name: "_SC_PII_INTERNET_DGRAM", value: 62)
!70 = !DIEnumerator(name: "_SC_PII_OSI_COTS", value: 63)
!71 = !DIEnumerator(name: "_SC_PII_OSI_CLTS", value: 64)
!72 = !DIEnumerator(name: "_SC_PII_OSI_M", value: 65)
!73 = !DIEnumerator(name: "_SC_T_IOV_MAX", value: 66)
!74 = !DIEnumerator(name: "_SC_THREADS", value: 67)
!75 = !DIEnumerator(name: "_SC_THREAD_SAFE_FUNCTIONS", value: 68)
!76 = !DIEnumerator(name: "_SC_GETGR_R_SIZE_MAX", value: 69)
!77 = !DIEnumerator(name: "_SC_GETPW_R_SIZE_MAX", value: 70)
!78 = !DIEnumerator(name: "_SC_LOGIN_NAME_MAX", value: 71)
!79 = !DIEnumerator(name: "_SC_TTY_NAME_MAX", value: 72)
!80 = !DIEnumerator(name: "_SC_THREAD_DESTRUCTOR_ITERATIONS", value: 73)
!81 = !DIEnumerator(name: "_SC_THREAD_KEYS_MAX", value: 74)
!82 = !DIEnumerator(name: "_SC_THREAD_STACK_MIN", value: 75)
!83 = !DIEnumerator(name: "_SC_THREAD_THREADS_MAX", value: 76)
!84 = !DIEnumerator(name: "_SC_THREAD_ATTR_STACKADDR", value: 77)
!85 = !DIEnumerator(name: "_SC_THREAD_ATTR_STACKSIZE", value: 78)
!86 = !DIEnumerator(name: "_SC_THREAD_PRIORITY_SCHEDULING", value: 79)
!87 = !DIEnumerator(name: "_SC_THREAD_PRIO_INHERIT", value: 80)
!88 = !DIEnumerator(name: "_SC_THREAD_PRIO_PROTECT", value: 81)
!89 = !DIEnumerator(name: "_SC_THREAD_PROCESS_SHARED", value: 82)
!90 = !DIEnumerator(name: "_SC_NPROCESSORS_CONF", value: 83)
!91 = !DIEnumerator(name: "_SC_NPROCESSORS_ONLN", value: 84)
!92 = !DIEnumerator(name: "_SC_PHYS_PAGES", value: 85)
!93 = !DIEnumerator(name: "_SC_AVPHYS_PAGES", value: 86)
!94 = !DIEnumerator(name: "_SC_ATEXIT_MAX", value: 87)
!95 = !DIEnumerator(name: "_SC_PASS_MAX", value: 88)
!96 = !DIEnumerator(name: "_SC_XOPEN_VERSION", value: 89)
!97 = !DIEnumerator(name: "_SC_XOPEN_XCU_VERSION", value: 90)
!98 = !DIEnumerator(name: "_SC_XOPEN_UNIX", value: 91)
!99 = !DIEnumerator(name: "_SC_XOPEN_CRYPT", value: 92)
!100 = !DIEnumerator(name: "_SC_XOPEN_ENH_I18N", value: 93)
!101 = !DIEnumerator(name: "_SC_XOPEN_SHM", value: 94)
!102 = !DIEnumerator(name: "_SC_2_CHAR_TERM", value: 95)
!103 = !DIEnumerator(name: "_SC_2_C_VERSION", value: 96)
!104 = !DIEnumerator(name: "_SC_2_UPE", value: 97)
!105 = !DIEnumerator(name: "_SC_XOPEN_XPG2", value: 98)
!106 = !DIEnumerator(name: "_SC_XOPEN_XPG3", value: 99)
!107 = !DIEnumerator(name: "_SC_XOPEN_XPG4", value: 100)
!108 = !DIEnumerator(name: "_SC_CHAR_BIT", value: 101)
!109 = !DIEnumerator(name: "_SC_CHAR_MAX", value: 102)
!110 = !DIEnumerator(name: "_SC_CHAR_MIN", value: 103)
!111 = !DIEnumerator(name: "_SC_INT_MAX", value: 104)
!112 = !DIEnumerator(name: "_SC_INT_MIN", value: 105)
!113 = !DIEnumerator(name: "_SC_LONG_BIT", value: 106)
!114 = !DIEnumerator(name: "_SC_WORD_BIT", value: 107)
!115 = !DIEnumerator(name: "_SC_MB_LEN_MAX", value: 108)
!116 = !DIEnumerator(name: "_SC_NZERO", value: 109)
!117 = !DIEnumerator(name: "_SC_SSIZE_MAX", value: 110)
!118 = !DIEnumerator(name: "_SC_SCHAR_MAX", value: 111)
!119 = !DIEnumerator(name: "_SC_SCHAR_MIN", value: 112)
!120 = !DIEnumerator(name: "_SC_SHRT_MAX", value: 113)
!121 = !DIEnumerator(name: "_SC_SHRT_MIN", value: 114)
!122 = !DIEnumerator(name: "_SC_UCHAR_MAX", value: 115)
!123 = !DIEnumerator(name: "_SC_UINT_MAX", value: 116)
!124 = !DIEnumerator(name: "_SC_ULONG_MAX", value: 117)
!125 = !DIEnumerator(name: "_SC_USHRT_MAX", value: 118)
!126 = !DIEnumerator(name: "_SC_NL_ARGMAX", value: 119)
!127 = !DIEnumerator(name: "_SC_NL_LANGMAX", value: 120)
!128 = !DIEnumerator(name: "_SC_NL_MSGMAX", value: 121)
!129 = !DIEnumerator(name: "_SC_NL_NMAX", value: 122)
!130 = !DIEnumerator(name: "_SC_NL_SETMAX", value: 123)
!131 = !DIEnumerator(name: "_SC_NL_TEXTMAX", value: 124)
!132 = !DIEnumerator(name: "_SC_XBS5_ILP32_OFF32", value: 125)
!133 = !DIEnumerator(name: "_SC_XBS5_ILP32_OFFBIG", value: 126)
!134 = !DIEnumerator(name: "_SC_XBS5_LP64_OFF64", value: 127)
!135 = !DIEnumerator(name: "_SC_XBS5_LPBIG_OFFBIG", value: 128)
!136 = !DIEnumerator(name: "_SC_XOPEN_LEGACY", value: 129)
!137 = !DIEnumerator(name: "_SC_XOPEN_REALTIME", value: 130)
!138 = !DIEnumerator(name: "_SC_XOPEN_REALTIME_THREADS", value: 131)
!139 = !DIEnumerator(name: "_SC_ADVISORY_INFO", value: 132)
!140 = !DIEnumerator(name: "_SC_BARRIERS", value: 133)
!141 = !DIEnumerator(name: "_SC_BASE", value: 134)
!142 = !DIEnumerator(name: "_SC_C_LANG_SUPPORT", value: 135)
!143 = !DIEnumerator(name: "_SC_C_LANG_SUPPORT_R", value: 136)
!144 = !DIEnumerator(name: "_SC_CLOCK_SELECTION", value: 137)
!145 = !DIEnumerator(name: "_SC_CPUTIME", value: 138)
!146 = !DIEnumerator(name: "_SC_THREAD_CPUTIME", value: 139)
!147 = !DIEnumerator(name: "_SC_DEVICE_IO", value: 140)
!148 = !DIEnumerator(name: "_SC_DEVICE_SPECIFIC", value: 141)
!149 = !DIEnumerator(name: "_SC_DEVICE_SPECIFIC_R", value: 142)
!150 = !DIEnumerator(name: "_SC_FD_MGMT", value: 143)
!151 = !DIEnumerator(name: "_SC_FIFO", value: 144)
!152 = !DIEnumerator(name: "_SC_PIPE", value: 145)
!153 = !DIEnumerator(name: "_SC_FILE_ATTRIBUTES", value: 146)
!154 = !DIEnumerator(name: "_SC_FILE_LOCKING", value: 147)
!155 = !DIEnumerator(name: "_SC_FILE_SYSTEM", value: 148)
!156 = !DIEnumerator(name: "_SC_MONOTONIC_CLOCK", value: 149)
!157 = !DIEnumerator(name: "_SC_MULTI_PROCESS", value: 150)
!158 = !DIEnumerator(name: "_SC_SINGLE_PROCESS", value: 151)
!159 = !DIEnumerator(name: "_SC_NETWORKING", value: 152)
!160 = !DIEnumerator(name: "_SC_READER_WRITER_LOCKS", value: 153)
!161 = !DIEnumerator(name: "_SC_SPIN_LOCKS", value: 154)
!162 = !DIEnumerator(name: "_SC_REGEXP", value: 155)
!163 = !DIEnumerator(name: "_SC_REGEX_VERSION", value: 156)
!164 = !DIEnumerator(name: "_SC_SHELL", value: 157)
!165 = !DIEnumerator(name: "_SC_SIGNALS", value: 158)
!166 = !DIEnumerator(name: "_SC_SPAWN", value: 159)
!167 = !DIEnumerator(name: "_SC_SPORADIC_SERVER", value: 160)
!168 = !DIEnumerator(name: "_SC_THREAD_SPORADIC_SERVER", value: 161)
!169 = !DIEnumerator(name: "_SC_SYSTEM_DATABASE", value: 162)
!170 = !DIEnumerator(name: "_SC_SYSTEM_DATABASE_R", value: 163)
!171 = !DIEnumerator(name: "_SC_TIMEOUTS", value: 164)
!172 = !DIEnumerator(name: "_SC_TYPED_MEMORY_OBJECTS", value: 165)
!173 = !DIEnumerator(name: "_SC_USER_GROUPS", value: 166)
!174 = !DIEnumerator(name: "_SC_USER_GROUPS_R", value: 167)
!175 = !DIEnumerator(name: "_SC_2_PBS", value: 168)
!176 = !DIEnumerator(name: "_SC_2_PBS_ACCOUNTING", value: 169)
!177 = !DIEnumerator(name: "_SC_2_PBS_LOCATE", value: 170)
!178 = !DIEnumerator(name: "_SC_2_PBS_MESSAGE", value: 171)
!179 = !DIEnumerator(name: "_SC_2_PBS_TRACK", value: 172)
!180 = !DIEnumerator(name: "_SC_SYMLOOP_MAX", value: 173)
!181 = !DIEnumerator(name: "_SC_STREAMS", value: 174)
!182 = !DIEnumerator(name: "_SC_2_PBS_CHECKPOINT", value: 175)
!183 = !DIEnumerator(name: "_SC_V6_ILP32_OFF32", value: 176)
!184 = !DIEnumerator(name: "_SC_V6_ILP32_OFFBIG", value: 177)
!185 = !DIEnumerator(name: "_SC_V6_LP64_OFF64", value: 178)
!186 = !DIEnumerator(name: "_SC_V6_LPBIG_OFFBIG", value: 179)
!187 = !DIEnumerator(name: "_SC_HOST_NAME_MAX", value: 180)
!188 = !DIEnumerator(name: "_SC_TRACE", value: 181)
!189 = !DIEnumerator(name: "_SC_TRACE_EVENT_FILTER", value: 182)
!190 = !DIEnumerator(name: "_SC_TRACE_INHERIT", value: 183)
!191 = !DIEnumerator(name: "_SC_TRACE_LOG", value: 184)
!192 = !DIEnumerator(name: "_SC_LEVEL1_ICACHE_SIZE", value: 185)
!193 = !DIEnumerator(name: "_SC_LEVEL1_ICACHE_ASSOC", value: 186)
!194 = !DIEnumerator(name: "_SC_LEVEL1_ICACHE_LINESIZE", value: 187)
!195 = !DIEnumerator(name: "_SC_LEVEL1_DCACHE_SIZE", value: 188)
!196 = !DIEnumerator(name: "_SC_LEVEL1_DCACHE_ASSOC", value: 189)
!197 = !DIEnumerator(name: "_SC_LEVEL1_DCACHE_LINESIZE", value: 190)
!198 = !DIEnumerator(name: "_SC_LEVEL2_CACHE_SIZE", value: 191)
!199 = !DIEnumerator(name: "_SC_LEVEL2_CACHE_ASSOC", value: 192)
!200 = !DIEnumerator(name: "_SC_LEVEL2_CACHE_LINESIZE", value: 193)
!201 = !DIEnumerator(name: "_SC_LEVEL3_CACHE_SIZE", value: 194)
!202 = !DIEnumerator(name: "_SC_LEVEL3_CACHE_ASSOC", value: 195)
!203 = !DIEnumerator(name: "_SC_LEVEL3_CACHE_LINESIZE", value: 196)
!204 = !DIEnumerator(name: "_SC_LEVEL4_CACHE_SIZE", value: 197)
!205 = !DIEnumerator(name: "_SC_LEVEL4_CACHE_ASSOC", value: 198)
!206 = !DIEnumerator(name: "_SC_LEVEL4_CACHE_LINESIZE", value: 199)
!207 = !DIEnumerator(name: "_SC_IPV6", value: 235)
!208 = !DIEnumerator(name: "_SC_RAW_SOCKETS", value: 236)
!209 = !DIEnumerator(name: "_SC_V7_ILP32_OFF32", value: 237)
!210 = !DIEnumerator(name: "_SC_V7_ILP32_OFFBIG", value: 238)
!211 = !DIEnumerator(name: "_SC_V7_LP64_OFF64", value: 239)
!212 = !DIEnumerator(name: "_SC_V7_LPBIG_OFFBIG", value: 240)
!213 = !DIEnumerator(name: "_SC_SS_REPL_MAX", value: 241)
!214 = !DIEnumerator(name: "_SC_TRACE_EVENT_NAME_MAX", value: 242)
!215 = !DIEnumerator(name: "_SC_TRACE_NAME_MAX", value: 243)
!216 = !DIEnumerator(name: "_SC_TRACE_SYS_MAX", value: 244)
!217 = !DIEnumerator(name: "_SC_TRACE_USER_EVENT_MAX", value: 245)
!218 = !DIEnumerator(name: "_SC_XOPEN_STREAMS", value: 246)
!219 = !DIEnumerator(name: "_SC_THREAD_ROBUST_PRIO_INHERIT", value: 247)
!220 = !DIEnumerator(name: "_SC_THREAD_ROBUST_PRIO_PROTECT", value: 248)
!221 = !{!222, !223}
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!223 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!224 = distinct !DICompileUnit(language: DW_LANG_C99, file: !225, producer: "clang version 3.9.0 (trunk)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !226, retainedTypes: !233, globals: !236)
!225 = !DIFile(filename: "bots_main.c", directory: "/media/norouzi/90cafd61-f918-48a5-9298-db353cb6be30/software/benchmarks/botsTemp/fib")
!226 = !{!227}
!227 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !228, line: 76, size: 32, align: 32, elements: !229)
!228 = !DIFile(filename: "./bots.h", directory: "/media/norouzi/90cafd61-f918-48a5-9298-db353cb6be30/software/benchmarks/botsTemp/fib")
!229 = !{!230, !231, !232}
!230 = !DIEnumerator(name: "BOTS_VERBOSE_NONE", value: 0)
!231 = !DIEnumerator(name: "BOTS_VERBOSE_DEFAULT", value: 1)
!232 = !DIEnumerator(name: "BOTS_VERBOSE_DEBUG", value: 2)
!233 = !{!234, !235}
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "bots_verbose_mode_t", file: !228, line: 78, baseType: !227)
!235 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!236 = !{!237, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !257, !258, !259, !260, !261, !262, !263, !264, !266}
!237 = !DIGlobalVariable(name: "bots_name", scope: !224, file: !225, line: 48, type: !238, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_name)
!238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !239, size: 2048, align: 8, elements: !240)
!239 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!240 = !{!241}
!241 = !DISubrange(count: 256)
!242 = !DIGlobalVariable(name: "bots_execname", scope: !224, file: !225, line: 49, type: !238, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_execname)
!243 = !DIGlobalVariable(name: "bots_parameters", scope: !224, file: !225, line: 50, type: !238, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_parameters)
!244 = !DIGlobalVariable(name: "bots_model", scope: !224, file: !225, line: 51, type: !238, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_model)
!245 = !DIGlobalVariable(name: "bots_resources", scope: !224, file: !225, line: 52, type: !238, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_resources)
!246 = !DIGlobalVariable(name: "bots_exec_date", scope: !224, file: !225, line: 54, type: !238, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_exec_date)
!247 = !DIGlobalVariable(name: "bots_exec_message", scope: !224, file: !225, line: 55, type: !238, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_exec_message)
!248 = !DIGlobalVariable(name: "bots_comp_date", scope: !224, file: !225, line: 56, type: !238, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_comp_date)
!249 = !DIGlobalVariable(name: "bots_comp_message", scope: !224, file: !225, line: 57, type: !238, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_comp_message)
!250 = !DIGlobalVariable(name: "bots_cc", scope: !224, file: !225, line: 58, type: !238, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_cc)
!251 = !DIGlobalVariable(name: "bots_cflags", scope: !224, file: !225, line: 59, type: !238, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_cflags)
!252 = !DIGlobalVariable(name: "bots_ld", scope: !224, file: !225, line: 60, type: !238, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_ld)
!253 = !DIGlobalVariable(name: "bots_ldflags", scope: !224, file: !225, line: 61, type: !238, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_ldflags)
!254 = !DIGlobalVariable(name: "bots_cutoff", scope: !224, file: !225, line: 62, type: !238, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_cutoff)
!255 = !DIGlobalVariable(name: "bots_sequential_flag", scope: !224, file: !225, line: 41, type: !256, isLocal: false, isDefinition: true, variable: i32* @bots_sequential_flag)
!256 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!257 = !DIGlobalVariable(name: "bots_check_flag", scope: !224, file: !225, line: 42, type: !256, isLocal: false, isDefinition: true, variable: i32* @bots_check_flag)
!258 = !DIGlobalVariable(name: "bots_verbose_mode", scope: !224, file: !225, line: 43, type: !234, isLocal: false, isDefinition: true, variable: i32* @bots_verbose_mode)
!259 = !DIGlobalVariable(name: "bots_result", scope: !224, file: !225, line: 44, type: !256, isLocal: false, isDefinition: true, variable: i32* @bots_result)
!260 = !DIGlobalVariable(name: "bots_output_format", scope: !224, file: !225, line: 45, type: !256, isLocal: false, isDefinition: true, variable: i32* @bots_output_format)
!261 = !DIGlobalVariable(name: "bots_print_header", scope: !224, file: !225, line: 46, type: !256, isLocal: false, isDefinition: true, variable: i32* @bots_print_header)
!262 = !DIGlobalVariable(name: "bots_time_program", scope: !224, file: !225, line: 65, type: !235, isLocal: false, isDefinition: true, variable: double* @bots_time_program)
!263 = !DIGlobalVariable(name: "bots_time_sequential", scope: !224, file: !225, line: 66, type: !235, isLocal: false, isDefinition: true, variable: double* @bots_time_sequential)
!264 = !DIGlobalVariable(name: "bots_number_of_tasks", scope: !224, file: !225, line: 67, type: !265, isLocal: false, isDefinition: true, variable: i64* @bots_number_of_tasks)
!265 = !DIBasicType(name: "long long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!266 = !DIGlobalVariable(name: "bots_arg_size", scope: !224, file: !225, line: 124, type: !256, isLocal: false, isDefinition: true, variable: i32* @bots_arg_size)
!267 = distinct !DICompileUnit(language: DW_LANG_C99, file: !268, producer: "clang version 3.9.0 (trunk)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !226, globals: !269)
!268 = !DIFile(filename: "fib.c", directory: "/media/norouzi/90cafd61-f918-48a5-9298-db353cb6be30/software/benchmarks/botsTemp/fib")
!269 = !{!270, !272, !273}
!270 = !DIGlobalVariable(name: "par_res", scope: !267, file: !268, line: 113, type: !271, isLocal: true, isDefinition: true, variable: i64* @par_res)
!271 = !DIBasicType(name: "long long int", size: 64, align: 64, encoding: DW_ATE_signed)
!272 = !DIGlobalVariable(name: "seq_res", scope: !267, file: !268, line: 113, type: !271, isLocal: true, isDefinition: true, variable: i64* @seq_res)
!273 = !DIGlobalVariable(name: "fib_results", scope: !267, file: !268, line: 25, type: !274, isLocal: false, isDefinition: true, variable: [41 x i64]* @fib_results)
!274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 2624, align: 64, elements: !275)
!275 = !{!276}
!276 = !DISubrange(count: 41)
!277 = !{!"clang version 3.9.0 (trunk)"}
!278 = !{i32 2, !"Dwarf Version", i32 4}
!279 = !{i32 2, !"Debug Info Version", i32 3}
!280 = distinct !DISubprogram(name: "bots_error", scope: !1, file: !1, line: 35, type: !281, isLocal: false, isDefinition: true, scopeLine: 36, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !284)
!281 = !DISubroutineType(types: !282)
!282 = !{null, !256, !283}
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64, align: 64)
!284 = !{}
!285 = !DILocalVariable(name: "error", arg: 1, scope: !280, file: !1, line: 35, type: !256)
!286 = !DIExpression()
!287 = !DILocation(line: 35, column: 16, scope: !280)
!288 = !DILocalVariable(name: "message", arg: 2, scope: !280, file: !1, line: 35, type: !283)
!289 = !DILocation(line: 35, column: 29, scope: !280)
!290 = !DILocation(line: 37, column: 8, scope: !291)
!291 = distinct !DILexicalBlock(scope: !280, file: !1, line: 37, column: 8)
!292 = !DILocation(line: 37, column: 16, scope: !291)
!293 = !DILocation(line: 37, column: 8, scope: !280)
!294 = !DILocation(line: 39, column: 14, scope: !295)
!295 = distinct !DILexicalBlock(scope: !291, file: !1, line: 38, column: 4)
!296 = !DILocation(line: 39, column: 7, scope: !295)
!297 = !DILocation(line: 42, column: 21, scope: !298)
!298 = distinct !DILexicalBlock(scope: !295, file: !1, line: 40, column: 7)
!299 = !DILocation(line: 42, column: 48, scope: !298)
!300 = !DILocation(line: 42, column: 13, scope: !298)
!301 = !DILocation(line: 43, column: 13, scope: !298)
!302 = !DILocation(line: 45, column: 21, scope: !298)
!303 = !DILocation(line: 45, column: 48, scope: !298)
!304 = !DILocation(line: 45, column: 13, scope: !298)
!305 = !DILocation(line: 46, column: 13, scope: !298)
!306 = !DILocation(line: 48, column: 21, scope: !298)
!307 = !DILocation(line: 48, column: 48, scope: !298)
!308 = !DILocation(line: 48, column: 13, scope: !298)
!309 = !DILocation(line: 49, column: 13, scope: !298)
!310 = !DILocation(line: 50, column: 13, scope: !298)
!311 = !DILocation(line: 52, column: 21, scope: !298)
!312 = !DILocation(line: 52, column: 48, scope: !298)
!313 = !DILocation(line: 52, column: 13, scope: !298)
!314 = !DILocation(line: 53, column: 13, scope: !298)
!315 = !DILocation(line: 55, column: 4, scope: !295)
!316 = !DILocation(line: 56, column: 17, scope: !291)
!317 = !DILocation(line: 56, column: 44, scope: !291)
!318 = !DILocation(line: 56, column: 50, scope: !291)
!319 = !DILocation(line: 56, column: 9, scope: !291)
!320 = !DILocation(line: 57, column: 13, scope: !280)
!321 = !DILocation(line: 57, column: 12, scope: !280)
!322 = !DILocation(line: 57, column: 4, scope: !280)
!323 = !DILocation(line: 58, column: 1, scope: !280)
!324 = distinct !DISubprogram(name: "bots_warning", scope: !1, file: !1, line: 61, type: !281, isLocal: false, isDefinition: true, scopeLine: 62, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !284)
!325 = !DILocalVariable(name: "warning", arg: 1, scope: !324, file: !1, line: 61, type: !256)
!326 = !DILocation(line: 61, column: 18, scope: !324)
!327 = !DILocalVariable(name: "message", arg: 2, scope: !324, file: !1, line: 61, type: !283)
!328 = !DILocation(line: 61, column: 33, scope: !324)
!329 = !DILocation(line: 63, column: 8, scope: !330)
!330 = distinct !DILexicalBlock(scope: !324, file: !1, line: 63, column: 8)
!331 = !DILocation(line: 63, column: 16, scope: !330)
!332 = !DILocation(line: 63, column: 8, scope: !324)
!333 = !DILocation(line: 65, column: 14, scope: !334)
!334 = distinct !DILexicalBlock(scope: !330, file: !1, line: 64, column: 4)
!335 = !DILocation(line: 65, column: 7, scope: !334)
!336 = !DILocation(line: 68, column: 21, scope: !337)
!337 = distinct !DILexicalBlock(scope: !334, file: !1, line: 66, column: 7)
!338 = !DILocation(line: 68, column: 50, scope: !337)
!339 = !DILocation(line: 68, column: 13, scope: !337)
!340 = !DILocation(line: 69, column: 13, scope: !337)
!341 = !DILocation(line: 71, column: 21, scope: !337)
!342 = !DILocation(line: 71, column: 50, scope: !337)
!343 = !DILocation(line: 71, column: 13, scope: !337)
!344 = !DILocation(line: 72, column: 13, scope: !337)
!345 = !DILocation(line: 74, column: 4, scope: !334)
!346 = !DILocation(line: 75, column: 17, scope: !330)
!347 = !DILocation(line: 75, column: 46, scope: !330)
!348 = !DILocation(line: 75, column: 54, scope: !330)
!349 = !DILocation(line: 75, column: 9, scope: !330)
!350 = !DILocation(line: 76, column: 1, scope: !324)
!351 = distinct !DISubprogram(name: "bots_usecs", scope: !1, file: !1, line: 78, type: !352, isLocal: false, isDefinition: true, scopeLine: 79, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !284)
!352 = !DISubroutineType(types: !353)
!353 = !{!354}
!354 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!355 = !DILocalVariable(name: "t", scope: !351, file: !1, line: 80, type: !356)
!356 = !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !357, line: 30, size: 128, align: 64, elements: !358)
!357 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "/media/norouzi/90cafd61-f918-48a5-9298-db353cb6be30/software/benchmarks/botsTemp/fib")
!358 = !{!359, !362}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !356, file: !357, line: 32, baseType: !360, size: 64, align: 64)
!360 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !361, line: 139, baseType: !354)
!361 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/media/norouzi/90cafd61-f918-48a5-9298-db353cb6be30/software/benchmarks/botsTemp/fib")
!362 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !356, file: !357, line: 33, baseType: !363, size: 64, align: 64, offset: 64)
!363 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !361, line: 141, baseType: !354)
!364 = !DILocation(line: 80, column: 19, scope: !351)
!365 = !DILocation(line: 81, column: 4, scope: !351)
!366 = !DILocation(line: 82, column: 13, scope: !351)
!367 = !DILocation(line: 82, column: 19, scope: !351)
!368 = !DILocation(line: 82, column: 30, scope: !351)
!369 = !DILocation(line: 82, column: 27, scope: !351)
!370 = !DILocation(line: 82, column: 4, scope: !351)
!371 = distinct !DISubprogram(name: "bots_get_date", scope: !1, file: !1, line: 86, type: !372, isLocal: false, isDefinition: true, scopeLine: 87, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !284)
!372 = !DISubroutineType(types: !373)
!373 = !{null, !283}
!374 = !DILocalVariable(name: "str", arg: 1, scope: !371, file: !1, line: 86, type: !283)
!375 = !DILocation(line: 86, column: 21, scope: !371)
!376 = !DILocalVariable(name: "now", scope: !371, file: !1, line: 88, type: !377)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !378, line: 75, baseType: !360)
!378 = !DIFile(filename: "/usr/include/time.h", directory: "/media/norouzi/90cafd61-f918-48a5-9298-db353cb6be30/software/benchmarks/botsTemp/fib")
!379 = !DILocation(line: 88, column: 11, scope: !371)
!380 = !DILocation(line: 89, column: 4, scope: !371)
!381 = !DILocation(line: 90, column: 13, scope: !371)
!382 = !DILocation(line: 90, column: 40, scope: !371)
!383 = !DILocation(line: 90, column: 4, scope: !384)
!384 = !DILexicalBlockFile(scope: !371, file: !1, discriminator: 1)
!385 = !DILocation(line: 91, column: 1, scope: !371)
!386 = distinct !DISubprogram(name: "bots_get_architecture", scope: !1, file: !1, line: 93, type: !372, isLocal: false, isDefinition: true, scopeLine: 94, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !284)
!387 = !DILocalVariable(name: "str", arg: 1, scope: !386, file: !1, line: 93, type: !283)
!388 = !DILocation(line: 93, column: 34, scope: !386)
!389 = !DILocalVariable(name: "ncpus", scope: !386, file: !1, line: 95, type: !256)
!390 = !DILocation(line: 95, column: 8, scope: !386)
!391 = !DILocation(line: 95, column: 16, scope: !386)
!392 = !DILocalVariable(name: "architecture", scope: !386, file: !1, line: 96, type: !393)
!393 = !DICompositeType(tag: DW_TAG_structure_type, name: "utsname", file: !394, line: 48, size: 3120, align: 8, elements: !395)
!394 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/utsname.h", directory: "/media/norouzi/90cafd61-f918-48a5-9298-db353cb6be30/software/benchmarks/botsTemp/fib")
!395 = !{!396, !400, !401, !402, !403, !404}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "sysname", scope: !393, file: !394, line: 51, baseType: !397, size: 520, align: 8)
!397 = !DICompositeType(tag: DW_TAG_array_type, baseType: !239, size: 520, align: 8, elements: !398)
!398 = !{!399}
!399 = !DISubrange(count: 65)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "nodename", scope: !393, file: !394, line: 54, baseType: !397, size: 520, align: 8, offset: 520)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !393, file: !394, line: 57, baseType: !397, size: 520, align: 8, offset: 1040)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !393, file: !394, line: 59, baseType: !397, size: 520, align: 8, offset: 1560)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !393, file: !394, line: 62, baseType: !397, size: 520, align: 8, offset: 2080)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "__domainname", scope: !393, file: !394, line: 69, baseType: !397, size: 520, align: 8, offset: 2600)
!405 = !DILocation(line: 96, column: 19, scope: !386)
!406 = !DILocation(line: 98, column: 4, scope: !386)
!407 = !DILocation(line: 99, column: 13, scope: !386)
!408 = !DILocation(line: 99, column: 60, scope: !386)
!409 = !DILocation(line: 99, column: 47, scope: !386)
!410 = !DILocation(line: 99, column: 82, scope: !386)
!411 = !DILocation(line: 99, column: 69, scope: !386)
!412 = !DILocation(line: 99, column: 91, scope: !386)
!413 = !DILocation(line: 99, column: 4, scope: !386)
!414 = !DILocation(line: 100, column: 1, scope: !386)
!415 = distinct !DISubprogram(name: "bots_get_load_average", scope: !1, file: !1, line: 104, type: !372, isLocal: false, isDefinition: true, scopeLine: 105, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !284)
!416 = !DILocalVariable(name: "str", arg: 1, scope: !415, file: !1, line: 104, type: !283)
!417 = !DILocation(line: 104, column: 34, scope: !415)
!418 = !DILocalVariable(name: "loadavg", scope: !415, file: !1, line: 106, type: !419)
!419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !235, size: 192, align: 64, elements: !420)
!420 = !{!421}
!421 = !DISubrange(count: 3)
!422 = !DILocation(line: 106, column: 11, scope: !415)
!423 = !DILocation(line: 107, column: 16, scope: !415)
!424 = !DILocation(line: 107, column: 4, scope: !415)
!425 = !DILocation(line: 108, column: 13, scope: !415)
!426 = !DILocation(line: 108, column: 52, scope: !415)
!427 = !DILocation(line: 108, column: 63, scope: !415)
!428 = !DILocation(line: 108, column: 74, scope: !415)
!429 = !DILocation(line: 108, column: 4, scope: !415)
!430 = !DILocation(line: 109, column: 1, scope: !415)
!431 = distinct !DISubprogram(name: "bots_print_results", scope: !1, file: !1, line: 115, type: !432, isLocal: false, isDefinition: true, scopeLine: 116, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !284)
!432 = !DISubroutineType(types: !433)
!433 = !{null}
!434 = !DILocalVariable(name: "str_name", scope: !431, file: !1, line: 117, type: !238)
!435 = !DILocation(line: 117, column: 9, scope: !431)
!436 = !DILocalVariable(name: "str_parameters", scope: !431, file: !1, line: 118, type: !238)
!437 = !DILocation(line: 118, column: 9, scope: !431)
!438 = !DILocalVariable(name: "str_model", scope: !431, file: !1, line: 119, type: !238)
!439 = !DILocation(line: 119, column: 9, scope: !431)
!440 = !DILocalVariable(name: "str_resources", scope: !431, file: !1, line: 120, type: !238)
!441 = !DILocation(line: 120, column: 9, scope: !431)
!442 = !DILocalVariable(name: "str_result", scope: !431, file: !1, line: 121, type: !443)
!443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !239, size: 120, align: 8, elements: !444)
!444 = !{!445}
!445 = !DISubrange(count: 15)
!446 = !DILocation(line: 121, column: 9, scope: !431)
!447 = !DILocalVariable(name: "str_time_program", scope: !431, file: !1, line: 122, type: !443)
!448 = !DILocation(line: 122, column: 9, scope: !431)
!449 = !DILocalVariable(name: "str_time_sequential", scope: !431, file: !1, line: 123, type: !443)
!450 = !DILocation(line: 123, column: 9, scope: !431)
!451 = !DILocalVariable(name: "str_speed_up", scope: !431, file: !1, line: 124, type: !443)
!452 = !DILocation(line: 124, column: 9, scope: !431)
!453 = !DILocalVariable(name: "str_number_of_tasks", scope: !431, file: !1, line: 125, type: !443)
!454 = !DILocation(line: 125, column: 9, scope: !431)
!455 = !DILocalVariable(name: "str_number_of_tasks_per_second", scope: !431, file: !1, line: 126, type: !443)
!456 = !DILocation(line: 126, column: 9, scope: !431)
!457 = !DILocalVariable(name: "str_exec_date", scope: !431, file: !1, line: 127, type: !238)
!458 = !DILocation(line: 127, column: 9, scope: !431)
!459 = !DILocalVariable(name: "str_exec_message", scope: !431, file: !1, line: 128, type: !238)
!460 = !DILocation(line: 128, column: 9, scope: !431)
!461 = !DILocalVariable(name: "str_architecture", scope: !431, file: !1, line: 129, type: !238)
!462 = !DILocation(line: 129, column: 9, scope: !431)
!463 = !DILocalVariable(name: "str_load_avg", scope: !431, file: !1, line: 130, type: !238)
!464 = !DILocation(line: 130, column: 9, scope: !431)
!465 = !DILocalVariable(name: "str_comp_date", scope: !431, file: !1, line: 131, type: !238)
!466 = !DILocation(line: 131, column: 9, scope: !431)
!467 = !DILocalVariable(name: "str_comp_message", scope: !431, file: !1, line: 132, type: !238)
!468 = !DILocation(line: 132, column: 9, scope: !431)
!469 = !DILocalVariable(name: "str_cc", scope: !431, file: !1, line: 133, type: !238)
!470 = !DILocation(line: 133, column: 9, scope: !431)
!471 = !DILocalVariable(name: "str_cflags", scope: !431, file: !1, line: 134, type: !238)
!472 = !DILocation(line: 134, column: 9, scope: !431)
!473 = !DILocalVariable(name: "str_ld", scope: !431, file: !1, line: 135, type: !238)
!474 = !DILocation(line: 135, column: 9, scope: !431)
!475 = !DILocalVariable(name: "str_ldflags", scope: !431, file: !1, line: 136, type: !238)
!476 = !DILocation(line: 136, column: 9, scope: !431)
!477 = !DILocalVariable(name: "str_cutoff", scope: !431, file: !1, line: 137, type: !238)
!478 = !DILocation(line: 137, column: 9, scope: !431)
!479 = !DILocation(line: 140, column: 12, scope: !431)
!480 = !DILocation(line: 140, column: 4, scope: !431)
!481 = !DILocation(line: 141, column: 12, scope: !431)
!482 = !DILocation(line: 141, column: 4, scope: !431)
!483 = !DILocation(line: 142, column: 12, scope: !431)
!484 = !DILocation(line: 142, column: 4, scope: !431)
!485 = !DILocation(line: 143, column: 12, scope: !431)
!486 = !DILocation(line: 143, column: 4, scope: !431)
!487 = !DILocation(line: 144, column: 12, scope: !431)
!488 = !DILocation(line: 144, column: 4, scope: !431)
!489 = !DILocation(line: 145, column: 11, scope: !431)
!490 = !DILocation(line: 145, column: 4, scope: !431)
!491 = !DILocation(line: 148, column: 18, scope: !492)
!492 = distinct !DILexicalBlock(scope: !431, file: !1, line: 146, column: 4)
!493 = !DILocation(line: 148, column: 10, scope: !492)
!494 = !DILocation(line: 149, column: 10, scope: !492)
!495 = !DILocation(line: 151, column: 18, scope: !492)
!496 = !DILocation(line: 151, column: 10, scope: !492)
!497 = !DILocation(line: 152, column: 10, scope: !492)
!498 = !DILocation(line: 154, column: 18, scope: !492)
!499 = !DILocation(line: 154, column: 10, scope: !492)
!500 = !DILocation(line: 155, column: 10, scope: !492)
!501 = !DILocation(line: 157, column: 18, scope: !492)
!502 = !DILocation(line: 157, column: 10, scope: !492)
!503 = !DILocation(line: 158, column: 10, scope: !492)
!504 = !DILocation(line: 160, column: 18, scope: !492)
!505 = !DILocation(line: 160, column: 10, scope: !492)
!506 = !DILocation(line: 161, column: 10, scope: !492)
!507 = !DILocation(line: 163, column: 12, scope: !431)
!508 = !DILocation(line: 163, column: 36, scope: !431)
!509 = !DILocation(line: 163, column: 4, scope: !431)
!510 = !DILocation(line: 164, column: 8, scope: !511)
!511 = distinct !DILexicalBlock(scope: !431, file: !1, line: 164, column: 8)
!512 = !DILocation(line: 164, column: 8, scope: !431)
!513 = !DILocation(line: 164, column: 38, scope: !514)
!514 = !DILexicalBlockFile(scope: !511, file: !1, discriminator: 1)
!515 = !DILocation(line: 164, column: 65, scope: !514)
!516 = !DILocation(line: 164, column: 30, scope: !514)
!517 = !DILocation(line: 165, column: 17, scope: !511)
!518 = !DILocation(line: 165, column: 9, scope: !511)
!519 = !DILocation(line: 166, column: 8, scope: !520)
!520 = distinct !DILexicalBlock(scope: !431, file: !1, line: 166, column: 8)
!521 = !DILocation(line: 166, column: 8, scope: !431)
!522 = !DILocation(line: 167, column: 12, scope: !520)
!523 = !DILocation(line: 167, column: 35, scope: !520)
!524 = !DILocation(line: 167, column: 56, scope: !520)
!525 = !DILocation(line: 167, column: 55, scope: !520)
!526 = !DILocation(line: 167, column: 4, scope: !520)
!527 = !DILocation(line: 168, column: 17, scope: !520)
!528 = !DILocation(line: 168, column: 9, scope: !520)
!529 = !DILocation(line: 170, column: 12, scope: !431)
!530 = !DILocation(line: 170, column: 50, scope: !431)
!531 = !DILocation(line: 170, column: 42, scope: !431)
!532 = !DILocation(line: 170, column: 4, scope: !431)
!533 = !DILocation(line: 171, column: 12, scope: !431)
!534 = !DILocation(line: 171, column: 61, scope: !431)
!535 = !DILocation(line: 171, column: 53, scope: !431)
!536 = !DILocation(line: 171, column: 82, scope: !431)
!537 = !DILocation(line: 171, column: 81, scope: !431)
!538 = !DILocation(line: 171, column: 4, scope: !431)
!539 = !DILocation(line: 173, column: 12, scope: !431)
!540 = !DILocation(line: 173, column: 4, scope: !431)
!541 = !DILocation(line: 174, column: 12, scope: !431)
!542 = !DILocation(line: 174, column: 4, scope: !431)
!543 = !DILocation(line: 175, column: 26, scope: !431)
!544 = !DILocation(line: 175, column: 4, scope: !431)
!545 = !DILocation(line: 176, column: 26, scope: !431)
!546 = !DILocation(line: 176, column: 4, scope: !431)
!547 = !DILocation(line: 177, column: 12, scope: !431)
!548 = !DILocation(line: 177, column: 4, scope: !431)
!549 = !DILocation(line: 178, column: 12, scope: !431)
!550 = !DILocation(line: 178, column: 4, scope: !431)
!551 = !DILocation(line: 179, column: 12, scope: !431)
!552 = !DILocation(line: 179, column: 4, scope: !431)
!553 = !DILocation(line: 180, column: 12, scope: !431)
!554 = !DILocation(line: 180, column: 4, scope: !431)
!555 = !DILocation(line: 181, column: 12, scope: !431)
!556 = !DILocation(line: 181, column: 4, scope: !431)
!557 = !DILocation(line: 182, column: 12, scope: !431)
!558 = !DILocation(line: 182, column: 4, scope: !431)
!559 = !DILocation(line: 184, column: 7, scope: !560)
!560 = distinct !DILexicalBlock(scope: !431, file: !1, line: 184, column: 7)
!561 = !DILocation(line: 184, column: 7, scope: !431)
!562 = !DILocation(line: 186, column: 14, scope: !563)
!563 = distinct !DILexicalBlock(scope: !560, file: !1, line: 185, column: 4)
!564 = !DILocation(line: 186, column: 7, scope: !563)
!565 = !DILocation(line: 189, column: 13, scope: !566)
!566 = distinct !DILexicalBlock(scope: !563, file: !1, line: 187, column: 7)
!567 = !DILocation(line: 191, column: 13, scope: !566)
!568 = !DILocation(line: 193, column: 9, scope: !566)
!569 = !DILocation(line: 193, column: 1, scope: !566)
!570 = !DILocation(line: 200, column: 13, scope: !566)
!571 = !DILocation(line: 202, column: 13, scope: !566)
!572 = !DILocation(line: 204, column: 9, scope: !566)
!573 = !DILocation(line: 204, column: 1, scope: !566)
!574 = !DILocation(line: 208, column: 13, scope: !566)
!575 = !DILocation(line: 210, column: 13, scope: !566)
!576 = !DILocation(line: 212, column: 4, scope: !563)
!577 = !DILocation(line: 215, column: 11, scope: !431)
!578 = !DILocation(line: 215, column: 4, scope: !431)
!579 = !DILocation(line: 218, column: 10, scope: !580)
!580 = distinct !DILexicalBlock(scope: !431, file: !1, line: 216, column: 4)
!581 = !DILocation(line: 220, column: 11, scope: !580)
!582 = !DILocation(line: 220, column: 3, scope: !580)
!583 = !DILocation(line: 221, column: 18, scope: !580)
!584 = !DILocation(line: 221, column: 56, scope: !580)
!585 = !DILocation(line: 221, column: 10, scope: !580)
!586 = !DILocation(line: 222, column: 18, scope: !580)
!587 = !DILocation(line: 222, column: 56, scope: !580)
!588 = !DILocation(line: 222, column: 10, scope: !580)
!589 = !DILocation(line: 223, column: 18, scope: !580)
!590 = !DILocation(line: 223, column: 56, scope: !580)
!591 = !DILocation(line: 223, column: 10, scope: !580)
!592 = !DILocation(line: 224, column: 18, scope: !580)
!593 = !DILocation(line: 224, column: 56, scope: !580)
!594 = !DILocation(line: 224, column: 10, scope: !580)
!595 = !DILocation(line: 225, column: 18, scope: !580)
!596 = !DILocation(line: 225, column: 56, scope: !580)
!597 = !DILocation(line: 225, column: 10, scope: !580)
!598 = !DILocation(line: 226, column: 18, scope: !580)
!599 = !DILocation(line: 226, column: 56, scope: !580)
!600 = !DILocation(line: 226, column: 10, scope: !580)
!601 = !DILocation(line: 228, column: 18, scope: !580)
!602 = !DILocation(line: 228, column: 64, scope: !580)
!603 = !DILocation(line: 228, column: 10, scope: !580)
!604 = !DILocation(line: 229, column: 7, scope: !605)
!605 = distinct !DILexicalBlock(scope: !580, file: !1, line: 229, column: 7)
!606 = !DILocation(line: 229, column: 7, scope: !580)
!607 = !DILocation(line: 230, column: 20, scope: !608)
!608 = distinct !DILexicalBlock(scope: !605, file: !1, line: 229, column: 29)
!609 = !DILocation(line: 230, column: 66, scope: !608)
!610 = !DILocation(line: 230, column: 12, scope: !608)
!611 = !DILocation(line: 231, column: 20, scope: !608)
!612 = !DILocation(line: 231, column: 58, scope: !608)
!613 = !DILocation(line: 231, column: 12, scope: !608)
!614 = !DILocation(line: 232, column: 3, scope: !608)
!615 = !DILocation(line: 234, column: 15, scope: !616)
!616 = distinct !DILexicalBlock(scope: !580, file: !1, line: 234, column: 15)
!617 = !DILocation(line: 234, column: 36, scope: !616)
!618 = !DILocation(line: 234, column: 15, scope: !580)
!619 = !DILocation(line: 235, column: 20, scope: !620)
!620 = distinct !DILexicalBlock(scope: !616, file: !1, line: 234, column: 42)
!621 = !DILocation(line: 235, column: 58, scope: !620)
!622 = !DILocation(line: 235, column: 12, scope: !620)
!623 = !DILocation(line: 236, column: 20, scope: !620)
!624 = !DILocation(line: 236, column: 58, scope: !620)
!625 = !DILocation(line: 236, column: 12, scope: !620)
!626 = !DILocation(line: 237, column: 3, scope: !620)
!627 = !DILocation(line: 239, column: 18, scope: !580)
!628 = !DILocation(line: 239, column: 56, scope: !580)
!629 = !DILocation(line: 239, column: 10, scope: !580)
!630 = !DILocation(line: 240, column: 18, scope: !580)
!631 = !DILocation(line: 240, column: 56, scope: !580)
!632 = !DILocation(line: 240, column: 10, scope: !580)
!633 = !DILocation(line: 242, column: 18, scope: !580)
!634 = !DILocation(line: 242, column: 56, scope: !580)
!635 = !DILocation(line: 242, column: 10, scope: !580)
!636 = !DILocation(line: 243, column: 18, scope: !580)
!637 = !DILocation(line: 243, column: 56, scope: !580)
!638 = !DILocation(line: 243, column: 10, scope: !580)
!639 = !DILocation(line: 245, column: 18, scope: !580)
!640 = !DILocation(line: 245, column: 56, scope: !580)
!641 = !DILocation(line: 245, column: 10, scope: !580)
!642 = !DILocation(line: 246, column: 18, scope: !580)
!643 = !DILocation(line: 246, column: 56, scope: !580)
!644 = !DILocation(line: 246, column: 10, scope: !580)
!645 = !DILocation(line: 248, column: 18, scope: !580)
!646 = !DILocation(line: 248, column: 56, scope: !580)
!647 = !DILocation(line: 248, column: 10, scope: !580)
!648 = !DILocation(line: 249, column: 18, scope: !580)
!649 = !DILocation(line: 249, column: 56, scope: !580)
!650 = !DILocation(line: 249, column: 10, scope: !580)
!651 = !DILocation(line: 250, column: 18, scope: !580)
!652 = !DILocation(line: 250, column: 56, scope: !580)
!653 = !DILocation(line: 250, column: 10, scope: !580)
!654 = !DILocation(line: 251, column: 18, scope: !580)
!655 = !DILocation(line: 251, column: 56, scope: !580)
!656 = !DILocation(line: 251, column: 10, scope: !580)
!657 = !DILocation(line: 252, column: 10, scope: !580)
!658 = !DILocation(line: 252, column: 3, scope: !580)
!659 = !DILocation(line: 253, column: 10, scope: !580)
!660 = !DILocation(line: 255, column: 18, scope: !580)
!661 = !DILocation(line: 256, column: 15, scope: !580)
!662 = !DILocation(line: 257, column: 15, scope: !580)
!663 = !DILocation(line: 258, column: 15, scope: !580)
!664 = !DILocation(line: 259, column: 15, scope: !580)
!665 = !DILocation(line: 260, column: 15, scope: !580)
!666 = !DILocation(line: 261, column: 15, scope: !580)
!667 = !DILocation(line: 255, column: 10, scope: !580)
!668 = !DILocation(line: 263, column: 18, scope: !580)
!669 = !DILocation(line: 264, column: 15, scope: !580)
!670 = !DILocation(line: 265, column: 15, scope: !580)
!671 = !DILocation(line: 266, column: 15, scope: !580)
!672 = !DILocation(line: 263, column: 10, scope: !580)
!673 = !DILocation(line: 268, column: 18, scope: !580)
!674 = !DILocation(line: 269, column: 15, scope: !580)
!675 = !DILocation(line: 270, column: 15, scope: !580)
!676 = !DILocation(line: 268, column: 10, scope: !580)
!677 = !DILocation(line: 272, column: 18, scope: !580)
!678 = !DILocation(line: 273, column: 15, scope: !580)
!679 = !DILocation(line: 274, column: 15, scope: !580)
!680 = !DILocation(line: 272, column: 10, scope: !580)
!681 = !DILocation(line: 276, column: 18, scope: !580)
!682 = !DILocation(line: 277, column: 15, scope: !580)
!683 = !DILocation(line: 278, column: 15, scope: !580)
!684 = !DILocation(line: 276, column: 10, scope: !580)
!685 = !DILocation(line: 280, column: 18, scope: !580)
!686 = !DILocation(line: 281, column: 15, scope: !580)
!687 = !DILocation(line: 282, column: 15, scope: !580)
!688 = !DILocation(line: 280, column: 10, scope: !580)
!689 = !DILocation(line: 284, column: 18, scope: !580)
!690 = !DILocation(line: 285, column: 15, scope: !580)
!691 = !DILocation(line: 286, column: 15, scope: !580)
!692 = !DILocation(line: 287, column: 15, scope: !580)
!693 = !DILocation(line: 288, column: 15, scope: !580)
!694 = !DILocation(line: 284, column: 10, scope: !580)
!695 = !DILocation(line: 290, column: 18, scope: !580)
!696 = !DILocation(line: 290, column: 10, scope: !580)
!697 = !DILocation(line: 291, column: 10, scope: !580)
!698 = !DILocation(line: 293, column: 11, scope: !580)
!699 = !DILocation(line: 293, column: 3, scope: !580)
!700 = !DILocation(line: 294, column: 18, scope: !580)
!701 = !DILocation(line: 294, column: 56, scope: !580)
!702 = !DILocation(line: 294, column: 10, scope: !580)
!703 = !DILocation(line: 295, column: 18, scope: !580)
!704 = !DILocation(line: 295, column: 56, scope: !580)
!705 = !DILocation(line: 295, column: 10, scope: !580)
!706 = !DILocation(line: 296, column: 18, scope: !580)
!707 = !DILocation(line: 296, column: 56, scope: !580)
!708 = !DILocation(line: 296, column: 10, scope: !580)
!709 = !DILocation(line: 297, column: 18, scope: !580)
!710 = !DILocation(line: 297, column: 56, scope: !580)
!711 = !DILocation(line: 297, column: 10, scope: !580)
!712 = !DILocation(line: 298, column: 18, scope: !580)
!713 = !DILocation(line: 298, column: 56, scope: !580)
!714 = !DILocation(line: 298, column: 10, scope: !580)
!715 = !DILocation(line: 299, column: 18, scope: !580)
!716 = !DILocation(line: 299, column: 56, scope: !580)
!717 = !DILocation(line: 299, column: 10, scope: !580)
!718 = !DILocation(line: 301, column: 18, scope: !580)
!719 = !DILocation(line: 301, column: 64, scope: !580)
!720 = !DILocation(line: 301, column: 10, scope: !580)
!721 = !DILocation(line: 302, column: 7, scope: !722)
!722 = distinct !DILexicalBlock(scope: !580, file: !1, line: 302, column: 7)
!723 = !DILocation(line: 302, column: 7, scope: !580)
!724 = !DILocation(line: 303, column: 20, scope: !725)
!725 = distinct !DILexicalBlock(scope: !722, file: !1, line: 302, column: 29)
!726 = !DILocation(line: 303, column: 66, scope: !725)
!727 = !DILocation(line: 303, column: 12, scope: !725)
!728 = !DILocation(line: 304, column: 20, scope: !725)
!729 = !DILocation(line: 304, column: 58, scope: !725)
!730 = !DILocation(line: 304, column: 12, scope: !725)
!731 = !DILocation(line: 305, column: 3, scope: !725)
!732 = !DILocation(line: 307, column: 15, scope: !733)
!733 = distinct !DILexicalBlock(scope: !580, file: !1, line: 307, column: 15)
!734 = !DILocation(line: 307, column: 36, scope: !733)
!735 = !DILocation(line: 307, column: 15, scope: !580)
!736 = !DILocation(line: 308, column: 20, scope: !737)
!737 = distinct !DILexicalBlock(scope: !733, file: !1, line: 307, column: 42)
!738 = !DILocation(line: 308, column: 58, scope: !737)
!739 = !DILocation(line: 308, column: 12, scope: !737)
!740 = !DILocation(line: 309, column: 20, scope: !737)
!741 = !DILocation(line: 309, column: 58, scope: !737)
!742 = !DILocation(line: 309, column: 12, scope: !737)
!743 = !DILocation(line: 310, column: 3, scope: !737)
!744 = !DILocation(line: 311, column: 10, scope: !580)
!745 = !DILocation(line: 313, column: 18, scope: !580)
!746 = !DILocation(line: 314, column: 15, scope: !580)
!747 = !DILocation(line: 315, column: 15, scope: !580)
!748 = !DILocation(line: 316, column: 15, scope: !580)
!749 = !DILocation(line: 317, column: 15, scope: !580)
!750 = !DILocation(line: 318, column: 15, scope: !580)
!751 = !DILocation(line: 319, column: 15, scope: !580)
!752 = !DILocation(line: 313, column: 10, scope: !580)
!753 = !DILocation(line: 321, column: 18, scope: !580)
!754 = !DILocation(line: 322, column: 15, scope: !580)
!755 = !DILocation(line: 323, column: 15, scope: !580)
!756 = !DILocation(line: 324, column: 15, scope: !580)
!757 = !DILocation(line: 321, column: 10, scope: !580)
!758 = !DILocation(line: 326, column: 18, scope: !580)
!759 = !DILocation(line: 327, column: 15, scope: !580)
!760 = !DILocation(line: 328, column: 15, scope: !580)
!761 = !DILocation(line: 326, column: 10, scope: !580)
!762 = !DILocation(line: 330, column: 18, scope: !580)
!763 = !DILocation(line: 330, column: 10, scope: !580)
!764 = !DILocation(line: 331, column: 10, scope: !580)
!765 = !DILocation(line: 333, column: 10, scope: !580)
!766 = !DILocation(line: 334, column: 10, scope: !580)
!767 = !DILocation(line: 336, column: 1, scope: !431)
!768 = distinct !DISubprogram(name: "bots_print_usage", scope: !225, file: !225, line: 211, type: !432, isLocal: false, isDefinition: true, scopeLine: 212, flags: DIFlagPrototyped, isOptimized: false, unit: !224, variables: !284)
!769 = !DILocation(line: 213, column: 12, scope: !768)
!770 = !DILocation(line: 213, column: 4, scope: !768)
!771 = !DILocation(line: 214, column: 12, scope: !768)
!772 = !DILocation(line: 214, column: 4, scope: !768)
!773 = !DILocation(line: 215, column: 12, scope: !768)
!774 = !DILocation(line: 215, column: 4, scope: !768)
!775 = !DILocation(line: 216, column: 12, scope: !768)
!776 = !DILocation(line: 216, column: 4, scope: !768)
!777 = !DILocation(line: 221, column: 12, scope: !768)
!778 = !DILocation(line: 221, column: 4, scope: !768)
!779 = !DILocation(line: 245, column: 12, scope: !768)
!780 = !DILocation(line: 245, column: 4, scope: !768)
!781 = !DILocation(line: 246, column: 12, scope: !768)
!782 = !DILocation(line: 246, column: 4, scope: !768)
!783 = !DILocation(line: 247, column: 12, scope: !768)
!784 = !DILocation(line: 247, column: 4, scope: !768)
!785 = !DILocation(line: 248, column: 12, scope: !768)
!786 = !DILocation(line: 248, column: 4, scope: !768)
!787 = !DILocation(line: 249, column: 12, scope: !768)
!788 = !DILocation(line: 249, column: 4, scope: !768)
!789 = !DILocation(line: 250, column: 12, scope: !768)
!790 = !DILocation(line: 250, column: 4, scope: !768)
!791 = !DILocation(line: 251, column: 12, scope: !768)
!792 = !DILocation(line: 251, column: 4, scope: !768)
!793 = !DILocation(line: 252, column: 12, scope: !768)
!794 = !DILocation(line: 252, column: 4, scope: !768)
!795 = !DILocation(line: 253, column: 12, scope: !768)
!796 = !DILocation(line: 253, column: 4, scope: !768)
!797 = !DILocation(line: 254, column: 12, scope: !768)
!798 = !DILocation(line: 254, column: 4, scope: !768)
!799 = !DILocation(line: 255, column: 12, scope: !768)
!800 = !DILocation(line: 255, column: 4, scope: !768)
!801 = !DILocation(line: 256, column: 12, scope: !768)
!802 = !DILocation(line: 256, column: 4, scope: !768)
!803 = !DILocation(line: 257, column: 12, scope: !768)
!804 = !DILocation(line: 257, column: 4, scope: !768)
!805 = !DILocation(line: 258, column: 12, scope: !768)
!806 = !DILocation(line: 258, column: 4, scope: !768)
!807 = !DILocation(line: 260, column: 12, scope: !768)
!808 = !DILocation(line: 260, column: 4, scope: !768)
!809 = !DILocation(line: 265, column: 12, scope: !768)
!810 = !DILocation(line: 265, column: 4, scope: !768)
!811 = !DILocation(line: 267, column: 12, scope: !768)
!812 = !DILocation(line: 267, column: 4, scope: !768)
!813 = !DILocation(line: 268, column: 12, scope: !768)
!814 = !DILocation(line: 268, column: 4, scope: !768)
!815 = !DILocation(line: 269, column: 12, scope: !768)
!816 = !DILocation(line: 269, column: 4, scope: !768)
!817 = !DILocation(line: 270, column: 1, scope: !768)
!818 = distinct !DISubprogram(name: "bots_get_params_common", scope: !225, file: !225, line: 275, type: !819, isLocal: false, isDefinition: true, scopeLine: 276, flags: DIFlagPrototyped, isOptimized: false, unit: !224, variables: !284)
!819 = !DISubroutineType(types: !820)
!820 = !{null, !256, !821}
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64, align: 64)
!822 = !DILocalVariable(name: "argc", arg: 1, scope: !818, file: !225, line: 275, type: !256)
!823 = !DILocation(line: 275, column: 28, scope: !818)
!824 = !DILocalVariable(name: "argv", arg: 2, scope: !818, file: !225, line: 275, type: !821)
!825 = !DILocation(line: 275, column: 41, scope: !818)
!826 = !DILocalVariable(name: "i", scope: !818, file: !225, line: 277, type: !256)
!827 = !DILocation(line: 277, column: 8, scope: !818)
!828 = !DILocation(line: 278, column: 35, scope: !818)
!829 = !DILocation(line: 278, column: 26, scope: !818)
!830 = !DILocation(line: 278, column: 4, scope: !831)
!831 = !DILexicalBlockFile(scope: !818, file: !225, discriminator: 1)
!832 = !DILocation(line: 279, column: 4, scope: !818)
!833 = !DILocation(line: 280, column: 4, scope: !818)
!834 = !DILocation(line: 281, column: 10, scope: !835)
!835 = distinct !DILexicalBlock(scope: !818, file: !225, line: 281, column: 4)
!836 = !DILocation(line: 281, column: 9, scope: !835)
!837 = !DILocation(line: 281, column: 14, scope: !838)
!838 = !DILexicalBlockFile(scope: !839, file: !225, discriminator: 1)
!839 = distinct !DILexicalBlock(scope: !835, file: !225, line: 281, column: 4)
!840 = !DILocation(line: 281, column: 16, scope: !838)
!841 = !DILocation(line: 281, column: 15, scope: !838)
!842 = !DILocation(line: 281, column: 4, scope: !838)
!843 = !DILocation(line: 283, column: 16, scope: !844)
!844 = distinct !DILexicalBlock(scope: !845, file: !225, line: 283, column: 11)
!845 = distinct !DILexicalBlock(scope: !839, file: !225, line: 282, column: 4)
!846 = !DILocation(line: 283, column: 11, scope: !844)
!847 = !DILocation(line: 283, column: 22, scope: !844)
!848 = !DILocation(line: 283, column: 11, scope: !845)
!849 = !DILocation(line: 285, column: 23, scope: !850)
!850 = distinct !DILexicalBlock(scope: !844, file: !225, line: 284, column: 7)
!851 = !DILocation(line: 285, column: 18, scope: !850)
!852 = !DILocation(line: 285, column: 10, scope: !850)
!853 = !DILocation(line: 304, column: 21, scope: !854)
!854 = distinct !DILexicalBlock(scope: !850, file: !225, line: 286, column: 10)
!855 = !DILocation(line: 304, column: 16, scope: !854)
!856 = !DILocation(line: 304, column: 27, scope: !854)
!857 = !DILocation(line: 308, column: 32, scope: !854)
!858 = !DILocation(line: 309, column: 16, scope: !854)
!859 = !DILocation(line: 311, column: 21, scope: !854)
!860 = !DILocation(line: 311, column: 16, scope: !854)
!861 = !DILocation(line: 311, column: 27, scope: !854)
!862 = !DILocation(line: 312, column: 17, scope: !854)
!863 = !DILocation(line: 313, column: 20, scope: !864)
!864 = distinct !DILexicalBlock(scope: !854, file: !225, line: 313, column: 20)
!865 = !DILocation(line: 313, column: 28, scope: !864)
!866 = !DILocation(line: 313, column: 25, scope: !864)
!867 = !DILocation(line: 313, column: 20, scope: !854)
!868 = !DILocation(line: 313, column: 33, scope: !869)
!869 = !DILexicalBlockFile(scope: !870, file: !225, discriminator: 1)
!870 = distinct !DILexicalBlock(scope: !864, file: !225, line: 313, column: 31)
!871 = !DILocation(line: 313, column: 53, scope: !872)
!872 = !DILexicalBlockFile(scope: !869, file: !225, discriminator: 2)
!873 = !DILocation(line: 313, column: 53, scope: !869)
!874 = !DILocation(line: 314, column: 47, scope: !854)
!875 = !DILocation(line: 314, column: 42, scope: !854)
!876 = !DILocation(line: 314, column: 16, scope: !854)
!877 = !DILocation(line: 315, column: 16, scope: !854)
!878 = !DILocation(line: 325, column: 21, scope: !854)
!879 = !DILocation(line: 325, column: 16, scope: !854)
!880 = !DILocation(line: 325, column: 27, scope: !854)
!881 = !DILocation(line: 326, column: 16, scope: !854)
!882 = !DILocation(line: 327, column: 16, scope: !854)
!883 = !DILocation(line: 346, column: 21, scope: !854)
!884 = !DILocation(line: 346, column: 16, scope: !854)
!885 = !DILocation(line: 346, column: 27, scope: !854)
!886 = !DILocation(line: 347, column: 17, scope: !854)
!887 = !DILocation(line: 348, column: 20, scope: !888)
!888 = distinct !DILexicalBlock(scope: !854, file: !225, line: 348, column: 20)
!889 = !DILocation(line: 348, column: 28, scope: !888)
!890 = !DILocation(line: 348, column: 25, scope: !888)
!891 = !DILocation(line: 348, column: 20, scope: !854)
!892 = !DILocation(line: 348, column: 33, scope: !893)
!893 = !DILexicalBlockFile(scope: !894, file: !225, discriminator: 1)
!894 = distinct !DILexicalBlock(scope: !888, file: !225, line: 348, column: 31)
!895 = !DILocation(line: 348, column: 53, scope: !896)
!896 = !DILexicalBlockFile(scope: !893, file: !225, discriminator: 2)
!897 = !DILocation(line: 348, column: 53, scope: !893)
!898 = !DILocation(line: 349, column: 42, scope: !854)
!899 = !DILocation(line: 349, column: 37, scope: !854)
!900 = !DILocation(line: 349, column: 32, scope: !854)
!901 = !DILocation(line: 349, column: 30, scope: !854)
!902 = !DILocation(line: 350, column: 16, scope: !854)
!903 = !DILocation(line: 356, column: 21, scope: !854)
!904 = !DILocation(line: 356, column: 16, scope: !854)
!905 = !DILocation(line: 356, column: 27, scope: !854)
!906 = !DILocation(line: 357, column: 17, scope: !854)
!907 = !DILocation(line: 358, column: 20, scope: !908)
!908 = distinct !DILexicalBlock(scope: !854, file: !225, line: 358, column: 20)
!909 = !DILocation(line: 358, column: 28, scope: !908)
!910 = !DILocation(line: 358, column: 25, scope: !908)
!911 = !DILocation(line: 358, column: 20, scope: !854)
!912 = !DILocation(line: 358, column: 33, scope: !913)
!913 = !DILexicalBlockFile(scope: !914, file: !225, discriminator: 1)
!914 = distinct !DILexicalBlock(scope: !908, file: !225, line: 358, column: 31)
!915 = !DILocation(line: 358, column: 53, scope: !916)
!916 = !DILexicalBlockFile(scope: !913, file: !225, discriminator: 2)
!917 = !DILocation(line: 358, column: 53, scope: !913)
!918 = !DILocation(line: 359, column: 47, scope: !854)
!919 = !DILocation(line: 359, column: 42, scope: !854)
!920 = !DILocation(line: 359, column: 37, scope: !854)
!921 = !DILocation(line: 359, column: 35, scope: !854)
!922 = !DILocation(line: 360, column: 16, scope: !854)
!923 = !DILocation(line: 371, column: 21, scope: !854)
!924 = !DILocation(line: 371, column: 16, scope: !854)
!925 = !DILocation(line: 371, column: 27, scope: !854)
!926 = !DILocation(line: 375, column: 37, scope: !854)
!927 = !DILocation(line: 376, column: 16, scope: !854)
!928 = !DILocation(line: 379, column: 21, scope: !854)
!929 = !DILocation(line: 379, column: 16, scope: !854)
!930 = !DILocation(line: 379, column: 27, scope: !854)
!931 = !DILocation(line: 380, column: 17, scope: !854)
!932 = !DILocation(line: 381, column: 20, scope: !933)
!933 = distinct !DILexicalBlock(scope: !854, file: !225, line: 381, column: 20)
!934 = !DILocation(line: 381, column: 28, scope: !933)
!935 = !DILocation(line: 381, column: 25, scope: !933)
!936 = !DILocation(line: 381, column: 20, scope: !854)
!937 = !DILocation(line: 381, column: 33, scope: !938)
!938 = !DILexicalBlockFile(scope: !939, file: !225, discriminator: 1)
!939 = distinct !DILexicalBlock(scope: !933, file: !225, line: 381, column: 31)
!940 = !DILocation(line: 381, column: 53, scope: !941)
!941 = !DILexicalBlockFile(scope: !938, file: !225, discriminator: 2)
!942 = !DILocation(line: 381, column: 53, scope: !938)
!943 = !DILocation(line: 382, column: 68, scope: !854)
!944 = !DILocation(line: 382, column: 63, scope: !854)
!945 = !DILocation(line: 382, column: 58, scope: !854)
!946 = !DILocation(line: 382, column: 34, scope: !854)
!947 = !DILocation(line: 384, column: 21, scope: !948)
!948 = distinct !DILexicalBlock(scope: !854, file: !225, line: 384, column: 21)
!949 = !DILocation(line: 384, column: 39, scope: !948)
!950 = !DILocation(line: 384, column: 21, scope: !854)
!951 = !DILocation(line: 385, column: 27, scope: !952)
!952 = distinct !DILexicalBlock(scope: !948, file: !225, line: 384, column: 45)
!953 = !DILocation(line: 385, column: 19, scope: !952)
!954 = !DILocation(line: 386, column: 19, scope: !952)
!955 = !DILocation(line: 389, column: 16, scope: !854)
!956 = !DILocation(line: 407, column: 14, scope: !854)
!957 = !DILocation(line: 407, column: 9, scope: !854)
!958 = !DILocation(line: 407, column: 20, scope: !854)
!959 = !DILocation(line: 408, column: 34, scope: !854)
!960 = !DILocation(line: 409, column: 16, scope: !854)
!961 = !DILocation(line: 415, column: 24, scope: !854)
!962 = !DILocation(line: 415, column: 16, scope: !854)
!963 = !DILocation(line: 416, column: 16, scope: !854)
!964 = !DILocation(line: 417, column: 16, scope: !854)
!965 = !DILocation(line: 419, column: 7, scope: !850)
!966 = !DILocation(line: 426, column: 18, scope: !967)
!967 = distinct !DILexicalBlock(scope: !844, file: !225, line: 421, column: 7)
!968 = !DILocation(line: 426, column: 10, scope: !967)
!969 = !DILocation(line: 427, column: 10, scope: !967)
!970 = !DILocation(line: 428, column: 10, scope: !967)
!971 = !DILocation(line: 430, column: 4, scope: !845)
!972 = !DILocation(line: 281, column: 23, scope: !973)
!973 = !DILexicalBlockFile(scope: !839, file: !225, discriminator: 2)
!974 = !DILocation(line: 281, column: 4, scope: !973)
!975 = !DILocation(line: 431, column: 1, scope: !818)
!976 = distinct !DISubprogram(name: "bots_get_params", scope: !225, file: !225, line: 436, type: !819, isLocal: false, isDefinition: true, scopeLine: 437, flags: DIFlagPrototyped, isOptimized: false, unit: !224, variables: !284)
!977 = !DILocalVariable(name: "argc", arg: 1, scope: !976, file: !225, line: 436, type: !256)
!978 = !DILocation(line: 436, column: 21, scope: !976)
!979 = !DILocalVariable(name: "argv", arg: 2, scope: !976, file: !225, line: 436, type: !821)
!980 = !DILocation(line: 436, column: 34, scope: !976)
!981 = !DILocation(line: 438, column: 27, scope: !976)
!982 = !DILocation(line: 438, column: 33, scope: !976)
!983 = !DILocation(line: 438, column: 4, scope: !976)
!984 = !DILocation(line: 440, column: 1, scope: !976)
!985 = distinct !DISubprogram(name: "bots_set_info", scope: !225, file: !225, line: 446, type: !432, isLocal: false, isDefinition: true, scopeLine: 447, isOptimized: false, unit: !224, variables: !284)
!986 = !DILocation(line: 449, column: 4, scope: !985)
!987 = !DILocation(line: 450, column: 72, scope: !985)
!988 = !DILocation(line: 450, column: 4, scope: !985)
!989 = !DILocation(line: 451, column: 4, scope: !985)
!990 = !DILocation(line: 452, column: 52, scope: !985)
!991 = !DILocation(line: 452, column: 4, scope: !992)
!992 = !DILexicalBlockFile(scope: !985, file: !225, discriminator: 1)
!993 = !DILocation(line: 455, column: 4, scope: !985)
!994 = !DILocation(line: 456, column: 4, scope: !985)
!995 = !DILocation(line: 457, column: 4, scope: !985)
!996 = !DILocation(line: 458, column: 4, scope: !985)
!997 = !DILocation(line: 459, column: 4, scope: !985)
!998 = !DILocation(line: 460, column: 4, scope: !985)
!999 = !DILocation(line: 469, column: 4, scope: !985)
!1000 = !DILocation(line: 471, column: 1, scope: !985)
!1001 = distinct !DISubprogram(name: "main", scope: !225, file: !225, line: 477, type: !1002, isLocal: false, isDefinition: true, scopeLine: 478, flags: DIFlagPrototyped, isOptimized: false, unit: !224, variables: !284)
!1002 = !DISubroutineType(types: !1003)
!1003 = !{!256, !256, !821}
!1004 = !DILocalVariable(name: "argc", arg: 1, scope: !1001, file: !225, line: 477, type: !256)
!1005 = !DILocation(line: 477, column: 10, scope: !1001)
!1006 = !DILocalVariable(name: "argv", arg: 2, scope: !1001, file: !225, line: 477, type: !821)
!1007 = !DILocation(line: 477, column: 22, scope: !1001)
!1008 = !DILocalVariable(name: "bots_t_start", scope: !1001, file: !225, line: 480, type: !354)
!1009 = !DILocation(line: 480, column: 9, scope: !1001)
!1010 = !DILocalVariable(name: "bots_t_end", scope: !1001, file: !225, line: 481, type: !354)
!1011 = !DILocation(line: 481, column: 9, scope: !1001)
!1012 = !DILocation(line: 484, column: 20, scope: !1001)
!1013 = !DILocation(line: 484, column: 25, scope: !1001)
!1014 = !DILocation(line: 484, column: 4, scope: !1001)
!1015 = !DILocation(line: 486, column: 4, scope: !1001)
!1016 = !DILocation(line: 492, column: 8, scope: !1017)
!1017 = distinct !DILexicalBlock(scope: !1001, file: !225, line: 492, column: 8)
!1018 = !DILocation(line: 492, column: 8, scope: !1001)
!1019 = !DILocation(line: 495, column: 28, scope: !1020)
!1020 = distinct !DILexicalBlock(scope: !1017, file: !225, line: 494, column: 4)
!1021 = !DILocation(line: 500, column: 22, scope: !1020)
!1022 = !DILocation(line: 500, column: 20, scope: !1020)
!1023 = !DILocation(line: 501, column: 7, scope: !1020)
!1024 = !DILocation(line: 502, column: 20, scope: !1020)
!1025 = !DILocation(line: 502, column: 18, scope: !1020)
!1026 = !DILocation(line: 503, column: 40, scope: !1020)
!1027 = !DILocation(line: 503, column: 51, scope: !1020)
!1028 = !DILocation(line: 503, column: 50, scope: !1020)
!1029 = !DILocation(line: 503, column: 31, scope: !1020)
!1030 = !DILocation(line: 503, column: 65, scope: !1020)
!1031 = !DILocation(line: 503, column: 28, scope: !1020)
!1032 = !DILocation(line: 506, column: 4, scope: !1020)
!1033 = !DILocation(line: 513, column: 19, scope: !1001)
!1034 = !DILocation(line: 513, column: 17, scope: !1001)
!1035 = !DILocation(line: 514, column: 4, scope: !1001)
!1036 = !DILocation(line: 515, column: 17, scope: !1001)
!1037 = !DILocation(line: 515, column: 15, scope: !1001)
!1038 = !DILocation(line: 516, column: 34, scope: !1001)
!1039 = !DILocation(line: 516, column: 45, scope: !1001)
!1040 = !DILocation(line: 516, column: 44, scope: !1001)
!1041 = !DILocation(line: 516, column: 25, scope: !1001)
!1042 = !DILocation(line: 516, column: 59, scope: !1001)
!1043 = !DILocation(line: 516, column: 22, scope: !1001)
!1044 = !DILocation(line: 521, column: 8, scope: !1045)
!1045 = distinct !DILexicalBlock(scope: !1001, file: !225, line: 521, column: 8)
!1046 = !DILocation(line: 521, column: 8, scope: !1001)
!1047 = !DILocation(line: 522, column: 20, scope: !1048)
!1048 = distinct !DILexicalBlock(scope: !1045, file: !225, line: 521, column: 25)
!1049 = !DILocation(line: 522, column: 18, scope: !1048)
!1050 = !DILocation(line: 523, column: 4, scope: !1048)
!1051 = !DILocation(line: 528, column: 4, scope: !1001)
!1052 = !DILocation(line: 529, column: 4, scope: !1001)
!1053 = distinct !DISubprogram(name: "fib_seq", scope: !268, file: !268, line: 27, type: !1054, isLocal: false, isDefinition: true, scopeLine: 28, flags: DIFlagPrototyped, isOptimized: false, unit: !267, variables: !284)
!1054 = !DISubroutineType(types: !1055)
!1055 = !{!271, !256}
!1056 = !DILocalVariable(name: "n", arg: 1, scope: !1053, file: !268, line: 27, type: !256)
!1057 = !DILocation(line: 27, column: 24, scope: !1053)
!1058 = !DILocalVariable(name: "x", scope: !1053, file: !268, line: 29, type: !256)
!1059 = !DILocation(line: 29, column: 6, scope: !1053)
!1060 = !DILocalVariable(name: "y", scope: !1053, file: !268, line: 29, type: !256)
!1061 = !DILocation(line: 29, column: 9, scope: !1053)
!1062 = !DILocation(line: 30, column: 6, scope: !1063)
!1063 = distinct !DILexicalBlock(scope: !1053, file: !268, line: 30, column: 6)
!1064 = !DILocation(line: 30, column: 8, scope: !1063)
!1065 = !DILocation(line: 30, column: 6, scope: !1053)
!1066 = !DILocation(line: 30, column: 20, scope: !1067)
!1067 = !DILexicalBlockFile(scope: !1063, file: !268, discriminator: 1)
!1068 = !DILocation(line: 30, column: 13, scope: !1067)
!1069 = !DILocation(line: 32, column: 14, scope: !1053)
!1070 = !DILocation(line: 32, column: 16, scope: !1053)
!1071 = !DILocation(line: 32, column: 6, scope: !1053)
!1072 = !DILocation(line: 32, column: 4, scope: !1053)
!1073 = !DILocation(line: 33, column: 14, scope: !1053)
!1074 = !DILocation(line: 33, column: 16, scope: !1053)
!1075 = !DILocation(line: 33, column: 6, scope: !1053)
!1076 = !DILocation(line: 33, column: 4, scope: !1053)
!1077 = !DILocation(line: 35, column: 9, scope: !1053)
!1078 = !DILocation(line: 35, column: 13, scope: !1053)
!1079 = !DILocation(line: 35, column: 11, scope: !1053)
!1080 = !DILocation(line: 35, column: 2, scope: !1053)
!1081 = !DILocation(line: 36, column: 1, scope: !1053)
!1082 = distinct !DISubprogram(name: "fib", scope: !268, file: !268, line: 97, type: !1054, isLocal: false, isDefinition: true, scopeLine: 98, flags: DIFlagPrototyped, isOptimized: false, unit: !267, variables: !284)
!1083 = !DILocalVariable(name: "n", arg: 1, scope: !1082, file: !268, line: 97, type: !256)
!1084 = !DILocation(line: 97, column: 20, scope: !1082)
!1085 = !DILocalVariable(name: "x", scope: !1082, file: !268, line: 99, type: !271)
!1086 = !DILocation(line: 99, column: 12, scope: !1082)
!1087 = !DILocalVariable(name: "y", scope: !1082, file: !268, line: 99, type: !271)
!1088 = !DILocation(line: 99, column: 15, scope: !1082)
!1089 = !DILocation(line: 100, column: 6, scope: !1090)
!1090 = distinct !DILexicalBlock(scope: !1082, file: !268, line: 100, column: 6)
!1091 = !DILocation(line: 100, column: 8, scope: !1090)
!1092 = !DILocation(line: 100, column: 6, scope: !1082)
!1093 = !DILocation(line: 100, column: 20, scope: !1094)
!1094 = !DILexicalBlockFile(scope: !1090, file: !268, discriminator: 1)
!1095 = !DILocation(line: 100, column: 13, scope: !1094)
!1096 = !DILocation(line: 102, column: 10, scope: !1082)
!1097 = !DILocation(line: 102, column: 10, scope: !1098)
!1098 = !DILexicalBlockFile(scope: !1082, file: !268, discriminator: 1)
!1099 = !DILocation(line: 102, column: 49, scope: !1100)
!1100 = distinct !DILexicalBlock(scope: !1082, file: !268, line: 102, column: 10)
!1101 = !DILocation(line: 102, column: 10, scope: !1102)
!1102 = !DILexicalBlockFile(scope: !1082, file: !268, discriminator: 2)
!1103 = !DILocation(line: 104, column: 10, scope: !1082)
!1104 = !DILocation(line: 104, column: 10, scope: !1098)
!1105 = !DILocation(line: 104, column: 49, scope: !1106)
!1106 = distinct !DILexicalBlock(scope: !1082, file: !268, line: 104, column: 10)
!1107 = !DILocation(line: 104, column: 10, scope: !1102)
!1108 = !DILocation(line: 107, column: 10, scope: !1082)
!1109 = !DILocation(line: 108, column: 9, scope: !1082)
!1110 = !DILocation(line: 108, column: 13, scope: !1082)
!1111 = !DILocation(line: 108, column: 11, scope: !1082)
!1112 = !DILocation(line: 108, column: 2, scope: !1082)
!1113 = !DILocation(line: 109, column: 1, scope: !1082)
!1114 = !DILocalVariable(name: ".global_tid.", arg: 1, scope: !1115, type: !256, flags: DIFlagArtificial | DIFlagObjectPointer)
!1115 = distinct !DISubprogram(name: ".omp_outlined.", scope: !268, file: !268, line: 103, type: !1116, isLocal: true, isDefinition: true, scopeLine: 103, flags: DIFlagPrototyped, isOptimized: false, unit: !267, variables: !284)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{null, !256, !256, !1118, !1120, !1125}
!1118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1119)
!1119 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !222)
!1120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1121)
!1121 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1122)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64, align: 64)
!1123 = !DISubroutineType(types: !1124)
!1124 = !{null, !1118, null}
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64, align: 64)
!1126 = !DICompositeType(tag: DW_TAG_structure_type, scope: !1082, file: !268, line: 102, size: 128, align: 64, elements: !284)
!1127 = !DILocation(line: 0, scope: !1115)
!1128 = !DILocalVariable(name: ".part_id.", arg: 2, scope: !1115, type: !256, flags: DIFlagArtificial)
!1129 = !DILocalVariable(name: ".privates.", arg: 3, scope: !1115, type: !1118, flags: DIFlagArtificial)
!1130 = !DILocalVariable(name: ".copy_fn.", arg: 4, scope: !1115, type: !1120, flags: DIFlagArtificial)
!1131 = !DILocalVariable(name: "__context", arg: 5, scope: !1115, type: !1125, flags: DIFlagArtificial)
!1132 = !{!1133, !1135}
!1133 = distinct !{!1133, !1134, !".omp_outlined.: %.privates."}
!1134 = distinct !{!1134, !".omp_outlined."}
!1135 = distinct !{!1135, !1134, !".omp_outlined.: %.copy_fn."}
!1136 = !DILocation(line: 103, column: 2, scope: !1115)
!1137 = !DILocation(line: 103, column: 10, scope: !1115)
!1138 = !DILocation(line: 103, column: 12, scope: !1115)
!1139 = !DILocation(line: 103, column: 6, scope: !1140)
!1140 = !DILexicalBlockFile(scope: !1115, file: !268, discriminator: 1)
!1141 = !DILocation(line: 103, column: 4, scope: !1115)
!1142 = !DILocalVariable(name: ".global_tid.", arg: 1, scope: !1143, type: !256, flags: DIFlagArtificial | DIFlagObjectPointer)
!1143 = distinct !DISubprogram(name: ".omp_outlined..1", scope: !268, file: !268, line: 105, type: !1144, isLocal: true, isDefinition: true, scopeLine: 105, flags: DIFlagPrototyped, isOptimized: false, unit: !267, variables: !284)
!1144 = !DISubroutineType(types: !1145)
!1145 = !{null, !256, !256, !1118, !1120, !1146}
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64, align: 64)
!1147 = !DICompositeType(tag: DW_TAG_structure_type, scope: !1082, file: !268, line: 104, size: 128, align: 64, elements: !284)
!1148 = !DILocation(line: 0, scope: !1143)
!1149 = !DILocalVariable(name: ".part_id.", arg: 2, scope: !1143, type: !256, flags: DIFlagArtificial)
!1150 = !DILocalVariable(name: ".privates.", arg: 3, scope: !1143, type: !1118, flags: DIFlagArtificial)
!1151 = !DILocalVariable(name: ".copy_fn.", arg: 4, scope: !1143, type: !1120, flags: DIFlagArtificial)
!1152 = !DILocalVariable(name: "__context", arg: 5, scope: !1143, type: !1146, flags: DIFlagArtificial)
!1153 = !{!1154, !1156}
!1154 = distinct !{!1154, !1155, !".omp_outlined..1: %.privates."}
!1155 = distinct !{!1155, !".omp_outlined..1"}
!1156 = distinct !{!1156, !1155, !".omp_outlined..1: %.copy_fn."}
!1157 = !DILocation(line: 105, column: 2, scope: !1143)
!1158 = !DILocation(line: 105, column: 10, scope: !1143)
!1159 = !DILocation(line: 105, column: 12, scope: !1143)
!1160 = !DILocation(line: 105, column: 6, scope: !1161)
!1161 = !DILexicalBlockFile(scope: !1143, file: !268, discriminator: 1)
!1162 = !DILocation(line: 105, column: 4, scope: !1143)
!1163 = distinct !DISubprogram(name: "fib0", scope: !268, file: !268, line: 115, type: !1164, isLocal: false, isDefinition: true, scopeLine: 116, flags: DIFlagPrototyped, isOptimized: false, unit: !267, variables: !284)
!1164 = !DISubroutineType(types: !1165)
!1165 = !{null, !256}
!1166 = !DILocalVariable(name: "n", arg: 1, scope: !1163, file: !268, line: 115, type: !256)
!1167 = !DILocation(line: 115, column: 16, scope: !1163)
!1168 = !DILocation(line: 117, column: 10, scope: !1163)
!1169 = !DILocation(line: 124, column: 2, scope: !1170)
!1170 = distinct !DILexicalBlock(scope: !1171, file: !268, line: 124, column: 2)
!1171 = distinct !DILexicalBlock(scope: !1163, file: !268, line: 124, column: 2)
!1172 = !DILocation(line: 124, column: 2, scope: !1171)
!1173 = !DILocation(line: 124, column: 2, scope: !1174)
!1174 = !DILexicalBlockFile(scope: !1175, file: !268, discriminator: 1)
!1175 = distinct !DILexicalBlock(scope: !1170, file: !268, line: 124, column: 2)
!1176 = !DILocation(line: 125, column: 1, scope: !1163)
!1177 = distinct !DISubprogram(name: ".omp_outlined..4", scope: !268, file: !268, line: 122, type: !1178, isLocal: true, isDefinition: true, scopeLine: 118, flags: DIFlagPrototyped, isOptimized: false, unit: !267, variables: !284)
!1178 = !DISubroutineType(types: !1179)
!1179 = !{null, !1180, !1180, !1183}
!1180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1181)
!1181 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1182)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64, align: 64)
!1183 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !256, size: 64, align: 64)
!1184 = !DILocalVariable(name: ".global_tid.", arg: 1, scope: !1177, type: !1180, flags: DIFlagArtificial | DIFlagObjectPointer)
!1185 = !DILocation(line: 0, scope: !1177)
!1186 = !DILocalVariable(name: ".bound_tid.", arg: 2, scope: !1177, type: !1180, flags: DIFlagArtificial)
!1187 = !DILocalVariable(name: "n", arg: 3, scope: !1177, type: !1183, flags: DIFlagArtificial)
!1188 = !DILocation(line: 118, column: 10, scope: !1177)
!1189 = !DILocation(line: 122, column: 16, scope: !1190)
!1190 = distinct !DILexicalBlock(scope: !1177, file: !268, line: 118, column: 10)
!1191 = !DILocation(line: 122, column: 12, scope: !1190)
!1192 = !DILocation(line: 122, column: 10, scope: !1190)
!1193 = !DILocation(line: 122, column: 2, scope: !1194)
!1194 = !DILexicalBlockFile(scope: !1190, file: !268, discriminator: 1)
!1195 = !DILocation(line: 122, column: 2, scope: !1190)
!1196 = !DILocation(line: 118, column: 20, scope: !1194)
!1197 = distinct !DISubprogram(name: "fib0_seq", scope: !268, file: !268, line: 127, type: !1164, isLocal: false, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !267, variables: !284)
!1198 = !DILocalVariable(name: "n", arg: 1, scope: !1197, file: !268, line: 127, type: !256)
!1199 = !DILocation(line: 127, column: 20, scope: !1197)
!1200 = !DILocation(line: 129, column: 20, scope: !1197)
!1201 = !DILocation(line: 129, column: 12, scope: !1197)
!1202 = !DILocation(line: 129, column: 10, scope: !1197)
!1203 = !DILocation(line: 130, column: 2, scope: !1204)
!1204 = distinct !DILexicalBlock(scope: !1205, file: !268, line: 130, column: 2)
!1205 = distinct !DILexicalBlock(scope: !1197, file: !268, line: 130, column: 2)
!1206 = !DILocation(line: 130, column: 2, scope: !1205)
!1207 = !DILocation(line: 130, column: 2, scope: !1208)
!1208 = !DILexicalBlockFile(scope: !1209, file: !268, discriminator: 1)
!1209 = distinct !DILexicalBlock(scope: !1204, file: !268, line: 130, column: 2)
!1210 = !DILocation(line: 131, column: 1, scope: !1197)
!1211 = distinct !DISubprogram(name: "fib_verify_value", scope: !268, file: !268, line: 133, type: !1054, isLocal: false, isDefinition: true, scopeLine: 134, flags: DIFlagPrototyped, isOptimized: false, unit: !267, variables: !284)
!1212 = !DILocalVariable(name: "n", arg: 1, scope: !1211, file: !268, line: 133, type: !256)
!1213 = !DILocation(line: 133, column: 32, scope: !1211)
!1214 = !DILocation(line: 135, column: 6, scope: !1215)
!1215 = distinct !DILexicalBlock(scope: !1211, file: !268, line: 135, column: 6)
!1216 = !DILocation(line: 135, column: 8, scope: !1215)
!1217 = !DILocation(line: 135, column: 6, scope: !1211)
!1218 = !DILocation(line: 135, column: 46, scope: !1219)
!1219 = !DILexicalBlockFile(scope: !1215, file: !268, discriminator: 1)
!1220 = !DILocation(line: 135, column: 34, scope: !1219)
!1221 = !DILocation(line: 135, column: 27, scope: !1219)
!1222 = !DILocation(line: 136, column: 28, scope: !1211)
!1223 = !DILocation(line: 136, column: 29, scope: !1211)
!1224 = !DILocation(line: 136, column: 11, scope: !1211)
!1225 = !DILocation(line: 136, column: 52, scope: !1211)
!1226 = !DILocation(line: 136, column: 53, scope: !1211)
!1227 = !DILocation(line: 136, column: 35, scope: !1228)
!1228 = !DILexicalBlockFile(scope: !1211, file: !268, discriminator: 1)
!1229 = !DILocation(line: 136, column: 33, scope: !1211)
!1230 = !DILocation(line: 136, column: 2, scope: !1211)
!1231 = !DILocation(line: 137, column: 1, scope: !1211)
!1232 = distinct !DISubprogram(name: "fib_verify", scope: !268, file: !268, line: 139, type: !1233, isLocal: false, isDefinition: true, scopeLine: 140, flags: DIFlagPrototyped, isOptimized: false, unit: !267, variables: !284)
!1233 = !DISubroutineType(types: !1234)
!1234 = !{!256, !256}
!1235 = !DILocalVariable(name: "n", arg: 1, scope: !1232, file: !268, line: 139, type: !256)
!1236 = !DILocation(line: 139, column: 21, scope: !1232)
!1237 = !DILocalVariable(name: "result", scope: !1232, file: !268, line: 141, type: !256)
!1238 = !DILocation(line: 141, column: 6, scope: !1232)
!1239 = !DILocation(line: 143, column: 6, scope: !1240)
!1240 = distinct !DILexicalBlock(scope: !1232, file: !268, line: 143, column: 6)
!1241 = !DILocation(line: 143, column: 6, scope: !1232)
!1242 = !DILocation(line: 145, column: 7, scope: !1243)
!1243 = distinct !DILexicalBlock(scope: !1244, file: !268, line: 145, column: 7)
!1244 = distinct !DILexicalBlock(scope: !1240, file: !268, line: 144, column: 2)
!1245 = !DILocation(line: 145, column: 18, scope: !1243)
!1246 = !DILocation(line: 145, column: 15, scope: !1243)
!1247 = !DILocation(line: 145, column: 7, scope: !1244)
!1248 = !DILocation(line: 145, column: 34, scope: !1249)
!1249 = !DILexicalBlockFile(scope: !1243, file: !268, discriminator: 1)
!1250 = !DILocation(line: 145, column: 27, scope: !1249)
!1251 = !DILocation(line: 146, column: 15, scope: !1243)
!1252 = !DILocation(line: 147, column: 2, scope: !1244)
!1253 = !DILocation(line: 150, column: 30, scope: !1254)
!1254 = distinct !DILexicalBlock(scope: !1240, file: !268, line: 149, column: 2)
!1255 = !DILocation(line: 150, column: 13, scope: !1254)
!1256 = !DILocation(line: 150, column: 11, scope: !1254)
!1257 = !DILocation(line: 151, column: 7, scope: !1258)
!1258 = distinct !DILexicalBlock(scope: !1254, file: !268, line: 151, column: 7)
!1259 = !DILocation(line: 151, column: 18, scope: !1258)
!1260 = !DILocation(line: 151, column: 15, scope: !1258)
!1261 = !DILocation(line: 151, column: 7, scope: !1254)
!1262 = !DILocation(line: 151, column: 34, scope: !1263)
!1263 = !DILexicalBlockFile(scope: !1258, file: !268, discriminator: 1)
!1264 = !DILocation(line: 151, column: 27, scope: !1263)
!1265 = !DILocation(line: 152, column: 15, scope: !1258)
!1266 = !DILocation(line: 155, column: 9, scope: !1232)
!1267 = !DILocation(line: 155, column: 2, scope: !1232)
